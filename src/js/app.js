!(function (i) {
  var n = {};
  function r(e) {
    if (n[e]) return n[e].exports;
    var t = (n[e] = { exports: {}, id: e, loaded: !1 });
    return i[e].call(t.exports, t, t.exports, r), (t.loaded = !0), t.exports;
  }
  (r.m = i), (r.c = n), (r.p = ""), r(0);
})([
  function (e, t, i) {
    "use strict";
    var n = i(1),
      i = i(14);
    document.documentElement.classList.contains("csstransitions")
      ? (new n(), new i({ selector: ".nav-trigger" }))
      : (window.location.href = "browser-update.html");
  },
  function (e, t, i) {
    "use strict";
    var n = function (e, t, i) {
      return t && r(e.prototype, t), i && r(e, i), e;
    };
    function r(e, t) {
      for (var i = 0; i < t.length; i++) {
        var n = t[i];
        (n.enumerable = n.enumerable || !1),
          (n.configurable = !0),
          "value" in n && (n.writable = !0),
          Object.defineProperty(e, n.key, n);
      }
    }
    var o = i(2),
      a = i(12),
      n =
        (i(8),
        n(s, [
          {
            key: "preload",
            value: function (e) {
              this.preloader.queue.loadFile({
                id: "model",
                src: "./assets/json/model.json",
              });
            },
          },
        ]),
        s);
    function s() {
      var e = this;
      !(function (e) {
        if (!(e instanceof s))
          throw new TypeError("Cannot call a class as a function");
      })(this),
        (this.artwork = new o(this)),
        (this.preloader = new a()),
        this.preloader.addOnComplete(function () {
          e.artwork.loadScene(e.preloader.queue.getResult("model"));
        }),
        this.preloader.addOnTransitionOut(function () {
          e.artwork.transitionIn();
        }),
        this.preload();
    }
    e.exports = n;
  },
  function (e, t, i) {
    "use strict";
    var n = function (e, t, i) {
      return t && r(e.prototype, t), i && r(e, i), e;
    };
    function r(e, t) {
      for (var i = 0; i < t.length; i++) {
        var n = t[i];
        (n.enumerable = n.enumerable || !1),
          (n.configurable = !0),
          "value" in n && (n.writable = !0),
          Object.defineProperty(e, n.key, n);
      }
    }
    var o = i(3),
      a = (i(4), i(6), i(7)),
      s = i(8);
    i(9);
    i(10), i(11);
    n(l, [
      {
        key: "setupScene",
        value: function () {
          var t = this;
          this.scene.appendTo(document.getElementById("artwork-canvas")),
            (this.mouse = {}),
            (this.mouse.vector = new o.Vector2()),
            (this.mouse.position = { x: 0, y: 0 }),
            (this.touch = {}),
            (this.touch.down = {}),
            (this.touch.up = {}),
            (this.touch.delta = {}),
            window.addEventListener("resize", function () {
              t.scene.setSize(window.innerWidth, window.innerHeight);
            }),
            this.scene.events.update.push(function (e) {
              e.objects.cam.lookAt(e.objects.target.position),
                (e.objects.particle.rotation.y -= 0.002),
                (e.objects.stone1.rotation.y -= 0.001),
                (e.objects.stone2.rotation.y -= 0.001),
                (e.objects.stone3.rotation.y -= 0.001),
                (e.objects.stone4.rotation.y -= 0.001),
                (e.objects.stone1.position.x +=
                  0.1 *
                  (t.mouse.position.x / 40 - e.objects.stone1.position.x)),
                (e.objects.stone2.position.x +=
                  0.1 *
                  (t.mouse.position.x / 40 - e.objects.stone2.position.x)),
                (e.objects.stone3.position.x +=
                  0.1 *
                  (t.mouse.position.x / 40 - e.objects.stone3.position.x)),
                (e.objects.stone4.position.x +=
                  0.1 *
                  (t.mouse.position.x / 40 - e.objects.stone4.position.x)),
                (e.objects.stone1.position.y +=
                  0.1 *
                  (t.mouse.position.y / 20 - e.objects.stone1.position.y)),
                (e.objects.stone2.position.y +=
                  0.1 *
                  (t.mouse.position.y / 20 - e.objects.stone2.position.y)),
                (e.objects.stone3.position.y +=
                  0.1 *
                  (t.mouse.position.y / 20 - e.objects.stone3.position.y)),
                (e.objects.stone4.position.y +=
                  0.1 *
                  (t.mouse.position.y / 20 - e.objects.stone4.position.y)),
                (e.objects.particle.position.x +=
                  0.04 *
                  (t.mouse.position.x / 40 - e.objects.particle.position.x)),
                (e.objects.particle.position.y +=
                  0.04 *
                  (t.mouse.position.y / 40 -
                    e.objects.particle.position.y -
                    25)),
                (e.objects.main.rotation.x +=
                  0.04 *
                  (t.mouse.position.y / 5e3 - e.objects.main.rotation.x)),
                (e.objects.main.rotation.y +=
                  0.04 *
                  (t.mouse.position.x / 1e3 - e.objects.main.rotation.y));
            }),
            (this.events = {}),
            (this.events.mousedown = function (e) {
              e.preventDefault();
            }),
            (this.events.mouseup = function (e) {
              e.preventDefault();
            }),
            (this.events.mousemove = function (e) {
              (t.mouse.position.x = e.clientX - t.scene.width / 2),
                (t.mouse.position.y = e.clientY - t.scene.height / 2),
                (t.mouse.vector.x = (e.clientX / t.scene.width) * 2 - 1),
                (t.mouse.vector.y = 2 * -(e.clientY / t.scene.height) + 1);
            }),
            (this.events.mouseout = function (e) {}),
            (this.events.mousewheel = function (e) {}),
            Object.keys(this.events).forEach(function (e) {
              return document.addEventListener(e, t.events[e]);
            });
        },
      },
      {
        key: "transitionIn",
        value: function () {
          var e = this;
          TweenLite.to(this.scene.objects.cam.position, 3, {
            x: this.scene.campos.x1,
            y: this.scene.campos.y1,
            z: this.scene.width / 14 + 340,
            ease: Power3.easeInOut,
          }),
            TweenLite.to(this.scene.objects.target.position, 3, {
              x: this.scene.targetpos.x1 - this.scene.width / 8,
              y: -100,
              ease: Power3.easeInOut,
            }),
            TweenLite.to(this.scene.objects.stone1.position, 4, {
              x: 0,
              ease: Power3.easeInOut,
            }),
            TweenLite.to(this.scene.objects.stone2.position, 4, {
              x: 0,
              ease: Power3.easeInOut,
            }),
            TweenLite.to(this.scene.objects.stone3.position, 4, {
              x: 0,
              ease: Power3.easeInOut,
            }),
            TweenLite.to(this.scene.objects.stone4.position, 4, {
              x: 0,
              ease: Power3.easeInOut,
            }),
            TweenLite.to(this.scene.objects.stone1.rotation, 4, {
              z: 0,
              ease: Power3.easeInOut,
            }),
            TweenLite.to(this.scene.objects.stone2.rotation, 4, {
              z: 0,
              ease: Power3.easeInOut,
            }),
            TweenLite.to(this.scene.objects.stone3.rotation, 4, {
              z: 0,
              ease: Power3.easeInOut,
            }),
            TweenLite.to(this.scene.objects.stone4.rotation, 4, {
              z: 0,
              ease: Power3.easeInOut,
            }),
            TweenLite.to(s("header"), 1, {
              y: 0,
              opacity: 1,
              delay: 1,
              onComplete: function () {
                e.screenAnimateIn(1);
              },
            }),
            TweenLite.to(s("#scroll-nav"), 1, {
              opacity: 1,
              delay: 2.5,
              onComplete: function () {
                s("#app").fullpage.setAllowScrolling(!0);
              },
            }),
            s(".scrolltosec").bind("click", function (e) {
              e = s(e.currentTarget).data("sec");
              s("#app").fullpage.moveTo(e);
            }),
            s(".scroll-btn").bind("click", function (e) {
              s("#app").fullpage.moveTo(2);
            });
          for (
            var t = new o.TetrahedronGeometry(1.5, 0),
              i = new o.MeshPhongMaterial({
                color: 0,
                flatShading: o.FlatShading,
                emissive: 1118481,
                specular: 2236962,
                shininess: 8.74,
              }),
              n = 0;
            n < 600;
            n++
          ) {
            var r = new o.Mesh(t, i);
            r.position.set(0, 0, 0),
              r.position.multiplyScalar(90 + 700 * Math.random()),
              r.rotation.set(
                2 * Math.random(),
                2 * Math.random(),
                2 * Math.random()
              ),
              this.scene.objects.particle.add(r),
              TweenLite.to(r.position, 3, {
                x: Math.floor(501 * Math.random()) - 250,
                y: Math.floor(51 * Math.random()) - 25,
                z: Math.floor(501 * Math.random()) - 250,
                delay: n / 700 + 2,
                ease: Expo.easeOut,
              });
          }
        },
      },
      {
        key: "firstView",
        value: function () {
          TweenLite.to(this.scene.objects.cam.position, 2.4, {
            x: this.scene.campos.x1,
            y: this.scene.campos.y1,
            z: this.scene.width / 14 + 340,
            ease: Power3.easeInOut,
          }),
            TweenLite.to(this.scene.objects.target.position, 2.4, {
              x: this.scene.targetpos.x1 - this.scene.width / 8,
              ease: Power3.easeInOut,
            });
        },
      },
      {
        key: "secondView",
        value: function () {
          TweenLite.to(this.scene.objects.cam.position, 2.4, {
            x: this.scene.campos.x1 - 100,
            y: this.scene.campos.y1 - 60,
            z: this.scene.width / 14 + 340,
            ease: Power3.easeInOut,
          }),
            TweenLite.to(this.scene.objects.target.position, 2.4, {
              x: this.scene.targetpos.x1 + this.scene.targetpos.x1plus,
              ease: Power3.easeInOut,
            });
        },
      },
      {
        key: "thirdView",
        value: function () {
          TweenLite.to(this.scene.objects.cam.position, 2.4, {
            x: this.scene.campos.x1 - 100,
            y: this.scene.campos.y1 - 100,
            z: this.scene.width / 14 + 340,
            ease: Power3.easeInOut,
          }),
            TweenLite.to(this.scene.objects.target.position, 2.4, {
              x: this.scene.targetpos.x1 + this.scene.targetpos.x1plus,
              ease: Power3.easeInOut,
            });
        },
      },
      {
        key: "forthView",
        value: function () {
          TweenLite.to(this.scene.objects.cam.position, 2.4, {
            x: this.scene.campos.x1 - 100,
            y: this.scene.campos.y1 - 140,
            z: this.scene.width / 14 + 340,
            ease: Power3.easeInOut,
          }),
            TweenLite.to(this.scene.objects.target.position, 2.4, {
              x: this.scene.targetpos.x1 + this.scene.targetpos.x1plus,
              ease: Power3.easeInOut,
            });
        },
      },
      {
        key: "screenAnimateIn",
        value: function (e) {
          (this.status = e),
            s("#screen-" + e).addClass("show"),
            s("#sts-" + e).addClass("active"),
            0 < s("#screen-" + e + " .slidein").length &&
              ("up" == this.direction &&
                TweenLite.set(s("#screen-" + e + " .slidein-elm"), {
                  y: "-100%",
                }),
              1 == e && "up" != this.direction
                ? s("#screen-1 .slidein-elm").each(function (e) {
                    e /= 10;
                    TweenLite.to(s(this), 1, {
                      y: "0%",
                      delay: e,
                      ease: Power3.easeOut,
                    });
                  })
                : TweenLite.to(s("#screen-" + e + " .slidein-elm"), 1, {
                    y: "0%",
                    delay: 0.4,
                    ease: Power3.easeOut,
                  })),
            0 < s("#screen-" + e + " .fade").length &&
              TweenLite.to(s("#screen-" + e + " .fade"), 1, {
                opacity: 1,
                delay: 1,
              });
        },
      },
      {
        key: "screenAnimateOut",
        value: function (t, e) {
          var i = void 0,
            i = "up" == e ? "100%" : "-100%";
          s("#sts-" + t).removeClass("active"),
            0 < s("#screen-" + t + " .slidein").length &&
              TweenLite.to(s("#screen-" + t + " .slidein-elm"), 1, {
                y: i,
                ease: Power3.easeInOut,
                onComplete: function (e) {
                  TweenLite.set(s("#screen-" + t + " .slidein-elm"), {
                    y: "100%",
                  }),
                    s("#screen-" + t).removeClass("show");
                },
              }),
            0 < s("#screen-" + t + " .fade").length &&
              TweenLite.to(s("#screen-" + t + " .fade"), 1, { opacity: 0 });
        },
      },
      {
        key: "imageTransition",
        value: function (e, t) {
          var i;
          1 != e &&
            5 != e &&
            (s("#portfolio-img").addClass("show"),
            (i = e - 1),
            "down" != t && s(".pfi-cover").addClass("shift"),
            TweenLite.to(s(".pfi-cover"), 1, {
              scaleY: 1,
              ease: Power3.easeInOut,
              onComplete: function () {
                s(".pfi-image").hide(),
                  TweenLite.set(s(".pfi-image"), { scale: 1.4 }),
                  s("#pfi-image-" + i).show(),
                  s(".pfi-cover").addClass("shift"),
                  "down" != t
                    ? s(".pfi-cover").removeClass("shift")
                    : s(".pfi-cover").addClass("shift"),
                  TweenLite.to(s("#pfi-image-" + i), 2, {
                    scale: 1,
                    ease: Power3.easeOut,
                  }),
                  TweenLite.to(s(".pfi-cover"), 1, {
                    scaleY: 0,
                    ease: Power3.easeInOut,
                    onComplete: function () {
                      s(".pfi-cover").removeClass("shift"),
                        s("#app").fullpage.setAllowScrolling(!0);
                    },
                  });
              },
            })),
            (1 != e && 5 != e) ||
              ("down" != t && s(".pfi-cover").addClass("shift"),
              TweenLite.to(s(".pfi-cover"), 1, {
                scaleY: 1,
                ease: Power3.easeInOut,
                onComplete: function () {
                  s(".pfi-image").hide(),
                    TweenLite.set(s(".pfi-image"), { scale: 1.4 }),
                    "down" != t
                      ? s(".pfi-cover").removeClass("shift")
                      : s(".pfi-cover").addClass("shift"),
                    TweenLite.to(s(".pfi-cover"), 1, {
                      scaleY: 0,
                      ease: Power3.easeInOut,
                      onComplete: function () {
                        s(".pfi-cover").removeClass("shift"),
                          s("#app").fullpage.setAllowScrolling(!0);
                      },
                    });
                },
              }));
        },
      },
      {
        key: "loadScene",
        value: function (e) {
          var n = this;
          this.webgl &&
            ((this.scene = new a(this, e)),
            this.setupScene(),
            this.scene.setSize(window.innerWidth, window.innerHeight),
            this.scene.start()),
            s("#app").fullpage({
              scrollingSpeed: 1e3,
              fadingEffect: !0,
              fadingEffectKey:
                "bmF0aGFuZ2FvLnh5el92QVVabUZrYVc1blJXWm1aV04wMTQy",
              onLeave: function (e, t, i) {
                (n.direction = i),
                  n.screenAnimateOut(e, i),
                  n.imageTransition(t, i),
                  s("#app").fullpage.setAllowScrolling(!1),
                  n.webgl &&
                    (2 == t && n.secondView(),
                    3 == t && n.thirdView(),
                    4 == t && n.forthView(),
                    (1 != t && 5 != t) || n.firstView());
              },
              afterLoad: function (e, t) {
                "init" != n.status && n.screenAnimateIn(t);
              },
            }),
            s("#app").fullpage.setAllowScrolling(!1);
        },
      },
    ]),
      (n = l);
    function l(e) {
      !(function (e) {
        if (!(e instanceof l))
          throw new TypeError("Cannot call a class as a function");
      })(this),
        (this.artwork = e),
        (this.status = "init"),
        (this.direction = "null"),
        (this.webgl = s("html").hasClass("webgl"));
    }
    e.exports = n;
  },
  function (e, t, i) {
    (function (e) {
      "use strict";
      function t() {}
      void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
        void 0 === Number.isInteger &&
          (Number.isInteger = function (e) {
            return "number" == typeof e && isFinite(e) && Math.floor(e) === e;
          }),
        void 0 === Math.sign &&
          (Math.sign = function (e) {
            return e < 0 ? -1 : 0 < e ? 1 : +e;
          }),
        "name" in Function.prototype == !1 &&
          Object.defineProperty(Function.prototype, "name", {
            get: function () {
              return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1];
            },
          }),
        void 0 === Object.assign &&
          (Object.assign = function (e) {
            if (null == e)
              throw new TypeError("Cannot convert undefined or null to object");
            for (var t = Object(e), i = 1; i < arguments.length; i++) {
              var n = arguments[i];
              if (null != n)
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
            }
            return t;
          }),
        Object.assign(t.prototype, {
          addEventListener: function (e, t) {
            void 0 === this._listeners && (this._listeners = {});
            var i = this._listeners;
            void 0 === i[e] && (i[e] = []),
              -1 === i[e].indexOf(t) && i[e].push(t);
          },
          hasEventListener: function (e, t) {
            if (void 0 === this._listeners) return !1;
            var i = this._listeners;
            return void 0 !== i[e] && -1 !== i[e].indexOf(t);
          },
          removeEventListener: function (e, t) {
            void 0 !== this._listeners &&
              (void 0 === (e = this._listeners[e]) ||
                (-1 !== (t = e.indexOf(t)) && e.splice(t, 1)));
          },
          dispatchEvent: function (e) {
            if (void 0 !== this._listeners) {
              var t = this._listeners[e.type];
              if (void 0 !== t) {
                e.target = this;
                for (var i = t.slice(0), n = 0, r = i.length; n < r; n++)
                  i[n].call(this, e);
              }
            }
          },
        });
      var i,
        n,
        r,
        o,
        a,
        l,
        c,
        s,
        h,
        u,
        d,
        p,
        f,
        m,
        g,
        v,
        y,
        _,
        x,
        b,
        w,
        T,
        S,
        j = 0,
        H = 1,
        G = 2,
        P = 1,
        M = 2,
        R = 0,
        V = 1,
        W = 2,
        Ae = 0,
        E = 2,
        X = 0,
        q = 1,
        Y = 2,
        Q = 3,
        Z = 4,
        J = 5,
        A = 100,
        L = 101,
        C = 102,
        O = 103,
        I = 104,
        D = 200,
        N = 201,
        F = 202,
        k = 203,
        U = 204,
        B = 205,
        z = 206,
        $ = 207,
        K = 208,
        ee = 209,
        te = 210,
        ie = 0,
        ne = 1,
        re = 2,
        oe = 3,
        ae = 4,
        se = 5,
        le = 6,
        ce = 7,
        he = 0,
        ue = 1,
        de = 2,
        pe = 0,
        Le = 1,
        fe = 2,
        me = 3,
        ge = 4,
        ve = 301,
        ye = 302,
        _e = 303,
        xe = 304,
        be = 305,
        we = 306,
        Te = 307,
        Se = 1e3,
        Me = 1001,
        Ee = 1002,
        Ce = 1003,
        Pe = 1004,
        Re = 1005,
        Oe = 1006,
        Ie = 1007,
        De = 1008,
        Ne = 1009,
        Fe = 1010,
        ke = 1011,
        Ue = 1012,
        Be = 1013,
        ze = 1014,
        je = 1015,
        He = 1016,
        Ge = 1017,
        Ve = 1018,
        We = 1019,
        Xe = 1020,
        qe = 1021,
        Ye = 1022,
        Qe = 1023,
        Ze = 1024,
        Je = 1025,
        $e = Qe,
        Ke = 1026,
        et = 1027,
        tt = 2001,
        it = 2002,
        nt = 2003,
        rt = 2004,
        ot = 2100,
        at = 2101,
        st = 2102,
        lt = 2103,
        ct = 2151,
        ht = 2300,
        ut = 2301,
        dt = 2400,
        pt = 2401,
        ft = 2402,
        mt = 0,
        gt = 3e3,
        vt = 3001,
        yt = 3007,
        _t = 3002,
        xt = 3004,
        bt = 3005,
        wt = 3006,
        Tt = 3200,
        St = 3201,
        Mt = {
          DEG2RAD: Math.PI / 180,
          RAD2DEG: 180 / Math.PI,
          generateUUID:
            ((n =
              "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(
                ""
              )),
            (r = 0),
            function () {
              for (var e = "", t = 0; t < 36; t++)
                8 === t || 13 === t || 18 === t || 23 === t
                  ? (e += "-")
                  : 14 === t
                  ? (e += "4")
                  : (r <= 2 && (r = (33554432 + 16777216 * Math.random()) | 0),
                    (i = 15 & r),
                    (r >>= 4),
                    (e += n[19 === t ? (3 & i) | 8 : i]));
              return e;
            }),
          clamp: function (e, t, i) {
            return Math.max(t, Math.min(i, e));
          },
          euclideanModulo: function (e, t) {
            return ((e % t) + t) % t;
          },
          mapLinear: function (e, t, i, n, r) {
            return n + ((e - t) * (r - n)) / (i - t);
          },
          lerp: function (e, t, i) {
            return (1 - i) * e + i * t;
          },
          smoothstep: function (e, t, i) {
            return e <= t
              ? 0
              : i <= e
              ? 1
              : (e = (e - t) / (i - t)) * e * (3 - 2 * e);
          },
          smootherstep: function (e, t, i) {
            return e <= t
              ? 0
              : i <= e
              ? 1
              : (e = (e - t) / (i - t)) * e * e * (e * (6 * e - 15) + 10);
          },
          randInt: function (e, t) {
            return e + Math.floor(Math.random() * (t - e + 1));
          },
          randFloat: function (e, t) {
            return e + Math.random() * (t - e);
          },
          randFloatSpread: function (e) {
            return e * (0.5 - Math.random());
          },
          degToRad: function (e) {
            return e * Mt.DEG2RAD;
          },
          radToDeg: function (e) {
            return e * Mt.RAD2DEG;
          },
          isPowerOfTwo: function (e) {
            return 0 == (e & (e - 1)) && 0 !== e;
          },
          ceilPowerOfTwo: function (e) {
            return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2));
          },
          floorPowerOfTwo: function (e) {
            return Math.pow(2, Math.floor(Math.log(e) / Math.LN2));
          },
        };
      function Et(e, t) {
        (this.x = e || 0), (this.y = t || 0);
      }
      function At() {
        (this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
          0 < arguments.length &&
            console.error(
              "THREE.Matrix4: the constructor no longer reads arguments. use .set() instead."
            );
      }
      function Lt(e, t, i, n) {
        (this._x = e || 0),
          (this._y = t || 0),
          (this._z = i || 0),
          (this._w = void 0 !== n ? n : 1);
      }
      function Ct(e, t, i) {
        (this.x = e || 0), (this.y = t || 0), (this.z = i || 0);
      }
      function Pt() {
        (this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]),
          0 < arguments.length &&
            console.error(
              "THREE.Matrix3: the constructor no longer reads arguments. use .set() instead."
            );
      }
      Object.defineProperties(Et.prototype, {
        width: {
          get: function () {
            return this.x;
          },
          set: function (e) {
            this.x = e;
          },
        },
        height: {
          get: function () {
            return this.y;
          },
          set: function (e) {
            this.y = e;
          },
        },
      }),
        Object.assign(Et.prototype, {
          isVector2: !0,
          set: function (e, t) {
            return (this.x = e), (this.y = t), this;
          },
          setScalar: function (e) {
            return (this.x = e), (this.y = e), this;
          },
          setX: function (e) {
            return (this.x = e), this;
          },
          setY: function (e) {
            return (this.y = e), this;
          },
          setComponent: function (e, t) {
            switch (e) {
              case 0:
                this.x = t;
                break;
              case 1:
                this.y = t;
                break;
              default:
                throw new Error("index is out of range: " + e);
            }
            return this;
          },
          getComponent: function (e) {
            switch (e) {
              case 0:
                return this.x;
              case 1:
                return this.y;
              default:
                throw new Error("index is out of range: " + e);
            }
          },
          clone: function () {
            return new this.constructor(this.x, this.y);
          },
          copy: function (e) {
            return (this.x = e.x), (this.y = e.y), this;
          },
          add: function (e, t) {
            return void 0 !== t
              ? (console.warn(
                  "THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."
                ),
                this.addVectors(e, t))
              : ((this.x += e.x), (this.y += e.y), this);
          },
          addScalar: function (e) {
            return (this.x += e), (this.y += e), this;
          },
          addVectors: function (e, t) {
            return (this.x = e.x + t.x), (this.y = e.y + t.y), this;
          },
          addScaledVector: function (e, t) {
            return (this.x += e.x * t), (this.y += e.y * t), this;
          },
          sub: function (e, t) {
            return void 0 !== t
              ? (console.warn(
                  "THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."
                ),
                this.subVectors(e, t))
              : ((this.x -= e.x), (this.y -= e.y), this);
          },
          subScalar: function (e) {
            return (this.x -= e), (this.y -= e), this;
          },
          subVectors: function (e, t) {
            return (this.x = e.x - t.x), (this.y = e.y - t.y), this;
          },
          multiply: function (e) {
            return (this.x *= e.x), (this.y *= e.y), this;
          },
          multiplyScalar: function (e) {
            return (this.x *= e), (this.y *= e), this;
          },
          divide: function (e) {
            return (this.x /= e.x), (this.y /= e.y), this;
          },
          divideScalar: function (e) {
            return this.multiplyScalar(1 / e);
          },
          applyMatrix3: function (e) {
            var t = this.x,
              i = this.y,
              e = e.elements;
            return (
              (this.x = e[0] * t + e[3] * i + e[6]),
              (this.y = e[1] * t + e[4] * i + e[7]),
              this
            );
          },
          min: function (e) {
            return (
              (this.x = Math.min(this.x, e.x)),
              (this.y = Math.min(this.y, e.y)),
              this
            );
          },
          max: function (e) {
            return (
              (this.x = Math.max(this.x, e.x)),
              (this.y = Math.max(this.y, e.y)),
              this
            );
          },
          clamp: function (e, t) {
            return (
              (this.x = Math.max(e.x, Math.min(t.x, this.x))),
              (this.y = Math.max(e.y, Math.min(t.y, this.y))),
              this
            );
          },
          clampScalar:
            ((o = new Et()),
            (a = new Et()),
            function (e, t) {
              return o.set(e, e), a.set(t, t), this.clamp(o, a);
            }),
          clampLength: function (e, t) {
            var i = this.length();
            return this.divideScalar(i || 1).multiplyScalar(
              Math.max(e, Math.min(t, i))
            );
          },
          floor: function () {
            return (
              (this.x = Math.floor(this.x)), (this.y = Math.floor(this.y)), this
            );
          },
          ceil: function () {
            return (
              (this.x = Math.ceil(this.x)), (this.y = Math.ceil(this.y)), this
            );
          },
          round: function () {
            return (
              (this.x = Math.round(this.x)), (this.y = Math.round(this.y)), this
            );
          },
          roundToZero: function () {
            return (
              (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
              (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
              this
            );
          },
          negate: function () {
            return (this.x = -this.x), (this.y = -this.y), this;
          },
          dot: function (e) {
            return this.x * e.x + this.y * e.y;
          },
          lengthSq: function () {
            return this.x * this.x + this.y * this.y;
          },
          length: function () {
            return Math.sqrt(this.x * this.x + this.y * this.y);
          },
          manhattanLength: function () {
            return Math.abs(this.x) + Math.abs(this.y);
          },
          normalize: function () {
            return this.divideScalar(this.length() || 1);
          },
          angle: function () {
            var e = Math.atan2(this.y, this.x);
            return e < 0 && (e += 2 * Math.PI), e;
          },
          distanceTo: function (e) {
            return Math.sqrt(this.distanceToSquared(e));
          },
          distanceToSquared: function (e) {
            var t = this.x - e.x,
              e = this.y - e.y;
            return t * t + e * e;
          },
          manhattanDistanceTo: function (e) {
            return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
          },
          setLength: function (e) {
            return this.normalize().multiplyScalar(e);
          },
          lerp: function (e, t) {
            return (
              (this.x += (e.x - this.x) * t),
              (this.y += (e.y - this.y) * t),
              this
            );
          },
          lerpVectors: function (e, t, i) {
            return this.subVectors(t, e).multiplyScalar(i).add(e);
          },
          equals: function (e) {
            return e.x === this.x && e.y === this.y;
          },
          fromArray: function (e, t) {
            return (
              void 0 === t && (t = 0),
              (this.x = e[t]),
              (this.y = e[t + 1]),
              this
            );
          },
          toArray: function (e, t) {
            return (
              void 0 === e && (e = []),
              void 0 === t && (t = 0),
              (e[t] = this.x),
              (e[t + 1] = this.y),
              e
            );
          },
          fromBufferAttribute: function (e, t, i) {
            return (
              void 0 !== i &&
                console.warn(
                  "THREE.Vector2: offset has been removed from .fromBufferAttribute()."
                ),
              (this.x = e.getX(t)),
              (this.y = e.getY(t)),
              this
            );
          },
          rotateAround: function (e, t) {
            var i = Math.cos(t),
              n = Math.sin(t),
              r = this.x - e.x,
              t = this.y - e.y;
            return (
              (this.x = r * i - t * n + e.x),
              (this.y = r * n + t * i + e.y),
              this
            );
          },
        }),
        Object.assign(At.prototype, {
          isMatrix4: !0,
          set: function (e, t, i, n, r, o, a, s, l, c, h, u, d, p, f, m) {
            var g = this.elements;
            return (
              (g[0] = e),
              (g[4] = t),
              (g[8] = i),
              (g[12] = n),
              (g[1] = r),
              (g[5] = o),
              (g[9] = a),
              (g[13] = s),
              (g[2] = l),
              (g[6] = c),
              (g[10] = h),
              (g[14] = u),
              (g[3] = d),
              (g[7] = p),
              (g[11] = f),
              (g[15] = m),
              this
            );
          },
          identity: function () {
            return (
              this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
            );
          },
          clone: function () {
            return new At().fromArray(this.elements);
          },
          copy: function (e) {
            var t = this.elements,
              e = e.elements;
            return (
              (t[0] = e[0]),
              (t[1] = e[1]),
              (t[2] = e[2]),
              (t[3] = e[3]),
              (t[4] = e[4]),
              (t[5] = e[5]),
              (t[6] = e[6]),
              (t[7] = e[7]),
              (t[8] = e[8]),
              (t[9] = e[9]),
              (t[10] = e[10]),
              (t[11] = e[11]),
              (t[12] = e[12]),
              (t[13] = e[13]),
              (t[14] = e[14]),
              (t[15] = e[15]),
              this
            );
          },
          copyPosition: function (e) {
            var t = this.elements,
              e = e.elements;
            return (t[12] = e[12]), (t[13] = e[13]), (t[14] = e[14]), this;
          },
          extractBasis: function (e, t, i) {
            return (
              e.setFromMatrixColumn(this, 0),
              t.setFromMatrixColumn(this, 1),
              i.setFromMatrixColumn(this, 2),
              this
            );
          },
          makeBasis: function (e, t, i) {
            return (
              this.set(
                e.x,
                t.x,
                i.x,
                0,
                e.y,
                t.y,
                i.y,
                0,
                e.z,
                t.z,
                i.z,
                0,
                0,
                0,
                0,
                1
              ),
              this
            );
          },
          extractRotation:
            ((p = new Ct()),
            function (e) {
              var t = this.elements,
                i = e.elements,
                n = 1 / p.setFromMatrixColumn(e, 0).length(),
                r = 1 / p.setFromMatrixColumn(e, 1).length(),
                e = 1 / p.setFromMatrixColumn(e, 2).length();
              return (
                (t[0] = i[0] * n),
                (t[1] = i[1] * n),
                (t[2] = i[2] * n),
                (t[4] = i[4] * r),
                (t[5] = i[5] * r),
                (t[6] = i[6] * r),
                (t[8] = i[8] * e),
                (t[9] = i[9] * e),
                (t[10] = i[10] * e),
                this
              );
            }),
          makeRotationFromEuler: function (e) {
            (e && e.isEuler) ||
              console.error(
                "THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order."
              );
            var t,
              i,
              n,
              r,
              o,
              a,
              s,
              l,
              c,
              h,
              u,
              d,
              p = this.elements,
              f = e.x,
              m = e.y,
              g = e.z,
              v = Math.cos(f),
              y = Math.sin(f),
              _ = Math.cos(m),
              f = Math.sin(m),
              m = Math.cos(g),
              g = Math.sin(g);
            return (
              "XYZ" === e.order
                ? ((o = v * m),
                  (a = v * g),
                  (s = y * m),
                  (l = y * g),
                  (p[0] = _ * m),
                  (p[4] = -_ * g),
                  (p[8] = f),
                  (p[1] = a + s * f),
                  (p[5] = o - l * f),
                  (p[9] = -y * _),
                  (p[2] = l - o * f),
                  (p[6] = s + a * f),
                  (p[10] = v * _))
                : "YXZ" === e.order
                ? ((t = _ * m),
                  (i = _ * g),
                  (n = f * m),
                  (r = f * g),
                  (p[0] = t + r * y),
                  (p[4] = n * y - i),
                  (p[8] = v * f),
                  (p[1] = v * g),
                  (p[5] = v * m),
                  (p[9] = -y),
                  (p[2] = i * y - n),
                  (p[6] = r + t * y),
                  (p[10] = v * _))
                : "ZXY" === e.order
                ? ((t = _ * m),
                  (i = _ * g),
                  (n = f * m),
                  (r = f * g),
                  (p[0] = t - r * y),
                  (p[4] = -v * g),
                  (p[8] = n + i * y),
                  (p[1] = i + n * y),
                  (p[5] = v * m),
                  (p[9] = r - t * y),
                  (p[2] = -v * f),
                  (p[6] = y),
                  (p[10] = v * _))
                : "ZYX" === e.order
                ? ((o = v * m),
                  (a = v * g),
                  (s = y * m),
                  (l = y * g),
                  (p[0] = _ * m),
                  (p[4] = s * f - a),
                  (p[8] = o * f + l),
                  (p[1] = _ * g),
                  (p[5] = l * f + o),
                  (p[9] = a * f - s),
                  (p[2] = -f),
                  (p[6] = y * _),
                  (p[10] = v * _))
                : "YZX" === e.order
                ? ((c = v * _),
                  (h = v * f),
                  (u = y * _),
                  (d = y * f),
                  (p[0] = _ * m),
                  (p[4] = d - c * g),
                  (p[8] = u * g + h),
                  (p[1] = g),
                  (p[5] = v * m),
                  (p[9] = -y * m),
                  (p[2] = -f * m),
                  (p[6] = h * g + u),
                  (p[10] = c - d * g))
                : "XZY" === e.order &&
                  ((c = v * _),
                  (h = v * f),
                  (u = y * _),
                  (d = y * f),
                  (p[0] = _ * m),
                  (p[4] = -g),
                  (p[8] = f * m),
                  (p[1] = c * g + d),
                  (p[5] = v * m),
                  (p[9] = h * g - u),
                  (p[2] = u * g - h),
                  (p[6] = y * m),
                  (p[10] = d * g + c)),
              (p[3] = 0),
              (p[7] = 0),
              (p[11] = 0),
              (p[12] = 0),
              (p[13] = 0),
              (p[14] = 0),
              (p[15] = 1),
              this
            );
          },
          makeRotationFromQuaternion: function (e) {
            var t = this.elements,
              i = e._x,
              n = e._y,
              r = e._z,
              o = e._w,
              a = i + i,
              s = n + n,
              l = r + r,
              c = i * a,
              h = i * s,
              e = i * l,
              i = n * s,
              n = n * l,
              r = r * l,
              a = o * a,
              s = o * s,
              l = o * l;
            return (
              (t[0] = 1 - (i + r)),
              (t[4] = h - l),
              (t[8] = e + s),
              (t[1] = h + l),
              (t[5] = 1 - (c + r)),
              (t[9] = n - a),
              (t[2] = e - s),
              (t[6] = n + a),
              (t[10] = 1 - (c + i)),
              (t[3] = 0),
              (t[7] = 0),
              (t[11] = 0),
              (t[12] = 0),
              (t[13] = 0),
              (t[14] = 0),
              (t[15] = 1),
              this
            );
          },
          lookAt:
            ((h = new Ct()),
            (u = new Ct()),
            (d = new Ct()),
            function (e, t, i) {
              var n = this.elements;
              return (
                d.subVectors(e, t),
                0 === d.lengthSq() && (d.z = 1),
                d.normalize(),
                h.crossVectors(i, d),
                0 === h.lengthSq() &&
                  (1 === Math.abs(i.z) ? (d.x += 1e-4) : (d.z += 1e-4),
                  d.normalize(),
                  h.crossVectors(i, d)),
                h.normalize(),
                u.crossVectors(d, h),
                (n[0] = h.x),
                (n[4] = u.x),
                (n[8] = d.x),
                (n[1] = h.y),
                (n[5] = u.y),
                (n[9] = d.y),
                (n[2] = h.z),
                (n[6] = u.z),
                (n[10] = d.z),
                this
              );
            }),
          multiply: function (e, t) {
            return void 0 !== t
              ? (console.warn(
                  "THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."
                ),
                this.multiplyMatrices(e, t))
              : this.multiplyMatrices(this, e);
          },
          premultiply: function (e) {
            return this.multiplyMatrices(e, this);
          },
          multiplyMatrices: function (e, t) {
            var i = e.elements,
              n = t.elements,
              r = this.elements,
              o = i[0],
              a = i[4],
              s = i[8],
              l = i[12],
              c = i[1],
              h = i[5],
              u = i[9],
              d = i[13],
              p = i[2],
              f = i[6],
              m = i[10],
              g = i[14],
              v = i[3],
              y = i[7],
              _ = i[11],
              x = i[15],
              b = n[0],
              w = n[4],
              T = n[8],
              S = n[12],
              M = n[1],
              E = n[5],
              A = n[9],
              L = n[13],
              C = n[2],
              P = n[6],
              R = n[10],
              O = n[14],
              e = n[3],
              t = n[7],
              i = n[11],
              n = n[15];
            return (
              (r[0] = o * b + a * M + s * C + l * e),
              (r[4] = o * w + a * E + s * P + l * t),
              (r[8] = o * T + a * A + s * R + l * i),
              (r[12] = o * S + a * L + s * O + l * n),
              (r[1] = c * b + h * M + u * C + d * e),
              (r[5] = c * w + h * E + u * P + d * t),
              (r[9] = c * T + h * A + u * R + d * i),
              (r[13] = c * S + h * L + u * O + d * n),
              (r[2] = p * b + f * M + m * C + g * e),
              (r[6] = p * w + f * E + m * P + g * t),
              (r[10] = p * T + f * A + m * R + g * i),
              (r[14] = p * S + f * L + m * O + g * n),
              (r[3] = v * b + y * M + _ * C + x * e),
              (r[7] = v * w + y * E + _ * P + x * t),
              (r[11] = v * T + y * A + _ * R + x * i),
              (r[15] = v * S + y * L + _ * O + x * n),
              this
            );
          },
          multiplyScalar: function (e) {
            var t = this.elements;
            return (
              (t[0] *= e),
              (t[4] *= e),
              (t[8] *= e),
              (t[12] *= e),
              (t[1] *= e),
              (t[5] *= e),
              (t[9] *= e),
              (t[13] *= e),
              (t[2] *= e),
              (t[6] *= e),
              (t[10] *= e),
              (t[14] *= e),
              (t[3] *= e),
              (t[7] *= e),
              (t[11] *= e),
              (t[15] *= e),
              this
            );
          },
          applyToBufferAttribute:
            ((s = new Ct()),
            function (e) {
              for (var t = 0, i = e.count; t < i; t++)
                (s.x = e.getX(t)),
                  (s.y = e.getY(t)),
                  (s.z = e.getZ(t)),
                  s.applyMatrix4(this),
                  e.setXYZ(t, s.x, s.y, s.z);
              return e;
            }),
          determinant: function () {
            var e = this.elements,
              t = e[0],
              i = e[4],
              n = e[8],
              r = e[12],
              o = e[1],
              a = e[5],
              s = e[9],
              l = e[13],
              c = e[2],
              h = e[6],
              u = e[10],
              d = e[14];
            return (
              e[3] *
                (+r * s * h -
                  n * l * h -
                  r * a * u +
                  i * l * u +
                  n * a * d -
                  i * s * d) +
              e[7] *
                (+t * s * d -
                  t * l * u +
                  r * o * u -
                  n * o * d +
                  n * l * c -
                  r * s * c) +
              e[11] *
                (+t * l * h -
                  t * a * d -
                  r * o * h +
                  i * o * d +
                  r * a * c -
                  i * l * c) +
              e[15] *
                (-n * a * c -
                  t * s * h +
                  t * a * u +
                  n * o * h -
                  i * o * u +
                  i * s * c)
            );
          },
          transpose: function () {
            var e = this.elements,
              t = e[1];
            return (
              (e[1] = e[4]),
              (e[4] = t),
              (t = e[2]),
              (e[2] = e[8]),
              (e[8] = t),
              (t = e[6]),
              (e[6] = e[9]),
              (e[9] = t),
              (t = e[3]),
              (e[3] = e[12]),
              (e[12] = t),
              (t = e[7]),
              (e[7] = e[13]),
              (e[13] = t),
              (t = e[11]),
              (e[11] = e[14]),
              (e[14] = t),
              this
            );
          },
          setPosition: function (e) {
            var t = this.elements;
            return (t[12] = e.x), (t[13] = e.y), (t[14] = e.z), this;
          },
          getInverse: function (e, t) {
            var i = this.elements,
              n = e.elements,
              r = n[0],
              o = n[1],
              a = n[2],
              s = n[3],
              l = n[4],
              c = n[5],
              h = n[6],
              u = n[7],
              d = n[8],
              p = n[9],
              f = n[10],
              m = n[11],
              g = n[12],
              v = n[13],
              y = n[14],
              _ = n[15],
              x =
                p * y * u -
                v * f * u +
                v * h * m -
                c * y * m -
                p * h * _ +
                c * f * _,
              b =
                g * f * u -
                d * y * u -
                g * h * m +
                l * y * m +
                d * h * _ -
                l * f * _,
              w =
                d * v * u -
                g * p * u +
                g * c * m -
                l * v * m -
                d * c * _ +
                l * p * _,
              T =
                g * p * h -
                d * v * h -
                g * c * f +
                l * v * f +
                d * c * y -
                l * p * y,
              e = r * x + o * b + a * w + s * T;
            if (0 == e) {
              n =
                "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
              if (!0 === t) throw new Error(n);
              return console.warn(n), this.identity();
            }
            e = 1 / e;
            return (
              (i[0] = x * e),
              (i[1] =
                (v * f * s -
                  p * y * s -
                  v * a * m +
                  o * y * m +
                  p * a * _ -
                  o * f * _) *
                e),
              (i[2] =
                (c * y * s -
                  v * h * s +
                  v * a * u -
                  o * y * u -
                  c * a * _ +
                  o * h * _) *
                e),
              (i[3] =
                (p * h * s -
                  c * f * s -
                  p * a * u +
                  o * f * u +
                  c * a * m -
                  o * h * m) *
                e),
              (i[4] = b * e),
              (i[5] =
                (d * y * s -
                  g * f * s +
                  g * a * m -
                  r * y * m -
                  d * a * _ +
                  r * f * _) *
                e),
              (i[6] =
                (g * h * s -
                  l * y * s -
                  g * a * u +
                  r * y * u +
                  l * a * _ -
                  r * h * _) *
                e),
              (i[7] =
                (l * f * s -
                  d * h * s +
                  d * a * u -
                  r * f * u -
                  l * a * m +
                  r * h * m) *
                e),
              (i[8] = w * e),
              (i[9] =
                (g * p * s -
                  d * v * s -
                  g * o * m +
                  r * v * m +
                  d * o * _ -
                  r * p * _) *
                e),
              (i[10] =
                (l * v * s -
                  g * c * s +
                  g * o * u -
                  r * v * u -
                  l * o * _ +
                  r * c * _) *
                e),
              (i[11] =
                (d * c * s -
                  l * p * s -
                  d * o * u +
                  r * p * u +
                  l * o * m -
                  r * c * m) *
                e),
              (i[12] = T * e),
              (i[13] =
                (d * v * a -
                  g * p * a +
                  g * o * f -
                  r * v * f -
                  d * o * y +
                  r * p * y) *
                e),
              (i[14] =
                (g * c * a -
                  l * v * a -
                  g * o * h +
                  r * v * h +
                  l * o * y -
                  r * c * y) *
                e),
              (i[15] =
                (l * p * a -
                  d * c * a +
                  d * o * h -
                  r * p * h -
                  l * o * f +
                  r * c * f) *
                e),
              this
            );
          },
          scale: function (e) {
            var t = this.elements,
              i = e.x,
              n = e.y,
              e = e.z;
            return (
              (t[0] *= i),
              (t[4] *= n),
              (t[8] *= e),
              (t[1] *= i),
              (t[5] *= n),
              (t[9] *= e),
              (t[2] *= i),
              (t[6] *= n),
              (t[10] *= e),
              (t[3] *= i),
              (t[7] *= n),
              (t[11] *= e),
              this
            );
          },
          getMaxScaleOnAxis: function () {
            var e = this.elements,
              t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
              i = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
              e = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
            return Math.sqrt(Math.max(t, i, e));
          },
          makeTranslation: function (e, t, i) {
            return (
              this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, i, 0, 0, 0, 1), this
            );
          },
          makeRotationX: function (e) {
            var t = Math.cos(e),
              e = Math.sin(e);
            return (
              this.set(1, 0, 0, 0, 0, t, -e, 0, 0, e, t, 0, 0, 0, 0, 1), this
            );
          },
          makeRotationY: function (e) {
            var t = Math.cos(e),
              e = Math.sin(e);
            return (
              this.set(t, 0, e, 0, 0, 1, 0, 0, -e, 0, t, 0, 0, 0, 0, 1), this
            );
          },
          makeRotationZ: function (e) {
            var t = Math.cos(e),
              e = Math.sin(e);
            return (
              this.set(t, -e, 0, 0, e, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
            );
          },
          makeRotationAxis: function (e, t) {
            var i = Math.cos(t),
              n = Math.sin(t),
              r = 1 - i,
              o = e.x,
              a = e.y,
              s = e.z,
              t = r * o,
              e = r * a;
            return (
              this.set(
                t * o + i,
                t * a - n * s,
                t * s + n * a,
                0,
                t * a + n * s,
                e * a + i,
                e * s - n * o,
                0,
                t * s - n * a,
                e * s + n * o,
                r * s * s + i,
                0,
                0,
                0,
                0,
                1
              ),
              this
            );
          },
          makeScale: function (e, t, i) {
            return (
              this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, i, 0, 0, 0, 0, 1), this
            );
          },
          makeShear: function (e, t, i) {
            return (
              this.set(1, t, i, 0, e, 1, i, 0, e, t, 1, 0, 0, 0, 0, 1), this
            );
          },
          compose: function (e, t, i) {
            return (
              this.makeRotationFromQuaternion(t),
              this.scale(i),
              this.setPosition(e),
              this
            );
          },
          decompose:
            ((l = new Ct()),
            (c = new At()),
            function (e, t, i) {
              var n = this.elements,
                r = l.set(n[0], n[1], n[2]).length(),
                o = l.set(n[4], n[5], n[6]).length(),
                a = l.set(n[8], n[9], n[10]).length();
              this.determinant() < 0 && (r = -r),
                (e.x = n[12]),
                (e.y = n[13]),
                (e.z = n[14]),
                c.copy(this);
              var s = 1 / r,
                e = 1 / o,
                n = 1 / a;
              return (
                (c.elements[0] *= s),
                (c.elements[1] *= s),
                (c.elements[2] *= s),
                (c.elements[4] *= e),
                (c.elements[5] *= e),
                (c.elements[6] *= e),
                (c.elements[8] *= n),
                (c.elements[9] *= n),
                (c.elements[10] *= n),
                t.setFromRotationMatrix(c),
                (i.x = r),
                (i.y = o),
                (i.z = a),
                this
              );
            }),
          makePerspective: function (e, t, i, n, r, o) {
            void 0 === o &&
              console.warn(
                "THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs."
              );
            var a = this.elements,
              s = (2 * r) / (t - e),
              l = (2 * r) / (i - n),
              e = (t + e) / (t - e),
              i = (i + n) / (i - n),
              n = -(o + r) / (o - r),
              r = (-2 * o * r) / (o - r);
            return (
              (a[0] = s),
              (a[4] = 0),
              (a[8] = e),
              (a[12] = 0),
              (a[1] = 0),
              (a[5] = l),
              (a[9] = i),
              (a[13] = 0),
              (a[2] = 0),
              (a[6] = 0),
              (a[10] = n),
              (a[14] = r),
              (a[3] = 0),
              (a[7] = 0),
              (a[11] = -1),
              (a[15] = 0),
              this
            );
          },
          makeOrthographic: function (e, t, i, n, r, o) {
            var a = this.elements,
              s = 1 / (t - e),
              l = 1 / (i - n),
              c = 1 / (o - r),
              e = (t + e) * s,
              n = (i + n) * l,
              r = (o + r) * c;
            return (
              (a[0] = 2 * s),
              (a[4] = 0),
              (a[8] = 0),
              (a[12] = -e),
              (a[1] = 0),
              (a[5] = 2 * l),
              (a[9] = 0),
              (a[13] = -n),
              (a[2] = 0),
              (a[6] = 0),
              (a[10] = -2 * c),
              (a[14] = -r),
              (a[3] = 0),
              (a[7] = 0),
              (a[11] = 0),
              (a[15] = 1),
              this
            );
          },
          equals: function (e) {
            for (var t = this.elements, i = e.elements, n = 0; n < 16; n++)
              if (t[n] !== i[n]) return !1;
            return !0;
          },
          fromArray: function (e, t) {
            void 0 === t && (t = 0);
            for (var i = 0; i < 16; i++) this.elements[i] = e[i + t];
            return this;
          },
          toArray: function (e, t) {
            void 0 === e && (e = []), void 0 === t && (t = 0);
            var i = this.elements;
            return (
              (e[t] = i[0]),
              (e[t + 1] = i[1]),
              (e[t + 2] = i[2]),
              (e[t + 3] = i[3]),
              (e[t + 4] = i[4]),
              (e[t + 5] = i[5]),
              (e[t + 6] = i[6]),
              (e[t + 7] = i[7]),
              (e[t + 8] = i[8]),
              (e[t + 9] = i[9]),
              (e[t + 10] = i[10]),
              (e[t + 11] = i[11]),
              (e[t + 12] = i[12]),
              (e[t + 13] = i[13]),
              (e[t + 14] = i[14]),
              (e[t + 15] = i[15]),
              e
            );
          },
        }),
        Object.assign(Lt, {
          slerp: function (e, t, i, n) {
            return i.copy(e).slerp(t, n);
          },
          slerpFlat: function (e, t, i, n, r, o, a) {
            var s = i[n + 0],
              l = i[n + 1],
              c = i[n + 2],
              h = i[n + 3],
              u = r[o + 0],
              d = r[o + 1],
              p = r[o + 2],
              f = r[o + 3];
            (h === f && s === u && l === d && c === p) ||
              ((i = 1 - a),
              (r = 0 <= (n = s * u + l * d + c * p + h * f) ? 1 : -1),
              (o = 1 - n * n) > Number.EPSILON &&
                ((o = Math.sqrt(o)),
                (n = Math.atan2(o, n * r)),
                (i = Math.sin(i * n) / o),
                (a = Math.sin(a * n) / o)),
              (s = s * i + u * (r = a * r)),
              (l = l * i + d * r),
              (c = c * i + p * r),
              (h = h * i + f * r),
              i === 1 - a &&
                ((s *= a = 1 / Math.sqrt(s * s + l * l + c * c + h * h)),
                (l *= a),
                (c *= a),
                (h *= a))),
              (e[t] = s),
              (e[t + 1] = l),
              (e[t + 2] = c),
              (e[t + 3] = h);
          },
        }),
        Object.defineProperties(Lt.prototype, {
          x: {
            get: function () {
              return this._x;
            },
            set: function (e) {
              (this._x = e), this.onChangeCallback();
            },
          },
          y: {
            get: function () {
              return this._y;
            },
            set: function (e) {
              (this._y = e), this.onChangeCallback();
            },
          },
          z: {
            get: function () {
              return this._z;
            },
            set: function (e) {
              (this._z = e), this.onChangeCallback();
            },
          },
          w: {
            get: function () {
              return this._w;
            },
            set: function (e) {
              (this._w = e), this.onChangeCallback();
            },
          },
        }),
        Object.assign(Lt.prototype, {
          set: function (e, t, i, n) {
            return (
              (this._x = e),
              (this._y = t),
              (this._z = i),
              (this._w = n),
              this.onChangeCallback(),
              this
            );
          },
          clone: function () {
            return new this.constructor(this._x, this._y, this._z, this._w);
          },
          copy: function (e) {
            return (
              (this._x = e.x),
              (this._y = e.y),
              (this._z = e.z),
              (this._w = e.w),
              this.onChangeCallback(),
              this
            );
          },
          setFromEuler: function (e, t) {
            if (!e || !e.isEuler)
              throw new Error(
                "THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order."
              );
            var i = e._x,
              n = e._y,
              r = e._z,
              o = e.order,
              a = Math.cos,
              s = Math.sin,
              l = a(i / 2),
              e = a(n / 2),
              a = a(r / 2),
              i = s(i / 2),
              n = s(n / 2),
              r = s(r / 2);
            return (
              "XYZ" === o
                ? ((this._x = i * e * a + l * n * r),
                  (this._y = l * n * a - i * e * r),
                  (this._z = l * e * r + i * n * a),
                  (this._w = l * e * a - i * n * r))
                : "YXZ" === o
                ? ((this._x = i * e * a + l * n * r),
                  (this._y = l * n * a - i * e * r),
                  (this._z = l * e * r - i * n * a),
                  (this._w = l * e * a + i * n * r))
                : "ZXY" === o
                ? ((this._x = i * e * a - l * n * r),
                  (this._y = l * n * a + i * e * r),
                  (this._z = l * e * r + i * n * a),
                  (this._w = l * e * a - i * n * r))
                : "ZYX" === o
                ? ((this._x = i * e * a - l * n * r),
                  (this._y = l * n * a + i * e * r),
                  (this._z = l * e * r - i * n * a),
                  (this._w = l * e * a + i * n * r))
                : "YZX" === o
                ? ((this._x = i * e * a + l * n * r),
                  (this._y = l * n * a + i * e * r),
                  (this._z = l * e * r - i * n * a),
                  (this._w = l * e * a - i * n * r))
                : "XZY" === o &&
                  ((this._x = i * e * a - l * n * r),
                  (this._y = l * n * a - i * e * r),
                  (this._z = l * e * r + i * n * a),
                  (this._w = l * e * a + i * n * r)),
              !1 !== t && this.onChangeCallback(),
              this
            );
          },
          setFromAxisAngle: function (e, t) {
            var i = t / 2,
              t = Math.sin(i);
            return (
              (this._x = e.x * t),
              (this._y = e.y * t),
              (this._z = e.z * t),
              (this._w = Math.cos(i)),
              this.onChangeCallback(),
              this
            );
          },
          setFromRotationMatrix: function (e) {
            var t,
              i = e.elements,
              n = i[0],
              r = i[4],
              o = i[8],
              a = i[1],
              s = i[5],
              l = i[9],
              c = i[2],
              h = i[6],
              e = i[10],
              i = n + s + e;
            return (
              0 < i
                ? ((t = 0.5 / Math.sqrt(i + 1)),
                  (this._w = 0.25 / t),
                  (this._x = (h - l) * t),
                  (this._y = (o - c) * t),
                  (this._z = (a - r) * t))
                : s < n && e < n
                ? ((t = 2 * Math.sqrt(1 + n - s - e)),
                  (this._w = (h - l) / t),
                  (this._x = 0.25 * t),
                  (this._y = (r + a) / t),
                  (this._z = (o + c) / t))
                : e < s
                ? ((t = 2 * Math.sqrt(1 + s - n - e)),
                  (this._w = (o - c) / t),
                  (this._x = (r + a) / t),
                  (this._y = 0.25 * t),
                  (this._z = (l + h) / t))
                : ((t = 2 * Math.sqrt(1 + e - n - s)),
                  (this._w = (a - r) / t),
                  (this._x = (o + c) / t),
                  (this._y = (l + h) / t),
                  (this._z = 0.25 * t)),
              this.onChangeCallback(),
              this
            );
          },
          setFromUnitVectors:
            ((m = new Ct()),
            function (e, t) {
              return (
                void 0 === m && (m = new Ct()),
                (f = e.dot(t) + 1) < 1e-6
                  ? ((f = 0),
                    Math.abs(e.x) > Math.abs(e.z)
                      ? m.set(-e.y, e.x, 0)
                      : m.set(0, -e.z, e.y))
                  : m.crossVectors(e, t),
                (this._x = m.x),
                (this._y = m.y),
                (this._z = m.z),
                (this._w = f),
                this.normalize()
              );
            }),
          inverse: function () {
            return this.conjugate().normalize();
          },
          conjugate: function () {
            return (
              (this._x *= -1),
              (this._y *= -1),
              (this._z *= -1),
              this.onChangeCallback(),
              this
            );
          },
          dot: function (e) {
            return (
              this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
            );
          },
          lengthSq: function () {
            return (
              this._x * this._x +
              this._y * this._y +
              this._z * this._z +
              this._w * this._w
            );
          },
          length: function () {
            return Math.sqrt(
              this._x * this._x +
                this._y * this._y +
                this._z * this._z +
                this._w * this._w
            );
          },
          normalize: function () {
            var e = this.length();
            return (
              0 === e
                ? ((this._x = 0), (this._y = 0), (this._z = 0), (this._w = 1))
                : ((e = 1 / e),
                  (this._x = this._x * e),
                  (this._y = this._y * e),
                  (this._z = this._z * e),
                  (this._w = this._w * e)),
              this.onChangeCallback(),
              this
            );
          },
          multiply: function (e, t) {
            return void 0 !== t
              ? (console.warn(
                  "THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."
                ),
                this.multiplyQuaternions(e, t))
              : this.multiplyQuaternions(this, e);
          },
          premultiply: function (e) {
            return this.multiplyQuaternions(e, this);
          },
          multiplyQuaternions: function (e, t) {
            var i = e._x,
              n = e._y,
              r = e._z,
              o = e._w,
              a = t._x,
              s = t._y,
              e = t._z,
              t = t._w;
            return (
              (this._x = i * t + o * a + n * e - r * s),
              (this._y = n * t + o * s + r * a - i * e),
              (this._z = r * t + o * e + i * s - n * a),
              (this._w = o * t - i * a - n * s - r * e),
              this.onChangeCallback(),
              this
            );
          },
          slerp: function (e, t) {
            if (0 === t) return this;
            if (1 === t) return this.copy(e);
            var i = this._x,
              n = this._y,
              r = this._z,
              o = this._w,
              a = o * e._w + i * e._x + n * e._y + r * e._z;
            if (
              (a < 0
                ? ((this._w = -e._w),
                  (this._x = -e._x),
                  (this._y = -e._y),
                  (this._z = -e._z),
                  (a = -a))
                : this.copy(e),
              1 <= a)
            )
              return (
                (this._w = o), (this._x = i), (this._y = n), (this._z = r), this
              );
            var s = Math.sqrt(1 - a * a);
            if (Math.abs(s) < 0.001)
              return (
                (this._w = 0.5 * (o + this._w)),
                (this._x = 0.5 * (i + this._x)),
                (this._y = 0.5 * (n + this._y)),
                (this._z = 0.5 * (r + this._z)),
                this
              );
            (e = Math.atan2(s, a)),
              (a = Math.sin((1 - t) * e) / s),
              (s = Math.sin(t * e) / s);
            return (
              (this._w = o * a + this._w * s),
              (this._x = i * a + this._x * s),
              (this._y = n * a + this._y * s),
              (this._z = r * a + this._z * s),
              this.onChangeCallback(),
              this
            );
          },
          equals: function (e) {
            return (
              e._x === this._x &&
              e._y === this._y &&
              e._z === this._z &&
              e._w === this._w
            );
          },
          fromArray: function (e, t) {
            return (
              void 0 === t && (t = 0),
              (this._x = e[t]),
              (this._y = e[t + 1]),
              (this._z = e[t + 2]),
              (this._w = e[t + 3]),
              this.onChangeCallback(),
              this
            );
          },
          toArray: function (e, t) {
            return (
              void 0 === e && (e = []),
              void 0 === t && (t = 0),
              (e[t] = this._x),
              (e[t + 1] = this._y),
              (e[t + 2] = this._z),
              (e[t + 3] = this._w),
              e
            );
          },
          onChange: function (e) {
            return (this.onChangeCallback = e), this;
          },
          onChangeCallback: function () {},
        }),
        Object.assign(Ct.prototype, {
          isVector3: !0,
          set: function (e, t, i) {
            return (this.x = e), (this.y = t), (this.z = i), this;
          },
          setScalar: function (e) {
            return (this.x = e), (this.y = e), (this.z = e), this;
          },
          setX: function (e) {
            return (this.x = e), this;
          },
          setY: function (e) {
            return (this.y = e), this;
          },
          setZ: function (e) {
            return (this.z = e), this;
          },
          setComponent: function (e, t) {
            switch (e) {
              case 0:
                this.x = t;
                break;
              case 1:
                this.y = t;
                break;
              case 2:
                this.z = t;
                break;
              default:
                throw new Error("index is out of range: " + e);
            }
            return this;
          },
          getComponent: function (e) {
            switch (e) {
              case 0:
                return this.x;
              case 1:
                return this.y;
              case 2:
                return this.z;
              default:
                throw new Error("index is out of range: " + e);
            }
          },
          clone: function () {
            return new this.constructor(this.x, this.y, this.z);
          },
          copy: function (e) {
            return (this.x = e.x), (this.y = e.y), (this.z = e.z), this;
          },
          add: function (e, t) {
            return void 0 !== t
              ? (console.warn(
                  "THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."
                ),
                this.addVectors(e, t))
              : ((this.x += e.x), (this.y += e.y), (this.z += e.z), this);
          },
          addScalar: function (e) {
            return (this.x += e), (this.y += e), (this.z += e), this;
          },
          addVectors: function (e, t) {
            return (
              (this.x = e.x + t.x),
              (this.y = e.y + t.y),
              (this.z = e.z + t.z),
              this
            );
          },
          addScaledVector: function (e, t) {
            return (
              (this.x += e.x * t),
              (this.y += e.y * t),
              (this.z += e.z * t),
              this
            );
          },
          sub: function (e, t) {
            return void 0 !== t
              ? (console.warn(
                  "THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."
                ),
                this.subVectors(e, t))
              : ((this.x -= e.x), (this.y -= e.y), (this.z -= e.z), this);
          },
          subScalar: function (e) {
            return (this.x -= e), (this.y -= e), (this.z -= e), this;
          },
          subVectors: function (e, t) {
            return (
              (this.x = e.x - t.x),
              (this.y = e.y - t.y),
              (this.z = e.z - t.z),
              this
            );
          },
          multiply: function (e, t) {
            return void 0 !== t
              ? (console.warn(
                  "THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."
                ),
                this.multiplyVectors(e, t))
              : ((this.x *= e.x), (this.y *= e.y), (this.z *= e.z), this);
          },
          multiplyScalar: function (e) {
            return (this.x *= e), (this.y *= e), (this.z *= e), this;
          },
          multiplyVectors: function (e, t) {
            return (
              (this.x = e.x * t.x),
              (this.y = e.y * t.y),
              (this.z = e.z * t.z),
              this
            );
          },
          applyEuler:
            ((T = new Lt()),
            function (e) {
              return (
                (e && e.isEuler) ||
                  console.error(
                    "THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."
                  ),
                this.applyQuaternion(T.setFromEuler(e))
              );
            }),
          applyAxisAngle:
            ((w = new Lt()),
            function (e, t) {
              return this.applyQuaternion(w.setFromAxisAngle(e, t));
            }),
          applyMatrix3: function (e) {
            var t = this.x,
              i = this.y,
              n = this.z,
              e = e.elements;
            return (
              (this.x = e[0] * t + e[3] * i + e[6] * n),
              (this.y = e[1] * t + e[4] * i + e[7] * n),
              (this.z = e[2] * t + e[5] * i + e[8] * n),
              this
            );
          },
          applyMatrix4: function (e) {
            var t = this.x,
              i = this.y,
              n = this.z,
              r = e.elements,
              e = 1 / (r[3] * t + r[7] * i + r[11] * n + r[15]);
            return (
              (this.x = (r[0] * t + r[4] * i + r[8] * n + r[12]) * e),
              (this.y = (r[1] * t + r[5] * i + r[9] * n + r[13]) * e),
              (this.z = (r[2] * t + r[6] * i + r[10] * n + r[14]) * e),
              this
            );
          },
          applyQuaternion: function (e) {
            var t = this.x,
              i = this.y,
              n = this.z,
              r = e.x,
              o = e.y,
              a = e.z,
              s = e.w,
              l = s * t + o * n - a * i,
              c = s * i + a * t - r * n,
              e = s * n + r * i - o * t,
              n = -r * t - o * i - a * n;
            return (
              (this.x = l * s + n * -r + c * -a - e * -o),
              (this.y = c * s + n * -o + e * -r - l * -a),
              (this.z = e * s + n * -a + l * -o - c * -r),
              this
            );
          },
          project:
            ((b = new At()),
            function (e) {
              return (
                b.multiplyMatrices(
                  e.projectionMatrix,
                  b.getInverse(e.matrixWorld)
                ),
                this.applyMatrix4(b)
              );
            }),
          unproject:
            ((x = new At()),
            function (e) {
              return (
                x.multiplyMatrices(
                  e.matrixWorld,
                  x.getInverse(e.projectionMatrix)
                ),
                this.applyMatrix4(x)
              );
            }),
          transformDirection: function (e) {
            var t = this.x,
              i = this.y,
              n = this.z,
              e = e.elements;
            return (
              (this.x = e[0] * t + e[4] * i + e[8] * n),
              (this.y = e[1] * t + e[5] * i + e[9] * n),
              (this.z = e[2] * t + e[6] * i + e[10] * n),
              this.normalize()
            );
          },
          divide: function (e) {
            return (this.x /= e.x), (this.y /= e.y), (this.z /= e.z), this;
          },
          divideScalar: function (e) {
            return this.multiplyScalar(1 / e);
          },
          min: function (e) {
            return (
              (this.x = Math.min(this.x, e.x)),
              (this.y = Math.min(this.y, e.y)),
              (this.z = Math.min(this.z, e.z)),
              this
            );
          },
          max: function (e) {
            return (
              (this.x = Math.max(this.x, e.x)),
              (this.y = Math.max(this.y, e.y)),
              (this.z = Math.max(this.z, e.z)),
              this
            );
          },
          clamp: function (e, t) {
            return (
              (this.x = Math.max(e.x, Math.min(t.x, this.x))),
              (this.y = Math.max(e.y, Math.min(t.y, this.y))),
              (this.z = Math.max(e.z, Math.min(t.z, this.z))),
              this
            );
          },
          clampScalar:
            ((y = new Ct()),
            (_ = new Ct()),
            function (e, t) {
              return y.set(e, e, e), _.set(t, t, t), this.clamp(y, _);
            }),
          clampLength: function (e, t) {
            var i = this.length();
            return this.divideScalar(i || 1).multiplyScalar(
              Math.max(e, Math.min(t, i))
            );
          },
          floor: function () {
            return (
              (this.x = Math.floor(this.x)),
              (this.y = Math.floor(this.y)),
              (this.z = Math.floor(this.z)),
              this
            );
          },
          ceil: function () {
            return (
              (this.x = Math.ceil(this.x)),
              (this.y = Math.ceil(this.y)),
              (this.z = Math.ceil(this.z)),
              this
            );
          },
          round: function () {
            return (
              (this.x = Math.round(this.x)),
              (this.y = Math.round(this.y)),
              (this.z = Math.round(this.z)),
              this
            );
          },
          roundToZero: function () {
            return (
              (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
              (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
              (this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
              this
            );
          },
          negate: function () {
            return (
              (this.x = -this.x), (this.y = -this.y), (this.z = -this.z), this
            );
          },
          dot: function (e) {
            return this.x * e.x + this.y * e.y + this.z * e.z;
          },
          lengthSq: function () {
            return this.x * this.x + this.y * this.y + this.z * this.z;
          },
          length: function () {
            return Math.sqrt(
              this.x * this.x + this.y * this.y + this.z * this.z
            );
          },
          manhattanLength: function () {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
          },
          normalize: function () {
            return this.divideScalar(this.length() || 1);
          },
          setLength: function (e) {
            return this.normalize().multiplyScalar(e);
          },
          lerp: function (e, t) {
            return (
              (this.x += (e.x - this.x) * t),
              (this.y += (e.y - this.y) * t),
              (this.z += (e.z - this.z) * t),
              this
            );
          },
          lerpVectors: function (e, t, i) {
            return this.subVectors(t, e).multiplyScalar(i).add(e);
          },
          cross: function (e, t) {
            return void 0 !== t
              ? (console.warn(
                  "THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."
                ),
                this.crossVectors(e, t))
              : this.crossVectors(this, e);
          },
          crossVectors: function (e, t) {
            var i = e.x,
              n = e.y,
              r = e.z,
              o = t.x,
              e = t.y,
              t = t.z;
            return (
              (this.x = n * t - r * e),
              (this.y = r * o - i * t),
              (this.z = i * e - n * o),
              this
            );
          },
          projectOnVector: function (e) {
            var t = e.dot(this) / e.lengthSq();
            return this.copy(e).multiplyScalar(t);
          },
          projectOnPlane:
            ((v = new Ct()),
            function (e) {
              return v.copy(this).projectOnVector(e), this.sub(v);
            }),
          reflect:
            ((g = new Ct()),
            function (e) {
              return this.sub(g.copy(e).multiplyScalar(2 * this.dot(e)));
            }),
          angleTo: function (e) {
            e = this.dot(e) / Math.sqrt(this.lengthSq() * e.lengthSq());
            return Math.acos(Mt.clamp(e, -1, 1));
          },
          distanceTo: function (e) {
            return Math.sqrt(this.distanceToSquared(e));
          },
          distanceToSquared: function (e) {
            var t = this.x - e.x,
              i = this.y - e.y,
              e = this.z - e.z;
            return t * t + i * i + e * e;
          },
          manhattanDistanceTo: function (e) {
            return (
              Math.abs(this.x - e.x) +
              Math.abs(this.y - e.y) +
              Math.abs(this.z - e.z)
            );
          },
          setFromSpherical: function (e) {
            var t = Math.sin(e.phi) * e.radius;
            return (
              (this.x = t * Math.sin(e.theta)),
              (this.y = Math.cos(e.phi) * e.radius),
              (this.z = t * Math.cos(e.theta)),
              this
            );
          },
          setFromCylindrical: function (e) {
            return (
              (this.x = e.radius * Math.sin(e.theta)),
              (this.y = e.y),
              (this.z = e.radius * Math.cos(e.theta)),
              this
            );
          },
          setFromMatrixPosition: function (e) {
            e = e.elements;
            return (this.x = e[12]), (this.y = e[13]), (this.z = e[14]), this;
          },
          setFromMatrixScale: function (e) {
            var t = this.setFromMatrixColumn(e, 0).length(),
              i = this.setFromMatrixColumn(e, 1).length(),
              e = this.setFromMatrixColumn(e, 2).length();
            return (this.x = t), (this.y = i), (this.z = e), this;
          },
          setFromMatrixColumn: function (e, t) {
            return this.fromArray(e.elements, 4 * t);
          },
          equals: function (e) {
            return e.x === this.x && e.y === this.y && e.z === this.z;
          },
          fromArray: function (e, t) {
            return (
              void 0 === t && (t = 0),
              (this.x = e[t]),
              (this.y = e[t + 1]),
              (this.z = e[t + 2]),
              this
            );
          },
          toArray: function (e, t) {
            return (
              void 0 === e && (e = []),
              void 0 === t && (t = 0),
              (e[t] = this.x),
              (e[t + 1] = this.y),
              (e[t + 2] = this.z),
              e
            );
          },
          fromBufferAttribute: function (e, t, i) {
            return (
              void 0 !== i &&
                console.warn(
                  "THREE.Vector3: offset has been removed from .fromBufferAttribute()."
                ),
              (this.x = e.getX(t)),
              (this.y = e.getY(t)),
              (this.z = e.getZ(t)),
              this
            );
          },
        }),
        Object.assign(Pt.prototype, {
          isMatrix3: !0,
          set: function (e, t, i, n, r, o, a, s, l) {
            var c = this.elements;
            return (
              (c[0] = e),
              (c[1] = n),
              (c[2] = a),
              (c[3] = t),
              (c[4] = r),
              (c[5] = s),
              (c[6] = i),
              (c[7] = o),
              (c[8] = l),
              this
            );
          },
          identity: function () {
            return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
          },
          clone: function () {
            return new this.constructor().fromArray(this.elements);
          },
          copy: function (e) {
            var t = this.elements,
              e = e.elements;
            return (
              (t[0] = e[0]),
              (t[1] = e[1]),
              (t[2] = e[2]),
              (t[3] = e[3]),
              (t[4] = e[4]),
              (t[5] = e[5]),
              (t[6] = e[6]),
              (t[7] = e[7]),
              (t[8] = e[8]),
              this
            );
          },
          setFromMatrix4: function (e) {
            e = e.elements;
            return (
              this.set(e[0], e[4], e[8], e[1], e[5], e[9], e[2], e[6], e[10]),
              this
            );
          },
          applyToBufferAttribute:
            ((S = new Ct()),
            function (e) {
              for (var t = 0, i = e.count; t < i; t++)
                (S.x = e.getX(t)),
                  (S.y = e.getY(t)),
                  (S.z = e.getZ(t)),
                  S.applyMatrix3(this),
                  e.setXYZ(t, S.x, S.y, S.z);
              return e;
            }),
          multiply: function (e) {
            return this.multiplyMatrices(this, e);
          },
          premultiply: function (e) {
            return this.multiplyMatrices(e, this);
          },
          multiplyMatrices: function (e, t) {
            var i = e.elements,
              n = t.elements,
              r = this.elements,
              o = i[0],
              a = i[3],
              s = i[6],
              l = i[1],
              c = i[4],
              h = i[7],
              u = i[2],
              d = i[5],
              p = i[8],
              f = n[0],
              m = n[3],
              g = n[6],
              v = n[1],
              y = n[4],
              e = n[7],
              t = n[2],
              i = n[5],
              n = n[8];
            return (
              (r[0] = o * f + a * v + s * t),
              (r[3] = o * m + a * y + s * i),
              (r[6] = o * g + a * e + s * n),
              (r[1] = l * f + c * v + h * t),
              (r[4] = l * m + c * y + h * i),
              (r[7] = l * g + c * e + h * n),
              (r[2] = u * f + d * v + p * t),
              (r[5] = u * m + d * y + p * i),
              (r[8] = u * g + d * e + p * n),
              this
            );
          },
          multiplyScalar: function (e) {
            var t = this.elements;
            return (
              (t[0] *= e),
              (t[3] *= e),
              (t[6] *= e),
              (t[1] *= e),
              (t[4] *= e),
              (t[7] *= e),
              (t[2] *= e),
              (t[5] *= e),
              (t[8] *= e),
              this
            );
          },
          determinant: function () {
            var e = this.elements,
              t = e[0],
              i = e[1],
              n = e[2],
              r = e[3],
              o = e[4],
              a = e[5],
              s = e[6],
              l = e[7],
              e = e[8];
            return (
              t * o * e -
              t * a * l -
              i * r * e +
              i * a * s +
              n * r * l -
              n * o * s
            );
          },
          getInverse: function (e, t) {
            e &&
              e.isMatrix4 &&
              console.error(
                "THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument."
              );
            var i = e.elements,
              n = this.elements,
              r = i[0],
              o = i[1],
              a = i[2],
              s = i[3],
              l = i[4],
              c = i[5],
              h = i[6],
              u = i[7],
              d = i[8],
              p = d * l - c * u,
              f = c * h - d * s,
              m = u * s - l * h,
              e = r * p + o * f + a * m;
            if (0 == e) {
              i =
                "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
              if (!0 === t) throw new Error(i);
              return console.warn(i), this.identity();
            }
            e = 1 / e;
            return (
              (n[0] = p * e),
              (n[1] = (a * u - d * o) * e),
              (n[2] = (c * o - a * l) * e),
              (n[3] = f * e),
              (n[4] = (d * r - a * h) * e),
              (n[5] = (a * s - c * r) * e),
              (n[6] = m * e),
              (n[7] = (o * h - u * r) * e),
              (n[8] = (l * r - o * s) * e),
              this
            );
          },
          transpose: function () {
            var e = this.elements,
              t = e[1];
            return (
              (e[1] = e[3]),
              (e[3] = t),
              (t = e[2]),
              (e[2] = e[6]),
              (e[6] = t),
              (t = e[5]),
              (e[5] = e[7]),
              (e[7] = t),
              this
            );
          },
          getNormalMatrix: function (e) {
            return this.setFromMatrix4(e).getInverse(this).transpose();
          },
          transposeIntoArray: function (e) {
            var t = this.elements;
            return (
              (e[0] = t[0]),
              (e[1] = t[3]),
              (e[2] = t[6]),
              (e[3] = t[1]),
              (e[4] = t[4]),
              (e[5] = t[7]),
              (e[6] = t[2]),
              (e[7] = t[5]),
              (e[8] = t[8]),
              this
            );
          },
          setUvTransform: function (e, t, i, n, r, o, a) {
            var s = Math.cos(r),
              r = Math.sin(r);
            this.set(
              i * s,
              i * r,
              -i * (s * o + r * a) + o + e,
              -n * r,
              n * s,
              -n * (-r * o + s * a) + a + t,
              0,
              0,
              1
            );
          },
          scale: function (e, t) {
            var i = this.elements;
            return (
              (i[0] *= e),
              (i[3] *= e),
              (i[6] *= e),
              (i[1] *= t),
              (i[4] *= t),
              (i[7] *= t),
              this
            );
          },
          rotate: function (e) {
            var t = Math.cos(e),
              i = Math.sin(e),
              n = this.elements,
              r = n[0],
              o = n[3],
              a = n[6],
              s = n[1],
              l = n[4],
              e = n[7];
            return (
              (n[0] = t * r + i * s),
              (n[3] = t * o + i * l),
              (n[6] = t * a + i * e),
              (n[1] = -i * r + t * s),
              (n[4] = -i * o + t * l),
              (n[7] = -i * a + t * e),
              this
            );
          },
          translate: function (e, t) {
            var i = this.elements;
            return (
              (i[0] += e * i[2]),
              (i[3] += e * i[5]),
              (i[6] += e * i[8]),
              (i[1] += t * i[2]),
              (i[4] += t * i[5]),
              (i[7] += t * i[8]),
              this
            );
          },
          equals: function (e) {
            for (var t = this.elements, i = e.elements, n = 0; n < 9; n++)
              if (t[n] !== i[n]) return !1;
            return !0;
          },
          fromArray: function (e, t) {
            void 0 === t && (t = 0);
            for (var i = 0; i < 9; i++) this.elements[i] = e[i + t];
            return this;
          },
          toArray: function (e, t) {
            void 0 === e && (e = []), void 0 === t && (t = 0);
            var i = this.elements;
            return (
              (e[t] = i[0]),
              (e[t + 1] = i[1]),
              (e[t + 2] = i[2]),
              (e[t + 3] = i[3]),
              (e[t + 4] = i[4]),
              (e[t + 5] = i[5]),
              (e[t + 6] = i[6]),
              (e[t + 7] = i[7]),
              (e[t + 8] = i[8]),
              e
            );
          },
        });
      var Rt,
        Ot,
        It = 0;
      function Dt(e, t, i, n, r, o, a, s, l, c) {
        Object.defineProperty(this, "id", { value: It++ }),
          (this.uuid = Mt.generateUUID()),
          (this.name = ""),
          (this.image = void 0 !== e ? e : Dt.DEFAULT_IMAGE),
          (this.mipmaps = []),
          (this.mapping = void 0 !== t ? t : Dt.DEFAULT_MAPPING),
          (this.wrapS = void 0 !== i ? i : Me),
          (this.wrapT = void 0 !== n ? n : Me),
          (this.magFilter = void 0 !== r ? r : Oe),
          (this.minFilter = void 0 !== o ? o : De),
          (this.anisotropy = void 0 !== l ? l : 1),
          (this.format = void 0 !== a ? a : Qe),
          (this.type = void 0 !== s ? s : Ne),
          (this.offset = new Et(0, 0)),
          (this.repeat = new Et(1, 1)),
          (this.center = new Et(0, 0)),
          (this.rotation = 0),
          (this.matrixAutoUpdate = !0),
          (this.matrix = new Pt()),
          (this.generateMipmaps = !0),
          (this.premultiplyAlpha = !1),
          (this.flipY = !0),
          (this.unpackAlignment = 4),
          (this.encoding = void 0 !== c ? c : gt),
          (this.version = 0),
          (this.onUpdate = null);
      }
      function Nt(e, t, i, n) {
        (this.x = e || 0),
          (this.y = t || 0),
          (this.z = i || 0),
          (this.w = void 0 !== n ? n : 1);
      }
      function Ft(e, t, i) {
        (this.uuid = Mt.generateUUID()),
          (this.width = e),
          (this.height = t),
          (this.scissor = new Nt(0, 0, e, t)),
          (this.scissorTest = !1),
          (this.viewport = new Nt(0, 0, e, t)),
          void 0 === (i = i || {}).minFilter && (i.minFilter = Oe),
          (this.texture = new Dt(
            void 0,
            void 0,
            i.wrapS,
            i.wrapT,
            i.magFilter,
            i.minFilter,
            i.format,
            i.type,
            i.anisotropy,
            i.encoding
          )),
          (this.depthBuffer = void 0 === i.depthBuffer || i.depthBuffer),
          (this.stencilBuffer = void 0 === i.stencilBuffer || i.stencilBuffer),
          (this.depthTexture =
            void 0 !== i.depthTexture ? i.depthTexture : null);
      }
      function kt(e, t, i) {
        Ft.call(this, e, t, i),
          (this.activeCubeFace = 0),
          (this.activeMipMapLevel = 0);
      }
      function Ut(e, t, i, n, r, o, a, s, l, c, h, u) {
        Dt.call(this, null, o, a, s, l, c, n, r, h, u),
          (this.image = { data: e, width: t, height: i }),
          (this.magFilter = void 0 !== l ? l : Ce),
          (this.minFilter = void 0 !== c ? c : Ce),
          (this.generateMipmaps = !1),
          (this.flipY = !1),
          (this.unpackAlignment = 1);
      }
      function Bt(e, t, i, n, r, o, a, s, l, c) {
        Dt.call(
          this,
          (e = void 0 !== e ? e : []),
          (t = void 0 !== t ? t : ve),
          i,
          n,
          r,
          o,
          a,
          s,
          l,
          c
        ),
          (this.flipY = !1);
      }
      (Dt.DEFAULT_IMAGE = void 0),
        (Dt.DEFAULT_MAPPING = 300),
        Object.defineProperty(Dt.prototype, "needsUpdate", {
          set: function (e) {
            !0 === e && this.version++;
          },
        }),
        Object.assign(Dt.prototype, t.prototype, {
          constructor: Dt,
          isTexture: !0,
          clone: function () {
            return new this.constructor().copy(this);
          },
          copy: function (e) {
            return (
              (this.name = e.name),
              (this.image = e.image),
              (this.mipmaps = e.mipmaps.slice(0)),
              (this.mapping = e.mapping),
              (this.wrapS = e.wrapS),
              (this.wrapT = e.wrapT),
              (this.magFilter = e.magFilter),
              (this.minFilter = e.minFilter),
              (this.anisotropy = e.anisotropy),
              (this.format = e.format),
              (this.type = e.type),
              this.offset.copy(e.offset),
              this.repeat.copy(e.repeat),
              this.center.copy(e.center),
              (this.rotation = e.rotation),
              (this.matrixAutoUpdate = e.matrixAutoUpdate),
              this.matrix.copy(e.matrix),
              (this.generateMipmaps = e.generateMipmaps),
              (this.premultiplyAlpha = e.premultiplyAlpha),
              (this.flipY = e.flipY),
              (this.unpackAlignment = e.unpackAlignment),
              (this.encoding = e.encoding),
              this
            );
          },
          toJSON: function (e) {
            var t = void 0 === e || "string" == typeof e;
            if (!t && void 0 !== e.textures[this.uuid])
              return e.textures[this.uuid];
            var i,
              n,
              r,
              o,
              a = {
                metadata: {
                  version: 4.5,
                  type: "Texture",
                  generator: "Texture.toJSON",
                },
                uuid: this.uuid,
                name: this.name,
                mapping: this.mapping,
                repeat: [this.repeat.x, this.repeat.y],
                offset: [this.offset.x, this.offset.y],
                center: [this.center.x, this.center.y],
                rotation: this.rotation,
                wrap: [this.wrapS, this.wrapT],
                minFilter: this.minFilter,
                magFilter: this.magFilter,
                anisotropy: this.anisotropy,
                flipY: this.flipY,
              };
            return (
              void 0 !== this.image &&
                (void 0 === (i = this.image).uuid &&
                  (i.uuid = Mt.generateUUID()),
                t ||
                  void 0 !== e.images[i.uuid] ||
                  (e.images[i.uuid] = {
                    uuid: i.uuid,
                    url:
                      ((n = i) instanceof HTMLCanvasElement
                        ? (r = n)
                        : (((r = document.createElementNS(
                            "http://www.w3.org/1999/xhtml",
                            "canvas"
                          )).width = n.width),
                          (r.height = n.height),
                          (o = r.getContext("2d")),
                          n instanceof ImageData
                            ? o.putImageData(n, 0, 0)
                            : o.drawImage(n, 0, 0, n.width, n.height)),
                      2048 < r.width || 2048 < r.height
                        ? r.toDataURL("image/jpeg", 0.6)
                        : r.toDataURL("image/png")),
                  }),
                (a.image = i.uuid)),
              t || (e.textures[this.uuid] = a),
              a
            );
          },
          dispose: function () {
            this.dispatchEvent({ type: "dispose" });
          },
          transformUv: function (e) {
            if (300 === this.mapping) {
              if ((e.applyMatrix3(this.matrix), e.x < 0 || 1 < e.x))
                switch (this.wrapS) {
                  case Se:
                    e.x = e.x - Math.floor(e.x);
                    break;
                  case Me:
                    e.x = e.x < 0 ? 0 : 1;
                    break;
                  case Ee:
                    1 === Math.abs(Math.floor(e.x) % 2)
                      ? (e.x = Math.ceil(e.x) - e.x)
                      : (e.x = e.x - Math.floor(e.x));
                }
              if (e.y < 0 || 1 < e.y)
                switch (this.wrapT) {
                  case Se:
                    e.y = e.y - Math.floor(e.y);
                    break;
                  case Me:
                    e.y = e.y < 0 ? 0 : 1;
                    break;
                  case Ee:
                    1 === Math.abs(Math.floor(e.y) % 2)
                      ? (e.y = Math.ceil(e.y) - e.y)
                      : (e.y = e.y - Math.floor(e.y));
                }
              this.flipY && (e.y = 1 - e.y);
            }
          },
        }),
        Object.assign(Nt.prototype, {
          isVector4: !0,
          set: function (e, t, i, n) {
            return (this.x = e), (this.y = t), (this.z = i), (this.w = n), this;
          },
          setScalar: function (e) {
            return (this.x = e), (this.y = e), (this.z = e), (this.w = e), this;
          },
          setX: function (e) {
            return (this.x = e), this;
          },
          setY: function (e) {
            return (this.y = e), this;
          },
          setZ: function (e) {
            return (this.z = e), this;
          },
          setW: function (e) {
            return (this.w = e), this;
          },
          setComponent: function (e, t) {
            switch (e) {
              case 0:
                this.x = t;
                break;
              case 1:
                this.y = t;
                break;
              case 2:
                this.z = t;
                break;
              case 3:
                this.w = t;
                break;
              default:
                throw new Error("index is out of range: " + e);
            }
            return this;
          },
          getComponent: function (e) {
            switch (e) {
              case 0:
                return this.x;
              case 1:
                return this.y;
              case 2:
                return this.z;
              case 3:
                return this.w;
              default:
                throw new Error("index is out of range: " + e);
            }
          },
          clone: function () {
            return new this.constructor(this.x, this.y, this.z, this.w);
          },
          copy: function (e) {
            return (
              (this.x = e.x),
              (this.y = e.y),
              (this.z = e.z),
              (this.w = void 0 !== e.w ? e.w : 1),
              this
            );
          },
          add: function (e, t) {
            return void 0 !== t
              ? (console.warn(
                  "THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."
                ),
                this.addVectors(e, t))
              : ((this.x += e.x),
                (this.y += e.y),
                (this.z += e.z),
                (this.w += e.w),
                this);
          },
          addScalar: function (e) {
            return (
              (this.x += e), (this.y += e), (this.z += e), (this.w += e), this
            );
          },
          addVectors: function (e, t) {
            return (
              (this.x = e.x + t.x),
              (this.y = e.y + t.y),
              (this.z = e.z + t.z),
              (this.w = e.w + t.w),
              this
            );
          },
          addScaledVector: function (e, t) {
            return (
              (this.x += e.x * t),
              (this.y += e.y * t),
              (this.z += e.z * t),
              (this.w += e.w * t),
              this
            );
          },
          sub: function (e, t) {
            return void 0 !== t
              ? (console.warn(
                  "THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."
                ),
                this.subVectors(e, t))
              : ((this.x -= e.x),
                (this.y -= e.y),
                (this.z -= e.z),
                (this.w -= e.w),
                this);
          },
          subScalar: function (e) {
            return (
              (this.x -= e), (this.y -= e), (this.z -= e), (this.w -= e), this
            );
          },
          subVectors: function (e, t) {
            return (
              (this.x = e.x - t.x),
              (this.y = e.y - t.y),
              (this.z = e.z - t.z),
              (this.w = e.w - t.w),
              this
            );
          },
          multiplyScalar: function (e) {
            return (
              (this.x *= e), (this.y *= e), (this.z *= e), (this.w *= e), this
            );
          },
          applyMatrix4: function (e) {
            var t = this.x,
              i = this.y,
              n = this.z,
              r = this.w,
              e = e.elements;
            return (
              (this.x = e[0] * t + e[4] * i + e[8] * n + e[12] * r),
              (this.y = e[1] * t + e[5] * i + e[9] * n + e[13] * r),
              (this.z = e[2] * t + e[6] * i + e[10] * n + e[14] * r),
              (this.w = e[3] * t + e[7] * i + e[11] * n + e[15] * r),
              this
            );
          },
          divideScalar: function (e) {
            return this.multiplyScalar(1 / e);
          },
          setAxisAngleFromQuaternion: function (e) {
            this.w = 2 * Math.acos(e.w);
            var t = Math.sqrt(1 - e.w * e.w);
            return (
              t < 1e-4
                ? ((this.x = 1), (this.y = 0), (this.z = 0))
                : ((this.x = e.x / t), (this.y = e.y / t), (this.z = e.z / t)),
              this
            );
          },
          setAxisAngleFromRotationMatrix: function (e) {
            var t,
              i,
              n,
              r = e.elements,
              o = r[0],
              a = r[4],
              s = r[8],
              l = r[1],
              c = r[5],
              h = r[9],
              u = r[2],
              d = r[6],
              p = r[10];
            if (
              Math.abs(a - l) < 0.01 &&
              Math.abs(s - u) < 0.01 &&
              Math.abs(h - d) < 0.01
            ) {
              if (
                Math.abs(a + l) < 0.1 &&
                Math.abs(s + u) < 0.1 &&
                Math.abs(h + d) < 0.1 &&
                Math.abs(o + c + p - 3) < 0.1
              )
                return this.set(1, 0, 0, 0), this;
              y = Math.PI;
              var f = (o + 1) / 2,
                m = (c + 1) / 2,
                g = (p + 1) / 2,
                v = (a + l) / 4,
                e = (s + u) / 4,
                r = (h + d) / 4;
              return (
                m < f && g < f
                  ? (n =
                      f < 0.01
                        ? ((t = 0), (i = 0.707106781))
                        : ((i = v / (t = Math.sqrt(f))), e / t))
                  : g < m
                  ? (n =
                      m < 0.01
                        ? ((i = 0), (t = 0.707106781))
                        : ((t = v / (i = Math.sqrt(m))), r / i))
                  : g < 0.01
                  ? ((i = t = 0.707106781), (n = 0))
                  : ((t = e / (n = Math.sqrt(g))), (i = r / n)),
                this.set(t, i, n, y),
                this
              );
            }
            var y = Math.sqrt(
              (d - h) * (d - h) + (s - u) * (s - u) + (l - a) * (l - a)
            );
            return (
              Math.abs(y) < 0.001 && (y = 1),
              (this.x = (d - h) / y),
              (this.y = (s - u) / y),
              (this.z = (l - a) / y),
              (this.w = Math.acos((o + c + p - 1) / 2)),
              this
            );
          },
          min: function (e) {
            return (
              (this.x = Math.min(this.x, e.x)),
              (this.y = Math.min(this.y, e.y)),
              (this.z = Math.min(this.z, e.z)),
              (this.w = Math.min(this.w, e.w)),
              this
            );
          },
          max: function (e) {
            return (
              (this.x = Math.max(this.x, e.x)),
              (this.y = Math.max(this.y, e.y)),
              (this.z = Math.max(this.z, e.z)),
              (this.w = Math.max(this.w, e.w)),
              this
            );
          },
          clamp: function (e, t) {
            return (
              (this.x = Math.max(e.x, Math.min(t.x, this.x))),
              (this.y = Math.max(e.y, Math.min(t.y, this.y))),
              (this.z = Math.max(e.z, Math.min(t.z, this.z))),
              (this.w = Math.max(e.w, Math.min(t.w, this.w))),
              this
            );
          },
          clampScalar: function (e, t) {
            return (
              void 0 === Rt && ((Rt = new Nt()), (Ot = new Nt())),
              Rt.set(e, e, e, e),
              Ot.set(t, t, t, t),
              this.clamp(Rt, Ot)
            );
          },
          clampLength: function (e, t) {
            var i = this.length();
            return this.divideScalar(i || 1).multiplyScalar(
              Math.max(e, Math.min(t, i))
            );
          },
          floor: function () {
            return (
              (this.x = Math.floor(this.x)),
              (this.y = Math.floor(this.y)),
              (this.z = Math.floor(this.z)),
              (this.w = Math.floor(this.w)),
              this
            );
          },
          ceil: function () {
            return (
              (this.x = Math.ceil(this.x)),
              (this.y = Math.ceil(this.y)),
              (this.z = Math.ceil(this.z)),
              (this.w = Math.ceil(this.w)),
              this
            );
          },
          round: function () {
            return (
              (this.x = Math.round(this.x)),
              (this.y = Math.round(this.y)),
              (this.z = Math.round(this.z)),
              (this.w = Math.round(this.w)),
              this
            );
          },
          roundToZero: function () {
            return (
              (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
              (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
              (this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
              (this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w)),
              this
            );
          },
          negate: function () {
            return (
              (this.x = -this.x),
              (this.y = -this.y),
              (this.z = -this.z),
              (this.w = -this.w),
              this
            );
          },
          dot: function (e) {
            return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
          },
          lengthSq: function () {
            return (
              this.x * this.x +
              this.y * this.y +
              this.z * this.z +
              this.w * this.w
            );
          },
          length: function () {
            return Math.sqrt(
              this.x * this.x +
                this.y * this.y +
                this.z * this.z +
                this.w * this.w
            );
          },
          manhattanLength: function () {
            return (
              Math.abs(this.x) +
              Math.abs(this.y) +
              Math.abs(this.z) +
              Math.abs(this.w)
            );
          },
          normalize: function () {
            return this.divideScalar(this.length() || 1);
          },
          setLength: function (e) {
            return this.normalize().multiplyScalar(e);
          },
          lerp: function (e, t) {
            return (
              (this.x += (e.x - this.x) * t),
              (this.y += (e.y - this.y) * t),
              (this.z += (e.z - this.z) * t),
              (this.w += (e.w - this.w) * t),
              this
            );
          },
          lerpVectors: function (e, t, i) {
            return this.subVectors(t, e).multiplyScalar(i).add(e);
          },
          equals: function (e) {
            return (
              e.x === this.x &&
              e.y === this.y &&
              e.z === this.z &&
              e.w === this.w
            );
          },
          fromArray: function (e, t) {
            return (
              void 0 === t && (t = 0),
              (this.x = e[t]),
              (this.y = e[t + 1]),
              (this.z = e[t + 2]),
              (this.w = e[t + 3]),
              this
            );
          },
          toArray: function (e, t) {
            return (
              void 0 === e && (e = []),
              void 0 === t && (t = 0),
              (e[t] = this.x),
              (e[t + 1] = this.y),
              (e[t + 2] = this.z),
              (e[t + 3] = this.w),
              e
            );
          },
          fromBufferAttribute: function (e, t, i) {
            return (
              void 0 !== i &&
                console.warn(
                  "THREE.Vector4: offset has been removed from .fromBufferAttribute()."
                ),
              (this.x = e.getX(t)),
              (this.y = e.getY(t)),
              (this.z = e.getZ(t)),
              (this.w = e.getW(t)),
              this
            );
          },
        }),
        Object.assign(Ft.prototype, t.prototype, {
          isWebGLRenderTarget: !0,
          setSize: function (e, t) {
            (this.width === e && this.height === t) ||
              ((this.width = e), (this.height = t), this.dispose()),
              this.viewport.set(0, 0, e, t),
              this.scissor.set(0, 0, e, t);
          },
          clone: function () {
            return new this.constructor().copy(this);
          },
          copy: function (e) {
            return (
              (this.width = e.width),
              (this.height = e.height),
              this.viewport.copy(e.viewport),
              (this.texture = e.texture.clone()),
              (this.depthBuffer = e.depthBuffer),
              (this.stencilBuffer = e.stencilBuffer),
              (this.depthTexture = e.depthTexture),
              this
            );
          },
          dispose: function () {
            this.dispatchEvent({ type: "dispose" });
          },
        }),
        (((kt.prototype = Object.create(Ft.prototype)).constructor =
          kt).prototype.isWebGLRenderTargetCube = !0),
        (((Ut.prototype = Object.create(Dt.prototype)).constructor =
          Ut).prototype.isDataTexture = !0),
        (((Bt.prototype = Object.create(Dt.prototype)).constructor =
          Bt).prototype.isCubeTexture = !0),
        Object.defineProperty(Bt.prototype, "images", {
          get: function () {
            return this.image;
          },
          set: function (e) {
            this.image = e;
          },
        });
      var zt = new Dt(),
        jt = new Bt();
      function Ht() {
        (this.seq = []), (this.map = {});
      }
      var Gt = [],
        Vt = [],
        Wt = new Float32Array(16),
        Xt = new Float32Array(9);
      function qt(e, t, i) {
        var n = e[0];
        if (n <= 0 || 0 < n) return e;
        var r = t * i,
          o = Gt[r];
        if (
          (void 0 === o && ((o = new Float32Array(r)), (Gt[r] = o)), 0 !== t)
        ) {
          n.toArray(o, 0);
          for (var a = 1, s = 0; a !== t; ++a) (s += i), e[a].toArray(o, s);
        }
        return o;
      }
      function Yt(e, t) {
        var i = Vt[t];
        void 0 === i && ((i = new Int32Array(t)), (Vt[t] = i));
        for (var n = 0; n !== t; ++n) i[n] = e.allocTextureUnit();
        return i;
      }
      function Qt(e, t) {
        e.uniform1f(this.addr, t);
      }
      function Zt(e, t) {
        e.uniform1i(this.addr, t);
      }
      function Jt(e, t) {
        void 0 === t.x
          ? e.uniform2fv(this.addr, t)
          : e.uniform2f(this.addr, t.x, t.y);
      }
      function $t(e, t) {
        void 0 !== t.x
          ? e.uniform3f(this.addr, t.x, t.y, t.z)
          : void 0 !== t.r
          ? e.uniform3f(this.addr, t.r, t.g, t.b)
          : e.uniform3fv(this.addr, t);
      }
      function Kt(e, t) {
        void 0 === t.x
          ? e.uniform4fv(this.addr, t)
          : e.uniform4f(this.addr, t.x, t.y, t.z, t.w);
      }
      function ei(e, t) {
        e.uniformMatrix2fv(this.addr, !1, t.elements || t);
      }
      function ti(e, t) {
        void 0 === t.elements
          ? e.uniformMatrix3fv(this.addr, !1, t)
          : (Xt.set(t.elements), e.uniformMatrix3fv(this.addr, !1, Xt));
      }
      function ii(e, t) {
        void 0 === t.elements
          ? e.uniformMatrix4fv(this.addr, !1, t)
          : (Wt.set(t.elements), e.uniformMatrix4fv(this.addr, !1, Wt));
      }
      function ni(e, t, i) {
        var n = i.allocTextureUnit();
        e.uniform1i(this.addr, n), i.setTexture2D(t || zt, n);
      }
      function ri(e, t, i) {
        var n = i.allocTextureUnit();
        e.uniform1i(this.addr, n), i.setTextureCube(t || jt, n);
      }
      function oi(e, t) {
        e.uniform2iv(this.addr, t);
      }
      function ai(e, t) {
        e.uniform3iv(this.addr, t);
      }
      function si(e, t) {
        e.uniform4iv(this.addr, t);
      }
      function li(e, t) {
        e.uniform1fv(this.addr, t);
      }
      function ci(e, t) {
        e.uniform1iv(this.addr, t);
      }
      function hi(e, t) {
        e.uniform2fv(this.addr, qt(t, this.size, 2));
      }
      function ui(e, t) {
        e.uniform3fv(this.addr, qt(t, this.size, 3));
      }
      function di(e, t) {
        e.uniform4fv(this.addr, qt(t, this.size, 4));
      }
      function pi(e, t) {
        e.uniformMatrix2fv(this.addr, !1, qt(t, this.size, 4));
      }
      function fi(e, t) {
        e.uniformMatrix3fv(this.addr, !1, qt(t, this.size, 9));
      }
      function mi(e, t) {
        e.uniformMatrix4fv(this.addr, !1, qt(t, this.size, 16));
      }
      function gi(e, t, i) {
        var n = t.length,
          r = Yt(i, n);
        e.uniform1iv(this.addr, r);
        for (var o = 0; o !== n; ++o) i.setTexture2D(t[o] || zt, r[o]);
      }
      function vi(e, t, i) {
        var n = t.length,
          r = Yt(i, n);
        e.uniform1iv(this.addr, r);
        for (var o = 0; o !== n; ++o) i.setTextureCube(t[o] || jt, r[o]);
      }
      function yi(e, t, i) {
        (this.id = e),
          (this.addr = i),
          (this.setValue = (function (e) {
            switch (e) {
              case 5126:
                return Qt;
              case 35664:
                return Jt;
              case 35665:
                return $t;
              case 35666:
                return Kt;
              case 35674:
                return ei;
              case 35675:
                return ti;
              case 35676:
                return ii;
              case 35678:
              case 36198:
                return ni;
              case 35680:
                return ri;
              case 5124:
              case 35670:
                return Zt;
              case 35667:
              case 35671:
                return oi;
              case 35668:
              case 35672:
                return ai;
              case 35669:
              case 35673:
                return si;
            }
          })(t.type));
      }
      function _i(e, t, i) {
        (this.id = e),
          (this.addr = i),
          (this.size = t.size),
          (this.setValue = (function (e) {
            switch (e) {
              case 5126:
                return li;
              case 35664:
                return hi;
              case 35665:
                return ui;
              case 35666:
                return di;
              case 35674:
                return pi;
              case 35675:
                return fi;
              case 35676:
                return mi;
              case 35678:
                return gi;
              case 35680:
                return vi;
              case 5124:
              case 35670:
                return ci;
              case 35667:
              case 35671:
                return oi;
              case 35668:
              case 35672:
                return ai;
              case 35669:
              case 35673:
                return si;
            }
          })(t.type));
      }
      function xi(e) {
        (this.id = e), Ht.call(this);
      }
      xi.prototype.setValue = function (e, t) {
        for (var i = this.seq, n = 0, r = i.length; n !== r; ++n) {
          var o = i[n];
          o.setValue(e, t[o.id]);
        }
      };
      var bi = /([\w\d_]+)(\])?(\[|\.)?/g;
      function wi(e, t) {
        e.seq.push(t), (e.map[t.id] = t);
      }
      function Ti(e, t, i) {
        Ht.call(this), (this.renderer = i);
        for (
          var n = e.getProgramParameter(t, e.ACTIVE_UNIFORMS), r = 0;
          r < n;
          ++r
        ) {
          var o = e.getActiveUniform(t, r),
            a = o.name;
          !(function (e, t, i) {
            var n = e.name,
              r = n.length;
            for (bi.lastIndex = 0; ; ) {
              var o = bi.exec(n),
                a = bi.lastIndex,
                s = o[1],
                l = "]" === o[2],
                o = o[3];
              if ((l && (s |= 0), void 0 === o || ("[" === o && a + 2 === r))) {
                wi(i, new (void 0 === o ? yi : _i)(s, e, t));
                break;
              }
              o = i.map[s];
              void 0 === o && wi(i, (o = new xi(s))), (i = o);
            }
          })(o, e.getUniformLocation(t, a), this);
        }
      }
      (Ti.prototype.setValue = function (e, t, i) {
        t = this.map[t];
        void 0 !== t && t.setValue(e, i, this.renderer);
      }),
        (Ti.prototype.setOptional = function (e, t, i) {
          t = t[i];
          void 0 !== t && this.setValue(e, i, t);
        }),
        (Ti.upload = function (e, t, i, n) {
          for (var r = 0, o = t.length; r !== o; ++r) {
            var a = t[r],
              s = i[a.id];
            !1 !== s.needsUpdate && a.setValue(e, s.value, n);
          }
        }),
        (Ti.seqWithValue = function (e, t) {
          for (var i = [], n = 0, r = e.length; n !== r; ++n) {
            var o = e[n];
            o.id in t && i.push(o);
          }
          return i;
        });
      var Si = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074,
      };
      function Mi(e, t, i) {
        return void 0 === t && void 0 === i
          ? this.set(e)
          : this.setRGB(e, t, i);
      }
      function Ei(e, t, i) {
        return (
          i < 0 && (i += 1),
          1 < i && --i,
          i < 1 / 6
            ? e + 6 * (t - e) * i
            : i < 0.5
            ? t
            : i < 2 / 3
            ? e + 6 * (t - e) * (2 / 3 - i)
            : e
        );
      }
      Object.assign(Mi.prototype, {
        isColor: !0,
        r: 1,
        g: 1,
        b: 1,
        set: function (e) {
          return (
            e && e.isColor
              ? this.copy(e)
              : "number" == typeof e
              ? this.setHex(e)
              : "string" == typeof e && this.setStyle(e),
            this
          );
        },
        setScalar: function (e) {
          return (this.r = e), (this.g = e), (this.b = e), this;
        },
        setHex: function (e) {
          return (
            (e = Math.floor(e)),
            (this.r = ((e >> 16) & 255) / 255),
            (this.g = ((e >> 8) & 255) / 255),
            (this.b = (255 & e) / 255),
            this
          );
        },
        setRGB: function (e, t, i) {
          return (this.r = e), (this.g = t), (this.b = i), this;
        },
        setHSL: function (e, t, i) {
          return (
            (e = Mt.euclideanModulo(e, 1)),
            (t = Mt.clamp(t, 0, 1)),
            (i = Mt.clamp(i, 0, 1)),
            0 === t
              ? (this.r = this.g = this.b = i)
              : ((t = 2 * i - (i = i <= 0.5 ? i * (1 + t) : i + t - i * t)),
                (this.r = Ei(t, i, e + 1 / 3)),
                (this.g = Ei(t, i, e)),
                (this.b = Ei(t, i, e - 1 / 3))),
            this
          );
        },
        setStyle: function (t) {
          function e(e) {
            void 0 !== e &&
              parseFloat(e) < 1 &&
              console.warn(
                "THREE.Color: Alpha component of " + t + " will be ignored."
              );
          }
          if ((c = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t))) {
            var i,
              n = c[1],
              r = c[2];
            switch (n) {
              case "rgb":
              case "rgba":
                if (
                  (i =
                    /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
                      r
                    ))
                )
                  return (
                    (this.r = Math.min(255, parseInt(i[1], 10)) / 255),
                    (this.g = Math.min(255, parseInt(i[2], 10)) / 255),
                    (this.b = Math.min(255, parseInt(i[3], 10)) / 255),
                    e(i[5]),
                    this
                  );
                if (
                  (i =
                    /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
                      r
                    ))
                )
                  return (
                    (this.r = Math.min(100, parseInt(i[1], 10)) / 100),
                    (this.g = Math.min(100, parseInt(i[2], 10)) / 100),
                    (this.b = Math.min(100, parseInt(i[3], 10)) / 100),
                    e(i[5]),
                    this
                  );
                break;
              case "hsl":
              case "hsla":
                if (
                  (i =
                    /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
                      r
                    ))
                ) {
                  var o = parseFloat(i[1]) / 360,
                    a = parseInt(i[2], 10) / 100,
                    s = parseInt(i[3], 10) / 100;
                  return e(i[5]), this.setHSL(o, a, s);
                }
            }
          } else if ((c = /^\#([A-Fa-f0-9]+)$/.exec(t))) {
            var l,
              c = (l = c[1]).length;
            if (3 === c)
              return (
                (this.r = parseInt(l.charAt(0) + l.charAt(0), 16) / 255),
                (this.g = parseInt(l.charAt(1) + l.charAt(1), 16) / 255),
                (this.b = parseInt(l.charAt(2) + l.charAt(2), 16) / 255),
                this
              );
            if (6 === c)
              return (
                (this.r = parseInt(l.charAt(0) + l.charAt(1), 16) / 255),
                (this.g = parseInt(l.charAt(2) + l.charAt(3), 16) / 255),
                (this.b = parseInt(l.charAt(4) + l.charAt(5), 16) / 255),
                this
              );
          }
          return (
            t &&
              0 < t.length &&
              (void 0 !== (l = Si[t])
                ? this.setHex(l)
                : console.warn("THREE.Color: Unknown color " + t)),
            this
          );
        },
        clone: function () {
          return new this.constructor(this.r, this.g, this.b);
        },
        copy: function (e) {
          return (this.r = e.r), (this.g = e.g), (this.b = e.b), this;
        },
        copyGammaToLinear: function (e, t) {
          return (
            void 0 === t && (t = 2),
            (this.r = Math.pow(e.r, t)),
            (this.g = Math.pow(e.g, t)),
            (this.b = Math.pow(e.b, t)),
            this
          );
        },
        copyLinearToGamma: function (e, t) {
          void 0 === t && (t = 2);
          t = 0 < t ? 1 / t : 1;
          return (
            (this.r = Math.pow(e.r, t)),
            (this.g = Math.pow(e.g, t)),
            (this.b = Math.pow(e.b, t)),
            this
          );
        },
        convertGammaToLinear: function () {
          var e = this.r,
            t = this.g,
            i = this.b;
          return (this.r = e * e), (this.g = t * t), (this.b = i * i), this;
        },
        convertLinearToGamma: function () {
          return (
            (this.r = Math.sqrt(this.r)),
            (this.g = Math.sqrt(this.g)),
            (this.b = Math.sqrt(this.b)),
            this
          );
        },
        getHex: function () {
          return (
            ((255 * this.r) << 16) ^
            ((255 * this.g) << 8) ^
            ((255 * this.b) << 0)
          );
        },
        getHexString: function () {
          return ("000000" + this.getHex().toString(16)).slice(-6);
        },
        getHSL: function (e) {
          var t,
            i = e || { h: 0, s: 0, l: 0 },
            n = this.r,
            r = this.g,
            o = this.b,
            a = Math.max(n, r, o),
            s = Math.min(n, r, o),
            e = (s + a) / 2;
          if (s === a) c = t = 0;
          else {
            var l = a - s,
              c = e <= 0.5 ? l / (a + s) : l / (2 - a - s);
            switch (a) {
              case n:
                t = (r - o) / l + (r < o ? 6 : 0);
                break;
              case r:
                t = (o - n) / l + 2;
                break;
              case o:
                t = (n - r) / l + 4;
            }
            t /= 6;
          }
          return (i.h = t), (i.s = c), (i.l = e), i;
        },
        getStyle: function () {
          return (
            "rgb(" +
            ((255 * this.r) | 0) +
            "," +
            ((255 * this.g) | 0) +
            "," +
            ((255 * this.b) | 0) +
            ")"
          );
        },
        offsetHSL: function (e, t, i) {
          var n = this.getHSL();
          return (
            (n.h += e), (n.s += t), (n.l += i), this.setHSL(n.h, n.s, n.l), this
          );
        },
        add: function (e) {
          return (this.r += e.r), (this.g += e.g), (this.b += e.b), this;
        },
        addColors: function (e, t) {
          return (
            (this.r = e.r + t.r),
            (this.g = e.g + t.g),
            (this.b = e.b + t.b),
            this
          );
        },
        addScalar: function (e) {
          return (this.r += e), (this.g += e), (this.b += e), this;
        },
        sub: function (e) {
          return (
            (this.r = Math.max(0, this.r - e.r)),
            (this.g = Math.max(0, this.g - e.g)),
            (this.b = Math.max(0, this.b - e.b)),
            this
          );
        },
        multiply: function (e) {
          return (this.r *= e.r), (this.g *= e.g), (this.b *= e.b), this;
        },
        multiplyScalar: function (e) {
          return (this.r *= e), (this.g *= e), (this.b *= e), this;
        },
        lerp: function (e, t) {
          return (
            (this.r += (e.r - this.r) * t),
            (this.g += (e.g - this.g) * t),
            (this.b += (e.b - this.b) * t),
            this
          );
        },
        equals: function (e) {
          return e.r === this.r && e.g === this.g && e.b === this.b;
        },
        fromArray: function (e, t) {
          return (
            void 0 === t && (t = 0),
            (this.r = e[t]),
            (this.g = e[t + 1]),
            (this.b = e[t + 2]),
            this
          );
        },
        toArray: function (e, t) {
          return (
            void 0 === e && (e = []),
            void 0 === t && (t = 0),
            (e[t] = this.r),
            (e[t + 1] = this.g),
            (e[t + 2] = this.b),
            e
          );
        },
        toJSON: function () {
          return this.getHex();
        },
      });
      var Ai,
        Li,
        Ci = {
          common: {
            diffuse: { value: new Mi(15658734) },
            opacity: { value: 1 },
            map: { value: null },
            uvTransform: { value: new Pt() },
            alphaMap: { value: null },
          },
          specularmap: { specularMap: { value: null } },
          envmap: {
            envMap: { value: null },
            flipEnvMap: { value: -1 },
            reflectivity: { value: 1 },
            refractionRatio: { value: 0.98 },
          },
          aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } },
          lightmap: {
            lightMap: { value: null },
            lightMapIntensity: { value: 1 },
          },
          emissivemap: { emissiveMap: { value: null } },
          bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } },
          normalmap: {
            normalMap: { value: null },
            normalScale: { value: new Et(1, 1) },
          },
          displacementmap: {
            displacementMap: { value: null },
            displacementScale: { value: 1 },
            displacementBias: { value: 0 },
          },
          roughnessmap: { roughnessMap: { value: null } },
          metalnessmap: { metalnessMap: { value: null } },
          gradientmap: { gradientMap: { value: null } },
          fog: {
            fogDensity: { value: 25e-5 },
            fogNear: { value: 1 },
            fogFar: { value: 2e3 },
            fogColor: { value: new Mi(16777215) },
          },
          lights: {
            ambientLightColor: { value: [] },
            directionalLights: {
              value: [],
              properties: {
                direction: {},
                color: {},
                shadow: {},
                shadowBias: {},
                shadowRadius: {},
                shadowMapSize: {},
              },
            },
            directionalShadowMap: { value: [] },
            directionalShadowMatrix: { value: [] },
            spotLights: {
              value: [],
              properties: {
                color: {},
                position: {},
                direction: {},
                distance: {},
                coneCos: {},
                penumbraCos: {},
                decay: {},
                shadow: {},
                shadowBias: {},
                shadowRadius: {},
                shadowMapSize: {},
              },
            },
            spotShadowMap: { value: [] },
            spotShadowMatrix: { value: [] },
            pointLights: {
              value: [],
              properties: {
                color: {},
                position: {},
                decay: {},
                distance: {},
                shadow: {},
                shadowBias: {},
                shadowRadius: {},
                shadowMapSize: {},
                shadowCameraNear: {},
                shadowCameraFar: {},
              },
            },
            pointShadowMap: { value: [] },
            pointShadowMatrix: { value: [] },
            hemisphereLights: {
              value: [],
              properties: { direction: {}, skyColor: {}, groundColor: {} },
            },
            rectAreaLights: {
              value: [],
              properties: { color: {}, position: {}, width: {}, height: {} },
            },
          },
          points: {
            diffuse: { value: new Mi(15658734) },
            opacity: { value: 1 },
            size: { value: 1 },
            scale: { value: 1 },
            map: { value: null },
            uvTransform: { value: new Pt() },
          },
        },
        Pi = {
          merge: function (e) {
            for (var t = {}, i = 0; i < e.length; i++) {
              var n,
                r = this.clone(e[i]);
              for (n in r) t[n] = r[n];
            }
            return t;
          },
          clone: function (e) {
            var t,
              i = {};
            for (t in e)
              for (var n in ((i[t] = {}), e[t])) {
                var r = e[t][n];
                r &&
                (r.isColor ||
                  r.isMatrix3 ||
                  r.isMatrix4 ||
                  r.isVector2 ||
                  r.isVector3 ||
                  r.isVector4 ||
                  r.isTexture)
                  ? (i[t][n] = r.clone())
                  : Array.isArray(r)
                  ? (i[t][n] = r.slice())
                  : (i[t][n] = r);
              }
            return i;
          },
        },
        Ri = {
          alphamap_fragment:
            "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",
          alphamap_pars_fragment:
            "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",
          alphatest_fragment:
            "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",
          aomap_fragment:
            "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",
          aomap_pars_fragment:
            "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
          begin_vertex: "\nvec3 transformed = vec3( position );\n",
          beginnormal_vertex: "\nvec3 objectNormal = vec3( normal );\n",
          bsdfs:
            "float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\n\tfloat b = 3.45068 + (4.18814 + y) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\n\treturn result;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",
          bumpmap_pars_fragment:
            "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",
          clipping_planes_fragment:
            "#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n",
          clipping_planes_pars_fragment:
            "#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",
          clipping_planes_pars_vertex:
            "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",
          clipping_planes_vertex:
            "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",
          color_fragment:
            "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
          color_pars_fragment:
            "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",
          color_pars_vertex: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
          color_vertex: "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",
          common:
            "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\n",
          cube_uv_reflection_fragment:
            "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",
          defaultnormal_vertex:
            "vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n",
          displacementmap_pars_vertex:
            "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",
          displacementmap_vertex:
            "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",
          emissivemap_fragment:
            "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",
          emissivemap_pars_fragment:
            "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",
          encodings_fragment:
            "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",
          encodings_pars_fragment:
            "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",
          envmap_fragment:
            "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",
          envmap_pars_fragment:
            "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",
          envmap_pars_vertex:
            "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",
          envmap_vertex:
            "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",
          fog_vertex: "\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",
          fog_pars_vertex:
            "#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",
          fog_fragment:
            "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",
          fog_pars_fragment:
            "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",
          gradientmap_pars_fragment:
            "#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",
          lightmap_fragment:
            "#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",
          lightmap_pars_fragment:
            "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
          lights_lambert_vertex:
            "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",
          lights_pars:
            "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",
          lights_phong_fragment:
            "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",
          lights_phong_pars_fragment:
            "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",
          lights_physical_fragment:
            "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",
          lights_physical_pars_fragment:
            "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tfloat norm = texture2D( ltcMag, uv ).a;\n\t\tvec4 t = texture2D( ltcMat, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3(   1,   0, t.y ),\n\t\t\tvec3(   0, t.z,   0 ),\n\t\t\tvec3( t.w,   0, t.x )\n\t\t);\n\t\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",
          lights_template:
            "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",
          logdepthbuf_fragment:
            "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
          logdepthbuf_pars_fragment:
            "#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",
          logdepthbuf_pars_vertex:
            "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",
          logdepthbuf_vertex:
            "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\tgl_Position.z *= gl_Position.w;\n\t#endif\n#endif\n",
          map_fragment:
            "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",
          map_pars_fragment:
            "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",
          map_particle_fragment:
            "#ifdef USE_MAP\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",
          map_particle_pars_fragment:
            "#ifdef USE_MAP\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n#endif\n",
          metalnessmap_fragment:
            "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n",
          metalnessmap_pars_fragment:
            "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
          morphnormal_vertex:
            "#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",
          morphtarget_pars_vertex:
            "#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
          morphtarget_vertex:
            "#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",
          normal_fragment:
            "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",
          normalmap_pars_fragment:
            "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",
          packing:
            "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",
          premultiplied_alpha_fragment:
            "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",
          project_vertex:
            "vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n",
          dithering_fragment:
            "#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n",
          dithering_pars_fragment:
            "#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n",
          roughnessmap_fragment:
            "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n",
          roughnessmap_pars_fragment:
            "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
          shadowmap_pars_fragment:
            "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",
          shadowmap_pars_vertex:
            "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",
          shadowmap_vertex:
            "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",
          shadowmask_pars_fragment:
            "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",
          skinbase_vertex:
            "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
          skinning_pars_vertex:
            "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",
          skinning_vertex:
            "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif\n",
          skinnormal_vertex:
            "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",
          specularmap_fragment:
            "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
          specularmap_pars_fragment:
            "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
          tonemapping_fragment:
            "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",
          tonemapping_pars_fragment:
            "#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",
          uv_pars_fragment:
            "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",
          uv_pars_vertex:
            "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\n",
          uv_vertex:
            "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",
          uv2_pars_fragment:
            "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
          uv2_pars_vertex:
            "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",
          uv2_vertex:
            "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",
          worldpos_vertex:
            "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif\n",
          cube_frag:
            "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",
          cube_vert:
            "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}\n",
          depth_frag:
            "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",
          depth_vert:
            "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",
          distanceRGBA_frag:
            "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}\n",
          distanceRGBA_vert:
            "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}\n",
          equirect_frag:
            "uniform sampler2D tEquirect;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",
          equirect_vert:
            "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
          linedashed_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
          linedashed_vert:
            "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",
          meshbasic_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
          meshbasic_vert:
            "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",
          meshlambert_frag:
            "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
          meshlambert_vert:
            "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
          meshphong_frag:
            "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
          meshphong_vert:
            "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
          meshphysical_frag:
            "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
          meshphysical_vert:
            "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
          normal_frag:
            "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n",
          normal_vert:
            "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",
          points_frag:
            "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
          points_vert:
            "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
          shadow_frag:
            "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}\n",
          shadow_vert:
            "#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        },
        Oi = {
          basic: {
            uniforms: Pi.merge([
              Ci.common,
              Ci.specularmap,
              Ci.envmap,
              Ci.aomap,
              Ci.lightmap,
              Ci.fog,
            ]),
            vertexShader: Ri.meshbasic_vert,
            fragmentShader: Ri.meshbasic_frag,
          },
          lambert: {
            uniforms: Pi.merge([
              Ci.common,
              Ci.specularmap,
              Ci.envmap,
              Ci.aomap,
              Ci.lightmap,
              Ci.emissivemap,
              Ci.fog,
              Ci.lights,
              { emissive: { value: new Mi(0) } },
            ]),
            vertexShader: Ri.meshlambert_vert,
            fragmentShader: Ri.meshlambert_frag,
          },
          phong: {
            uniforms: Pi.merge([
              Ci.common,
              Ci.specularmap,
              Ci.envmap,
              Ci.aomap,
              Ci.lightmap,
              Ci.emissivemap,
              Ci.bumpmap,
              Ci.normalmap,
              Ci.displacementmap,
              Ci.gradientmap,
              Ci.fog,
              Ci.lights,
              {
                emissive: { value: new Mi(0) },
                specular: { value: new Mi(1118481) },
                shininess: { value: 30 },
              },
            ]),
            vertexShader: Ri.meshphong_vert,
            fragmentShader: Ri.meshphong_frag,
          },
          standard: {
            uniforms: Pi.merge([
              Ci.common,
              Ci.envmap,
              Ci.aomap,
              Ci.lightmap,
              Ci.emissivemap,
              Ci.bumpmap,
              Ci.normalmap,
              Ci.displacementmap,
              Ci.roughnessmap,
              Ci.metalnessmap,
              Ci.fog,
              Ci.lights,
              {
                emissive: { value: new Mi(0) },
                roughness: { value: 0.5 },
                metalness: { value: 0.5 },
                envMapIntensity: { value: 1 },
              },
            ]),
            vertexShader: Ri.meshphysical_vert,
            fragmentShader: Ri.meshphysical_frag,
          },
          points: {
            uniforms: Pi.merge([Ci.points, Ci.fog]),
            vertexShader: Ri.points_vert,
            fragmentShader: Ri.points_frag,
          },
          dashed: {
            uniforms: Pi.merge([
              Ci.common,
              Ci.fog,
              {
                scale: { value: 1 },
                dashSize: { value: 1 },
                totalSize: { value: 2 },
              },
            ]),
            vertexShader: Ri.linedashed_vert,
            fragmentShader: Ri.linedashed_frag,
          },
          depth: {
            uniforms: Pi.merge([Ci.common, Ci.displacementmap]),
            vertexShader: Ri.depth_vert,
            fragmentShader: Ri.depth_frag,
          },
          normal: {
            uniforms: Pi.merge([
              Ci.common,
              Ci.bumpmap,
              Ci.normalmap,
              Ci.displacementmap,
              { opacity: { value: 1 } },
            ]),
            vertexShader: Ri.normal_vert,
            fragmentShader: Ri.normal_frag,
          },
          cube: {
            uniforms: {
              tCube: { value: null },
              tFlip: { value: -1 },
              opacity: { value: 1 },
            },
            vertexShader: Ri.cube_vert,
            fragmentShader: Ri.cube_frag,
          },
          equirect: {
            uniforms: { tEquirect: { value: null } },
            vertexShader: Ri.equirect_vert,
            fragmentShader: Ri.equirect_frag,
          },
          distanceRGBA: {
            uniforms: Pi.merge([
              Ci.common,
              Ci.displacementmap,
              {
                referencePosition: { value: new Ct() },
                nearDistance: { value: 1 },
                farDistance: { value: 1e3 },
              },
            ]),
            vertexShader: Ri.distanceRGBA_vert,
            fragmentShader: Ri.distanceRGBA_frag,
          },
          shadow: {
            uniforms: Pi.merge([
              Ci.lights,
              Ci.fog,
              { color: { value: new Mi(0) }, opacity: { value: 1 } },
            ]),
            vertexShader: Ri.shadow_vert,
            fragmentShader: Ri.shadow_frag,
          },
        };
      function Ii(e, t) {
        (this.min = void 0 !== e ? e : new Et(1 / 0, 1 / 0)),
          (this.max = void 0 !== t ? t : new Et(-1 / 0, -1 / 0));
      }
      function Di(e, _, x, b, o) {
        var w, T, a, S, M, E, A, L;
        function C() {
          var e,
            t,
            i,
            n = new Float32Array([
              -1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1,
            ]),
            r = new Uint16Array([0, 1, 2, 0, 2, 3]);
          (w = _.createBuffer()),
            (T = _.createBuffer()),
            _.bindBuffer(_.ARRAY_BUFFER, w),
            _.bufferData(_.ARRAY_BUFFER, n, _.STATIC_DRAW),
            _.bindBuffer(_.ELEMENT_ARRAY_BUFFER, T),
            _.bufferData(_.ELEMENT_ARRAY_BUFFER, r, _.STATIC_DRAW),
            (A = _.createTexture()),
            (L = _.createTexture()),
            x.bindTexture(_.TEXTURE_2D, A),
            _.texImage2D(
              _.TEXTURE_2D,
              0,
              _.RGB,
              16,
              16,
              0,
              _.RGB,
              _.UNSIGNED_BYTE,
              null
            ),
            _.texParameteri(_.TEXTURE_2D, _.TEXTURE_WRAP_S, _.CLAMP_TO_EDGE),
            _.texParameteri(_.TEXTURE_2D, _.TEXTURE_WRAP_T, _.CLAMP_TO_EDGE),
            _.texParameteri(_.TEXTURE_2D, _.TEXTURE_MAG_FILTER, _.NEAREST),
            _.texParameteri(_.TEXTURE_2D, _.TEXTURE_MIN_FILTER, _.NEAREST),
            x.bindTexture(_.TEXTURE_2D, L),
            _.texImage2D(
              _.TEXTURE_2D,
              0,
              _.RGBA,
              16,
              16,
              0,
              _.RGBA,
              _.UNSIGNED_BYTE,
              null
            ),
            _.texParameteri(_.TEXTURE_2D, _.TEXTURE_WRAP_S, _.CLAMP_TO_EDGE),
            _.texParameteri(_.TEXTURE_2D, _.TEXTURE_WRAP_T, _.CLAMP_TO_EDGE),
            _.texParameteri(_.TEXTURE_2D, _.TEXTURE_MAG_FILTER, _.NEAREST),
            _.texParameteri(_.TEXTURE_2D, _.TEXTURE_MIN_FILTER, _.NEAREST),
            (a = {
              vertexShader: [
                "uniform lowp int renderType;",
                "uniform vec3 screenPosition;",
                "uniform vec2 scale;",
                "uniform float rotation;",
                "uniform sampler2D occlusionMap;",
                "attribute vec2 position;",
                "attribute vec2 uv;",
                "varying vec2 vUV;",
                "varying float vVisibility;",
                "void main() {",
                "\tvUV = uv;",
                "\tvec2 pos = position;",
                "\tif ( renderType == 2 ) {",
                "\t\tvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );",
                "\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );",
                "\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );",
                "\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );",
                "\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );",
                "\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );",
                "\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );",
                "\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );",
                "\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );",
                "\t\tvVisibility =        visibility.r / 9.0;",
                "\t\tvVisibility *= 1.0 - visibility.g / 9.0;",
                "\t\tvVisibility *=       visibility.b / 9.0;",
                "\t\tvVisibility *= 1.0 - visibility.a / 9.0;",
                "\t\tpos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;",
                "\t\tpos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;",
                "\t}",
                "\tgl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );",
                "}",
              ].join("\n"),
              fragmentShader: [
                "uniform lowp int renderType;",
                "uniform sampler2D map;",
                "uniform float opacity;",
                "uniform vec3 color;",
                "varying vec2 vUV;",
                "varying float vVisibility;",
                "void main() {",
                "\tif ( renderType == 0 ) {",
                "\t\tgl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );",
                "\t} else if ( renderType == 1 ) {",
                "\t\tgl_FragColor = texture2D( map, vUV );",
                "\t} else {",
                "\t\tvec4 texture = texture2D( map, vUV );",
                "\t\ttexture.a *= opacity * vVisibility;",
                "\t\tgl_FragColor = texture;",
                "\t\tgl_FragColor.rgb *= color;",
                "\t}",
                "}",
              ].join("\n"),
            }),
            (e = a),
            (t = _.createProgram()),
            (i = _.createShader(_.FRAGMENT_SHADER)),
            (n = _.createShader(_.VERTEX_SHADER)),
            (r = "precision " + o.precision + " float;\n"),
            _.shaderSource(i, r + e.fragmentShader),
            _.shaderSource(n, r + e.vertexShader),
            _.compileShader(i),
            _.compileShader(n),
            _.attachShader(t, i),
            _.attachShader(t, n),
            _.linkProgram(t),
            (S = t),
            (M = {
              vertex: _.getAttribLocation(S, "position"),
              uv: _.getAttribLocation(S, "uv"),
            }),
            (E = {
              renderType: _.getUniformLocation(S, "renderType"),
              map: _.getUniformLocation(S, "map"),
              occlusionMap: _.getUniformLocation(S, "occlusionMap"),
              opacity: _.getUniformLocation(S, "opacity"),
              color: _.getUniformLocation(S, "color"),
              scale: _.getUniformLocation(S, "scale"),
              rotation: _.getUniformLocation(S, "rotation"),
              screenPosition: _.getUniformLocation(S, "screenPosition"),
            });
        }
        this.render = function (e, t, i, n) {
          if (0 !== e.length) {
            var r = new Ct(),
              o = n.w / n.z,
              a = 0.5 * n.z,
              s = 0.5 * n.w,
              l = 16 / n.w,
              c = new Et(l * o, l),
              h = new Ct(1, 1, 0),
              u = new Et(1, 1),
              d = new Ii();
            d.min.set(n.x, n.y),
              d.max.set(n.x + (n.z - 16), n.y + (n.w - 16)),
              void 0 === S && C(),
              x.useProgram(S),
              x.initAttributes(),
              x.enableAttribute(M.vertex),
              x.enableAttribute(M.uv),
              x.disableUnusedAttributes(),
              _.uniform1i(E.occlusionMap, 0),
              _.uniform1i(E.map, 1),
              _.bindBuffer(_.ARRAY_BUFFER, w),
              _.vertexAttribPointer(M.vertex, 2, _.FLOAT, !1, 16, 0),
              _.vertexAttribPointer(M.uv, 2, _.FLOAT, !1, 16, 8),
              _.bindBuffer(_.ELEMENT_ARRAY_BUFFER, T),
              x.disable(_.CULL_FACE),
              x.buffers.depth.setMask(!1);
            for (var p = 0, f = e.length; p < f; p++) {
              (l = 16 / n.w), c.set(l * o, l);
              var m = e[p];
              if (
                (r.set(
                  m.matrixWorld.elements[12],
                  m.matrixWorld.elements[13],
                  m.matrixWorld.elements[14]
                ),
                r.applyMatrix4(i.matrixWorldInverse),
                r.applyMatrix4(i.projectionMatrix),
                h.copy(r),
                (u.x = n.x + h.x * a + a - 8),
                (u.y = n.y + h.y * s + s - 8),
                !0 === d.containsPoint(u))
              ) {
                x.activeTexture(_.TEXTURE0),
                  x.bindTexture(_.TEXTURE_2D, null),
                  x.activeTexture(_.TEXTURE1),
                  x.bindTexture(_.TEXTURE_2D, A),
                  _.copyTexImage2D(_.TEXTURE_2D, 0, _.RGB, u.x, u.y, 16, 16, 0),
                  _.uniform1i(E.renderType, 0),
                  _.uniform2f(E.scale, c.x, c.y),
                  _.uniform3f(E.screenPosition, h.x, h.y, h.z),
                  x.disable(_.BLEND),
                  x.enable(_.DEPTH_TEST),
                  _.drawElements(_.TRIANGLES, 6, _.UNSIGNED_SHORT, 0),
                  x.activeTexture(_.TEXTURE0),
                  x.bindTexture(_.TEXTURE_2D, L),
                  _.copyTexImage2D(
                    _.TEXTURE_2D,
                    0,
                    _.RGBA,
                    u.x,
                    u.y,
                    16,
                    16,
                    0
                  ),
                  _.uniform1i(E.renderType, 1),
                  x.disable(_.DEPTH_TEST),
                  x.activeTexture(_.TEXTURE1),
                  x.bindTexture(_.TEXTURE_2D, A),
                  _.drawElements(_.TRIANGLES, 6, _.UNSIGNED_SHORT, 0),
                  m.positionScreen.copy(h),
                  m.customUpdateCallback
                    ? m.customUpdateCallback(m)
                    : m.updateLensFlares(),
                  _.uniform1i(E.renderType, 2),
                  x.enable(_.BLEND);
                for (var g = 0, v = m.lensFlares.length; g < v; g++) {
                  var y = m.lensFlares[g];
                  0.001 < y.opacity &&
                    0.001 < y.scale &&
                    ((h.x = y.x),
                    (h.y = y.y),
                    (h.z = y.z),
                    (l = (y.size * y.scale) / n.w),
                    (c.x = l * o),
                    (c.y = l),
                    _.uniform3f(E.screenPosition, h.x, h.y, h.z),
                    _.uniform2f(E.scale, c.x, c.y),
                    _.uniform1f(E.rotation, y.rotation),
                    _.uniform1f(E.opacity, y.opacity),
                    _.uniform3f(E.color, y.color.r, y.color.g, y.color.b),
                    x.setBlending(
                      y.blending,
                      y.blendEquation,
                      y.blendSrc,
                      y.blendDst
                    ),
                    b.setTexture2D(y.texture, 1),
                    _.drawElements(_.TRIANGLES, 6, _.UNSIGNED_SHORT, 0));
                }
              }
            }
            x.enable(_.CULL_FACE),
              x.enable(_.DEPTH_TEST),
              x.buffers.depth.setMask(!0),
              x.reset();
          }
        };
      }
      function Ni(e, t, i, n, r, o, a, s, l) {
        Dt.call(this, e, t, i, n, r, o, a, s, l), (this.needsUpdate = !0);
      }
      function Fi(d, p, f, m, n) {
        var g,
          v,
          y,
          _,
          x,
          b,
          w = new Ct(),
          T = new Lt(),
          S = new Ct();
        function M() {
          var e = new Float32Array([
              -0.5, -0.5, 0, 0, 0.5, -0.5, 1, 0, 0.5, 0.5, 1, 1, -0.5, 0.5, 0,
              1,
            ]),
            t = new Uint16Array([0, 1, 2, 0, 2, 3]);
          (g = p.createBuffer()),
            (v = p.createBuffer()),
            p.bindBuffer(p.ARRAY_BUFFER, g),
            p.bufferData(p.ARRAY_BUFFER, e, p.STATIC_DRAW),
            p.bindBuffer(p.ELEMENT_ARRAY_BUFFER, v),
            p.bufferData(p.ELEMENT_ARRAY_BUFFER, t, p.STATIC_DRAW),
            (i = p.createProgram()),
            (e = p.createShader(p.VERTEX_SHADER)),
            (t = p.createShader(p.FRAGMENT_SHADER)),
            p.shaderSource(
              e,
              [
                "precision " + n.precision + " float;",
                "#define SHADER_NAME SpriteMaterial",
                "uniform mat4 modelViewMatrix;",
                "uniform mat4 projectionMatrix;",
                "uniform float rotation;",
                "uniform vec2 scale;",
                "uniform vec2 uvOffset;",
                "uniform vec2 uvScale;",
                "attribute vec2 position;",
                "attribute vec2 uv;",
                "varying vec2 vUV;",
                "varying float fogDepth;",
                "void main() {",
                "\tvUV = uvOffset + uv * uvScale;",
                "\tvec2 alignedPosition = position * scale;",
                "\tvec2 rotatedPosition;",
                "\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;",
                "\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;",
                "\tvec4 mvPosition;",
                "\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );",
                "\tmvPosition.xy += rotatedPosition;",
                "\tgl_Position = projectionMatrix * mvPosition;",
                "\tfogDepth = - mvPosition.z;",
                "}",
              ].join("\n")
            ),
            p.shaderSource(
              t,
              [
                "precision " + n.precision + " float;",
                "#define SHADER_NAME SpriteMaterial",
                "uniform vec3 color;",
                "uniform sampler2D map;",
                "uniform float opacity;",
                "uniform int fogType;",
                "uniform vec3 fogColor;",
                "uniform float fogDensity;",
                "uniform float fogNear;",
                "uniform float fogFar;",
                "uniform float alphaTest;",
                "varying vec2 vUV;",
                "varying float fogDepth;",
                "void main() {",
                "\tvec4 texture = texture2D( map, vUV );",
                "\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );",
                "\tif ( gl_FragColor.a < alphaTest ) discard;",
                "\tif ( fogType > 0 ) {",
                "\t\tfloat fogFactor = 0.0;",
                "\t\tif ( fogType == 1 ) {",
                "\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );",
                "\t\t} else {",
                "\t\t\tconst float LOG2 = 1.442695;",
                "\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );",
                "\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );",
                "\t\t}",
                "\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );",
                "\t}",
                "}",
              ].join("\n")
            ),
            p.compileShader(e),
            p.compileShader(t),
            p.attachShader(i, e),
            p.attachShader(i, t),
            p.linkProgram(i),
            (y = i),
            (_ = {
              position: p.getAttribLocation(y, "position"),
              uv: p.getAttribLocation(y, "uv"),
            }),
            (x = {
              uvOffset: p.getUniformLocation(y, "uvOffset"),
              uvScale: p.getUniformLocation(y, "uvScale"),
              rotation: p.getUniformLocation(y, "rotation"),
              scale: p.getUniformLocation(y, "scale"),
              color: p.getUniformLocation(y, "color"),
              map: p.getUniformLocation(y, "map"),
              opacity: p.getUniformLocation(y, "opacity"),
              modelViewMatrix: p.getUniformLocation(y, "modelViewMatrix"),
              projectionMatrix: p.getUniformLocation(y, "projectionMatrix"),
              fogType: p.getUniformLocation(y, "fogType"),
              fogDensity: p.getUniformLocation(y, "fogDensity"),
              fogNear: p.getUniformLocation(y, "fogNear"),
              fogFar: p.getUniformLocation(y, "fogFar"),
              fogColor: p.getUniformLocation(y, "fogColor"),
              fogDepth: p.getUniformLocation(y, "fogDepth"),
              alphaTest: p.getUniformLocation(y, "alphaTest"),
            });
          t = document.createElementNS(
            "http://www.w3.org/1999/xhtml",
            "canvas"
          );
          (t.width = 8), (t.height = 8);
          var i = t.getContext("2d");
          (i.fillStyle = "white"), i.fillRect(0, 0, 8, 8), (b = new Ni(t));
        }
        function E(e, t) {
          return e.renderOrder !== t.renderOrder
            ? e.renderOrder - t.renderOrder
            : e.z !== t.z
            ? t.z - e.z
            : t.id - e.id;
        }
        this.render = function (e, t, i) {
          if (0 !== e.length) {
            void 0 === y && M(),
              f.useProgram(y),
              f.initAttributes(),
              f.enableAttribute(_.position),
              f.enableAttribute(_.uv),
              f.disableUnusedAttributes(),
              f.disable(p.CULL_FACE),
              f.enable(p.BLEND),
              p.bindBuffer(p.ARRAY_BUFFER, g),
              p.vertexAttribPointer(_.position, 2, p.FLOAT, !1, 16, 0),
              p.vertexAttribPointer(_.uv, 2, p.FLOAT, !1, 16, 8),
              p.bindBuffer(p.ELEMENT_ARRAY_BUFFER, v),
              p.uniformMatrix4fv(
                x.projectionMatrix,
                !1,
                i.projectionMatrix.elements
              ),
              f.activeTexture(p.TEXTURE0),
              p.uniform1i(x.map, 0);
            var n = 0,
              r = 0,
              o = t.fog;
            o
              ? (p.uniform3f(x.fogColor, o.color.r, o.color.g, o.color.b),
                o.isFog
                  ? (p.uniform1f(x.fogNear, o.near),
                    p.uniform1f(x.fogFar, o.far),
                    p.uniform1i(x.fogType, 1),
                    (r = n = 1))
                  : o.isFogExp2 &&
                    (p.uniform1f(x.fogDensity, o.density),
                    p.uniform1i(x.fogType, 2),
                    (r = n = 2)))
              : (p.uniform1i(x.fogType, 0), (r = n = 0));
            for (var a = 0, s = e.length; a < s; a++)
              (c = e[a]).modelViewMatrix.multiplyMatrices(
                i.matrixWorldInverse,
                c.matrixWorld
              ),
                (c.z = -c.modelViewMatrix.elements[14]);
            e.sort(E);
            for (var l = [], a = 0, s = e.length; a < s; a++) {
              var c,
                h,
                u = (c = e[a]).material;
              !1 !== u.visible &&
                (c.onBeforeRender(d, t, i, void 0, u, void 0),
                p.uniform1f(x.alphaTest, u.alphaTest),
                p.uniformMatrix4fv(
                  x.modelViewMatrix,
                  !1,
                  c.modelViewMatrix.elements
                ),
                c.matrixWorld.decompose(w, T, S),
                (l[0] = S.x),
                (l[1] = S.y),
                (h = 0),
                t.fog && u.fog && (h = r),
                n !== h && (p.uniform1i(x.fogType, h), (n = h)),
                null !== u.map
                  ? (p.uniform2f(x.uvOffset, u.map.offset.x, u.map.offset.y),
                    p.uniform2f(x.uvScale, u.map.repeat.x, u.map.repeat.y))
                  : (p.uniform2f(x.uvOffset, 0, 0),
                    p.uniform2f(x.uvScale, 1, 1)),
                p.uniform1f(x.opacity, u.opacity),
                p.uniform3f(x.color, u.color.r, u.color.g, u.color.b),
                p.uniform1f(x.rotation, u.rotation),
                p.uniform2fv(x.scale, l),
                f.setBlending(
                  u.blending,
                  u.blendEquation,
                  u.blendSrc,
                  u.blendDst,
                  u.blendEquationAlpha,
                  u.blendSrcAlpha,
                  u.blendDstAlpha,
                  u.premultipliedAlpha
                ),
                f.buffers.depth.setTest(u.depthTest),
                f.buffers.depth.setMask(u.depthWrite),
                f.buffers.color.setMask(u.colorWrite),
                m.setTexture2D(u.map || b, 0),
                p.drawElements(p.TRIANGLES, 6, p.UNSIGNED_SHORT, 0),
                c.onAfterRender(d, t, i, void 0, u, void 0));
            }
            f.enable(p.CULL_FACE), f.reset();
          }
        };
      }
      (Oi.physical = {
        uniforms: Pi.merge([
          Oi.standard.uniforms,
          { clearCoat: { value: 0 }, clearCoatRoughness: { value: 0 } },
        ]),
        vertexShader: Ri.meshphysical_vert,
        fragmentShader: Ri.meshphysical_frag,
      }),
        Object.assign(Ii.prototype, {
          set: function (e, t) {
            return this.min.copy(e), this.max.copy(t), this;
          },
          setFromPoints: function (e) {
            this.makeEmpty();
            for (var t = 0, i = e.length; t < i; t++) this.expandByPoint(e[t]);
            return this;
          },
          setFromCenterAndSize:
            ((Li = new Et()),
            function (e, t) {
              t = Li.copy(t).multiplyScalar(0.5);
              return this.min.copy(e).sub(t), this.max.copy(e).add(t), this;
            }),
          clone: function () {
            return new this.constructor().copy(this);
          },
          copy: function (e) {
            return this.min.copy(e.min), this.max.copy(e.max), this;
          },
          makeEmpty: function () {
            return (
              (this.min.x = this.min.y = 1 / 0),
              (this.max.x = this.max.y = -1 / 0),
              this
            );
          },
          isEmpty: function () {
            return this.max.x < this.min.x || this.max.y < this.min.y;
          },
          getCenter: function (e) {
            e = e || new Et();
            return this.isEmpty()
              ? e.set(0, 0)
              : e.addVectors(this.min, this.max).multiplyScalar(0.5);
          },
          getSize: function (e) {
            e = e || new Et();
            return this.isEmpty()
              ? e.set(0, 0)
              : e.subVectors(this.max, this.min);
          },
          expandByPoint: function (e) {
            return this.min.min(e), this.max.max(e), this;
          },
          expandByVector: function (e) {
            return this.min.sub(e), this.max.add(e), this;
          },
          expandByScalar: function (e) {
            return this.min.addScalar(-e), this.max.addScalar(e), this;
          },
          containsPoint: function (e) {
            return !(
              e.x < this.min.x ||
              e.x > this.max.x ||
              e.y < this.min.y ||
              e.y > this.max.y
            );
          },
          containsBox: function (e) {
            return (
              this.min.x <= e.min.x &&
              e.max.x <= this.max.x &&
              this.min.y <= e.min.y &&
              e.max.y <= this.max.y
            );
          },
          getParameter: function (e, t) {
            return (t || new Et()).set(
              (e.x - this.min.x) / (this.max.x - this.min.x),
              (e.y - this.min.y) / (this.max.y - this.min.y)
            );
          },
          intersectsBox: function (e) {
            return !(
              e.max.x < this.min.x ||
              e.min.x > this.max.x ||
              e.max.y < this.min.y ||
              e.min.y > this.max.y
            );
          },
          clampPoint: function (e, t) {
            return (t || new Et()).copy(e).clamp(this.min, this.max);
          },
          distanceToPoint:
            ((Ai = new Et()),
            function (e) {
              return Ai.copy(e).clamp(this.min, this.max).sub(e).length();
            }),
          intersect: function (e) {
            return this.min.max(e.min), this.max.min(e.max), this;
          },
          union: function (e) {
            return this.min.min(e.min), this.max.max(e.max), this;
          },
          translate: function (e) {
            return this.min.add(e), this.max.add(e), this;
          },
          equals: function (e) {
            return e.min.equals(this.min) && e.max.equals(this.max);
          },
        }),
        ((Ni.prototype = Object.create(Dt.prototype)).constructor = Ni);
      var ki,
        Ui,
        Bi,
        zi,
        ji,
        Hi,
        Gi,
        Vi,
        Wi,
        Xi,
        qi,
        Yi,
        Qi,
        Zi,
        Ji,
        $i,
        Ki,
        en,
        tn,
        nn,
        rn,
        on = 0;
      function an() {
        Object.defineProperty(this, "id", { value: on++ }),
          (this.uuid = Mt.generateUUID()),
          (this.name = ""),
          (this.type = "Material"),
          (this.fog = !0),
          (this.lights = !0),
          (this.blending = q),
          (this.side = R),
          (this.flatShading = !1),
          (this.vertexColors = Ae),
          (this.opacity = 1),
          (this.transparent = !1),
          (this.blendSrc = U),
          (this.blendDst = B),
          (this.blendEquation = A),
          (this.blendSrcAlpha = null),
          (this.blendDstAlpha = null),
          (this.blendEquationAlpha = null),
          (this.depthFunc = oe),
          (this.depthTest = !0),
          (this.depthWrite = !0),
          (this.clippingPlanes = null),
          (this.clipIntersection = !1),
          (this.clipShadows = !1),
          (this.colorWrite = !0),
          (this.precision = null),
          (this.polygonOffset = !1),
          (this.polygonOffsetFactor = 0),
          (this.polygonOffsetUnits = 0),
          (this.dithering = !1),
          (this.alphaTest = 0),
          (this.premultipliedAlpha = !1),
          (this.overdraw = 0),
          (this.visible = !0),
          (this.userData = {}),
          (this.needsUpdate = !0);
      }
      function sn(e) {
        an.call(this),
          (this.type = "MeshDepthMaterial"),
          (this.depthPacking = Tt),
          (this.skinning = !1),
          (this.morphTargets = !1),
          (this.map = null),
          (this.alphaMap = null),
          (this.displacementMap = null),
          (this.displacementScale = 1),
          (this.displacementBias = 0),
          (this.wireframe = !1),
          (this.wireframeLinewidth = 1),
          (this.fog = !1),
          (this.lights = !1),
          this.setValues(e);
      }
      function ln(e) {
        an.call(this),
          (this.type = "MeshDistanceMaterial"),
          (this.referencePosition = new Ct()),
          (this.nearDistance = 1),
          (this.farDistance = 1e3),
          (this.skinning = !1),
          (this.morphTargets = !1),
          (this.map = null),
          (this.alphaMap = null),
          (this.displacementMap = null),
          (this.displacementScale = 1),
          (this.displacementBias = 0),
          (this.fog = !1),
          (this.lights = !1),
          this.setValues(e);
      }
      function cn(e, t) {
        (this.min = void 0 !== e ? e : new Ct(1 / 0, 1 / 0, 1 / 0)),
          (this.max = void 0 !== t ? t : new Ct(-1 / 0, -1 / 0, -1 / 0));
      }
      function hn(e) {
        var t = e.geometry;
        if (void 0 !== t)
          if (t.isGeometry) {
            var i = t.vertices;
            for (Hi = 0, Gi = i.length; Hi < Gi; Hi++)
              Vi.copy(i[Hi]),
                Vi.applyMatrix4(e.matrixWorld),
                ji.expandByPoint(Vi);
          } else if (t.isBufferGeometry) {
            var n = t.attributes.position;
            if (void 0 !== n)
              for (Hi = 0, Gi = n.count; Hi < Gi; Hi++)
                Vi.fromBufferAttribute(n, Hi).applyMatrix4(e.matrixWorld),
                  ji.expandByPoint(Vi);
          }
      }
      function un(e, t) {
        (this.center = void 0 !== e ? e : new Ct()),
          (this.radius = void 0 !== t ? t : 0);
      }
      function dn(e, t) {
        (this.normal = void 0 !== e ? e : new Ct(1, 0, 0)),
          (this.constant = void 0 !== t ? t : 0);
      }
      function pn(e, t, i, n, r, o) {
        this.planes = [
          void 0 !== e ? e : new dn(),
          void 0 !== t ? t : new dn(),
          void 0 !== i ? i : new dn(),
          void 0 !== n ? n : new dn(),
          void 0 !== r ? r : new dn(),
          void 0 !== o ? o : new dn(),
        ];
      }
      function fn(v, y, e) {
        for (
          var _ = new pn(),
            x = new At(),
            b = new Et(),
            w = new Et(e, e),
            T = new Ct(),
            S = new Ct(),
            d = 1,
            p = 2,
            t = 1 + (d | p),
            f = new Array(t),
            m = new Array(t),
            g = {},
            M = [
              new Ct(1, 0, 0),
              new Ct(-1, 0, 0),
              new Ct(0, 0, 1),
              new Ct(0, 0, -1),
              new Ct(0, 1, 0),
              new Ct(0, -1, 0),
            ],
            E = [
              new Ct(0, 1, 0),
              new Ct(0, 1, 0),
              new Ct(0, 1, 0),
              new Ct(0, 1, 0),
              new Ct(0, 0, 1),
              new Ct(0, 0, -1),
            ],
            A = [new Nt(), new Nt(), new Nt(), new Nt(), new Nt(), new Nt()],
            i = 0;
          i !== t;
          ++i
        ) {
          var n = 0 != (i & d),
            r = 0 != (i & p),
            o = new sn({ depthPacking: St, morphTargets: n, skinning: r });
          f[i] = o;
          r = new ln({ morphTargets: n, skinning: r });
          m[i] = r;
        }
        var L = this;
        function C(e, t, i, n, r, o) {
          var a,
            s = e.geometry,
            l = null,
            c = f,
            h = e.customDepthMaterial;
          i && ((c = m), (h = e.customDistanceMaterial)),
            (l =
              h ||
              ((h = !1),
              t.morphTargets &&
                (s && s.isBufferGeometry
                  ? (h =
                      s.morphAttributes &&
                      s.morphAttributes.position &&
                      0 < s.morphAttributes.position.length)
                  : s &&
                    s.isGeometry &&
                    (h = s.morphTargets && 0 < s.morphTargets.length)),
              e.isSkinnedMesh &&
                !1 === t.skinning &&
                console.warn(
                  "THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",
                  e
                ),
              (e = e.isSkinnedMesh && t.skinning),
              (a = 0),
              h && (a |= d),
              e && (a |= p),
              c[a])),
            v.localClippingEnabled &&
              !0 === t.clipShadows &&
              0 !== t.clippingPlanes.length &&
              ((u = l.uuid),
              (c = t.uuid),
              void 0 === (a = g[u]) && ((a = {}), (g[u] = a)),
              void 0 === (u = a[c]) && ((u = l.clone()), (a[c] = u)),
              (l = u)),
            (l.visible = t.visible),
            (l.wireframe = t.wireframe);
          var u = t.side;
          return (
            L.renderSingleSided && u == W && (u = R),
            L.renderReverseSided && (u === R ? (u = V) : u === V && (u = R)),
            (l.side = u),
            (l.clipShadows = t.clipShadows),
            (l.clippingPlanes = t.clippingPlanes),
            (l.clipIntersection = t.clipIntersection),
            (l.wireframeLinewidth = t.wireframeLinewidth),
            (l.linewidth = t.linewidth),
            i &&
              l.isMeshDistanceMaterial &&
              (l.referencePosition.copy(n),
              (l.nearDistance = r),
              (l.farDistance = o)),
            l
          );
        }
        (this.enabled = !1),
          (this.autoUpdate = !0),
          (this.needsUpdate = !1),
          (this.type = P),
          (this.renderReverseSided = !0),
          (this.renderSingleSided = !0),
          (this.render = function (e, t, i) {
            if (
              !1 !== L.enabled &&
              (!1 !== L.autoUpdate || !1 !== L.needsUpdate) &&
              0 !== e.length
            ) {
              var n,
                r = v.context,
                o = v.state;
              o.disable(r.BLEND),
                o.buffers.color.setClear(1, 1, 1, 1),
                o.buffers.depth.setTest(!0),
                o.setScissorTest(!1);
              for (var a = 0, s = e.length; a < s; a++) {
                var l = e[a],
                  c = l.shadow,
                  h = l && l.isPointLight;
                if (void 0 !== c) {
                  var u,
                    d,
                    p = c.camera;
                  b.copy(c.mapSize),
                    b.min(w),
                    h &&
                      ((u = b.x),
                      (d = b.y),
                      A[0].set(2 * u, d, u, d),
                      A[1].set(0, d, u, d),
                      A[2].set(3 * u, d, u, d),
                      A[3].set(u, d, u, d),
                      A[4].set(3 * u, 0, u, d),
                      A[5].set(u, 0, u, d),
                      (b.x *= 4),
                      (b.y *= 2)),
                    null === c.map &&
                      ((f = { minFilter: Ce, magFilter: Ce, format: Qe }),
                      (c.map = new Ft(b.x, b.y, f)),
                      (c.map.texture.name = l.name + ".shadowMap"),
                      p.updateProjectionMatrix()),
                    c.isSpotLightShadow && c.update(l);
                  var f = c.map,
                    c = c.matrix;
                  S.setFromMatrixPosition(l.matrixWorld),
                    p.position.copy(S),
                    h
                      ? ((n = 6), c.makeTranslation(-S.x, -S.y, -S.z))
                      : ((n = 1),
                        T.setFromMatrixPosition(l.target.matrixWorld),
                        p.lookAt(T),
                        p.updateMatrixWorld(),
                        c.set(
                          0.5,
                          0,
                          0,
                          0.5,
                          0,
                          0.5,
                          0,
                          0.5,
                          0,
                          0,
                          0.5,
                          0.5,
                          0,
                          0,
                          0,
                          1
                        ),
                        c.multiply(p.projectionMatrix),
                        c.multiply(p.matrixWorldInverse)),
                    v.setRenderTarget(f),
                    v.clear();
                  for (var m, g = 0; g < n; g++)
                    h &&
                      (T.copy(p.position),
                      T.add(M[g]),
                      p.up.copy(E[g]),
                      p.lookAt(T),
                      p.updateMatrixWorld(),
                      (m = A[g]),
                      o.viewport(m)),
                      x.multiplyMatrices(
                        p.projectionMatrix,
                        p.matrixWorldInverse
                      ),
                      _.setFromMatrix(x),
                      (function e(t, i, n, r) {
                        if (!1 === t.visible) return;
                        var o = t.layers.test(i.layers);
                        if (
                          o &&
                          (t.isMesh || t.isLine || t.isPoints) &&
                          t.castShadow &&
                          (!t.frustumCulled || _.intersectsObject(t))
                        ) {
                          t.modelViewMatrix.multiplyMatrices(
                            n.matrixWorldInverse,
                            t.matrixWorld
                          );
                          var a = y.update(t),
                            s = t.material;
                          if (Array.isArray(s))
                            for (
                              var l = a.groups, c = 0, h = l.length;
                              c < h;
                              c++
                            ) {
                              var u,
                                d = l[c],
                                p = s[d.materialIndex];
                              p &&
                                p.visible &&
                                ((u = C(t, p, r, S, n.near, n.far)),
                                v.renderBufferDirect(n, null, a, u, t, d));
                            }
                          else
                            s.visible &&
                              ((u = C(t, s, r, S, n.near, n.far)),
                              v.renderBufferDirect(n, null, a, u, t, null));
                        }
                        var f = t.children;
                        for (var m = 0, g = f.length; m < g; m++)
                          e(f[m], i, n, r);
                      })(t, i, p, h);
                } else
                  console.warn("THREE.WebGLShadowMap:", l, "has no shadow.");
              }
              L.needsUpdate = !1;
            }
          });
      }
      function mn(l) {
        var c = {};
        return {
          get: function (e) {
            return e.isInterleavedBufferAttribute && (e = e.data), c[e.uuid];
          },
          remove: function (e) {
            e.isInterleavedBufferAttribute && (e = e.data);
            var t = c[e.uuid];
            t && (l.deleteBuffer(t.buffer), delete c[e.uuid]);
          },
          update: function (e, t) {
            e.isInterleavedBufferAttribute && (e = e.data);
            var i,
              n,
              r,
              o,
              a,
              s = c[e.uuid];
            void 0 === s
              ? (c[e.uuid] =
                  ((n = t),
                  (r = (i = e).array),
                  (o = i.dynamic ? l.DYNAMIC_DRAW : l.STATIC_DRAW),
                  (a = l.createBuffer()),
                  l.bindBuffer(n, a),
                  l.bufferData(n, r, o),
                  i.onUploadCallback(),
                  (o = l.FLOAT),
                  r instanceof Float32Array
                    ? (o = l.FLOAT)
                    : r instanceof Float64Array
                    ? console.warn(
                        "THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."
                      )
                    : r instanceof Uint16Array
                    ? (o = l.UNSIGNED_SHORT)
                    : r instanceof Int16Array
                    ? (o = l.SHORT)
                    : r instanceof Uint32Array
                    ? (o = l.UNSIGNED_INT)
                    : r instanceof Int32Array
                    ? (o = l.INT)
                    : r instanceof Int8Array
                    ? (o = l.BYTE)
                    : r instanceof Uint8Array && (o = l.UNSIGNED_BYTE),
                  {
                    buffer: a,
                    type: o,
                    bytesPerElement: r.BYTES_PER_ELEMENT,
                    version: i.version,
                  }))
              : s.version < e.version &&
                ((a = s.buffer),
                (o = t),
                (i = (r = e).array),
                (t = r.updateRange),
                l.bindBuffer(o, a),
                !1 === r.dynamic
                  ? l.bufferData(o, i, l.STATIC_DRAW)
                  : -1 === t.count
                  ? l.bufferSubData(o, 0, i)
                  : 0 === t.count
                  ? console.error(
                      "THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."
                    )
                  : (l.bufferSubData(
                      o,
                      t.offset * i.BYTES_PER_ELEMENT,
                      i.subarray(t.offset, t.offset + t.count)
                    ),
                    (t.count = -1)),
                (s.version = e.version));
          },
        };
      }
      function gn(e, t, i, n) {
        (this._x = e || 0),
          (this._y = t || 0),
          (this._z = i || 0),
          (this._order = n || gn.DefaultOrder);
      }
      function vn() {
        this.mask = 1;
      }
      Object.assign(an.prototype, t.prototype, {
        isMaterial: !0,
        onBeforeCompile: function () {},
        setValues: function (e) {
          if (void 0 !== e)
            for (var t in e) {
              var i,
                n = e[t];
              void 0 !== n
                ? "shading" !== t
                  ? void 0 !== (i = this[t])
                    ? i && i.isColor
                      ? i.set(n)
                      : i && i.isVector3 && n && n.isVector3
                      ? i.copy(n)
                      : (this[t] = "overdraw" === t ? Number(n) : n)
                    : console.warn(
                        "THREE." +
                          this.type +
                          ": '" +
                          t +
                          "' is not a property of this material."
                      )
                  : (console.warn(
                      "THREE." +
                        this.type +
                        ": .shading has been removed. Use the boolean .flatShading instead."
                    ),
                    (this.flatShading = 1 === n))
                : console.warn(
                    "THREE.Material: '" + t + "' parameter is undefined."
                  );
            }
        },
        toJSON: function (e) {
          var t = void 0 === e || "string" == typeof e;
          t && (e = { textures: {}, images: {} });
          var i = {
            metadata: {
              version: 4.5,
              type: "Material",
              generator: "Material.toJSON",
            },
          };
          function n(e) {
            var t,
              i = [];
            for (t in e) {
              var n = e[t];
              delete n.metadata, i.push(n);
            }
            return i;
          }
          return (
            (i.uuid = this.uuid),
            (i.type = this.type),
            "" !== this.name && (i.name = this.name),
            this.color && this.color.isColor && (i.color = this.color.getHex()),
            void 0 !== this.roughness && (i.roughness = this.roughness),
            void 0 !== this.metalness && (i.metalness = this.metalness),
            this.emissive &&
              this.emissive.isColor &&
              (i.emissive = this.emissive.getHex()),
            1 !== this.emissiveIntensity &&
              (i.emissiveIntensity = this.emissiveIntensity),
            this.specular &&
              this.specular.isColor &&
              (i.specular = this.specular.getHex()),
            void 0 !== this.shininess && (i.shininess = this.shininess),
            void 0 !== this.clearCoat && (i.clearCoat = this.clearCoat),
            void 0 !== this.clearCoatRoughness &&
              (i.clearCoatRoughness = this.clearCoatRoughness),
            this.map && this.map.isTexture && (i.map = this.map.toJSON(e).uuid),
            this.alphaMap &&
              this.alphaMap.isTexture &&
              (i.alphaMap = this.alphaMap.toJSON(e).uuid),
            this.lightMap &&
              this.lightMap.isTexture &&
              (i.lightMap = this.lightMap.toJSON(e).uuid),
            this.bumpMap &&
              this.bumpMap.isTexture &&
              ((i.bumpMap = this.bumpMap.toJSON(e).uuid),
              (i.bumpScale = this.bumpScale)),
            this.normalMap &&
              this.normalMap.isTexture &&
              ((i.normalMap = this.normalMap.toJSON(e).uuid),
              (i.normalScale = this.normalScale.toArray())),
            this.displacementMap &&
              this.displacementMap.isTexture &&
              ((i.displacementMap = this.displacementMap.toJSON(e).uuid),
              (i.displacementScale = this.displacementScale),
              (i.displacementBias = this.displacementBias)),
            this.roughnessMap &&
              this.roughnessMap.isTexture &&
              (i.roughnessMap = this.roughnessMap.toJSON(e).uuid),
            this.metalnessMap &&
              this.metalnessMap.isTexture &&
              (i.metalnessMap = this.metalnessMap.toJSON(e).uuid),
            this.emissiveMap &&
              this.emissiveMap.isTexture &&
              (i.emissiveMap = this.emissiveMap.toJSON(e).uuid),
            this.specularMap &&
              this.specularMap.isTexture &&
              (i.specularMap = this.specularMap.toJSON(e).uuid),
            this.envMap &&
              this.envMap.isTexture &&
              ((i.envMap = this.envMap.toJSON(e).uuid),
              (i.reflectivity = this.reflectivity)),
            this.gradientMap &&
              this.gradientMap.isTexture &&
              (i.gradientMap = this.gradientMap.toJSON(e).uuid),
            void 0 !== this.size && (i.size = this.size),
            void 0 !== this.sizeAttenuation &&
              (i.sizeAttenuation = this.sizeAttenuation),
            this.blending !== q && (i.blending = this.blending),
            !0 === this.flatShading && (i.flatShading = this.flatShading),
            this.side !== R && (i.side = this.side),
            this.vertexColors !== Ae && (i.vertexColors = this.vertexColors),
            this.opacity < 1 && (i.opacity = this.opacity),
            !0 === this.transparent && (i.transparent = this.transparent),
            (i.depthFunc = this.depthFunc),
            (i.depthTest = this.depthTest),
            (i.depthWrite = this.depthWrite),
            0 !== this.rotation && (i.rotation = this.rotation),
            1 !== this.linewidth && (i.linewidth = this.linewidth),
            void 0 !== this.dashSize && (i.dashSize = this.dashSize),
            void 0 !== this.gapSize && (i.gapSize = this.gapSize),
            void 0 !== this.scale && (i.scale = this.scale),
            !0 === this.dithering && (i.dithering = !0),
            0 < this.alphaTest && (i.alphaTest = this.alphaTest),
            !0 === this.premultipliedAlpha &&
              (i.premultipliedAlpha = this.premultipliedAlpha),
            !0 === this.wireframe && (i.wireframe = this.wireframe),
            1 < this.wireframeLinewidth &&
              (i.wireframeLinewidth = this.wireframeLinewidth),
            "round" !== this.wireframeLinecap &&
              (i.wireframeLinecap = this.wireframeLinecap),
            "round" !== this.wireframeLinejoin &&
              (i.wireframeLinejoin = this.wireframeLinejoin),
            !0 === this.morphTargets && (i.morphTargets = !0),
            !0 === this.skinning && (i.skinning = !0),
            !1 === this.visible && (i.visible = !1),
            "{}" !== JSON.stringify(this.userData) &&
              (i.userData = this.userData),
            t &&
              ((t = n(e.textures)),
              (e = n(e.images)),
              0 < t.length && (i.textures = t),
              0 < e.length && (i.images = e)),
            i
          );
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          (this.name = e.name),
            (this.fog = e.fog),
            (this.lights = e.lights),
            (this.blending = e.blending),
            (this.side = e.side),
            (this.flatShading = e.flatShading),
            (this.vertexColors = e.vertexColors),
            (this.opacity = e.opacity),
            (this.transparent = e.transparent),
            (this.blendSrc = e.blendSrc),
            (this.blendDst = e.blendDst),
            (this.blendEquation = e.blendEquation),
            (this.blendSrcAlpha = e.blendSrcAlpha),
            (this.blendDstAlpha = e.blendDstAlpha),
            (this.blendEquationAlpha = e.blendEquationAlpha),
            (this.depthFunc = e.depthFunc),
            (this.depthTest = e.depthTest),
            (this.depthWrite = e.depthWrite),
            (this.colorWrite = e.colorWrite),
            (this.precision = e.precision),
            (this.polygonOffset = e.polygonOffset),
            (this.polygonOffsetFactor = e.polygonOffsetFactor),
            (this.polygonOffsetUnits = e.polygonOffsetUnits),
            (this.dithering = e.dithering),
            (this.alphaTest = e.alphaTest),
            (this.premultipliedAlpha = e.premultipliedAlpha),
            (this.overdraw = e.overdraw),
            (this.visible = e.visible),
            (this.userData = JSON.parse(JSON.stringify(e.userData))),
            (this.clipShadows = e.clipShadows),
            (this.clipIntersection = e.clipIntersection);
          var t = e.clippingPlanes,
            i = null;
          if (null !== t)
            for (var n = t.length, i = new Array(n), r = 0; r !== n; ++r)
              i[r] = t[r].clone();
          return (this.clippingPlanes = i), this;
        },
        dispose: function () {
          this.dispatchEvent({ type: "dispose" });
        },
      }),
        (((sn.prototype = Object.create(an.prototype)).constructor =
          sn).prototype.isMeshDepthMaterial = !0),
        (sn.prototype.copy = function (e) {
          return (
            an.prototype.copy.call(this, e),
            (this.depthPacking = e.depthPacking),
            (this.skinning = e.skinning),
            (this.morphTargets = e.morphTargets),
            (this.map = e.map),
            (this.alphaMap = e.alphaMap),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            this
          );
        }),
        (((ln.prototype = Object.create(an.prototype)).constructor =
          ln).prototype.isMeshDistanceMaterial = !0),
        (ln.prototype.copy = function (e) {
          return (
            an.prototype.copy.call(this, e),
            this.referencePosition.copy(e.referencePosition),
            (this.nearDistance = e.nearDistance),
            (this.farDistance = e.farDistance),
            (this.skinning = e.skinning),
            (this.morphTargets = e.morphTargets),
            (this.map = e.map),
            (this.alphaMap = e.alphaMap),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            this
          );
        }),
        Object.assign(cn.prototype, {
          isBox3: !0,
          set: function (e, t) {
            return this.min.copy(e), this.max.copy(t), this;
          },
          setFromArray: function (e) {
            for (
              var t = 1 / 0,
                i = 1 / 0,
                n = 1 / 0,
                r = -1 / 0,
                o = -1 / 0,
                a = -1 / 0,
                s = 0,
                l = e.length;
              s < l;
              s += 3
            ) {
              var c = e[s],
                h = e[s + 1],
                u = e[s + 2];
              c < t && (t = c),
                h < i && (i = h),
                u < n && (n = u),
                r < c && (r = c),
                o < h && (o = h),
                a < u && (a = u);
            }
            return this.min.set(t, i, n), this.max.set(r, o, a), this;
          },
          setFromBufferAttribute: function (e) {
            for (
              var t = 1 / 0,
                i = 1 / 0,
                n = 1 / 0,
                r = -1 / 0,
                o = -1 / 0,
                a = -1 / 0,
                s = 0,
                l = e.count;
              s < l;
              s++
            ) {
              var c = e.getX(s),
                h = e.getY(s),
                u = e.getZ(s);
              c < t && (t = c),
                h < i && (i = h),
                u < n && (n = u),
                r < c && (r = c),
                o < h && (o = h),
                a < u && (a = u);
            }
            return this.min.set(t, i, n), this.max.set(r, o, a), this;
          },
          setFromPoints: function (e) {
            this.makeEmpty();
            for (var t = 0, i = e.length; t < i; t++) this.expandByPoint(e[t]);
            return this;
          },
          setFromCenterAndSize:
            ((Wi = new Ct()),
            function (e, t) {
              t = Wi.copy(t).multiplyScalar(0.5);
              return this.min.copy(e).sub(t), this.max.copy(e).add(t), this;
            }),
          setFromObject: function (e) {
            return this.makeEmpty(), this.expandByObject(e);
          },
          clone: function () {
            return new this.constructor().copy(this);
          },
          copy: function (e) {
            return this.min.copy(e.min), this.max.copy(e.max), this;
          },
          makeEmpty: function () {
            return (
              (this.min.x = this.min.y = this.min.z = 1 / 0),
              (this.max.x = this.max.y = this.max.z = -1 / 0),
              this
            );
          },
          isEmpty: function () {
            return (
              this.max.x < this.min.x ||
              this.max.y < this.min.y ||
              this.max.z < this.min.z
            );
          },
          getCenter: function (e) {
            e = e || new Ct();
            return this.isEmpty()
              ? e.set(0, 0, 0)
              : e.addVectors(this.min, this.max).multiplyScalar(0.5);
          },
          getSize: function (e) {
            e = e || new Ct();
            return this.isEmpty()
              ? e.set(0, 0, 0)
              : e.subVectors(this.max, this.min);
          },
          expandByPoint: function (e) {
            return this.min.min(e), this.max.max(e), this;
          },
          expandByVector: function (e) {
            return this.min.sub(e), this.max.add(e), this;
          },
          expandByScalar: function (e) {
            return this.min.addScalar(-e), this.max.addScalar(e), this;
          },
          expandByObject:
            ((Vi = new Ct()),
            function (e) {
              return (ji = this), e.updateMatrixWorld(!0), e.traverse(hn), this;
            }),
          containsPoint: function (e) {
            return !(
              e.x < this.min.x ||
              e.x > this.max.x ||
              e.y < this.min.y ||
              e.y > this.max.y ||
              e.z < this.min.z ||
              e.z > this.max.z
            );
          },
          containsBox: function (e) {
            return (
              this.min.x <= e.min.x &&
              e.max.x <= this.max.x &&
              this.min.y <= e.min.y &&
              e.max.y <= this.max.y &&
              this.min.z <= e.min.z &&
              e.max.z <= this.max.z
            );
          },
          getParameter: function (e, t) {
            return (t || new Ct()).set(
              (e.x - this.min.x) / (this.max.x - this.min.x),
              (e.y - this.min.y) / (this.max.y - this.min.y),
              (e.z - this.min.z) / (this.max.z - this.min.z)
            );
          },
          intersectsBox: function (e) {
            return !(
              e.max.x < this.min.x ||
              e.min.x > this.max.x ||
              e.max.y < this.min.y ||
              e.min.y > this.max.y ||
              e.max.z < this.min.z ||
              e.min.z > this.max.z
            );
          },
          intersectsSphere:
            ((zi = new Ct()),
            function (e) {
              return (
                this.clampPoint(e.center, zi),
                zi.distanceToSquared(e.center) <= e.radius * e.radius
              );
            }),
          intersectsPlane: function (e) {
            var t,
              i =
                0 < e.normal.x
                  ? ((t = e.normal.x * this.min.x), e.normal.x * this.max.x)
                  : ((t = e.normal.x * this.max.x), e.normal.x * this.min.x);
            return (
              0 < e.normal.y
                ? ((t += e.normal.y * this.min.y),
                  (i += e.normal.y * this.max.y))
                : ((t += e.normal.y * this.max.y),
                  (i += e.normal.y * this.min.y)),
              0 < e.normal.z
                ? ((t += e.normal.z * this.min.z),
                  (i += e.normal.z * this.max.z))
                : ((t += e.normal.z * this.max.z),
                  (i += e.normal.z * this.min.z)),
              t <= e.constant && i >= e.constant
            );
          },
          clampPoint: function (e, t) {
            return (t || new Ct()).copy(e).clamp(this.min, this.max);
          },
          distanceToPoint:
            ((Bi = new Ct()),
            function (e) {
              return Bi.copy(e).clamp(this.min, this.max).sub(e).length();
            }),
          getBoundingSphere:
            ((Ui = new Ct()),
            function (e) {
              e = e || new un();
              return (
                this.getCenter(e.center),
                (e.radius = 0.5 * this.getSize(Ui).length()),
                e
              );
            }),
          intersect: function (e) {
            return (
              this.min.max(e.min),
              this.max.min(e.max),
              this.isEmpty() && this.makeEmpty(),
              this
            );
          },
          union: function (e) {
            return this.min.min(e.min), this.max.max(e.max), this;
          },
          applyMatrix4:
            ((ki = [
              new Ct(),
              new Ct(),
              new Ct(),
              new Ct(),
              new Ct(),
              new Ct(),
              new Ct(),
              new Ct(),
            ]),
            function (e) {
              return (
                this.isEmpty() ||
                  (ki[0]
                    .set(this.min.x, this.min.y, this.min.z)
                    .applyMatrix4(e),
                  ki[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
                  ki[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
                  ki[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
                  ki[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
                  ki[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
                  ki[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
                  ki[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
                  this.setFromPoints(ki)),
                this
              );
            }),
          translate: function (e) {
            return this.min.add(e), this.max.add(e), this;
          },
          equals: function (e) {
            return e.min.equals(this.min) && e.max.equals(this.max);
          },
        }),
        Object.assign(un.prototype, {
          set: function (e, t) {
            return this.center.copy(e), (this.radius = t), this;
          },
          setFromPoints:
            ((Xi = new cn()),
            function (e, t) {
              var i = this.center;
              void 0 !== t ? i.copy(t) : Xi.setFromPoints(e).getCenter(i);
              for (var n = 0, r = 0, o = e.length; r < o; r++)
                n = Math.max(n, i.distanceToSquared(e[r]));
              return (this.radius = Math.sqrt(n)), this;
            }),
          clone: function () {
            return new this.constructor().copy(this);
          },
          copy: function (e) {
            return this.center.copy(e.center), (this.radius = e.radius), this;
          },
          empty: function () {
            return this.radius <= 0;
          },
          containsPoint: function (e) {
            return (
              e.distanceToSquared(this.center) <= this.radius * this.radius
            );
          },
          distanceToPoint: function (e) {
            return e.distanceTo(this.center) - this.radius;
          },
          intersectsSphere: function (e) {
            var t = this.radius + e.radius;
            return e.center.distanceToSquared(this.center) <= t * t;
          },
          intersectsBox: function (e) {
            return e.intersectsSphere(this);
          },
          intersectsPlane: function (e) {
            return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
          },
          clampPoint: function (e, t) {
            var i = this.center.distanceToSquared(e),
              t = t || new Ct();
            return (
              t.copy(e),
              i > this.radius * this.radius &&
                (t.sub(this.center).normalize(),
                t.multiplyScalar(this.radius).add(this.center)),
              t
            );
          },
          getBoundingBox: function (e) {
            e = e || new cn();
            return (
              e.set(this.center, this.center), e.expandByScalar(this.radius), e
            );
          },
          applyMatrix4: function (e) {
            return (
              this.center.applyMatrix4(e),
              (this.radius = this.radius * e.getMaxScaleOnAxis()),
              this
            );
          },
          translate: function (e) {
            return this.center.add(e), this;
          },
          equals: function (e) {
            return e.center.equals(this.center) && e.radius === this.radius;
          },
        }),
        Object.assign(dn.prototype, {
          set: function (e, t) {
            return this.normal.copy(e), (this.constant = t), this;
          },
          setComponents: function (e, t, i, n) {
            return this.normal.set(e, t, i), (this.constant = n), this;
          },
          setFromNormalAndCoplanarPoint: function (e, t) {
            return (
              this.normal.copy(e), (this.constant = -t.dot(this.normal)), this
            );
          },
          setFromCoplanarPoints:
            ((Zi = new Ct()),
            (Ji = new Ct()),
            function (e, t, i) {
              t = Zi.subVectors(i, t).cross(Ji.subVectors(e, t)).normalize();
              return this.setFromNormalAndCoplanarPoint(t, e), this;
            }),
          clone: function () {
            return new this.constructor().copy(this);
          },
          copy: function (e) {
            return (
              this.normal.copy(e.normal), (this.constant = e.constant), this
            );
          },
          normalize: function () {
            var e = 1 / this.normal.length();
            return this.normal.multiplyScalar(e), (this.constant *= e), this;
          },
          negate: function () {
            return (this.constant *= -1), this.normal.negate(), this;
          },
          distanceToPoint: function (e) {
            return this.normal.dot(e) + this.constant;
          },
          distanceToSphere: function (e) {
            return this.distanceToPoint(e.center) - e.radius;
          },
          projectPoint: function (e, t) {
            return (t || new Ct())
              .copy(this.normal)
              .multiplyScalar(-this.distanceToPoint(e))
              .add(e);
          },
          intersectLine:
            ((Qi = new Ct()),
            function (e, t) {
              var i = t || new Ct(),
                n = e.delta(Qi),
                t = this.normal.dot(n);
              if (0 === t)
                return 0 === this.distanceToPoint(e.start)
                  ? i.copy(e.start)
                  : void 0;
              t = -(e.start.dot(this.normal) + this.constant) / t;
              return t < 0 || 1 < t
                ? void 0
                : i.copy(n).multiplyScalar(t).add(e.start);
            }),
          intersectsLine: function (e) {
            var t = this.distanceToPoint(e.start),
              e = this.distanceToPoint(e.end);
            return (t < 0 && 0 < e) || (e < 0 && 0 < t);
          },
          intersectsBox: function (e) {
            return e.intersectsPlane(this);
          },
          intersectsSphere: function (e) {
            return e.intersectsPlane(this);
          },
          coplanarPoint: function (e) {
            return (e || new Ct())
              .copy(this.normal)
              .multiplyScalar(-this.constant);
          },
          applyMatrix4:
            ((qi = new Ct()),
            (Yi = new Pt()),
            function (e, t) {
              (t = t || Yi.getNormalMatrix(e)),
                (e = this.coplanarPoint(qi).applyMatrix4(e)),
                (t = this.normal.applyMatrix3(t).normalize());
              return (this.constant = -e.dot(t)), this;
            }),
          translate: function (e) {
            return (this.constant -= e.dot(this.normal)), this;
          },
          equals: function (e) {
            return e.normal.equals(this.normal) && e.constant === this.constant;
          },
        }),
        Object.assign(pn.prototype, {
          set: function (e, t, i, n, r, o) {
            var a = this.planes;
            return (
              a[0].copy(e),
              a[1].copy(t),
              a[2].copy(i),
              a[3].copy(n),
              a[4].copy(r),
              a[5].copy(o),
              this
            );
          },
          clone: function () {
            return new this.constructor().copy(this);
          },
          copy: function (e) {
            for (var t = this.planes, i = 0; i < 6; i++) t[i].copy(e.planes[i]);
            return this;
          },
          setFromMatrix: function (e) {
            var t = this.planes,
              i = e.elements,
              n = i[0],
              r = i[1],
              o = i[2],
              a = i[3],
              s = i[4],
              l = i[5],
              c = i[6],
              h = i[7],
              u = i[8],
              d = i[9],
              p = i[10],
              f = i[11],
              m = i[12],
              g = i[13],
              e = i[14],
              i = i[15];
            return (
              t[0].setComponents(a - n, h - s, f - u, i - m).normalize(),
              t[1].setComponents(a + n, h + s, f + u, i + m).normalize(),
              t[2].setComponents(a + r, h + l, f + d, i + g).normalize(),
              t[3].setComponents(a - r, h - l, f - d, i - g).normalize(),
              t[4].setComponents(a - o, h - c, f - p, i - e).normalize(),
              t[5].setComponents(a + o, h + c, f + p, i + e).normalize(),
              this
            );
          },
          intersectsObject:
            ((tn = new un()),
            function (e) {
              var t = e.geometry;
              return (
                null === t.boundingSphere && t.computeBoundingSphere(),
                tn.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),
                this.intersectsSphere(tn)
              );
            }),
          intersectsSprite:
            ((en = new un()),
            function (e) {
              return (
                en.center.set(0, 0, 0),
                (en.radius = 0.7071067811865476),
                en.applyMatrix4(e.matrixWorld),
                this.intersectsSphere(en)
              );
            }),
          intersectsSphere: function (e) {
            for (
              var t = this.planes, i = e.center, n = -e.radius, r = 0;
              r < 6;
              r++
            )
              if (t[r].distanceToPoint(i) < n) return !1;
            return !0;
          },
          intersectsBox:
            (($i = new Ct()),
            (Ki = new Ct()),
            function (e) {
              for (var t = this.planes, i = 0; i < 6; i++) {
                var n = t[i];
                ($i.x = (0 < n.normal.x ? e.min : e.max).x),
                  (Ki.x = (0 < n.normal.x ? e.max : e.min).x),
                  ($i.y = (0 < n.normal.y ? e.min : e.max).y),
                  (Ki.y = (0 < n.normal.y ? e.max : e.min).y),
                  ($i.z = (0 < n.normal.z ? e.min : e.max).z),
                  (Ki.z = (0 < n.normal.z ? e.max : e.min).z);
                var r = n.distanceToPoint($i),
                  n = n.distanceToPoint(Ki);
                if (r < 0 && n < 0) return !1;
              }
              return !0;
            }),
          containsPoint: function (e) {
            for (var t = this.planes, i = 0; i < 6; i++)
              if (t[i].distanceToPoint(e) < 0) return !1;
            return !0;
          },
        }),
        (gn.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"]),
        (gn.DefaultOrder = "XYZ"),
        Object.defineProperties(gn.prototype, {
          x: {
            get: function () {
              return this._x;
            },
            set: function (e) {
              (this._x = e), this.onChangeCallback();
            },
          },
          y: {
            get: function () {
              return this._y;
            },
            set: function (e) {
              (this._y = e), this.onChangeCallback();
            },
          },
          z: {
            get: function () {
              return this._z;
            },
            set: function (e) {
              (this._z = e), this.onChangeCallback();
            },
          },
          order: {
            get: function () {
              return this._order;
            },
            set: function (e) {
              (this._order = e), this.onChangeCallback();
            },
          },
        }),
        Object.assign(gn.prototype, {
          isEuler: !0,
          set: function (e, t, i, n) {
            return (
              (this._x = e),
              (this._y = t),
              (this._z = i),
              (this._order = n || this._order),
              this.onChangeCallback(),
              this
            );
          },
          clone: function () {
            return new this.constructor(this._x, this._y, this._z, this._order);
          },
          copy: function (e) {
            return (
              (this._x = e._x),
              (this._y = e._y),
              (this._z = e._z),
              (this._order = e._order),
              this.onChangeCallback(),
              this
            );
          },
          setFromRotationMatrix: function (e, t, i) {
            var n = Mt.clamp,
              r = e.elements,
              o = r[0],
              a = r[4],
              s = r[8],
              l = r[1],
              c = r[5],
              h = r[9],
              u = r[2],
              e = r[6],
              r = r[10];
            return (
              "XYZ" === (t = t || this._order)
                ? ((this._y = Math.asin(n(s, -1, 1))),
                  Math.abs(s) < 0.99999
                    ? ((this._x = Math.atan2(-h, r)),
                      (this._z = Math.atan2(-a, o)))
                    : ((this._x = Math.atan2(e, c)), (this._z = 0)))
                : "YXZ" === t
                ? ((this._x = Math.asin(-n(h, -1, 1))),
                  Math.abs(h) < 0.99999
                    ? ((this._y = Math.atan2(s, r)),
                      (this._z = Math.atan2(l, c)))
                    : ((this._y = Math.atan2(-u, o)), (this._z = 0)))
                : "ZXY" === t
                ? ((this._x = Math.asin(n(e, -1, 1))),
                  Math.abs(e) < 0.99999
                    ? ((this._y = Math.atan2(-u, r)),
                      (this._z = Math.atan2(-a, c)))
                    : ((this._y = 0), (this._z = Math.atan2(l, o))))
                : "ZYX" === t
                ? ((this._y = Math.asin(-n(u, -1, 1))),
                  Math.abs(u) < 0.99999
                    ? ((this._x = Math.atan2(e, r)),
                      (this._z = Math.atan2(l, o)))
                    : ((this._x = 0), (this._z = Math.atan2(-a, c))))
                : "YZX" === t
                ? ((this._z = Math.asin(n(l, -1, 1))),
                  Math.abs(l) < 0.99999
                    ? ((this._x = Math.atan2(-h, c)),
                      (this._y = Math.atan2(-u, o)))
                    : ((this._x = 0), (this._y = Math.atan2(s, r))))
                : "XZY" === t
                ? ((this._z = Math.asin(-n(a, -1, 1))),
                  Math.abs(a) < 0.99999
                    ? ((this._x = Math.atan2(e, c)),
                      (this._y = Math.atan2(s, o)))
                    : ((this._x = Math.atan2(-h, r)), (this._y = 0)))
                : console.warn(
                    "THREE.Euler: .setFromRotationMatrix() given unsupported order: " +
                      t
                  ),
              (this._order = t),
              !1 !== i && this.onChangeCallback(),
              this
            );
          },
          setFromQuaternion:
            ((rn = new At()),
            function (e, t, i) {
              return (
                rn.makeRotationFromQuaternion(e),
                this.setFromRotationMatrix(rn, t, i)
              );
            }),
          setFromVector3: function (e, t) {
            return this.set(e.x, e.y, e.z, t || this._order);
          },
          reorder:
            ((nn = new Lt()),
            function (e) {
              return nn.setFromEuler(this), this.setFromQuaternion(nn, e);
            }),
          equals: function (e) {
            return (
              e._x === this._x &&
              e._y === this._y &&
              e._z === this._z &&
              e._order === this._order
            );
          },
          fromArray: function (e) {
            return (
              (this._x = e[0]),
              (this._y = e[1]),
              (this._z = e[2]),
              void 0 !== e[3] && (this._order = e[3]),
              this.onChangeCallback(),
              this
            );
          },
          toArray: function (e, t) {
            return (
              void 0 === e && (e = []),
              void 0 === t && (t = 0),
              (e[t] = this._x),
              (e[t + 1] = this._y),
              (e[t + 2] = this._z),
              (e[t + 3] = this._order),
              e
            );
          },
          toVector3: function (e) {
            return e
              ? e.set(this._x, this._y, this._z)
              : new Ct(this._x, this._y, this._z);
          },
          onChange: function (e) {
            return (this.onChangeCallback = e), this;
          },
          onChangeCallback: function () {},
        }),
        Object.assign(vn.prototype, {
          set: function (e) {
            this.mask = (1 << e) | 0;
          },
          enable: function (e) {
            this.mask |= (1 << e) | 0;
          },
          toggle: function (e) {
            this.mask ^= (1 << e) | 0;
          },
          disable: function (e) {
            this.mask &= ~((1 << e) | 0);
          },
          test: function (e) {
            return 0 != (this.mask & e.mask);
          },
        });
      var yn,
        _n,
        xn,
        bn,
        wn,
        Tn,
        Sn,
        Mn,
        En,
        An,
        Ln,
        Cn,
        Pn,
        Rn,
        On,
        In,
        Dn,
        Nn,
        Fn,
        kn = 0;
      function Un() {
        Object.defineProperty(this, "id", { value: kn++ }),
          (this.uuid = Mt.generateUUID()),
          (this.name = ""),
          (this.type = "Object3D"),
          (this.parent = null),
          (this.children = []),
          (this.up = Un.DefaultUp.clone());
        var e = new Ct(),
          t = new gn(),
          i = new Lt(),
          n = new Ct(1, 1, 1);
        t.onChange(function () {
          i.setFromEuler(t, !1);
        }),
          i.onChange(function () {
            t.setFromQuaternion(i, void 0, !1);
          }),
          Object.defineProperties(this, {
            position: { enumerable: !0, value: e },
            rotation: { enumerable: !0, value: t },
            quaternion: { enumerable: !0, value: i },
            scale: { enumerable: !0, value: n },
            modelViewMatrix: { value: new At() },
            normalMatrix: { value: new Pt() },
          }),
          (this.matrix = new At()),
          (this.matrixWorld = new At()),
          (this.matrixAutoUpdate = Un.DefaultMatrixAutoUpdate),
          (this.matrixWorldNeedsUpdate = !1),
          (this.layers = new vn()),
          (this.visible = !0),
          (this.castShadow = !1),
          (this.receiveShadow = !1),
          (this.frustumCulled = !0),
          (this.renderOrder = 0),
          (this.userData = {});
      }
      function Bn() {
        Un.call(this),
          (this.type = "Camera"),
          (this.matrixWorldInverse = new At()),
          (this.projectionMatrix = new At());
      }
      function zn(e, t, i, n, r, o) {
        Bn.call(this),
          (this.type = "OrthographicCamera"),
          (this.zoom = 1),
          (this.view = null),
          (this.left = e),
          (this.right = t),
          (this.top = i),
          (this.bottom = n),
          (this.near = void 0 !== r ? r : 0.1),
          (this.far = void 0 !== o ? o : 2e3),
          this.updateProjectionMatrix();
      }
      function jn(e, t, i, n, r, o) {
        (this.a = e),
          (this.b = t),
          (this.c = i),
          (this.normal = n && n.isVector3 ? n : new Ct()),
          (this.vertexNormals = Array.isArray(n) ? n : []),
          (this.color = r && r.isColor ? r : new Mi()),
          (this.vertexColors = Array.isArray(r) ? r : []),
          (this.materialIndex = void 0 !== o ? o : 0);
      }
      (Un.DefaultUp = new Ct(0, 1, 0)),
        (Un.DefaultMatrixAutoUpdate = !0),
        Object.assign(Un.prototype, t.prototype, {
          isObject3D: !0,
          onBeforeRender: function () {},
          onAfterRender: function () {},
          applyMatrix: function (e) {
            this.matrix.multiplyMatrices(e, this.matrix),
              this.matrix.decompose(this.position, this.quaternion, this.scale);
          },
          applyQuaternion: function (e) {
            return this.quaternion.premultiply(e), this;
          },
          setRotationFromAxisAngle: function (e, t) {
            this.quaternion.setFromAxisAngle(e, t);
          },
          setRotationFromEuler: function (e) {
            this.quaternion.setFromEuler(e, !0);
          },
          setRotationFromMatrix: function (e) {
            this.quaternion.setFromRotationMatrix(e);
          },
          setRotationFromQuaternion: function (e) {
            this.quaternion.copy(e);
          },
          rotateOnAxis:
            ((Nn = new Lt()),
            function (e, t) {
              return (
                Nn.setFromAxisAngle(e, t), this.quaternion.multiply(Nn), this
              );
            }),
          rotateOnWorldAxis:
            ((Dn = new Lt()),
            function (e, t) {
              return (
                Dn.setFromAxisAngle(e, t), this.quaternion.premultiply(Dn), this
              );
            }),
          rotateX:
            ((In = new Ct(1, 0, 0)),
            function (e) {
              return this.rotateOnAxis(In, e);
            }),
          rotateY:
            ((On = new Ct(0, 1, 0)),
            function (e) {
              return this.rotateOnAxis(On, e);
            }),
          rotateZ:
            ((Rn = new Ct(0, 0, 1)),
            function (e) {
              return this.rotateOnAxis(Rn, e);
            }),
          translateOnAxis:
            ((Pn = new Ct()),
            function (e, t) {
              return (
                Pn.copy(e).applyQuaternion(this.quaternion),
                this.position.add(Pn.multiplyScalar(t)),
                this
              );
            }),
          translateX:
            ((Cn = new Ct(1, 0, 0)),
            function (e) {
              return this.translateOnAxis(Cn, e);
            }),
          translateY:
            ((Ln = new Ct(0, 1, 0)),
            function (e) {
              return this.translateOnAxis(Ln, e);
            }),
          translateZ:
            ((An = new Ct(0, 0, 1)),
            function (e) {
              return this.translateOnAxis(An, e);
            }),
          localToWorld: function (e) {
            return e.applyMatrix4(this.matrixWorld);
          },
          worldToLocal:
            ((En = new At()),
            function (e) {
              return e.applyMatrix4(En.getInverse(this.matrixWorld));
            }),
          lookAt:
            ((Sn = new At()),
            (Mn = new Ct()),
            function (e, t, i) {
              e.isVector3 ? Mn.copy(e) : Mn.set(e, t, i),
                this.isCamera
                  ? Sn.lookAt(this.position, Mn, this.up)
                  : Sn.lookAt(Mn, this.position, this.up),
                this.quaternion.setFromRotationMatrix(Sn);
            }),
          add: function (e) {
            if (1 < arguments.length) {
              for (var t = 0; t < arguments.length; t++) this.add(arguments[t]);
              return this;
            }
            return (
              e === this
                ? console.error(
                    "THREE.Object3D.add: object can't be added as a child of itself.",
                    e
                  )
                : e && e.isObject3D
                ? (null !== e.parent && e.parent.remove(e),
                  (e.parent = this),
                  e.dispatchEvent({ type: "added" }),
                  this.children.push(e))
                : console.error(
                    "THREE.Object3D.add: object not an instance of THREE.Object3D.",
                    e
                  ),
              this
            );
          },
          remove: function (e) {
            if (1 < arguments.length) {
              for (var t = 0; t < arguments.length; t++)
                this.remove(arguments[t]);
              return this;
            }
            var i = this.children.indexOf(e);
            return (
              -1 !== i &&
                ((e.parent = null),
                e.dispatchEvent({ type: "removed" }),
                this.children.splice(i, 1)),
              this
            );
          },
          getObjectById: function (e) {
            return this.getObjectByProperty("id", e);
          },
          getObjectByName: function (e) {
            return this.getObjectByProperty("name", e);
          },
          getObjectByProperty: function (e, t) {
            if (this[e] === t) return this;
            for (var i = 0, n = this.children.length; i < n; i++) {
              var r = this.children[i].getObjectByProperty(e, t);
              if (void 0 !== r) return r;
            }
          },
          getWorldPosition: function (e) {
            e = e || new Ct();
            return (
              this.updateMatrixWorld(!0),
              e.setFromMatrixPosition(this.matrixWorld)
            );
          },
          getWorldQuaternion:
            ((wn = new Ct()),
            (Tn = new Ct()),
            function (e) {
              e = e || new Lt();
              return (
                this.updateMatrixWorld(!0),
                this.matrixWorld.decompose(wn, e, Tn),
                e
              );
            }),
          getWorldRotation:
            ((bn = new Lt()),
            function (e) {
              e = e || new gn();
              return (
                this.getWorldQuaternion(bn),
                e.setFromQuaternion(bn, this.rotation.order, !1)
              );
            }),
          getWorldScale:
            ((_n = new Ct()),
            (xn = new Lt()),
            function (e) {
              e = e || new Ct();
              return (
                this.updateMatrixWorld(!0),
                this.matrixWorld.decompose(_n, xn, e),
                e
              );
            }),
          getWorldDirection:
            ((yn = new Lt()),
            function (e) {
              e = e || new Ct();
              return (
                this.getWorldQuaternion(yn), e.set(0, 0, 1).applyQuaternion(yn)
              );
            }),
          raycast: function () {},
          traverse: function (e) {
            e(this);
            for (var t = this.children, i = 0, n = t.length; i < n; i++)
              t[i].traverse(e);
          },
          traverseVisible: function (e) {
            if (!1 !== this.visible) {
              e(this);
              for (var t = this.children, i = 0, n = t.length; i < n; i++)
                t[i].traverseVisible(e);
            }
          },
          traverseAncestors: function (e) {
            var t = this.parent;
            null !== t && (e(t), t.traverseAncestors(e));
          },
          updateMatrix: function () {
            this.matrix.compose(this.position, this.quaternion, this.scale),
              (this.matrixWorldNeedsUpdate = !0);
          },
          updateMatrixWorld: function (e) {
            this.matrixAutoUpdate && this.updateMatrix(),
              (this.matrixWorldNeedsUpdate || e) &&
                (null === this.parent
                  ? this.matrixWorld.copy(this.matrix)
                  : this.matrixWorld.multiplyMatrices(
                      this.parent.matrixWorld,
                      this.matrix
                    ),
                (e = !(this.matrixWorldNeedsUpdate = !1)));
            for (var t = this.children, i = 0, n = t.length; i < n; i++)
              t[i].updateMatrixWorld(e);
          },
          toJSON: function (i) {
            var e = void 0 === i || "string" == typeof i,
              t = {};
            e &&
              ((i = {
                geometries: {},
                materials: {},
                textures: {},
                images: {},
              }),
              (t.metadata = {
                version: 4.5,
                type: "Object",
                generator: "Object3D.toJSON",
              }));
            var n,
              r,
              o,
              a = {};
            function s(e, t) {
              return void 0 === e[t.uuid] && (e[t.uuid] = t.toJSON(i)), t.uuid;
            }
            if (
              ((a.uuid = this.uuid),
              (a.type = this.type),
              "" !== this.name && (a.name = this.name),
              !0 === this.castShadow && (a.castShadow = !0),
              !0 === this.receiveShadow && (a.receiveShadow = !0),
              !1 === this.visible && (a.visible = !1),
              "{}" !== JSON.stringify(this.userData) &&
                (a.userData = this.userData),
              (a.matrix = this.matrix.toArray()),
              void 0 !== this.geometry &&
                (a.geometry = s(i.geometries, this.geometry)),
              void 0 !== this.material)
            )
              if (Array.isArray(this.material)) {
                for (var l = [], c = 0, h = this.material.length; c < h; c++)
                  l.push(s(i.materials, this.material[c]));
                a.material = l;
              } else a.material = s(i.materials, this.material);
            if (0 < this.children.length) {
              a.children = [];
              for (c = 0; c < this.children.length; c++)
                a.children.push(this.children[c].toJSON(i).object);
            }
            return (
              e &&
                ((n = u(i.geometries)),
                (r = u(i.materials)),
                (o = u(i.textures)),
                (e = u(i.images)),
                0 < n.length && (t.geometries = n),
                0 < r.length && (t.materials = r),
                0 < o.length && (t.textures = o),
                0 < e.length && (t.images = e)),
              (t.object = a),
              t
            );
            function u(e) {
              var t,
                i = [];
              for (t in e) {
                var n = e[t];
                delete n.metadata, i.push(n);
              }
              return i;
            }
          },
          clone: function (e) {
            return new this.constructor().copy(this, e);
          },
          copy: function (e, t) {
            if (
              (void 0 === t && (t = !0),
              (this.name = e.name),
              this.up.copy(e.up),
              this.position.copy(e.position),
              this.quaternion.copy(e.quaternion),
              this.scale.copy(e.scale),
              this.matrix.copy(e.matrix),
              this.matrixWorld.copy(e.matrixWorld),
              (this.matrixAutoUpdate = e.matrixAutoUpdate),
              (this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate),
              (this.layers.mask = e.layers.mask),
              (this.visible = e.visible),
              (this.castShadow = e.castShadow),
              (this.receiveShadow = e.receiveShadow),
              (this.frustumCulled = e.frustumCulled),
              (this.renderOrder = e.renderOrder),
              (this.userData = JSON.parse(JSON.stringify(e.userData))),
              !0 === t)
            )
              for (var i = 0; i < e.children.length; i++) {
                var n = e.children[i];
                this.add(n.clone());
              }
            return this;
          },
        }),
        (Bn.prototype = Object.assign(Object.create(Un.prototype), {
          constructor: Bn,
          isCamera: !0,
          copy: function (e, t) {
            return (
              Un.prototype.copy.call(this, e, t),
              this.matrixWorldInverse.copy(e.matrixWorldInverse),
              this.projectionMatrix.copy(e.projectionMatrix),
              this
            );
          },
          getWorldDirection:
            ((Fn = new Lt()),
            function (e) {
              e = e || new Ct();
              return (
                this.getWorldQuaternion(Fn), e.set(0, 0, -1).applyQuaternion(Fn)
              );
            }),
          updateMatrixWorld: function (e) {
            Un.prototype.updateMatrixWorld.call(this, e),
              this.matrixWorldInverse.getInverse(this.matrixWorld);
          },
          clone: function () {
            return new this.constructor().copy(this);
          },
        })),
        (zn.prototype = Object.assign(Object.create(Bn.prototype), {
          constructor: zn,
          isOrthographicCamera: !0,
          copy: function (e, t) {
            return (
              Bn.prototype.copy.call(this, e, t),
              (this.left = e.left),
              (this.right = e.right),
              (this.top = e.top),
              (this.bottom = e.bottom),
              (this.near = e.near),
              (this.far = e.far),
              (this.zoom = e.zoom),
              (this.view = null === e.view ? null : Object.assign({}, e.view)),
              this
            );
          },
          setViewOffset: function (e, t, i, n, r, o) {
            null === this.view &&
              (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1,
              }),
              (this.view.enabled = !0),
              (this.view.fullWidth = e),
              (this.view.fullHeight = t),
              (this.view.offsetX = i),
              (this.view.offsetY = n),
              (this.view.width = r),
              (this.view.height = o),
              this.updateProjectionMatrix();
          },
          clearViewOffset: function () {
            null !== this.view && (this.view.enabled = !1),
              this.updateProjectionMatrix();
          },
          updateProjectionMatrix: function () {
            var e = (this.right - this.left) / (2 * this.zoom),
              t = (this.top - this.bottom) / (2 * this.zoom),
              i = (this.right + this.left) / 2,
              n = (this.top + this.bottom) / 2,
              r = i - e,
              o = i + e,
              a = n + t,
              s = n - t;
            null !== this.view &&
              this.view.enabled &&
              ((i = this.zoom / (this.view.width / this.view.fullWidth)),
              (e = this.zoom / (this.view.height / this.view.fullHeight)),
              (n = (this.right - this.left) / this.view.width),
              (t = (this.top - this.bottom) / this.view.height),
              (o =
                (r += n * (this.view.offsetX / i)) + n * (this.view.width / i)),
              (s =
                (a -= t * (this.view.offsetY / e)) -
                t * (this.view.height / e))),
              this.projectionMatrix.makeOrthographic(
                r,
                o,
                a,
                s,
                this.near,
                this.far
              );
          },
          toJSON: function (e) {
            e = Un.prototype.toJSON.call(this, e);
            return (
              (e.object.zoom = this.zoom),
              (e.object.left = this.left),
              (e.object.right = this.right),
              (e.object.top = this.top),
              (e.object.bottom = this.bottom),
              (e.object.near = this.near),
              (e.object.far = this.far),
              null !== this.view &&
                (e.object.view = Object.assign({}, this.view)),
              e
            );
          },
        })),
        Object.assign(jn.prototype, {
          clone: function () {
            return new this.constructor().copy(this);
          },
          copy: function (e) {
            (this.a = e.a),
              (this.b = e.b),
              (this.c = e.c),
              this.normal.copy(e.normal),
              this.color.copy(e.color),
              (this.materialIndex = e.materialIndex);
            for (var t = 0, i = e.vertexNormals.length; t < i; t++)
              this.vertexNormals[t] = e.vertexNormals[t].clone();
            for (t = 0, i = e.vertexColors.length; t < i; t++)
              this.vertexColors[t] = e.vertexColors[t].clone();
            return this;
          },
        });
      var Hn,
        Gn,
        Vn,
        Wn,
        Xn,
        qn,
        Yn = 0;
      function Qn() {
        Object.defineProperty(this, "id", { value: (Yn += 2) }),
          (this.uuid = Mt.generateUUID()),
          (this.name = ""),
          (this.type = "Geometry"),
          (this.vertices = []),
          (this.colors = []),
          (this.faces = []),
          (this.faceVertexUvs = [[]]),
          (this.morphTargets = []),
          (this.morphNormals = []),
          (this.skinWeights = []),
          (this.skinIndices = []),
          (this.lineDistances = []),
          (this.boundingBox = null),
          (this.boundingSphere = null),
          (this.elementsNeedUpdate = !1),
          (this.verticesNeedUpdate = !1),
          (this.uvsNeedUpdate = !1),
          (this.normalsNeedUpdate = !1),
          (this.colorsNeedUpdate = !1),
          (this.lineDistancesNeedUpdate = !1),
          (this.groupsNeedUpdate = !1);
      }
      function Zn(e, t, i) {
        if (Array.isArray(e))
          throw new TypeError(
            "THREE.BufferAttribute: array should be a Typed Array."
          );
        (this.uuid = Mt.generateUUID()),
          (this.name = ""),
          (this.array = e),
          (this.itemSize = t),
          (this.count = void 0 !== e ? e.length / t : 0),
          (this.normalized = !0 === i),
          (this.dynamic = !1),
          (this.updateRange = { offset: 0, count: -1 }),
          (this.onUploadCallback = function () {}),
          (this.version = 0);
      }
      function Jn(e, t, i) {
        Zn.call(this, new Int8Array(e), t, i);
      }
      function $n(e, t, i) {
        Zn.call(this, new Uint8Array(e), t, i);
      }
      function Kn(e, t, i) {
        Zn.call(this, new Uint8ClampedArray(e), t, i);
      }
      function er(e, t, i) {
        Zn.call(this, new Int16Array(e), t, i);
      }
      function tr(e, t, i) {
        Zn.call(this, new Uint16Array(e), t, i);
      }
      function ir(e, t, i) {
        Zn.call(this, new Int32Array(e), t, i);
      }
      function nr(e, t, i) {
        Zn.call(this, new Uint32Array(e), t, i);
      }
      function rr(e, t, i) {
        Zn.call(this, new Float32Array(e), t, i);
      }
      function or(e, t, i) {
        Zn.call(this, new Float64Array(e), t, i);
      }
      function ar() {
        (this.indices = []),
          (this.vertices = []),
          (this.normals = []),
          (this.colors = []),
          (this.uvs = []),
          (this.uvs2 = []),
          (this.groups = []),
          (this.morphTargets = {}),
          (this.skinWeights = []),
          (this.skinIndices = []),
          (this.boundingBox = null),
          (this.boundingSphere = null),
          (this.verticesNeedUpdate = !1),
          (this.normalsNeedUpdate = !1),
          (this.colorsNeedUpdate = !1),
          (this.uvsNeedUpdate = !1),
          (this.groupsNeedUpdate = !1);
      }
      function sr(e) {
        if (0 === e.length) return -1 / 0;
        for (var t = e[0], i = 1, n = e.length; i < n; ++i)
          e[i] > t && (t = e[i]);
        return t;
      }
      Object.assign(Qn.prototype, t.prototype, {
        isGeometry: !0,
        applyMatrix: function (e) {
          for (
            var t = new Pt().getNormalMatrix(e),
              i = 0,
              n = this.vertices.length;
            i < n;
            i++
          )
            this.vertices[i].applyMatrix4(e);
          for (i = 0, n = this.faces.length; i < n; i++) {
            var r = this.faces[i];
            r.normal.applyMatrix3(t).normalize();
            for (var o = 0, a = r.vertexNormals.length; o < a; o++)
              r.vertexNormals[o].applyMatrix3(t).normalize();
          }
          return (
            null !== this.boundingBox && this.computeBoundingBox(),
            null !== this.boundingSphere && this.computeBoundingSphere(),
            (this.verticesNeedUpdate = !0),
            (this.normalsNeedUpdate = !0),
            this
          );
        },
        rotateX:
          ((qn = new At()),
          function (e) {
            return qn.makeRotationX(e), this.applyMatrix(qn), this;
          }),
        rotateY:
          ((Xn = new At()),
          function (e) {
            return Xn.makeRotationY(e), this.applyMatrix(Xn), this;
          }),
        rotateZ:
          ((Wn = new At()),
          function (e) {
            return Wn.makeRotationZ(e), this.applyMatrix(Wn), this;
          }),
        translate:
          ((Vn = new At()),
          function (e, t, i) {
            return Vn.makeTranslation(e, t, i), this.applyMatrix(Vn), this;
          }),
        scale:
          ((Gn = new At()),
          function (e, t, i) {
            return Gn.makeScale(e, t, i), this.applyMatrix(Gn), this;
          }),
        lookAt:
          ((Hn = new Un()),
          function (e) {
            Hn.lookAt(e), Hn.updateMatrix(), this.applyMatrix(Hn.matrix);
          }),
        fromBufferGeometry: function (e) {
          var r = this,
            t = null !== e.index ? e.index.array : void 0,
            i = e.attributes,
            n = i.position.array,
            o = void 0 !== i.normal ? i.normal.array : void 0,
            a = void 0 !== i.color ? i.color.array : void 0,
            s = void 0 !== i.uv ? i.uv.array : void 0,
            l = void 0 !== i.uv2 ? i.uv2.array : void 0;
          void 0 !== l && (this.faceVertexUvs[1] = []);
          for (
            var c = [], h = [], u = [], d = 0, p = 0;
            d < n.length;
            d += 3, p += 2
          )
            r.vertices.push(new Ct(n[d], n[d + 1], n[d + 2])),
              void 0 !== o && c.push(new Ct(o[d], o[d + 1], o[d + 2])),
              void 0 !== a && r.colors.push(new Mi(a[d], a[d + 1], a[d + 2])),
              void 0 !== s && h.push(new Et(s[p], s[p + 1])),
              void 0 !== l && u.push(new Et(l[p], l[p + 1]));
          function f(e, t, i, n) {
            n = new jn(
              e,
              t,
              i,
              void 0 !== o ? [c[e].clone(), c[t].clone(), c[i].clone()] : [],
              void 0 !== a
                ? [
                    r.colors[e].clone(),
                    r.colors[t].clone(),
                    r.colors[i].clone(),
                  ]
                : [],
              n
            );
            r.faces.push(n),
              void 0 !== s &&
                r.faceVertexUvs[0].push([
                  h[e].clone(),
                  h[t].clone(),
                  h[i].clone(),
                ]),
              void 0 !== l &&
                r.faceVertexUvs[1].push([
                  u[e].clone(),
                  u[t].clone(),
                  u[i].clone(),
                ]);
          }
          var m = e.groups;
          if (0 < m.length)
            for (d = 0; d < m.length; d++)
              for (
                var g = m[d], v = g.start, p = v, y = v + g.count;
                p < y;
                p += 3
              )
                void 0 !== t
                  ? f(t[p], t[p + 1], t[p + 2], g.materialIndex)
                  : f(p, p + 1, p + 2, g.materialIndex);
          else if (void 0 !== t)
            for (d = 0; d < t.length; d += 3) f(t[d], t[d + 1], t[d + 2]);
          else for (d = 0; d < n.length / 3; d += 3) f(d, d + 1, d + 2);
          return (
            this.computeFaceNormals(),
            null !== e.boundingBox &&
              (this.boundingBox = e.boundingBox.clone()),
            null !== e.boundingSphere &&
              (this.boundingSphere = e.boundingSphere.clone()),
            this
          );
        },
        center: function () {
          this.computeBoundingBox();
          var e = this.boundingBox.getCenter().negate();
          return this.translate(e.x, e.y, e.z), e;
        },
        normalize: function () {
          this.computeBoundingSphere();
          var e = this.boundingSphere.center,
            t = this.boundingSphere.radius,
            i = 0 === t ? 1 : 1 / t,
            t = new At();
          return (
            t.set(
              i,
              0,
              0,
              -i * e.x,
              0,
              i,
              0,
              -i * e.y,
              0,
              0,
              i,
              -i * e.z,
              0,
              0,
              0,
              1
            ),
            this.applyMatrix(t),
            this
          );
        },
        computeFaceNormals: function () {
          for (
            var e = new Ct(), t = new Ct(), i = 0, n = this.faces.length;
            i < n;
            i++
          ) {
            var r = this.faces[i],
              o = this.vertices[r.a],
              a = this.vertices[r.b],
              s = this.vertices[r.c];
            e.subVectors(s, a),
              t.subVectors(o, a),
              e.cross(t),
              e.normalize(),
              r.normal.copy(e);
          }
        },
        computeVertexNormals: function (e) {
          var t, i, n, r;
          for (
            void 0 === e && (e = !0),
              r = new Array(this.vertices.length),
              t = 0,
              i = this.vertices.length;
            t < i;
            t++
          )
            r[t] = new Ct();
          if (e)
            for (
              var o,
                a,
                s,
                l = new Ct(),
                c = new Ct(),
                h = 0,
                u = this.faces.length;
              h < u;
              h++
            )
              (n = this.faces[h]),
                (o = this.vertices[n.a]),
                (a = this.vertices[n.b]),
                (s = this.vertices[n.c]),
                l.subVectors(s, a),
                c.subVectors(o, a),
                l.cross(c),
                r[n.a].add(l),
                r[n.b].add(l),
                r[n.c].add(l);
          else
            for (
              this.computeFaceNormals(), h = 0, u = this.faces.length;
              h < u;
              h++
            )
              r[(n = this.faces[h]).a].add(n.normal),
                r[n.b].add(n.normal),
                r[n.c].add(n.normal);
          for (t = 0, i = this.vertices.length; t < i; t++) r[t].normalize();
          for (h = 0, u = this.faces.length; h < u; h++) {
            var d = (n = this.faces[h]).vertexNormals;
            3 === d.length
              ? (d[0].copy(r[n.a]), d[1].copy(r[n.b]), d[2].copy(r[n.c]))
              : ((d[0] = r[n.a].clone()),
                (d[1] = r[n.b].clone()),
                (d[2] = r[n.c].clone()));
          }
          0 < this.faces.length && (this.normalsNeedUpdate = !0);
        },
        computeFlatVertexNormals: function () {
          var e, t, i;
          for (
            this.computeFaceNormals(), e = 0, t = this.faces.length;
            e < t;
            e++
          ) {
            var n = (i = this.faces[e]).vertexNormals;
            3 === n.length
              ? (n[0].copy(i.normal), n[1].copy(i.normal), n[2].copy(i.normal))
              : ((n[0] = i.normal.clone()),
                (n[1] = i.normal.clone()),
                (n[2] = i.normal.clone()));
          }
          0 < this.faces.length && (this.normalsNeedUpdate = !0);
        },
        computeMorphNormals: function () {
          var e, t, i;
          for (a = 0, s = this.faces.length; a < s; a++)
            for (
              (i = this.faces[a]).__originalFaceNormal
                ? i.__originalFaceNormal.copy(i.normal)
                : (i.__originalFaceNormal = i.normal.clone()),
                i.__originalVertexNormals || (i.__originalVertexNormals = []),
                e = 0,
                t = i.vertexNormals.length;
              e < t;
              e++
            )
              i.__originalVertexNormals[e]
                ? i.__originalVertexNormals[e].copy(i.vertexNormals[e])
                : (i.__originalVertexNormals[e] = i.vertexNormals[e].clone());
          var n = new Qn();
          for (
            n.faces = this.faces, e = 0, t = this.morphTargets.length;
            e < t;
            e++
          ) {
            if (!this.morphNormals[e]) {
              (this.morphNormals[e] = {}),
                (this.morphNormals[e].faceNormals = []),
                (this.morphNormals[e].vertexNormals = []);
              for (
                var r = this.morphNormals[e].faceNormals,
                  o = this.morphNormals[e].vertexNormals,
                  a = 0,
                  s = this.faces.length;
                a < s;
                a++
              )
                (l = new Ct()),
                  (c = { a: new Ct(), b: new Ct(), c: new Ct() }),
                  r.push(l),
                  o.push(c);
            }
            var l,
              c,
              h = this.morphNormals[e];
            for (
              n.vertices = this.morphTargets[e].vertices,
                n.computeFaceNormals(),
                n.computeVertexNormals(),
                a = 0,
                s = this.faces.length;
              a < s;
              a++
            )
              (i = this.faces[a]),
                (l = h.faceNormals[a]),
                (c = h.vertexNormals[a]),
                l.copy(i.normal),
                c.a.copy(i.vertexNormals[0]),
                c.b.copy(i.vertexNormals[1]),
                c.c.copy(i.vertexNormals[2]);
          }
          for (a = 0, s = this.faces.length; a < s; a++)
            ((i = this.faces[a]).normal = i.__originalFaceNormal),
              (i.vertexNormals = i.__originalVertexNormals);
        },
        computeLineDistances: function () {
          for (var e = 0, t = this.vertices, i = 0, n = t.length; i < n; i++)
            0 < i && (e += t[i].distanceTo(t[i - 1])),
              (this.lineDistances[i] = e);
        },
        computeBoundingBox: function () {
          null === this.boundingBox && (this.boundingBox = new cn()),
            this.boundingBox.setFromPoints(this.vertices);
        },
        computeBoundingSphere: function () {
          null === this.boundingSphere && (this.boundingSphere = new un()),
            this.boundingSphere.setFromPoints(this.vertices);
        },
        merge: function (e, t, i) {
          if (e && e.isGeometry) {
            var n,
              r = this.vertices.length,
              o = this.vertices,
              a = e.vertices,
              s = this.faces,
              l = e.faces,
              c = this.faceVertexUvs[0],
              h = e.faceVertexUvs[0],
              u = this.colors,
              d = e.colors;
            void 0 === i && (i = 0),
              void 0 !== t && (n = new Pt().getNormalMatrix(t));
            for (var p = 0, f = a.length; p < f; p++) {
              var m = a[p].clone();
              void 0 !== t && m.applyMatrix4(t), o.push(m);
            }
            for (p = 0, f = d.length; p < f; p++) u.push(d[p].clone());
            for (p = 0, f = l.length; p < f; p++) {
              var g,
                v,
                y = l[p],
                _ = y.vertexNormals,
                x = y.vertexColors,
                b = new jn(y.a + r, y.b + r, y.c + r);
              b.normal.copy(y.normal),
                void 0 !== n && b.normal.applyMatrix3(n).normalize();
              for (var w = 0, T = _.length; w < T; w++)
                (g = _[w].clone()),
                  void 0 !== n && g.applyMatrix3(n).normalize(),
                  b.vertexNormals.push(g);
              b.color.copy(y.color);
              for (w = 0, T = x.length; w < T; w++)
                (v = x[w]), b.vertexColors.push(v.clone());
              (b.materialIndex = y.materialIndex + i), s.push(b);
            }
            for (p = 0, f = h.length; p < f; p++) {
              var S = h[p],
                M = [];
              if (void 0 !== S) {
                for (w = 0, T = S.length; w < T; w++) M.push(S[w].clone());
                c.push(M);
              }
            }
          } else
            console.error(
              "THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",
              e
            );
        },
        mergeMesh: function (e) {
          e && e.isMesh
            ? (e.matrixAutoUpdate && e.updateMatrix(),
              this.merge(e.geometry, e.matrix))
            : console.error(
                "THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",
                e
              );
        },
        mergeVertices: function () {
          for (
            var e,
              t,
              i,
              n,
              r,
              o = {},
              a = [],
              s = [],
              l = Math.pow(10, 4),
              c = 0,
              h = this.vertices.length;
            c < h;
            c++
          )
            (e = this.vertices[c]),
              void 0 ===
              o[
                (e =
                  Math.round(e.x * l) +
                  "_" +
                  Math.round(e.y * l) +
                  "_" +
                  Math.round(e.z * l))
              ]
                ? ((o[e] = c), a.push(this.vertices[c]), (s[c] = a.length - 1))
                : (s[c] = s[o[e]]);
          var u = [];
          for (c = 0, h = this.faces.length; c < h; c++) {
            ((t = this.faces[c]).a = s[t.a]),
              (t.b = s[t.b]),
              (t.c = s[t.c]),
              (i = [t.a, t.b, t.c]);
            for (var d = 0; d < 3; d++)
              if (i[d] === i[(d + 1) % 3]) {
                u.push(c);
                break;
              }
          }
          for (c = u.length - 1; 0 <= c; c--) {
            var p = u[c];
            for (
              this.faces.splice(p, 1), n = 0, r = this.faceVertexUvs.length;
              n < r;
              n++
            )
              this.faceVertexUvs[n].splice(p, 1);
          }
          var f = this.vertices.length - a.length;
          return (this.vertices = a), f;
        },
        setFromPoints: function (e) {
          this.vertices = [];
          for (var t = 0, i = e.length; t < i; t++) {
            var n = e[t];
            this.vertices.push(new Ct(n.x, n.y, n.z || 0));
          }
          return this;
        },
        sortFacesByMaterialIndex: function () {
          for (var e = this.faces, t = e.length, i = 0; i < t; i++)
            e[i]._id = i;
          e.sort(function (e, t) {
            return e.materialIndex - t.materialIndex;
          });
          var n,
            r,
            o = this.faceVertexUvs[0],
            a = this.faceVertexUvs[1];
          o && o.length === t && (n = []), a && a.length === t && (r = []);
          for (i = 0; i < t; i++) {
            var s = e[i]._id;
            n && n.push(o[s]), r && r.push(a[s]);
          }
          n && (this.faceVertexUvs[0] = n), r && (this.faceVertexUvs[1] = r);
        },
        toJSON: function () {
          var e = {
            metadata: {
              version: 4.5,
              type: "Geometry",
              generator: "Geometry.toJSON",
            },
          };
          if (
            ((e.uuid = this.uuid),
            (e.type = this.type),
            "" !== this.name && (e.name = this.name),
            void 0 !== this.parameters)
          ) {
            var t,
              i = this.parameters;
            for (t in i) void 0 !== i[t] && (e[t] = i[t]);
            return e;
          }
          for (var n = [], r = 0; r < this.vertices.length; r++) {
            var o = this.vertices[r];
            n.push(o.x, o.y, o.z);
          }
          for (
            var a = [], s = [], l = {}, c = [], h = {}, u = [], d = {}, r = 0;
            r < this.faces.length;
            r++
          ) {
            var p,
              f = this.faces[r],
              m = void 0 !== this.faceVertexUvs[0][r],
              g = 0 < f.normal.length(),
              v = 0 < f.vertexNormals.length,
              y = 1 !== f.color.r || 1 !== f.color.g || 1 !== f.color.b,
              _ = 0 < f.vertexColors.length;
            (p = x(2, 3, m)),
              (p = x(p, 4, g)),
              (p = x(p, 5, v)),
              (p = x(p, 6, y)),
              (p = x(p, 7, _)),
              a.push(p),
              a.push(f.a, f.b, f.c),
              a.push(f.materialIndex),
              m &&
                ((m = this.faceVertexUvs[0][r]),
                a.push(T(m[0]), T(m[1]), T(m[2]))),
              g && a.push(b(f.normal)),
              v && ((v = f.vertexNormals), a.push(b(v[0]), b(v[1]), b(v[2]))),
              y && a.push(w(f.color)),
              _ && ((f = f.vertexColors), a.push(w(f[0]), w(f[1]), w(f[2])));
          }
          function x(e, t, i) {
            return i ? e | (1 << t) : e & ~(1 << t);
          }
          function b(e) {
            var t = e.x.toString() + e.y.toString() + e.z.toString();
            return (
              void 0 !== l[t] || ((l[t] = s.length / 3), s.push(e.x, e.y, e.z)),
              l[t]
            );
          }
          function w(e) {
            var t = e.r.toString() + e.g.toString() + e.b.toString();
            return (
              void 0 !== h[t] || ((h[t] = c.length), c.push(e.getHex())), h[t]
            );
          }
          function T(e) {
            var t = e.x.toString() + e.y.toString();
            return (
              void 0 !== d[t] || ((d[t] = u.length / 2), u.push(e.x, e.y)), d[t]
            );
          }
          return (
            (e.data = {}),
            (e.data.vertices = n),
            (e.data.normals = s),
            0 < c.length && (e.data.colors = c),
            0 < u.length && (e.data.uvs = [u]),
            (e.data.faces = a),
            e
          );
        },
        clone: function () {
          return new Qn().copy(this);
        },
        copy: function (e) {
          var t, i;
          (this.vertices = []),
            (this.colors = []),
            (this.faces = []),
            (this.faceVertexUvs = [[]]),
            (this.morphTargets = []),
            (this.morphNormals = []),
            (this.skinWeights = []),
            (this.skinIndices = []),
            (this.lineDistances = []),
            (this.boundingBox = null),
            (this.boundingSphere = null),
            (this.name = e.name);
          for (var n = e.vertices, r = 0, o = n.length; r < o; r++)
            this.vertices.push(n[r].clone());
          var a = e.colors;
          for (r = 0, o = a.length; r < o; r++) this.colors.push(a[r].clone());
          var s = e.faces;
          for (r = 0, o = s.length; r < o; r++) this.faces.push(s[r].clone());
          for (r = 0, o = e.faceVertexUvs.length; r < o; r++) {
            var l = e.faceVertexUvs[r];
            for (
              void 0 === this.faceVertexUvs[r] && (this.faceVertexUvs[r] = []),
                t = 0,
                i = l.length;
              t < i;
              t++
            ) {
              for (var c = l[t], h = [], u = 0, d = c.length; u < d; u++) {
                var p = c[u];
                h.push(p.clone());
              }
              this.faceVertexUvs[r].push(h);
            }
          }
          var f = e.morphTargets;
          for (r = 0, o = f.length; r < o; r++) {
            var m = {};
            if (((m.name = f[r].name), void 0 !== f[r].vertices))
              for (m.vertices = [], t = 0, i = f[r].vertices.length; t < i; t++)
                m.vertices.push(f[r].vertices[t].clone());
            if (void 0 !== f[r].normals)
              for (m.normals = [], t = 0, i = f[r].normals.length; t < i; t++)
                m.normals.push(f[r].normals[t].clone());
            this.morphTargets.push(m);
          }
          var g = e.morphNormals;
          for (r = 0, o = g.length; r < o; r++) {
            var v = {};
            if (void 0 !== g[r].vertexNormals)
              for (
                v.vertexNormals = [], t = 0, i = g[r].vertexNormals.length;
                t < i;
                t++
              ) {
                var y = g[r].vertexNormals[t],
                  _ = {};
                (_.a = y.a.clone()),
                  (_.b = y.b.clone()),
                  (_.c = y.c.clone()),
                  v.vertexNormals.push(_);
              }
            if (void 0 !== g[r].faceNormals)
              for (
                v.faceNormals = [], t = 0, i = g[r].faceNormals.length;
                t < i;
                t++
              )
                v.faceNormals.push(g[r].faceNormals[t].clone());
            this.morphNormals.push(v);
          }
          var x = e.skinWeights;
          for (r = 0, o = x.length; r < o; r++)
            this.skinWeights.push(x[r].clone());
          var b = e.skinIndices;
          for (r = 0, o = b.length; r < o; r++)
            this.skinIndices.push(b[r].clone());
          var w = e.lineDistances;
          for (r = 0, o = w.length; r < o; r++) this.lineDistances.push(w[r]);
          var T = e.boundingBox;
          null !== T && (this.boundingBox = T.clone());
          T = e.boundingSphere;
          return (
            null !== T && (this.boundingSphere = T.clone()),
            (this.elementsNeedUpdate = e.elementsNeedUpdate),
            (this.verticesNeedUpdate = e.verticesNeedUpdate),
            (this.uvsNeedUpdate = e.uvsNeedUpdate),
            (this.normalsNeedUpdate = e.normalsNeedUpdate),
            (this.colorsNeedUpdate = e.colorsNeedUpdate),
            (this.lineDistancesNeedUpdate = e.lineDistancesNeedUpdate),
            (this.groupsNeedUpdate = e.groupsNeedUpdate),
            this
          );
        },
        dispose: function () {
          this.dispatchEvent({ type: "dispose" });
        },
      }),
        Object.defineProperty(Zn.prototype, "needsUpdate", {
          set: function (e) {
            !0 === e && this.version++;
          },
        }),
        Object.assign(Zn.prototype, {
          isBufferAttribute: !0,
          setArray: function (e) {
            if (Array.isArray(e))
              throw new TypeError(
                "THREE.BufferAttribute: array should be a Typed Array."
              );
            (this.count = void 0 !== e ? e.length / this.itemSize : 0),
              (this.array = e);
          },
          setDynamic: function (e) {
            return (this.dynamic = e), this;
          },
          copy: function (e) {
            return (
              (this.array = new e.array.constructor(e.array)),
              (this.itemSize = e.itemSize),
              (this.count = e.count),
              (this.normalized = e.normalized),
              (this.dynamic = e.dynamic),
              this
            );
          },
          copyAt: function (e, t, i) {
            (e *= this.itemSize), (i *= t.itemSize);
            for (var n = 0, r = this.itemSize; n < r; n++)
              this.array[e + n] = t.array[i + n];
            return this;
          },
          copyArray: function (e) {
            return this.array.set(e), this;
          },
          copyColorsArray: function (e) {
            for (var t = this.array, i = 0, n = 0, r = e.length; n < r; n++) {
              var o = e[n];
              void 0 === o &&
                (console.warn(
                  "THREE.BufferAttribute.copyColorsArray(): color is undefined",
                  n
                ),
                (o = new Mi())),
                (t[i++] = o.r),
                (t[i++] = o.g),
                (t[i++] = o.b);
            }
            return this;
          },
          copyIndicesArray: function (e) {
            for (var t = this.array, i = 0, n = 0, r = e.length; n < r; n++) {
              var o = e[n];
              (t[i++] = o.a), (t[i++] = o.b), (t[i++] = o.c);
            }
            return this;
          },
          copyVector2sArray: function (e) {
            for (var t = this.array, i = 0, n = 0, r = e.length; n < r; n++) {
              var o = e[n];
              void 0 === o &&
                (console.warn(
                  "THREE.BufferAttribute.copyVector2sArray(): vector is undefined",
                  n
                ),
                (o = new Et())),
                (t[i++] = o.x),
                (t[i++] = o.y);
            }
            return this;
          },
          copyVector3sArray: function (e) {
            for (var t = this.array, i = 0, n = 0, r = e.length; n < r; n++) {
              var o = e[n];
              void 0 === o &&
                (console.warn(
                  "THREE.BufferAttribute.copyVector3sArray(): vector is undefined",
                  n
                ),
                (o = new Ct())),
                (t[i++] = o.x),
                (t[i++] = o.y),
                (t[i++] = o.z);
            }
            return this;
          },
          copyVector4sArray: function (e) {
            for (var t = this.array, i = 0, n = 0, r = e.length; n < r; n++) {
              var o = e[n];
              void 0 === o &&
                (console.warn(
                  "THREE.BufferAttribute.copyVector4sArray(): vector is undefined",
                  n
                ),
                (o = new Nt())),
                (t[i++] = o.x),
                (t[i++] = o.y),
                (t[i++] = o.z),
                (t[i++] = o.w);
            }
            return this;
          },
          set: function (e, t) {
            return void 0 === t && (t = 0), this.array.set(e, t), this;
          },
          getX: function (e) {
            return this.array[e * this.itemSize];
          },
          setX: function (e, t) {
            return (this.array[e * this.itemSize] = t), this;
          },
          getY: function (e) {
            return this.array[e * this.itemSize + 1];
          },
          setY: function (e, t) {
            return (this.array[e * this.itemSize + 1] = t), this;
          },
          getZ: function (e) {
            return this.array[e * this.itemSize + 2];
          },
          setZ: function (e, t) {
            return (this.array[e * this.itemSize + 2] = t), this;
          },
          getW: function (e) {
            return this.array[e * this.itemSize + 3];
          },
          setW: function (e, t) {
            return (this.array[e * this.itemSize + 3] = t), this;
          },
          setXY: function (e, t, i) {
            return (
              (e *= this.itemSize),
              (this.array[e + 0] = t),
              (this.array[e + 1] = i),
              this
            );
          },
          setXYZ: function (e, t, i, n) {
            return (
              (e *= this.itemSize),
              (this.array[e + 0] = t),
              (this.array[e + 1] = i),
              (this.array[e + 2] = n),
              this
            );
          },
          setXYZW: function (e, t, i, n, r) {
            return (
              (e *= this.itemSize),
              (this.array[e + 0] = t),
              (this.array[e + 1] = i),
              (this.array[e + 2] = n),
              (this.array[e + 3] = r),
              this
            );
          },
          onUpload: function (e) {
            return (this.onUploadCallback = e), this;
          },
          clone: function () {
            return new this.constructor(this.array, this.itemSize).copy(this);
          },
        }),
        ((Jn.prototype = Object.create(Zn.prototype)).constructor = Jn),
        (($n.prototype = Object.create(Zn.prototype)).constructor = $n),
        ((Kn.prototype = Object.create(Zn.prototype)).constructor = Kn),
        ((er.prototype = Object.create(Zn.prototype)).constructor = er),
        ((tr.prototype = Object.create(Zn.prototype)).constructor = tr),
        ((ir.prototype = Object.create(Zn.prototype)).constructor = ir),
        ((nr.prototype = Object.create(Zn.prototype)).constructor = nr),
        ((rr.prototype = Object.create(Zn.prototype)).constructor = rr),
        ((or.prototype = Object.create(Zn.prototype)).constructor = or),
        Object.assign(ar.prototype, {
          computeGroups: function (e) {
            for (
              var t, i = [], n = void 0, r = e.faces, o = 0;
              o < r.length;
              o++
            ) {
              var a = r[o];
              a.materialIndex !== n &&
                ((n = a.materialIndex),
                void 0 !== t && ((t.count = 3 * o - t.start), i.push(t)),
                (t = { start: 3 * o, materialIndex: n }));
            }
            void 0 !== t && ((t.count = 3 * o - t.start), i.push(t)),
              (this.groups = i);
          },
          fromGeometry: function (e) {
            var t,
              i = e.faces,
              n = e.vertices,
              r = e.faceVertexUvs,
              o = r[0] && 0 < r[0].length,
              a = r[1] && 0 < r[1].length,
              s = e.morphTargets,
              l = s.length;
            if (0 < l) {
              t = [];
              for (var c = 0; c < l; c++) t[c] = [];
              this.morphTargets.position = t;
            }
            var h,
              u = e.morphNormals,
              d = u.length;
            if (0 < d) {
              h = [];
              for (c = 0; c < d; c++) h[c] = [];
              this.morphTargets.normal = h;
            }
            for (
              var p = e.skinIndices,
                f = e.skinWeights,
                m = p.length === n.length,
                g = f.length === n.length,
                c = 0;
              c < i.length;
              c++
            ) {
              var v = i[c];
              this.vertices.push(n[v.a], n[v.b], n[v.c]);
              var y = v.vertexNormals;
              3 === y.length
                ? this.normals.push(y[0], y[1], y[2])
                : ((x = v.normal), this.normals.push(x, x, x));
              var _,
                x = v.vertexColors;
              3 === x.length
                ? this.colors.push(x[0], x[1], x[2])
                : ((x = v.color), this.colors.push(x, x, x)),
                !0 === o &&
                  (void 0 !== (_ = r[0][c])
                    ? this.uvs.push(_[0], _[1], _[2])
                    : (console.warn(
                        "THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",
                        c
                      ),
                      this.uvs.push(new Et(), new Et(), new Et()))),
                !0 === a &&
                  (void 0 !== (_ = r[1][c])
                    ? this.uvs2.push(_[0], _[1], _[2])
                    : (console.warn(
                        "THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",
                        c
                      ),
                      this.uvs2.push(new Et(), new Et(), new Et())));
              for (var b = 0; b < l; b++) {
                var w = s[b].vertices;
                t[b].push(w[v.a], w[v.b], w[v.c]);
              }
              for (b = 0; b < d; b++) {
                var T = u[b].vertexNormals[c];
                h[b].push(T.a, T.b, T.c);
              }
              m && this.skinIndices.push(p[v.a], p[v.b], p[v.c]),
                g && this.skinWeights.push(f[v.a], f[v.b], f[v.c]);
            }
            return (
              this.computeGroups(e),
              (this.verticesNeedUpdate = e.verticesNeedUpdate),
              (this.normalsNeedUpdate = e.normalsNeedUpdate),
              (this.colorsNeedUpdate = e.colorsNeedUpdate),
              (this.uvsNeedUpdate = e.uvsNeedUpdate),
              (this.groupsNeedUpdate = e.groupsNeedUpdate),
              this
            );
          },
        });
      var lr,
        cr,
        hr,
        ur,
        dr,
        pr,
        fr,
        mr,
        gr,
        vr,
        yr,
        _r,
        xr,
        br,
        wr,
        Tr,
        Sr,
        Mr,
        Er,
        Ar,
        Lr,
        Cr,
        Pr,
        Rr,
        Or,
        Ir,
        Dr,
        Nr,
        Fr,
        kr,
        Ur,
        Br,
        zr,
        jr,
        Hr,
        Gr,
        Vr,
        Wr,
        Xr,
        qr,
        Yr,
        Qr,
        Zr,
        Jr,
        $r,
        Kr,
        eo,
        to,
        io = 1;
      function no() {
        Object.defineProperty(this, "id", { value: (io += 2) }),
          (this.uuid = Mt.generateUUID()),
          (this.name = ""),
          (this.type = "BufferGeometry"),
          (this.index = null),
          (this.attributes = {}),
          (this.morphAttributes = {}),
          (this.groups = []),
          (this.boundingBox = null),
          (this.boundingSphere = null),
          (this.drawRange = { start: 0, count: 1 / 0 });
      }
      function ro(e, t, i, n, r, o) {
        Qn.call(this),
          (this.type = "BoxGeometry"),
          (this.parameters = {
            width: e,
            height: t,
            depth: i,
            widthSegments: n,
            heightSegments: r,
            depthSegments: o,
          }),
          this.fromBufferGeometry(new oo(e, t, i, n, r, o)),
          this.mergeVertices();
      }
      function oo(e, t, i, n, r, o) {
        no.call(this),
          (this.type = "BoxBufferGeometry"),
          (this.parameters = {
            width: e,
            height: t,
            depth: i,
            widthSegments: n,
            heightSegments: r,
            depthSegments: o,
          });
        var C = this;
        (e = e || 1),
          (t = t || 1),
          (i = i || 1),
          (n = Math.floor(n) || 1),
          (r = Math.floor(r) || 1),
          (o = Math.floor(o) || 1);
        var P = [],
          R = [],
          O = [],
          I = [],
          D = 0,
          N = 0;
        function a(e, t, i, n, r, o, a, s, l, c, h) {
          for (
            var u = o / l,
              d = a / c,
              p = o / 2,
              f = a / 2,
              m = s / 2,
              g = l + 1,
              v = c + 1,
              y = 0,
              _ = 0,
              x = new Ct(),
              b = 0;
            b < v;
            b++
          )
            for (var w = b * d - f, T = 0; T < g; T++) {
              var S = T * u - p;
              (x[e] = S * n),
                (x[t] = w * r),
                (x[i] = m),
                R.push(x.x, x.y, x.z),
                (x[e] = 0),
                (x[t] = 0),
                (x[i] = 0 < s ? 1 : -1),
                O.push(x.x, x.y, x.z),
                I.push(T / l),
                I.push(1 - b / c),
                (y += 1);
            }
          for (b = 0; b < c; b++)
            for (T = 0; T < l; T++) {
              var M = D + T + g * b,
                E = D + T + g * (b + 1),
                A = D + (T + 1) + g * (b + 1),
                L = D + (T + 1) + g * b;
              P.push(M, E, L), P.push(E, A, L), (_ += 6);
            }
          C.addGroup(N, _, h), (N += _), (D += y);
        }
        a("z", "y", "x", -1, -1, i, t, e, o, r, 0),
          a("z", "y", "x", 1, -1, i, t, -e, o, r, 1),
          a("x", "z", "y", 1, 1, e, i, t, n, o, 2),
          a("x", "z", "y", 1, -1, e, i, -t, n, o, 3),
          a("x", "y", "z", 1, -1, e, t, i, n, r, 4),
          a("x", "y", "z", -1, -1, e, t, -i, n, r, 5),
          this.setIndex(P),
          this.addAttribute("position", new rr(R, 3)),
          this.addAttribute("normal", new rr(O, 3)),
          this.addAttribute("uv", new rr(I, 2));
      }
      function ao(e, t, i, n) {
        Qn.call(this),
          (this.type = "PlaneGeometry"),
          (this.parameters = {
            width: e,
            height: t,
            widthSegments: i,
            heightSegments: n,
          }),
          this.fromBufferGeometry(new so(e, t, i, n)),
          this.mergeVertices();
      }
      function so(e, t, i, n) {
        no.call(this),
          (this.type = "PlaneBufferGeometry"),
          (this.parameters = {
            width: e,
            height: t,
            widthSegments: i,
            heightSegments: n,
          });
        for (
          var r = (e = e || 1) / 2,
            o = (t = t || 1) / 2,
            a = Math.floor(i) || 1,
            s = Math.floor(n) || 1,
            l = a + 1,
            c = s + 1,
            h = e / a,
            u = t / s,
            d = [],
            p = [],
            f = [],
            m = [],
            g = 0;
          g < c;
          g++
        )
          for (var v = g * u - o, y = 0; y < l; y++) {
            var _ = y * h - r;
            p.push(_, -v, 0), f.push(0, 0, 1), m.push(y / a), m.push(1 - g / s);
          }
        for (g = 0; g < s; g++)
          for (y = 0; y < a; y++) {
            var x = y + l * g,
              b = y + l * (g + 1),
              w = y + 1 + l * (g + 1),
              T = y + 1 + l * g;
            d.push(x, b, T), d.push(b, w, T);
          }
        this.setIndex(d),
          this.addAttribute("position", new rr(p, 3)),
          this.addAttribute("normal", new rr(f, 3)),
          this.addAttribute("uv", new rr(m, 2));
      }
      function lo(e) {
        an.call(this),
          (this.type = "MeshBasicMaterial"),
          (this.color = new Mi(16777215)),
          (this.map = null),
          (this.lightMap = null),
          (this.lightMapIntensity = 1),
          (this.aoMap = null),
          (this.aoMapIntensity = 1),
          (this.specularMap = null),
          (this.alphaMap = null),
          (this.envMap = null),
          (this.combine = he),
          (this.reflectivity = 1),
          (this.refractionRatio = 0.98),
          (this.wireframe = !1),
          (this.wireframeLinewidth = 1),
          (this.wireframeLinecap = "round"),
          (this.wireframeLinejoin = "round"),
          (this.skinning = !1),
          (this.morphTargets = !1),
          (this.lights = !1),
          this.setValues(e);
      }
      function co(e) {
        an.call(this),
          (this.type = "ShaderMaterial"),
          (this.defines = {}),
          (this.uniforms = {}),
          (this.vertexShader =
            "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"),
          (this.fragmentShader =
            "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}"),
          (this.linewidth = 1),
          (this.wireframe = !1),
          (this.wireframeLinewidth = 1),
          (this.fog = !1),
          (this.lights = !1),
          (this.clipping = !1),
          (this.skinning = !1),
          (this.morphTargets = !1),
          (this.morphNormals = !1),
          (this.extensions = {
            derivatives: !1,
            fragDepth: !1,
            drawBuffers: !1,
            shaderTextureLOD: !1,
          }),
          (this.defaultAttributeValues = {
            color: [1, 1, 1],
            uv: [0, 0],
            uv2: [0, 0],
          }),
          (this.index0AttributeName = void 0) !== e &&
            (void 0 !== e.attributes &&
              console.error(
                "THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."
              ),
            this.setValues(e));
      }
      function ho(e, t) {
        (this.origin = void 0 !== e ? e : new Ct()),
          (this.direction = void 0 !== t ? t : new Ct());
      }
      function uo(e, t) {
        (this.start = void 0 !== e ? e : new Ct()),
          (this.end = void 0 !== t ? t : new Ct());
      }
      function po(e, t, i) {
        (this.a = void 0 !== e ? e : new Ct()),
          (this.b = void 0 !== t ? t : new Ct()),
          (this.c = void 0 !== i ? i : new Ct());
      }
      function fo(e, t) {
        Un.call(this),
          (this.type = "Mesh"),
          (this.geometry = void 0 !== e ? e : new no()),
          (this.material =
            void 0 !== t ? t : new lo({ color: 16777215 * Math.random() })),
          (this.drawMode = mt),
          this.updateMorphTargets();
      }
      function mo(e, t, i, n, r, o, a) {
        return (
          po.barycoordFromPoint(e, t, i, n, Kr),
          r.multiplyScalar(Kr.x),
          o.multiplyScalar(Kr.y),
          a.multiplyScalar(Kr.z),
          r.add(o).add(a),
          r.clone()
        );
      }
      function go(e, t, i, n, r, o, a, s) {
        t =
          t.side === V
            ? n.intersectTriangle(a, o, r, !0, s)
            : n.intersectTriangle(r, o, a, t.side !== W, s);
        if (null === t) return null;
        to.copy(s), to.applyMatrix4(e.matrixWorld);
        s = i.ray.origin.distanceTo(to);
        return s < i.near || s > i.far
          ? null
          : { distance: s, point: to.clone(), object: e };
      }
      function vo(e, t, i, n, r, o, a, s) {
        Vr.fromBufferAttribute(n, o),
          Wr.fromBufferAttribute(n, a),
          Xr.fromBufferAttribute(n, s);
        i = go(e, e.material, t, i, Vr, Wr, Xr, eo);
        return (
          i &&
            (r &&
              (Zr.fromBufferAttribute(r, o),
              Jr.fromBufferAttribute(r, a),
              $r.fromBufferAttribute(r, s),
              (i.uv = mo(eo, Vr, Wr, Xr, Zr, Jr, $r))),
            (i.face = new jn(o, a, s, po.normal(Vr, Wr, Xr))),
            (i.faceIndex = o)),
          i
        );
      }
      function yo(r, i, o, n) {
        var a,
          s,
          l,
          c = new Mi(0),
          h = 0;
        function u(e, t) {
          i.buffers.color.setClear(e.r, e.g, e.b, t, n);
        }
        return {
          getClearColor: function () {
            return c;
          },
          setClearColor: function (e, t) {
            c.set(e), u(c, (h = void 0 !== t ? t : 1));
          },
          getClearAlpha: function () {
            return h;
          },
          setClearAlpha: function (e) {
            u(c, (h = e));
          },
          render: function (e, t, i, n) {
            null === (t = t.background)
              ? u(c, h)
              : t && t.isColor && (u(t, 1), (n = !0)),
              (r.autoClear || n) &&
                r.clear(r.autoClearColor, r.autoClearDepth, r.autoClearStencil),
              t && t.isCubeTexture
                ? (void 0 === l &&
                    ((l = new fo(
                      new oo(1, 1, 1),
                      new co({
                        uniforms: Oi.cube.uniforms,
                        vertexShader: Oi.cube.vertexShader,
                        fragmentShader: Oi.cube.fragmentShader,
                        side: V,
                        depthTest: !0,
                        depthWrite: !1,
                        fog: !1,
                      })
                    )).geometry.removeAttribute("normal"),
                    l.geometry.removeAttribute("uv"),
                    (l.onBeforeRender = function (e, t, i) {
                      this.matrixWorld.copyPosition(i.matrixWorld);
                    }),
                    o.update(l.geometry)),
                  (l.material.uniforms.tCube.value = t),
                  e.push(l, l.geometry, l.material, 0, null))
                : t &&
                  t.isTexture &&
                  (void 0 === a &&
                    ((a = new zn(-1, 1, 1, -1, 0, 1)),
                    (s = new fo(
                      new so(2, 2),
                      new lo({ depthTest: !1, depthWrite: !1, fog: !1 })
                    )),
                    o.update(s.geometry)),
                  (s.material.map = t),
                  r.renderBufferDirect(
                    a,
                    null,
                    s.geometry,
                    s.material,
                    s,
                    null
                  ));
          },
        };
      }
      function _o(e, t) {
        return e.renderOrder !== t.renderOrder
          ? e.renderOrder - t.renderOrder
          : e.program && t.program && e.program !== t.program
          ? e.program.id - t.program.id
          : e.material.id !== t.material.id
          ? e.material.id - t.material.id
          : e.z !== t.z
          ? e.z - t.z
          : e.id - t.id;
      }
      function xo(e, t) {
        return e.renderOrder !== t.renderOrder
          ? e.renderOrder - t.renderOrder
          : e.z !== t.z
          ? t.z - e.z
          : e.id - t.id;
      }
      function bo() {
        var a = [],
          s = 0,
          l = [],
          c = [];
        return {
          opaque: l,
          transparent: c,
          init: function () {
            (s = 0), (l.length = 0), (c.length = 0);
          },
          push: function (e, t, i, n, r) {
            var o = a[s];
            void 0 === o
              ? ((o = {
                  id: e.id,
                  object: e,
                  geometry: t,
                  material: i,
                  program: i.program,
                  renderOrder: e.renderOrder,
                  z: n,
                  group: r,
                }),
                (a[s] = o))
              : ((o.id = e.id),
                (o.object = e),
                (o.geometry = t),
                (o.material = i),
                (o.program = i.program),
                (o.renderOrder = e.renderOrder),
                (o.z = n),
                (o.group = r)),
              (!0 === i.transparent ? c : l).push(o),
              s++;
          },
          sort: function () {
            1 < l.length && l.sort(_o), 1 < c.length && c.sort(xo);
          },
        };
      }
      function wo() {
        var i = {};
        return {
          get: function (e, t) {
            return (
              (e = e.id + "," + t.id),
              void 0 === (t = i[e]) && ((t = new bo()), (i[e] = t)),
              t
            );
          },
          dispose: function () {
            i = {};
          },
        };
      }
      function To(e, t) {
        return Math.abs(t[1]) - Math.abs(e[1]);
      }
      function So(p) {
        var f = {},
          m = new Float32Array(8);
        return {
          update: function (e, t, i, n) {
            var r = e.morphTargetInfluences,
              o = r.length,
              a = f[t.id];
            if (void 0 === a) {
              a = [];
              for (var s = 0; s < o; s++) a[s] = [s, 0];
              f[t.id] = a;
            }
            for (
              var l = i.morphTargets && t.morphAttributes.position,
                c = i.morphNormals && t.morphAttributes.normal,
                s = 0;
              s < o;
              s++
            )
              0 !== (h = a[s])[1] &&
                (l && t.removeAttribute("morphTarget" + s),
                c && t.removeAttribute("morphNormal" + s));
            for (s = 0; s < o; s++) ((h = a[s])[0] = s), (h[1] = r[s]);
            a.sort(To);
            for (var h, s = 0; s < 8; s++) {
              if ((h = a[s])) {
                var u = h[0],
                  d = h[1];
                if (d) {
                  l && t.addAttribute("morphTarget" + s, l[u]),
                    c && t.addAttribute("morphNormal" + s, c[u]),
                    (m[s] = d);
                  continue;
                }
              }
              m[s] = 0;
            }
            n.getUniforms().setValue(p, "morphTargetInfluences", m);
          },
        };
      }
      function Mo(r, o, a) {
        var s, l, c;
        (this.setMode = function (e) {
          s = e;
        }),
          (this.setIndex = function (e) {
            (l = e.type), (c = e.bytesPerElement);
          }),
          (this.render = function (e, t) {
            r.drawElements(s, t, l, e * c),
              a.calls++,
              (a.vertices += t),
              s === r.TRIANGLES
                ? (a.faces += t / 3)
                : s === r.POINTS && (a.points += t);
          }),
          (this.renderInstances = function (e, t, i) {
            var n = o.get("ANGLE_instanced_arrays");
            null !== n
              ? (n.drawElementsInstancedANGLE(
                  s,
                  i,
                  l,
                  t * c,
                  e.maxInstancedCount
                ),
                a.calls++,
                (a.vertices += i * e.maxInstancedCount),
                s === r.TRIANGLES
                  ? (a.faces += (e.maxInstancedCount * i) / 3)
                  : s === r.POINTS && (a.points += e.maxInstancedCount * i))
              : console.error(
                  "THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
                );
          });
      }
      function Eo(o, a, s) {
        var l;
        (this.setMode = function (e) {
          l = e;
        }),
          (this.render = function (e, t) {
            o.drawArrays(l, e, t),
              s.calls++,
              (s.vertices += t),
              l === o.TRIANGLES
                ? (s.faces += t / 3)
                : l === o.POINTS && (s.points += t);
          }),
          (this.renderInstances = function (e, t, i) {
            var n,
              r = a.get("ANGLE_instanced_arrays");
            null !== r
              ? ((n = e.attributes.position).isInterleavedBufferAttribute
                  ? ((i = n.data.count),
                    r.drawArraysInstancedANGLE(l, 0, i, e.maxInstancedCount))
                  : r.drawArraysInstancedANGLE(l, t, i, e.maxInstancedCount),
                s.calls++,
                (s.vertices += i * e.maxInstancedCount),
                l === o.TRIANGLES
                  ? (s.faces += (e.maxInstancedCount * i) / 3)
                  : l === o.POINTS && (s.points += e.maxInstancedCount * i))
              : console.error(
                  "THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
                );
          });
      }
      function Ao(u, d, r) {
        var o = {},
          p = {};
        function a(e) {
          var t,
            i = e.target,
            n = o[i.id];
          for (t in (null !== n.index && d.remove(n.index), n.attributes))
            d.remove(n.attributes[t]);
          i.removeEventListener("dispose", a), delete o[i.id];
          e = p[i.id];
          e && (d.remove(e), delete p[i.id]),
            (e = p[n.id]) && (d.remove(e), delete p[n.id]),
            r.geometries--;
        }
        return {
          get: function (e, t) {
            var i = o[t.id];
            return (
              i ||
              (t.addEventListener("dispose", a),
              t.isBufferGeometry
                ? (i = t)
                : t.isGeometry &&
                  (void 0 === t._bufferGeometry &&
                    (t._bufferGeometry = new no().setFromObject(e)),
                  (i = t._bufferGeometry)),
              (o[t.id] = i),
              r.geometries++,
              i)
            );
          },
          update: function (e) {
            var t = e.index,
              i = e.attributes;
            for (n in (null !== t && d.update(t, u.ELEMENT_ARRAY_BUFFER), i))
              d.update(i[n], u.ARRAY_BUFFER);
            var n,
              r = e.morphAttributes;
            for (n in r)
              for (var o = r[n], a = 0, s = o.length; a < s; a++)
                d.update(o[a], u.ARRAY_BUFFER);
          },
          getWireframeAttribute: function (e) {
            var t = p[e.id];
            if (t) return t;
            var i = [],
              n = e.index,
              r = e.attributes;
            if (null !== n)
              for (var o = 0, a = (h = n.array).length; o < a; o += 3) {
                var s = h[o + 0],
                  l = h[o + 1],
                  c = h[o + 2];
                i.push(s, l, l, c, c, s);
              }
            else
              for (
                var h, o = 0, a = (h = r.position.array).length / 3 - 1;
                o < a;
                o += 3
              ) {
                (s = o + 0), (l = o + 1), (c = o + 2);
                i.push(s, l, l, c, c, s);
              }
            return (
              (t = new (65535 < sr(i) ? nr : tr)(i, 1)),
              d.update(t, u.ELEMENT_ARRAY_BUFFER),
              (p[e.id] = t)
            );
          },
        };
      }
      function Lo() {
        var i = {};
        return {
          get: function (e) {
            if (void 0 !== i[e.id]) return i[e.id];
            var t;
            switch (e.type) {
              case "DirectionalLight":
                t = {
                  direction: new Ct(),
                  color: new Mi(),
                  shadow: !1,
                  shadowBias: 0,
                  shadowRadius: 1,
                  shadowMapSize: new Et(),
                };
                break;
              case "SpotLight":
                t = {
                  position: new Ct(),
                  direction: new Ct(),
                  color: new Mi(),
                  distance: 0,
                  coneCos: 0,
                  penumbraCos: 0,
                  decay: 0,
                  shadow: !1,
                  shadowBias: 0,
                  shadowRadius: 1,
                  shadowMapSize: new Et(),
                };
                break;
              case "PointLight":
                t = {
                  position: new Ct(),
                  color: new Mi(),
                  distance: 0,
                  decay: 0,
                  shadow: !1,
                  shadowBias: 0,
                  shadowRadius: 1,
                  shadowMapSize: new Et(),
                  shadowCameraNear: 1,
                  shadowCameraFar: 1e3,
                };
                break;
              case "HemisphereLight":
                t = {
                  direction: new Ct(),
                  skyColor: new Mi(),
                  groundColor: new Mi(),
                };
                break;
              case "RectAreaLight":
                t = {
                  color: new Mi(),
                  position: new Ct(),
                  halfWidth: new Ct(),
                  halfHeight: new Ct(),
                };
            }
            return (i[e.id] = t);
          },
        };
      }
      function Co() {
        var b = new Lo(),
          w = {
            hash: "",
            ambient: [0, 0, 0],
            directional: [],
            directionalShadowMap: [],
            directionalShadowMatrix: [],
            spot: [],
            spotShadowMap: [],
            spotShadowMatrix: [],
            rectArea: [],
            point: [],
            pointShadowMap: [],
            pointShadowMatrix: [],
            hemi: [],
          },
          T = new Ct(),
          S = new At(),
          M = new At();
        return {
          setup: function (e, t, i) {
            for (
              var n = 0,
                r = 0,
                o = 0,
                a = 0,
                s = 0,
                l = 0,
                c = 0,
                h = 0,
                u = i.matrixWorldInverse,
                d = 0,
                p = e.length;
              d < p;
              d++
            ) {
              var f,
                m,
                g = e[d],
                v = g.color,
                y = g.intensity,
                _ = g.distance,
                x = g.shadow && g.shadow.map ? g.shadow.map.texture : null;
              g.isAmbientLight
                ? ((n += v.r * y), (r += v.g * y), (o += v.b * y))
                : g.isDirectionalLight
                ? ((m = b.get(g)).color
                    .copy(g.color)
                    .multiplyScalar(g.intensity),
                  m.direction.setFromMatrixPosition(g.matrixWorld),
                  T.setFromMatrixPosition(g.target.matrixWorld),
                  m.direction.sub(T),
                  m.direction.transformDirection(u),
                  (m.shadow = g.castShadow),
                  g.castShadow &&
                    ((f = g.shadow),
                    (m.shadowBias = f.bias),
                    (m.shadowRadius = f.radius),
                    (m.shadowMapSize = f.mapSize)),
                  (w.directionalShadowMap[a] = x),
                  (w.directionalShadowMatrix[a] = g.shadow.matrix),
                  (w.directional[a] = m),
                  a++)
                : g.isSpotLight
                ? ((m = b.get(g)).position.setFromMatrixPosition(g.matrixWorld),
                  m.position.applyMatrix4(u),
                  m.color.copy(v).multiplyScalar(y),
                  (m.distance = _),
                  m.direction.setFromMatrixPosition(g.matrixWorld),
                  T.setFromMatrixPosition(g.target.matrixWorld),
                  m.direction.sub(T),
                  m.direction.transformDirection(u),
                  (m.coneCos = Math.cos(g.angle)),
                  (m.penumbraCos = Math.cos(g.angle * (1 - g.penumbra))),
                  (m.decay = 0 === g.distance ? 0 : g.decay),
                  (m.shadow = g.castShadow),
                  g.castShadow &&
                    ((f = g.shadow),
                    (m.shadowBias = f.bias),
                    (m.shadowRadius = f.radius),
                    (m.shadowMapSize = f.mapSize)),
                  (w.spotShadowMap[l] = x),
                  (w.spotShadowMatrix[l] = g.shadow.matrix),
                  (w.spot[l] = m),
                  l++)
                : g.isRectAreaLight
                ? ((m = b.get(g)).color
                    .copy(v)
                    .multiplyScalar(y / (g.width * g.height)),
                  m.position.setFromMatrixPosition(g.matrixWorld),
                  m.position.applyMatrix4(u),
                  M.identity(),
                  S.copy(g.matrixWorld),
                  S.premultiply(u),
                  M.extractRotation(S),
                  m.halfWidth.set(0.5 * g.width, 0, 0),
                  m.halfHeight.set(0, 0.5 * g.height, 0),
                  m.halfWidth.applyMatrix4(M),
                  m.halfHeight.applyMatrix4(M),
                  (w.rectArea[c] = m),
                  c++)
                : g.isPointLight
                ? ((m = b.get(g)).position.setFromMatrixPosition(g.matrixWorld),
                  m.position.applyMatrix4(u),
                  m.color.copy(g.color).multiplyScalar(g.intensity),
                  (m.distance = g.distance),
                  (m.decay = 0 === g.distance ? 0 : g.decay),
                  (m.shadow = g.castShadow),
                  g.castShadow &&
                    ((f = g.shadow),
                    (m.shadowBias = f.bias),
                    (m.shadowRadius = f.radius),
                    (m.shadowMapSize = f.mapSize),
                    (m.shadowCameraNear = f.camera.near),
                    (m.shadowCameraFar = f.camera.far)),
                  (w.pointShadowMap[s] = x),
                  (w.pointShadowMatrix[s] = g.shadow.matrix),
                  (w.point[s] = m),
                  s++)
                : g.isHemisphereLight &&
                  ((m = b.get(g)).direction.setFromMatrixPosition(
                    g.matrixWorld
                  ),
                  m.direction.transformDirection(u),
                  m.direction.normalize(),
                  m.skyColor.copy(g.color).multiplyScalar(y),
                  m.groundColor.copy(g.groundColor).multiplyScalar(y),
                  (w.hemi[h] = m),
                  h++);
            }
            (w.ambient[0] = n),
              (w.ambient[1] = r),
              (w.ambient[2] = o),
              (w.directional.length = a),
              (w.spot.length = l),
              (w.rectArea.length = c),
              (w.point.length = s),
              (w.hemi.length = h),
              (w.hash =
                a + "," + s + "," + l + "," + c + "," + h + "," + t.length);
          },
          state: w,
        };
      }
      function Po(r, o) {
        var a = {};
        return {
          update: function (e) {
            var t = o.frame,
              i = e.geometry,
              n = r.get(e, i);
            return (
              a[n.id] !== t &&
                (i.isGeometry && n.updateFromObject(e),
                r.update(n),
                (a[n.id] = t)),
              n
            );
          },
          clear: function () {
            a = {};
          },
        };
      }
      function Ro(e, t, i) {
        var n = e.createShader(t);
        return (
          e.shaderSource(n, i),
          e.compileShader(n),
          !1 === e.getShaderParameter(n, e.COMPILE_STATUS) &&
            console.error("THREE.WebGLShader: Shader couldn't compile."),
          "" !== e.getShaderInfoLog(n) &&
            console.warn(
              "THREE.WebGLShader: gl.getShaderInfoLog()",
              t === e.VERTEX_SHADER ? "vertex" : "fragment",
              e.getShaderInfoLog(n),
              (function (e) {
                for (var t = e.split("\n"), i = 0; i < t.length; i++)
                  t[i] = i + 1 + ": " + t[i];
                return t.join("\n");
              })(i)
            ),
          n
        );
      }
      Object.assign(no.prototype, t.prototype, {
        isBufferGeometry: !0,
        getIndex: function () {
          return this.index;
        },
        setIndex: function (e) {
          Array.isArray(e)
            ? (this.index = new (65535 < sr(e) ? nr : tr)(e, 1))
            : (this.index = e);
        },
        addAttribute: function (e, t) {
          return (t && t.isBufferAttribute) ||
            (t && t.isInterleavedBufferAttribute)
            ? "index" === e
              ? (console.warn(
                  "THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."
                ),
                void this.setIndex(t))
              : ((this.attributes[e] = t), this)
            : (console.warn(
                "THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."
              ),
              void this.addAttribute(e, new Zn(t, arguments[2])));
        },
        getAttribute: function (e) {
          return this.attributes[e];
        },
        removeAttribute: function (e) {
          return delete this.attributes[e], this;
        },
        addGroup: function (e, t, i) {
          this.groups.push({
            start: e,
            count: t,
            materialIndex: void 0 !== i ? i : 0,
          });
        },
        clearGroups: function () {
          this.groups = [];
        },
        setDrawRange: function (e, t) {
          (this.drawRange.start = e), (this.drawRange.count = t);
        },
        applyMatrix: function (e) {
          var t = this.attributes.position;
          void 0 !== t && (e.applyToBufferAttribute(t), (t.needsUpdate = !0));
          t = this.attributes.normal;
          return (
            void 0 !== t &&
              (new Pt().getNormalMatrix(e).applyToBufferAttribute(t),
              (t.needsUpdate = !0)),
            null !== this.boundingBox && this.computeBoundingBox(),
            null !== this.boundingSphere && this.computeBoundingSphere(),
            this
          );
        },
        rotateX:
          ((gr = new At()),
          function (e) {
            return gr.makeRotationX(e), this.applyMatrix(gr), this;
          }),
        rotateY:
          ((mr = new At()),
          function (e) {
            return mr.makeRotationY(e), this.applyMatrix(mr), this;
          }),
        rotateZ:
          ((fr = new At()),
          function (e) {
            return fr.makeRotationZ(e), this.applyMatrix(fr), this;
          }),
        translate:
          ((pr = new At()),
          function (e, t, i) {
            return pr.makeTranslation(e, t, i), this.applyMatrix(pr), this;
          }),
        scale:
          ((dr = new At()),
          function (e, t, i) {
            return dr.makeScale(e, t, i), this.applyMatrix(dr), this;
          }),
        lookAt:
          ((ur = new Un()),
          function (e) {
            ur.lookAt(e), ur.updateMatrix(), this.applyMatrix(ur.matrix);
          }),
        center: function () {
          this.computeBoundingBox();
          var e = this.boundingBox.getCenter().negate();
          return this.translate(e.x, e.y, e.z), e;
        },
        setFromObject: function (e) {
          var t,
            i,
            n = e.geometry;
          return (
            e.isPoints || e.isLine
              ? ((t = new rr(3 * n.vertices.length, 3)),
                (i = new rr(3 * n.colors.length, 3)),
                this.addAttribute("position", t.copyVector3sArray(n.vertices)),
                this.addAttribute("color", i.copyColorsArray(n.colors)),
                n.lineDistances &&
                  n.lineDistances.length === n.vertices.length &&
                  ((i = new rr(n.lineDistances.length, 1)),
                  this.addAttribute(
                    "lineDistance",
                    i.copyArray(n.lineDistances)
                  )),
                null !== n.boundingSphere &&
                  (this.boundingSphere = n.boundingSphere.clone()),
                null !== n.boundingBox &&
                  (this.boundingBox = n.boundingBox.clone()))
              : e.isMesh && n && n.isGeometry && this.fromGeometry(n),
            this
          );
        },
        setFromPoints: function (e) {
          for (var t = [], i = 0, n = e.length; i < n; i++) {
            var r = e[i];
            t.push(r.x, r.y, r.z || 0);
          }
          return this.addAttribute("position", new rr(t, 3)), this;
        },
        updateFromObject: function (e) {
          var t,
            i = e.geometry;
          if (e.isMesh) {
            var n = i.__directGeometry;
            if (
              (!0 === i.elementsNeedUpdate &&
                ((n = void 0), (i.elementsNeedUpdate = !1)),
              void 0 === n)
            )
              return this.fromGeometry(i);
            (n.verticesNeedUpdate = i.verticesNeedUpdate),
              (n.normalsNeedUpdate = i.normalsNeedUpdate),
              (n.colorsNeedUpdate = i.colorsNeedUpdate),
              (n.uvsNeedUpdate = i.uvsNeedUpdate),
              (n.groupsNeedUpdate = i.groupsNeedUpdate),
              (i.verticesNeedUpdate = !1),
              (i.normalsNeedUpdate = !1),
              (i.colorsNeedUpdate = !1),
              (i.uvsNeedUpdate = !1),
              (i.groupsNeedUpdate = !1),
              (i = n);
          }
          return (
            !0 === i.verticesNeedUpdate &&
              (void 0 !== (t = this.attributes.position) &&
                (t.copyVector3sArray(i.vertices), (t.needsUpdate = !0)),
              (i.verticesNeedUpdate = !1)),
            !0 === i.normalsNeedUpdate &&
              (void 0 !== (t = this.attributes.normal) &&
                (t.copyVector3sArray(i.normals), (t.needsUpdate = !0)),
              (i.normalsNeedUpdate = !1)),
            !0 === i.colorsNeedUpdate &&
              (void 0 !== (t = this.attributes.color) &&
                (t.copyColorsArray(i.colors), (t.needsUpdate = !0)),
              (i.colorsNeedUpdate = !1)),
            i.uvsNeedUpdate &&
              (void 0 !== (t = this.attributes.uv) &&
                (t.copyVector2sArray(i.uvs), (t.needsUpdate = !0)),
              (i.uvsNeedUpdate = !1)),
            i.lineDistancesNeedUpdate &&
              (void 0 !== (t = this.attributes.lineDistance) &&
                (t.copyArray(i.lineDistances), (t.needsUpdate = !0)),
              (i.lineDistancesNeedUpdate = !1)),
            i.groupsNeedUpdate &&
              (i.computeGroups(e.geometry),
              (this.groups = i.groups),
              (i.groupsNeedUpdate = !1)),
            this
          );
        },
        fromGeometry: function (e) {
          return (
            (e.__directGeometry = new ar().fromGeometry(e)),
            this.fromDirectGeometry(e.__directGeometry)
          );
        },
        fromDirectGeometry: function (e) {
          var t,
            i,
            n,
            r,
            o = new Float32Array(3 * e.vertices.length);
          for (n in (this.addAttribute(
            "position",
            new Zn(o, 3).copyVector3sArray(e.vertices)
          ),
          0 < e.normals.length &&
            ((o = new Float32Array(3 * e.normals.length)),
            this.addAttribute(
              "normal",
              new Zn(o, 3).copyVector3sArray(e.normals)
            )),
          0 < e.colors.length &&
            ((t = new Float32Array(3 * e.colors.length)),
            this.addAttribute("color", new Zn(t, 3).copyColorsArray(e.colors))),
          0 < e.uvs.length &&
            ((t = new Float32Array(2 * e.uvs.length)),
            this.addAttribute("uv", new Zn(t, 2).copyVector2sArray(e.uvs))),
          0 < e.uvs2.length &&
            ((i = new Float32Array(2 * e.uvs2.length)),
            this.addAttribute("uv2", new Zn(i, 2).copyVector2sArray(e.uvs2))),
          0 < e.indices.length &&
            ((i = new (65535 < sr(e.indices) ? Uint32Array : Uint16Array)(
              3 * e.indices.length
            )),
            this.setIndex(new Zn(i, 1).copyIndicesArray(e.indices))),
          (this.groups = e.groups),
          e.morphTargets)) {
            for (
              var a = [], s = e.morphTargets[n], l = 0, c = s.length;
              l < c;
              l++
            ) {
              var h = s[l],
                u = new rr(3 * h.length, 3);
              a.push(u.copyVector3sArray(h));
            }
            this.morphAttributes[n] = a;
          }
          return (
            0 < e.skinIndices.length &&
              ((r = new rr(4 * e.skinIndices.length, 4)),
              this.addAttribute(
                "skinIndex",
                r.copyVector4sArray(e.skinIndices)
              )),
            0 < e.skinWeights.length &&
              ((r = new rr(4 * e.skinWeights.length, 4)),
              this.addAttribute(
                "skinWeight",
                r.copyVector4sArray(e.skinWeights)
              )),
            null !== e.boundingSphere &&
              (this.boundingSphere = e.boundingSphere.clone()),
            null !== e.boundingBox &&
              (this.boundingBox = e.boundingBox.clone()),
            this
          );
        },
        computeBoundingBox: function () {
          null === this.boundingBox && (this.boundingBox = new cn());
          var e = this.attributes.position;
          void 0 !== e
            ? this.boundingBox.setFromBufferAttribute(e)
            : this.boundingBox.makeEmpty(),
            (isNaN(this.boundingBox.min.x) ||
              isNaN(this.boundingBox.min.y) ||
              isNaN(this.boundingBox.min.z)) &&
              console.error(
                'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',
                this
              );
        },
        computeBoundingSphere:
          ((cr = new cn()),
          (hr = new Ct()),
          function () {
            null === this.boundingSphere && (this.boundingSphere = new un());
            var e = this.attributes.position;
            if (e) {
              var t = this.boundingSphere.center;
              cr.setFromBufferAttribute(e), cr.getCenter(t);
              for (var i = 0, n = 0, r = e.count; n < r; n++)
                (hr.x = e.getX(n)),
                  (hr.y = e.getY(n)),
                  (hr.z = e.getZ(n)),
                  (i = Math.max(i, t.distanceToSquared(hr)));
              (this.boundingSphere.radius = Math.sqrt(i)),
                isNaN(this.boundingSphere.radius) &&
                  console.error(
                    'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
                    this
                  );
            }
          }),
        computeFaceNormals: function () {},
        computeVertexNormals: function () {
          var e = this.index,
            t = this.attributes,
            i = this.groups;
          if (t.position) {
            var n = t.position.array;
            if (void 0 === t.normal)
              this.addAttribute(
                "normal",
                new Zn(new Float32Array(n.length), 3)
              );
            else
              for (var r = t.normal.array, o = 0, a = r.length; o < a; o++)
                r[o] = 0;
            var s,
              l,
              c,
              h = t.normal.array,
              u = new Ct(),
              d = new Ct(),
              p = new Ct(),
              f = new Ct(),
              m = new Ct();
            if (e) {
              var g = e.array;
              0 === i.length && this.addGroup(0, g.length);
              for (var v = 0, y = i.length; v < y; ++v)
                for (
                  var _ = i[v], x = _.start, o = x, a = x + _.count;
                  o < a;
                  o += 3
                )
                  (s = 3 * g[o + 0]),
                    (l = 3 * g[o + 1]),
                    (c = 3 * g[o + 2]),
                    u.fromArray(n, s),
                    d.fromArray(n, l),
                    p.fromArray(n, c),
                    f.subVectors(p, d),
                    m.subVectors(u, d),
                    f.cross(m),
                    (h[s] += f.x),
                    (h[1 + s] += f.y),
                    (h[2 + s] += f.z),
                    (h[l] += f.x),
                    (h[1 + l] += f.y),
                    (h[2 + l] += f.z),
                    (h[c] += f.x),
                    (h[1 + c] += f.y),
                    (h[2 + c] += f.z);
            } else
              for (o = 0, a = n.length; o < a; o += 9)
                u.fromArray(n, o),
                  d.fromArray(n, o + 3),
                  p.fromArray(n, o + 6),
                  f.subVectors(p, d),
                  m.subVectors(u, d),
                  f.cross(m),
                  (h[o] = f.x),
                  (h[o + 1] = f.y),
                  (h[o + 2] = f.z),
                  (h[o + 3] = f.x),
                  (h[o + 4] = f.y),
                  (h[o + 5] = f.z),
                  (h[o + 6] = f.x),
                  (h[o + 7] = f.y),
                  (h[o + 8] = f.z);
            this.normalizeNormals(), (t.normal.needsUpdate = !0);
          }
        },
        merge: function (e, t) {
          if (e && e.isBufferGeometry) {
            void 0 === t && (t = 0);
            var i,
              n = this.attributes;
            for (i in n)
              if (void 0 !== e.attributes[i])
                for (
                  var r = n[i].array,
                    o = e.attributes[i],
                    a = o.array,
                    s = 0,
                    l = o.itemSize * t;
                  s < a.length;
                  s++, l++
                )
                  r[l] = a[s];
            return this;
          }
          console.error(
            "THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",
            e
          );
        },
        normalizeNormals:
          ((lr = new Ct()),
          function () {
            for (var e = this.attributes.normal, t = 0, i = e.count; t < i; t++)
              (lr.x = e.getX(t)),
                (lr.y = e.getY(t)),
                (lr.z = e.getZ(t)),
                lr.normalize(),
                e.setXYZ(t, lr.x, lr.y, lr.z);
          }),
        toNonIndexed: function () {
          if (null === this.index)
            return (
              console.warn(
                "THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."
              ),
              this
            );
          var e,
            t = new no(),
            i = this.index.array,
            n = this.attributes;
          for (e in n) {
            for (
              var r = n[e],
                o = r.array,
                a = r.itemSize,
                s = new o.constructor(i.length * a),
                l = 0,
                c = 0,
                h = 0,
                u = i.length;
              h < u;
              h++
            ) {
              l = i[h] * a;
              for (var d = 0; d < a; d++) s[c++] = o[l++];
            }
            t.addAttribute(e, new Zn(s, a));
          }
          return t;
        },
        toJSON: function () {
          var e = {
            metadata: {
              version: 4.5,
              type: "BufferGeometry",
              generator: "BufferGeometry.toJSON",
            },
          };
          if (
            ((e.uuid = this.uuid),
            (e.type = this.type),
            "" !== this.name && (e.name = this.name),
            void 0 !== this.parameters)
          ) {
            var t = this.parameters;
            for (n in t) void 0 !== t[n] && (e[n] = t[n]);
            return e;
          }
          e.data = { attributes: {} };
          var i = this.index;
          null !== i &&
            ((a = Array.prototype.slice.call(i.array)),
            (e.data.index = { type: i.array.constructor.name, array: a }));
          var n,
            r = this.attributes;
          for (n in r) {
            var o = r[n],
              a = Array.prototype.slice.call(o.array);
            e.data.attributes[n] = {
              itemSize: o.itemSize,
              type: o.array.constructor.name,
              array: a,
              normalized: o.normalized,
            };
          }
          i = this.groups;
          0 < i.length && (e.data.groups = JSON.parse(JSON.stringify(i)));
          i = this.boundingSphere;
          return (
            null !== i &&
              (e.data.boundingSphere = {
                center: i.center.toArray(),
                radius: i.radius,
              }),
            e
          );
        },
        clone: function () {
          return new no().copy(this);
        },
        copy: function (e) {
          (this.index = null),
            (this.attributes = {}),
            (this.morphAttributes = {}),
            (this.groups = []),
            (this.boundingBox = null),
            (this.boundingSphere = null),
            (this.name = e.name);
          var t = e.index;
          null !== t && this.setIndex(t.clone());
          var i = e.attributes;
          for (var n in i) {
            var r = i[n];
            this.addAttribute(n, r.clone());
          }
          var o = e.morphAttributes;
          for (n in o) {
            for (var a = [], s = o[n], l = 0, c = s.length; l < c; l++)
              a.push(s[l].clone());
            this.morphAttributes[n] = a;
          }
          var h = e.groups;
          for (l = 0, c = h.length; l < c; l++) {
            var u = h[l];
            this.addGroup(u.start, u.count, u.materialIndex);
          }
          t = e.boundingBox;
          null !== t && (this.boundingBox = t.clone());
          t = e.boundingSphere;
          return (
            null !== t && (this.boundingSphere = t.clone()),
            (this.drawRange.start = e.drawRange.start),
            (this.drawRange.count = e.drawRange.count),
            this
          );
        },
        dispose: function () {
          this.dispatchEvent({ type: "dispose" });
        },
      }),
        ((ro.prototype = Object.create(Qn.prototype)).constructor = ro),
        ((oo.prototype = Object.create(no.prototype)).constructor = oo),
        ((ao.prototype = Object.create(Qn.prototype)).constructor = ao),
        ((so.prototype = Object.create(no.prototype)).constructor = so),
        (((lo.prototype = Object.create(an.prototype)).constructor =
          lo).prototype.isMeshBasicMaterial = !0),
        (lo.prototype.copy = function (e) {
          return (
            an.prototype.copy.call(this, e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.lightMap = e.lightMap),
            (this.lightMapIntensity = e.lightMapIntensity),
            (this.aoMap = e.aoMap),
            (this.aoMapIntensity = e.aoMapIntensity),
            (this.specularMap = e.specularMap),
            (this.alphaMap = e.alphaMap),
            (this.envMap = e.envMap),
            (this.combine = e.combine),
            (this.reflectivity = e.reflectivity),
            (this.refractionRatio = e.refractionRatio),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.wireframeLinecap = e.wireframeLinecap),
            (this.wireframeLinejoin = e.wireframeLinejoin),
            (this.skinning = e.skinning),
            (this.morphTargets = e.morphTargets),
            this
          );
        }),
        (((co.prototype = Object.create(an.prototype)).constructor =
          co).prototype.isShaderMaterial = !0),
        (co.prototype.copy = function (e) {
          return (
            an.prototype.copy.call(this, e),
            (this.fragmentShader = e.fragmentShader),
            (this.vertexShader = e.vertexShader),
            (this.uniforms = Pi.clone(e.uniforms)),
            (this.defines = e.defines),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.lights = e.lights),
            (this.clipping = e.clipping),
            (this.skinning = e.skinning),
            (this.morphTargets = e.morphTargets),
            (this.morphNormals = e.morphNormals),
            (this.extensions = e.extensions),
            this
          );
        }),
        (co.prototype.toJSON = function (e) {
          e = an.prototype.toJSON.call(this, e);
          return (
            (e.uniforms = this.uniforms),
            (e.vertexShader = this.vertexShader),
            (e.fragmentShader = this.fragmentShader),
            e
          );
        }),
        Object.assign(ho.prototype, {
          set: function (e, t) {
            return this.origin.copy(e), this.direction.copy(t), this;
          },
          clone: function () {
            return new this.constructor().copy(this);
          },
          copy: function (e) {
            return (
              this.origin.copy(e.origin), this.direction.copy(e.direction), this
            );
          },
          at: function (e, t) {
            return (t || new Ct())
              .copy(this.direction)
              .multiplyScalar(e)
              .add(this.origin);
          },
          lookAt: function (e) {
            return this.direction.copy(e).sub(this.origin).normalize(), this;
          },
          recast:
            ((Ar = new Ct()),
            function (e) {
              return this.origin.copy(this.at(e, Ar)), this;
            }),
          closestPointToPoint: function (e, t) {
            t = t || new Ct();
            t.subVectors(e, this.origin);
            e = t.dot(this.direction);
            return e < 0
              ? t.copy(this.origin)
              : t.copy(this.direction).multiplyScalar(e).add(this.origin);
          },
          distanceToPoint: function (e) {
            return Math.sqrt(this.distanceSqToPoint(e));
          },
          distanceSqToPoint:
            ((Er = new Ct()),
            function (e) {
              var t = Er.subVectors(e, this.origin).dot(this.direction);
              return t < 0
                ? this.origin.distanceToSquared(e)
                : (Er.copy(this.direction).multiplyScalar(t).add(this.origin),
                  Er.distanceToSquared(e));
            }),
          distanceSqToSegment:
            ((Tr = new Ct()),
            (Sr = new Ct()),
            (Mr = new Ct()),
            function (e, t, i, n) {
              Tr.copy(e).add(t).multiplyScalar(0.5),
                Sr.copy(t).sub(e).normalize(),
                Mr.copy(this.origin).sub(Tr);
              var r,
                o,
                a = 0.5 * e.distanceTo(t),
                s = -this.direction.dot(Sr),
                l = Mr.dot(this.direction),
                c = -Mr.dot(Sr),
                h = Mr.lengthSq(),
                e = Math.abs(1 - s * s);
              return (
                (h =
                  0 < e
                    ? ((o = s * l - c),
                      (t = a * e),
                      0 <= (r = s * c - l)
                        ? -t <= o
                          ? o <= t
                            ? (r *= e = 1 / e) * (r + s * (o *= e) + 2 * l) +
                              o * (s * r + o + 2 * c) +
                              h
                            : ((o = a),
                              -(r = Math.max(0, -(s * o + l))) * r +
                                o * (o + 2 * c) +
                                h)
                          : ((o = -a),
                            -(r = Math.max(0, -(s * o + l))) * r +
                              o * (o + 2 * c) +
                              h)
                        : o <= -t
                        ? -(r = Math.max(0, -(-s * a + l))) * r +
                          (o = 0 < r ? -a : Math.min(Math.max(-a, -c), a)) *
                            (o + 2 * c) +
                          h
                        : o <= t
                        ? ((r = 0),
                          (o = Math.min(Math.max(-a, -c), a)) * (o + 2 * c) + h)
                        : -(r = Math.max(0, -(s * a + l))) * r +
                          (o = 0 < r ? a : Math.min(Math.max(-a, -c), a)) *
                            (o + 2 * c) +
                          h)
                    : ((o = 0 < s ? -a : a),
                      -(r = Math.max(0, -(s * o + l))) * r +
                        o * (o + 2 * c) +
                        h)),
                i && i.copy(this.direction).multiplyScalar(r).add(this.origin),
                n && n.copy(Sr).multiplyScalar(o).add(Tr),
                h
              );
            }),
          intersectSphere:
            ((wr = new Ct()),
            function (e, t) {
              wr.subVectors(e.center, this.origin);
              var i = wr.dot(this.direction),
                n = wr.dot(wr) - i * i,
                e = e.radius * e.radius;
              if (e < n) return null;
              (e = Math.sqrt(e - n)), (n = i - e), (e = i + e);
              return n < 0 && e < 0
                ? null
                : n < 0
                ? this.at(e, t)
                : this.at(n, t);
            }),
          intersectsSphere: function (e) {
            return this.distanceToPoint(e.center) <= e.radius;
          },
          distanceToPlane: function (e) {
            var t = e.normal.dot(this.direction);
            if (0 === t) return 0 === e.distanceToPoint(this.origin) ? 0 : null;
            t = -(this.origin.dot(e.normal) + e.constant) / t;
            return 0 <= t ? t : null;
          },
          intersectPlane: function (e, t) {
            e = this.distanceToPlane(e);
            return null === e ? null : this.at(e, t);
          },
          intersectsPlane: function (e) {
            var t = e.distanceToPoint(this.origin);
            return 0 === t || e.normal.dot(this.direction) * t < 0;
          },
          intersectBox: function (e, t) {
            var i,
              n,
              r,
              o = 1 / this.direction.x,
              a = 1 / this.direction.y,
              s = 1 / this.direction.z,
              l = this.origin,
              o =
                0 <= o
                  ? ((i = (e.min.x - l.x) * o), (e.max.x - l.x) * o)
                  : ((i = (e.max.x - l.x) * o), (e.min.x - l.x) * o),
              a =
                0 <= a
                  ? ((n = (e.min.y - l.y) * a), (e.max.y - l.y) * a)
                  : ((n = (e.max.y - l.y) * a), (e.min.y - l.y) * a);
            return a < i || o < n
              ? null
              : ((i < n || i != i) && (i = n),
                (a < o || o != o) && (o = a),
                (s =
                  0 <= s
                    ? ((r = (e.min.z - l.z) * s), (e.max.z - l.z) * s)
                    : ((r = (e.max.z - l.z) * s), (e.min.z - l.z) * s)) < i ||
                o < r
                  ? null
                  : ((i < r || i != i) && (i = r),
                    (s < o || o != o) && (o = s),
                    o < 0 ? null : this.at(0 <= i ? i : o, t)));
          },
          intersectsBox:
            ((br = new Ct()),
            function (e) {
              return null !== this.intersectBox(e, br);
            }),
          intersectTriangle:
            ((vr = new Ct()),
            (yr = new Ct()),
            (_r = new Ct()),
            (xr = new Ct()),
            function (e, t, i, n, r) {
              yr.subVectors(t, e), _r.subVectors(i, e), xr.crossVectors(yr, _r);
              i = this.direction.dot(xr);
              if (0 < i) {
                if (n) return null;
                o = 1;
              } else {
                if (!(i < 0)) return null;
                (o = -1), (i = -i);
              }
              vr.subVectors(this.origin, e);
              n = o * this.direction.dot(_r.crossVectors(vr, _r));
              if (n < 0) return null;
              e = o * this.direction.dot(yr.cross(vr));
              if (e < 0) return null;
              if (i < n + e) return null;
              var o = -o * vr.dot(xr);
              return o < 0 ? null : this.at(o / i, r);
            }),
          applyMatrix4: function (e) {
            return (
              this.origin.applyMatrix4(e),
              this.direction.transformDirection(e),
              this
            );
          },
          equals: function (e) {
            return (
              e.origin.equals(this.origin) && e.direction.equals(this.direction)
            );
          },
        }),
        Object.assign(uo.prototype, {
          set: function (e, t) {
            return this.start.copy(e), this.end.copy(t), this;
          },
          clone: function () {
            return new this.constructor().copy(this);
          },
          copy: function (e) {
            return this.start.copy(e.start), this.end.copy(e.end), this;
          },
          getCenter: function (e) {
            return (e || new Ct())
              .addVectors(this.start, this.end)
              .multiplyScalar(0.5);
          },
          delta: function (e) {
            return (e || new Ct()).subVectors(this.end, this.start);
          },
          distanceSq: function () {
            return this.start.distanceToSquared(this.end);
          },
          distance: function () {
            return this.start.distanceTo(this.end);
          },
          at: function (e, t) {
            t = t || new Ct();
            return this.delta(t).multiplyScalar(e).add(this.start);
          },
          closestPointToPointParameter:
            ((Lr = new Ct()),
            (Cr = new Ct()),
            function (e, t) {
              Lr.subVectors(e, this.start), Cr.subVectors(this.end, this.start);
              (e = Cr.dot(Cr)), (e = Cr.dot(Lr) / e);
              return t && (e = Mt.clamp(e, 0, 1)), e;
            }),
          closestPointToPoint: function (e, t, i) {
            (t = this.closestPointToPointParameter(e, t)), (i = i || new Ct());
            return this.delta(i).multiplyScalar(t).add(this.start);
          },
          applyMatrix4: function (e) {
            return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
          },
          equals: function (e) {
            return e.start.equals(this.start) && e.end.equals(this.end);
          },
        }),
        Object.assign(po, {
          normal:
            ((Dr = new Ct()),
            function (e, t, i, n) {
              n = n || new Ct();
              n.subVectors(i, t), Dr.subVectors(e, t), n.cross(Dr);
              t = n.lengthSq();
              return 0 < t
                ? n.multiplyScalar(1 / Math.sqrt(t))
                : n.set(0, 0, 0);
            }),
          barycoordFromPoint:
            ((Rr = new Ct()),
            (Or = new Ct()),
            (Ir = new Ct()),
            function (e, t, i, n, r) {
              Rr.subVectors(n, t), Or.subVectors(i, t), Ir.subVectors(e, t);
              var o = Rr.dot(Rr),
                a = Rr.dot(Or),
                n = Rr.dot(Ir),
                i = Or.dot(Or),
                e = Or.dot(Ir),
                t = o * i - a * a,
                r = r || new Ct();
              if (0 == t) return r.set(-2, -1, -1);
              (t = 1 / t), (i = (i * n - a * e) * t), (t *= o * e - a * n);
              return r.set(1 - i - t, t, i);
            }),
          containsPoint:
            ((Pr = new Ct()),
            function (e, t, i, n) {
              n = po.barycoordFromPoint(e, t, i, n, Pr);
              return 0 <= n.x && 0 <= n.y && n.x + n.y <= 1;
            }),
        }),
        Object.assign(po.prototype, {
          set: function (e, t, i) {
            return this.a.copy(e), this.b.copy(t), this.c.copy(i), this;
          },
          setFromPointsAndIndices: function (e, t, i, n) {
            return (
              this.a.copy(e[t]), this.b.copy(e[i]), this.c.copy(e[n]), this
            );
          },
          clone: function () {
            return new this.constructor().copy(this);
          },
          copy: function (e) {
            return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
          },
          area:
            ((Br = new Ct()),
            (zr = new Ct()),
            function () {
              return (
                Br.subVectors(this.c, this.b),
                zr.subVectors(this.a, this.b),
                0.5 * Br.cross(zr).length()
              );
            }),
          midpoint: function (e) {
            return (e || new Ct())
              .addVectors(this.a, this.b)
              .add(this.c)
              .multiplyScalar(1 / 3);
          },
          normal: function (e) {
            return po.normal(this.a, this.b, this.c, e);
          },
          plane: function (e) {
            return (e || new dn()).setFromCoplanarPoints(
              this.a,
              this.b,
              this.c
            );
          },
          barycoordFromPoint: function (e, t) {
            return po.barycoordFromPoint(e, this.a, this.b, this.c, t);
          },
          containsPoint: function (e) {
            return po.containsPoint(e, this.a, this.b, this.c);
          },
          closestPointToPoint:
            ((Nr = new dn()),
            (Fr = [new uo(), new uo(), new uo()]),
            (kr = new Ct()),
            (Ur = new Ct()),
            function (e, t) {
              var i = t || new Ct(),
                n = 1 / 0;
              if (
                (Nr.setFromCoplanarPoints(this.a, this.b, this.c),
                Nr.projectPoint(e, kr),
                !0 === this.containsPoint(kr))
              )
                i.copy(kr);
              else {
                Fr[0].set(this.a, this.b),
                  Fr[1].set(this.b, this.c),
                  Fr[2].set(this.c, this.a);
                for (var r = 0; r < Fr.length; r++) {
                  Fr[r].closestPointToPoint(kr, !0, Ur);
                  var o = kr.distanceToSquared(Ur);
                  o < n && ((n = o), i.copy(Ur));
                }
              }
              return i;
            }),
          equals: function (e) {
            return (
              e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c)
            );
          },
        }),
        (fo.prototype = Object.assign(Object.create(Un.prototype), {
          constructor: fo,
          isMesh: !0,
          setDrawMode: function (e) {
            this.drawMode = e;
          },
          copy: function (e) {
            return (
              Un.prototype.copy.call(this, e),
              (this.drawMode = e.drawMode),
              void 0 !== e.morphTargetInfluences &&
                (this.morphTargetInfluences = e.morphTargetInfluences.slice()),
              void 0 !== e.morphTargetDictionary &&
                (this.morphTargetDictionary = Object.assign(
                  {},
                  e.morphTargetDictionary
                )),
              this
            );
          },
          updateMorphTargets: function () {
            var e,
              t,
              i,
              n = this.geometry;
            if (n.isBufferGeometry) {
              var r = n.morphAttributes,
                o = Object.keys(r);
              if (0 < o.length) {
                var a = r[o[0]];
                if (void 0 !== a)
                  for (
                    this.morphTargetInfluences = [],
                      this.morphTargetDictionary = {},
                      e = 0,
                      t = a.length;
                    e < t;
                    e++
                  )
                    (i = a[e].name || String(e)),
                      this.morphTargetInfluences.push(0),
                      (this.morphTargetDictionary[i] = e);
              }
            } else {
              var s = n.morphTargets;
              if (void 0 !== s && 0 < s.length)
                for (
                  this.morphTargetInfluences = [],
                    this.morphTargetDictionary = {},
                    e = 0,
                    t = s.length;
                  e < t;
                  e++
                )
                  (i = s[e].name || String(e)),
                    this.morphTargetInfluences.push(0),
                    (this.morphTargetDictionary[i] = e);
            }
          },
          raycast:
            ((jr = new At()),
            (Hr = new ho()),
            (Gr = new un()),
            (Vr = new Ct()),
            (Wr = new Ct()),
            (Xr = new Ct()),
            (qr = new Ct()),
            (Yr = new Ct()),
            (Qr = new Ct()),
            (Zr = new Et()),
            (Jr = new Et()),
            ($r = new Et()),
            (Kr = new Ct()),
            (eo = new Ct()),
            (to = new Ct()),
            function (e, t) {
              var i = this.geometry,
                n = this.material,
                r = this.matrixWorld;
              if (
                void 0 !== n &&
                (null === i.boundingSphere && i.computeBoundingSphere(),
                Gr.copy(i.boundingSphere),
                Gr.applyMatrix4(r),
                !1 !== e.ray.intersectsSphere(Gr) &&
                  (jr.getInverse(r),
                  Hr.copy(e.ray).applyMatrix4(jr),
                  null === i.boundingBox ||
                    !1 !== Hr.intersectsBox(i.boundingBox)))
              )
                if (i.isBufferGeometry) {
                  var o,
                    a,
                    s,
                    l,
                    c,
                    h = i.index,
                    u = i.attributes.position,
                    d = i.attributes.uv;
                  if (null !== h)
                    for (l = 0, c = h.count; l < c; l += 3)
                      (o = h.getX(l)),
                        (a = h.getX(l + 1)),
                        (s = h.getX(l + 2)),
                        (w = vo(this, e, Hr, u, d, o, a, s)) &&
                          ((w.faceIndex = Math.floor(l / 3)), t.push(w));
                  else if (void 0 !== u)
                    for (l = 0, c = u.count; l < c; l += 3)
                      (w = vo(
                        this,
                        e,
                        Hr,
                        u,
                        d,
                        (o = l),
                        (a = l + 1),
                        (s = l + 2)
                      )) && ((w.index = o), t.push(w));
                } else if (i.isGeometry) {
                  var p,
                    f,
                    m,
                    g,
                    v = Array.isArray(n),
                    y = i.vertices,
                    _ = i.faces,
                    r = i.faceVertexUvs[0];
                  0 < r.length && (g = r);
                  for (var x = 0, b = _.length; x < b; x++) {
                    var w,
                      T = _[x],
                      S = v ? n[T.materialIndex] : n;
                    if (void 0 !== S) {
                      if (
                        ((p = y[T.a]),
                        (f = y[T.b]),
                        (m = y[T.c]),
                        !0 === S.morphTargets)
                      ) {
                        var M = i.morphTargets,
                          E = this.morphTargetInfluences;
                        Vr.set(0, 0, 0), Wr.set(0, 0, 0), Xr.set(0, 0, 0);
                        for (var A = 0, L = M.length; A < L; A++) {
                          var C,
                            P = E[A];
                          0 !== P &&
                            ((C = M[A].vertices),
                            Vr.addScaledVector(qr.subVectors(C[T.a], p), P),
                            Wr.addScaledVector(Yr.subVectors(C[T.b], f), P),
                            Xr.addScaledVector(Qr.subVectors(C[T.c], m), P));
                        }
                        Vr.add(p),
                          Wr.add(f),
                          Xr.add(m),
                          (p = Vr),
                          (f = Wr),
                          (m = Xr);
                      }
                      (w = go(this, S, e, Hr, p, f, m, eo)) &&
                        (g &&
                          g[x] &&
                          ((S = g[x]),
                          Zr.copy(S[0]),
                          Jr.copy(S[1]),
                          $r.copy(S[2]),
                          (w.uv = mo(eo, p, f, m, Zr, Jr, $r))),
                        (w.face = T),
                        (w.faceIndex = x),
                        t.push(w));
                    }
                  }
                }
            }),
          clone: function () {
            return new this.constructor(this.geometry, this.material).copy(
              this
            );
          },
        }));
      var Oo,
        Io,
        Do,
        No,
        Fo,
        ko,
        Uo,
        Bo,
        zo,
        jo,
        Ho,
        Go,
        Vo,
        Wo,
        Xo = 0;
      function qo(e) {
        switch (e) {
          case gt:
            return ["Linear", "( value )"];
          case vt:
            return ["sRGB", "( value )"];
          case _t:
            return ["RGBE", "( value )"];
          case xt:
            return ["RGBM", "( value, 7.0 )"];
          case bt:
            return ["RGBM", "( value, 16.0 )"];
          case wt:
            return ["RGBD", "( value, 256.0 )"];
          case yt:
            return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
          default:
            throw new Error("unsupported encoding: " + e);
        }
      }
      function Yo(e, t) {
        t = qo(t);
        return (
          "vec4 " +
          e +
          "( vec4 value ) { return " +
          t[0] +
          "ToLinear" +
          t[1] +
          "; }"
        );
      }
      function Qo(e) {
        return "" !== e;
      }
      function Zo(e, t) {
        return e
          .replace(/NUM_DIR_LIGHTS/g, t.numDirLights)
          .replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights)
          .replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights)
          .replace(/NUM_POINT_LIGHTS/g, t.numPointLights)
          .replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights);
      }
      function Jo(e) {
        return e.replace(/^[ \t]*#include +<([\w\d.]+)>/gm, function (e, t) {
          var i = Ri[t];
          if (void 0 === i)
            throw new Error("Can not resolve #include <" + t + ">");
          return Jo(i);
        });
      }
      function $o(e) {
        return e.replace(
          /for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,
          function (e, t, i, n) {
            for (var r = "", o = parseInt(t); o < parseInt(i); o++)
              r += n.replace(/\[ i \]/g, "[ " + o + " ]");
            return r;
          }
        );
      }
      function Ko(e, t, i, n, r, o) {
        var a = e.context,
          s = n.defines,
          l = r.vertexShader,
          c = r.fragmentShader,
          h = "SHADOWMAP_TYPE_BASIC";
        o.shadowMapType === P
          ? (h = "SHADOWMAP_TYPE_PCF")
          : o.shadowMapType === M && (h = "SHADOWMAP_TYPE_PCF_SOFT");
        var u = "ENVMAP_TYPE_CUBE",
          d = "ENVMAP_MODE_REFLECTION",
          p = "ENVMAP_BLENDING_MULTIPLY";
        if (o.envMap) {
          switch (n.envMap.mapping) {
            case ve:
            case ye:
              u = "ENVMAP_TYPE_CUBE";
              break;
            case we:
            case Te:
              u = "ENVMAP_TYPE_CUBE_UV";
              break;
            case _e:
            case xe:
              u = "ENVMAP_TYPE_EQUIREC";
              break;
            case be:
              u = "ENVMAP_TYPE_SPHERE";
          }
          switch (n.envMap.mapping) {
            case ye:
            case xe:
              d = "ENVMAP_MODE_REFRACTION";
          }
          switch (n.combine) {
            case he:
              p = "ENVMAP_BLENDING_MULTIPLY";
              break;
            case ue:
              p = "ENVMAP_BLENDING_MIX";
              break;
            case de:
              p = "ENVMAP_BLENDING_ADD";
          }
        }
        var f,
          m,
          g,
          v,
          y,
          _ = 0 < e.gammaFactor ? e.gammaFactor : 1,
          g =
            ((f = n.extensions),
            (m = o),
            (g = t),
            [
              (f = f || {}).derivatives ||
              m.envMapCubeUV ||
              m.bumpMap ||
              m.normalMap ||
              m.flatShading
                ? "#extension GL_OES_standard_derivatives : enable"
                : "",
              (f.fragDepth || m.logarithmicDepthBuffer) &&
              g.get("EXT_frag_depth")
                ? "#extension GL_EXT_frag_depth : enable"
                : "",
              f.drawBuffers && g.get("WEBGL_draw_buffers")
                ? "#extension GL_EXT_draw_buffers : require"
                : "",
              (f.shaderTextureLOD || m.envMap) &&
              g.get("EXT_shader_texture_lod")
                ? "#extension GL_EXT_shader_texture_lod : enable"
                : "",
            ]
              .filter(Qo)
              .join("\n")),
          s = (function (e) {
            var t,
              i = [];
            for (t in e) {
              var n = e[t];
              !1 !== n && i.push("#define " + t + " " + n);
            }
            return i.join("\n");
          })(s),
          x = a.createProgram();
        n.isRawShaderMaterial
          ? (0 < (v = [s].filter(Qo).join("\n")).length && (v += "\n"),
            0 < (y = [g, s].filter(Qo).join("\n")).length && (y += "\n"))
          : ((v = [
              "precision " + o.precision + " float;",
              "precision " + o.precision + " int;",
              "#define SHADER_NAME " + r.name,
              s,
              o.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "",
              "#define GAMMA_FACTOR " + _,
              "#define MAX_BONES " + o.maxBones,
              o.useFog && o.fog ? "#define USE_FOG" : "",
              o.useFog && o.fogExp ? "#define FOG_EXP2" : "",
              o.map ? "#define USE_MAP" : "",
              o.envMap ? "#define USE_ENVMAP" : "",
              o.envMap ? "#define " + d : "",
              o.lightMap ? "#define USE_LIGHTMAP" : "",
              o.aoMap ? "#define USE_AOMAP" : "",
              o.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
              o.bumpMap ? "#define USE_BUMPMAP" : "",
              o.normalMap ? "#define USE_NORMALMAP" : "",
              o.displacementMap && o.supportsVertexTextures
                ? "#define USE_DISPLACEMENTMAP"
                : "",
              o.specularMap ? "#define USE_SPECULARMAP" : "",
              o.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
              o.metalnessMap ? "#define USE_METALNESSMAP" : "",
              o.alphaMap ? "#define USE_ALPHAMAP" : "",
              o.vertexColors ? "#define USE_COLOR" : "",
              o.flatShading ? "#define FLAT_SHADED" : "",
              o.skinning ? "#define USE_SKINNING" : "",
              o.useVertexTexture ? "#define BONE_TEXTURE" : "",
              o.morphTargets ? "#define USE_MORPHTARGETS" : "",
              o.morphNormals && !1 === o.flatShading
                ? "#define USE_MORPHNORMALS"
                : "",
              o.doubleSided ? "#define DOUBLE_SIDED" : "",
              o.flipSided ? "#define FLIP_SIDED" : "",
              "#define NUM_CLIPPING_PLANES " + o.numClippingPlanes,
              o.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
              o.shadowMapEnabled ? "#define " + h : "",
              o.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
              o.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
              o.logarithmicDepthBuffer && t.get("EXT_frag_depth")
                ? "#define USE_LOGDEPTHBUF_EXT"
                : "",
              "uniform mat4 modelMatrix;",
              "uniform mat4 modelViewMatrix;",
              "uniform mat4 projectionMatrix;",
              "uniform mat4 viewMatrix;",
              "uniform mat3 normalMatrix;",
              "uniform vec3 cameraPosition;",
              "attribute vec3 position;",
              "attribute vec3 normal;",
              "attribute vec2 uv;",
              "#ifdef USE_COLOR",
              "\tattribute vec3 color;",
              "#endif",
              "#ifdef USE_MORPHTARGETS",
              "\tattribute vec3 morphTarget0;",
              "\tattribute vec3 morphTarget1;",
              "\tattribute vec3 morphTarget2;",
              "\tattribute vec3 morphTarget3;",
              "\t#ifdef USE_MORPHNORMALS",
              "\t\tattribute vec3 morphNormal0;",
              "\t\tattribute vec3 morphNormal1;",
              "\t\tattribute vec3 morphNormal2;",
              "\t\tattribute vec3 morphNormal3;",
              "\t#else",
              "\t\tattribute vec3 morphTarget4;",
              "\t\tattribute vec3 morphTarget5;",
              "\t\tattribute vec3 morphTarget6;",
              "\t\tattribute vec3 morphTarget7;",
              "\t#endif",
              "#endif",
              "#ifdef USE_SKINNING",
              "\tattribute vec4 skinIndex;",
              "\tattribute vec4 skinWeight;",
              "#endif",
              "\n",
            ]
              .filter(Qo)
              .join("\n")),
            (y = [
              g,
              "precision " + o.precision + " float;",
              "precision " + o.precision + " int;",
              "#define SHADER_NAME " + r.name,
              s,
              o.alphaTest ? "#define ALPHATEST " + o.alphaTest : "",
              "#define GAMMA_FACTOR " + _,
              o.useFog && o.fog ? "#define USE_FOG" : "",
              o.useFog && o.fogExp ? "#define FOG_EXP2" : "",
              o.map ? "#define USE_MAP" : "",
              o.envMap ? "#define USE_ENVMAP" : "",
              o.envMap ? "#define " + u : "",
              o.envMap ? "#define " + d : "",
              o.envMap ? "#define " + p : "",
              o.lightMap ? "#define USE_LIGHTMAP" : "",
              o.aoMap ? "#define USE_AOMAP" : "",
              o.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
              o.bumpMap ? "#define USE_BUMPMAP" : "",
              o.normalMap ? "#define USE_NORMALMAP" : "",
              o.specularMap ? "#define USE_SPECULARMAP" : "",
              o.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
              o.metalnessMap ? "#define USE_METALNESSMAP" : "",
              o.alphaMap ? "#define USE_ALPHAMAP" : "",
              o.vertexColors ? "#define USE_COLOR" : "",
              o.gradientMap ? "#define USE_GRADIENTMAP" : "",
              o.flatShading ? "#define FLAT_SHADED" : "",
              o.doubleSided ? "#define DOUBLE_SIDED" : "",
              o.flipSided ? "#define FLIP_SIDED" : "",
              "#define NUM_CLIPPING_PLANES " + o.numClippingPlanes,
              "#define UNION_CLIPPING_PLANES " +
                (o.numClippingPlanes - o.numClipIntersection),
              o.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
              o.shadowMapEnabled ? "#define " + h : "",
              o.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
              o.physicallyCorrectLights
                ? "#define PHYSICALLY_CORRECT_LIGHTS"
                : "",
              o.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
              o.logarithmicDepthBuffer && t.get("EXT_frag_depth")
                ? "#define USE_LOGDEPTHBUF_EXT"
                : "",
              o.envMap && t.get("EXT_shader_texture_lod")
                ? "#define TEXTURE_LOD_EXT"
                : "",
              "uniform mat4 viewMatrix;",
              "uniform vec3 cameraPosition;",
              o.toneMapping !== pe ? "#define TONE_MAPPING" : "",
              o.toneMapping !== pe ? Ri.tonemapping_pars_fragment : "",
              o.toneMapping !== pe
                ? (function (e, t) {
                    var i;
                    switch (t) {
                      case Le:
                        i = "Linear";
                        break;
                      case fe:
                        i = "Reinhard";
                        break;
                      case me:
                        i = "Uncharted2";
                        break;
                      case ge:
                        i = "OptimizedCineon";
                        break;
                      default:
                        throw new Error("unsupported toneMapping: " + t);
                    }
                    return (
                      "vec3 " +
                      e +
                      "( vec3 color ) { return " +
                      i +
                      "ToneMapping( color ); }"
                    );
                  })("toneMapping", o.toneMapping)
                : "",
              o.dithering ? "#define DITHERING" : "",
              o.outputEncoding ||
              o.mapEncoding ||
              o.envMapEncoding ||
              o.emissiveMapEncoding
                ? Ri.encodings_pars_fragment
                : "",
              o.mapEncoding ? Yo("mapTexelToLinear", o.mapEncoding) : "",
              o.envMapEncoding
                ? Yo("envMapTexelToLinear", o.envMapEncoding)
                : "",
              o.emissiveMapEncoding
                ? Yo("emissiveMapTexelToLinear", o.emissiveMapEncoding)
                : "",
              o.outputEncoding
                ? ((b = "linearToOutputTexel"),
                  (w = qo((w = o.outputEncoding))),
                  "vec4 " +
                    b +
                    "( vec4 value ) { return LinearTo" +
                    w[0] +
                    w[1] +
                    "; }")
                : "",
              o.depthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "",
              "\n",
            ]
              .filter(Qo)
              .join("\n"))),
          (l = Zo((l = Jo(l)), o)),
          (c = Zo((c = Jo(c)), o)),
          n.isShaderMaterial || ((l = $o(l)), (c = $o(c)));
        var h = v + l,
          t = y + c,
          b = Ro(a, a.VERTEX_SHADER, h),
          w = Ro(a, a.FRAGMENT_SHADER, t);
        a.attachShader(x, b),
          a.attachShader(x, w),
          void 0 !== n.index0AttributeName
            ? a.bindAttribLocation(x, 0, n.index0AttributeName)
            : !0 === o.morphTargets && a.bindAttribLocation(x, 0, "position"),
          a.linkProgram(x);
        var T,
          S,
          l = a.getProgramInfoLog(x),
          c = a.getShaderInfoLog(b),
          h = a.getShaderInfoLog(w),
          t = !0,
          o = !0;
        return (
          !1 === a.getProgramParameter(x, a.LINK_STATUS)
            ? ((t = !1),
              console.error(
                "THREE.WebGLProgram: shader error: ",
                a.getError(),
                "gl.VALIDATE_STATUS",
                a.getProgramParameter(x, a.VALIDATE_STATUS),
                "gl.getProgramInfoLog",
                l,
                c,
                h
              ))
            : "" !== l
            ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", l)
            : ("" !== c && "" !== h) || (o = !1),
          o &&
            (this.diagnostics = {
              runnable: t,
              material: n,
              programLog: l,
              vertexShader: { log: c, prefix: v },
              fragmentShader: { log: h, prefix: y },
            }),
          a.deleteShader(b),
          a.deleteShader(w),
          (this.getUniforms = function () {
            return void 0 === T && (T = new Ti(a, x, e)), T;
          }),
          (this.getAttributes = function () {
            return (
              void 0 === S &&
                (S = (function (e, t) {
                  for (
                    var i = {},
                      n = e.getProgramParameter(t, e.ACTIVE_ATTRIBUTES),
                      r = 0;
                    r < n;
                    r++
                  ) {
                    var o = e.getActiveAttrib(t, r).name;
                    i[o] = e.getAttribLocation(t, o);
                  }
                  return i;
                })(a, x)),
              S
            );
          }),
          (this.destroy = function () {
            a.deleteProgram(x), (this.program = void 0);
          }),
          Object.defineProperties(this, {
            uniforms: {
              get: function () {
                return (
                  console.warn(
                    "THREE.WebGLProgram: .uniforms is now .getUniforms()."
                  ),
                  this.getUniforms()
                );
              },
            },
            attributes: {
              get: function () {
                return (
                  console.warn(
                    "THREE.WebGLProgram: .attributes is now .getAttributes()."
                  ),
                  this.getAttributes()
                );
              },
            },
          }),
          (this.id = Xo++),
          (this.code = i),
          (this.usedTimes = 1),
          (this.program = x),
          (this.vertexShader = b),
          (this.fragmentShader = w),
          this
        );
      }
      function ea(u, l, d) {
        var c = [],
          p = {
            MeshDepthMaterial: "depth",
            MeshDistanceMaterial: "distanceRGBA",
            MeshNormalMaterial: "normal",
            MeshBasicMaterial: "basic",
            MeshLambertMaterial: "lambert",
            MeshPhongMaterial: "phong",
            MeshToonMaterial: "phong",
            MeshStandardMaterial: "physical",
            MeshPhysicalMaterial: "physical",
            LineBasicMaterial: "basic",
            LineDashedMaterial: "dashed",
            PointsMaterial: "points",
            ShadowMaterial: "shadow",
          },
          o = [
            "precision",
            "supportsVertexTextures",
            "map",
            "mapEncoding",
            "envMap",
            "envMapMode",
            "envMapEncoding",
            "lightMap",
            "aoMap",
            "emissiveMap",
            "emissiveMapEncoding",
            "bumpMap",
            "normalMap",
            "displacementMap",
            "specularMap",
            "roughnessMap",
            "metalnessMap",
            "gradientMap",
            "alphaMap",
            "combine",
            "vertexColors",
            "fog",
            "useFog",
            "fogExp",
            "flatShading",
            "sizeAttenuation",
            "logarithmicDepthBuffer",
            "skinning",
            "maxBones",
            "useVertexTexture",
            "morphTargets",
            "morphNormals",
            "maxMorphTargets",
            "maxMorphNormals",
            "premultipliedAlpha",
            "numDirLights",
            "numPointLights",
            "numSpotLights",
            "numHemiLights",
            "numRectAreaLights",
            "shadowMapEnabled",
            "shadowMapType",
            "toneMapping",
            "physicallyCorrectLights",
            "alphaTest",
            "doubleSided",
            "flipSided",
            "numClippingPlanes",
            "numClipIntersection",
            "depthPacking",
            "dithering",
          ];
        function f(e, t) {
          var i;
          return (
            e
              ? e.isTexture
                ? (i = e.encoding)
                : e.isWebGLRenderTarget &&
                  (console.warn(
                    "THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."
                  ),
                  (i = e.texture.encoding))
              : (i = gt),
            i === gt && t && (i = yt),
            i
          );
        }
        (this.getParameters = function (e, t, i, n, r, o, a) {
          var s = p[e.type],
            l = a.isSkinnedMesh
              ? ((c = (h = a).skeleton.bones),
                d.floatVertexTextures
                  ? 1024
                  : ((h = d.maxVertexUniforms),
                    (h = Math.floor((h - 20) / 4)),
                    (h = Math.min(h, c.length)) < c.length
                      ? (console.warn(
                          "THREE.WebGLRenderer: Skeleton has " +
                            c.length +
                            " bones. This GPU supports " +
                            h +
                            "."
                        ),
                        0)
                      : h))
              : 0,
            c = d.precision;
          null !== e.precision &&
            (c = d.getMaxPrecision(e.precision)) !== e.precision &&
            console.warn(
              "THREE.WebGLProgram.getParameters:",
              e.precision,
              "not supported, using",
              c,
              "instead."
            );
          var h = u.getRenderTarget();
          return {
            shaderID: s,
            precision: c,
            supportsVertexTextures: d.vertexTextures,
            outputEncoding: f(h ? h.texture : null, u.gammaOutput),
            map: !!e.map,
            mapEncoding: f(e.map, u.gammaInput),
            envMap: !!e.envMap,
            envMapMode: e.envMap && e.envMap.mapping,
            envMapEncoding: f(e.envMap, u.gammaInput),
            envMapCubeUV:
              !!e.envMap &&
              (e.envMap.mapping === we || e.envMap.mapping === Te),
            lightMap: !!e.lightMap,
            aoMap: !!e.aoMap,
            emissiveMap: !!e.emissiveMap,
            emissiveMapEncoding: f(e.emissiveMap, u.gammaInput),
            bumpMap: !!e.bumpMap,
            normalMap: !!e.normalMap,
            displacementMap: !!e.displacementMap,
            roughnessMap: !!e.roughnessMap,
            metalnessMap: !!e.metalnessMap,
            specularMap: !!e.specularMap,
            alphaMap: !!e.alphaMap,
            gradientMap: !!e.gradientMap,
            combine: e.combine,
            vertexColors: e.vertexColors,
            fog: !!n,
            useFog: e.fog,
            fogExp: n && n.isFogExp2,
            flatShading: e.flatShading,
            sizeAttenuation: e.sizeAttenuation,
            logarithmicDepthBuffer: d.logarithmicDepthBuffer,
            skinning: e.skinning && 0 < l,
            maxBones: l,
            useVertexTexture: d.floatVertexTextures,
            morphTargets: e.morphTargets,
            morphNormals: e.morphNormals,
            maxMorphTargets: u.maxMorphTargets,
            maxMorphNormals: u.maxMorphNormals,
            numDirLights: t.directional.length,
            numPointLights: t.point.length,
            numSpotLights: t.spot.length,
            numRectAreaLights: t.rectArea.length,
            numHemiLights: t.hemi.length,
            numClippingPlanes: r,
            numClipIntersection: o,
            dithering: e.dithering,
            shadowMapEnabled:
              u.shadowMap.enabled && a.receiveShadow && 0 < i.length,
            shadowMapType: u.shadowMap.type,
            toneMapping: u.toneMapping,
            physicallyCorrectLights: u.physicallyCorrectLights,
            premultipliedAlpha: e.premultipliedAlpha,
            alphaTest: e.alphaTest,
            doubleSided: e.side === W,
            flipSided: e.side === V,
            depthPacking: void 0 !== e.depthPacking && e.depthPacking,
          };
        }),
          (this.getProgramCode = function (e, t) {
            var i = [];
            if (
              (t.shaderID
                ? i.push(t.shaderID)
                : (i.push(e.fragmentShader), i.push(e.vertexShader)),
              void 0 !== e.defines)
            )
              for (var n in e.defines) i.push(n), i.push(e.defines[n]);
            for (var r = 0; r < o.length; r++) i.push(t[o[r]]);
            return (
              i.push(e.onBeforeCompile.toString()),
              i.push(u.gammaOutput),
              i.join()
            );
          }),
          (this.acquireProgram = function (e, t, i, n) {
            for (var r, o = 0, a = c.length; o < a; o++) {
              var s = c[o];
              if (s.code === n) {
                ++(r = s).usedTimes;
                break;
              }
            }
            return (
              void 0 === r && ((r = new Ko(u, l, n, e, t, i)), c.push(r)), r
            );
          }),
          (this.releaseProgram = function (e) {
            var t;
            0 == --e.usedTimes &&
              ((t = c.indexOf(e)),
              (c[t] = c[c.length - 1]),
              c.pop(),
              e.destroy());
          }),
          (this.programs = c);
      }
      function ta(f, n, m, g, v, y, _) {
        var u =
          "undefined" != typeof WebGL2RenderingContext &&
          f instanceof window.WebGL2RenderingContext;
        function x(e, t) {
          if (e.width > t || e.height > t) {
            var i = t / Math.max(e.width, e.height),
              t = document.createElementNS(
                "http://www.w3.org/1999/xhtml",
                "canvas"
              );
            return (
              (t.width = Math.floor(e.width * i)),
              (t.height = Math.floor(e.height * i)),
              t
                .getContext("2d")
                .drawImage(e, 0, 0, e.width, e.height, 0, 0, t.width, t.height),
              console.warn(
                "THREE.WebGLRenderer: image is too big (" +
                  e.width +
                  "x" +
                  e.height +
                  "). Resized to " +
                  t.width +
                  "x" +
                  t.height,
                e
              ),
              t
            );
          }
          return e;
        }
        function b(e) {
          return Mt.isPowerOfTwo(e.width) && Mt.isPowerOfTwo(e.height);
        }
        function w(e, t) {
          return (
            e.generateMipmaps && t && e.minFilter !== Ce && e.minFilter !== Oe
          );
        }
        function r(e) {
          return e === Ce || e === Pe || e === Re ? f.NEAREST : f.LINEAR;
        }
        function T(e) {
          e = e.target;
          e.removeEventListener("dispose", T),
            (function (e) {
              var t = g.get(e);
              if (e.image && t.__image__webglTextureCube)
                f.deleteTexture(t.__image__webglTextureCube);
              else {
                if (void 0 === t.__webglInit) return;
                f.deleteTexture(t.__webglTexture);
              }
              g.remove(e);
            })(e),
            _.textures--;
        }
        function a(e) {
          e = e.target;
          e.removeEventListener("dispose", a),
            (function (e) {
              var t = g.get(e),
                i = g.get(e.texture);
              if (e) {
                if (
                  (void 0 !== i.__webglTexture &&
                    f.deleteTexture(i.__webglTexture),
                  e.depthTexture && e.depthTexture.dispose(),
                  e.isWebGLRenderTargetCube)
                )
                  for (var n = 0; n < 6; n++)
                    f.deleteFramebuffer(t.__webglFramebuffer[n]),
                      t.__webglDepthbuffer &&
                        f.deleteRenderbuffer(t.__webglDepthbuffer[n]);
                else
                  f.deleteFramebuffer(t.__webglFramebuffer),
                    t.__webglDepthbuffer &&
                      f.deleteRenderbuffer(t.__webglDepthbuffer);
                g.remove(e.texture), g.remove(e);
              }
            })(e),
            _.textures--;
        }
        function o(e, t) {
          var i = g.get(e);
          if (0 < e.version && i.__version !== e.version) {
            var n = e.image;
            if (void 0 === n)
              console.warn(
                "THREE.WebGLRenderer: Texture marked for update but image is undefined",
                e
              );
            else {
              if (!1 !== n.complete)
                return void (function (e, t, i) {
                  void 0 === e.__webglInit &&
                    ((e.__webglInit = !0),
                    t.addEventListener("dispose", T),
                    (e.__webglTexture = f.createTexture()),
                    _.textures++),
                    m.activeTexture(f.TEXTURE0 + i),
                    m.bindTexture(f.TEXTURE_2D, e.__webglTexture),
                    f.pixelStorei(f.UNPACK_FLIP_Y_WEBGL, t.flipY),
                    f.pixelStorei(
                      f.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                      t.premultiplyAlpha
                    ),
                    f.pixelStorei(f.UNPACK_ALIGNMENT, t.unpackAlignment);
                  var n = x(t.image, v.maxTextureSize);
                  !(function (e) {
                    return (
                      e.wrapS !== Me ||
                      e.wrapT !== Me ||
                      (e.minFilter !== Ce && e.minFilter !== Oe)
                    );
                  })(t) ||
                    !1 !== b(n) ||
                    (n = (function (e) {
                      if (
                        e instanceof HTMLImageElement ||
                        e instanceof HTMLCanvasElement ||
                        e instanceof ImageBitmap
                      ) {
                        var t = document.createElementNS(
                          "http://www.w3.org/1999/xhtml",
                          "canvas"
                        );
                        return (
                          (t.width = Mt.floorPowerOfTwo(e.width)),
                          (t.height = Mt.floorPowerOfTwo(e.height)),
                          t
                            .getContext("2d")
                            .drawImage(e, 0, 0, t.width, t.height),
                          console.warn(
                            "THREE.WebGLRenderer: image is not power of two (" +
                              e.width +
                              "x" +
                              e.height +
                              "). Resized to " +
                              t.width +
                              "x" +
                              t.height,
                            e
                          ),
                          t
                        );
                      }
                      return e;
                    })(n));
                  var r = b(n),
                    o = y.convert(t.format),
                    a = y.convert(t.type);
                  S(f.TEXTURE_2D, t, r);
                  var s,
                    l = t.mipmaps;
                  if (t.isDepthTexture) {
                    i = f.DEPTH_COMPONENT;
                    if (t.type === je) {
                      if (!u)
                        throw new Error(
                          "Float Depth Texture only supported in WebGL2.0"
                        );
                      i = f.DEPTH_COMPONENT32F;
                    } else u && (i = f.DEPTH_COMPONENT16);
                    t.format === Ke &&
                      i === f.DEPTH_COMPONENT &&
                      t.type !== Ue &&
                      t.type !== ze &&
                      (console.warn(
                        "THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."
                      ),
                      (t.type = Ue),
                      (a = y.convert(t.type))),
                      t.format === et &&
                        ((i = f.DEPTH_STENCIL),
                        t.type !== Xe &&
                          (console.warn(
                            "THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."
                          ),
                          (t.type = Xe),
                          (a = y.convert(t.type)))),
                      m.texImage2D(
                        f.TEXTURE_2D,
                        0,
                        i,
                        n.width,
                        n.height,
                        0,
                        o,
                        a,
                        null
                      );
                  } else if (t.isDataTexture)
                    if (0 < l.length && r) {
                      for (var c = 0, h = l.length; c < h; c++)
                        (s = l[c]),
                          m.texImage2D(
                            f.TEXTURE_2D,
                            c,
                            o,
                            s.width,
                            s.height,
                            0,
                            o,
                            a,
                            s.data
                          );
                      t.generateMipmaps = !1;
                    } else
                      m.texImage2D(
                        f.TEXTURE_2D,
                        0,
                        o,
                        n.width,
                        n.height,
                        0,
                        o,
                        a,
                        n.data
                      );
                  else if (t.isCompressedTexture)
                    for (c = 0, h = l.length; c < h; c++)
                      (s = l[c]),
                        t.format !== Qe && t.format !== Ye
                          ? -1 < m.getCompressedTextureFormats().indexOf(o)
                            ? m.compressedTexImage2D(
                                f.TEXTURE_2D,
                                c,
                                o,
                                s.width,
                                s.height,
                                0,
                                s.data
                              )
                            : console.warn(
                                "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                              )
                          : m.texImage2D(
                              f.TEXTURE_2D,
                              c,
                              o,
                              s.width,
                              s.height,
                              0,
                              o,
                              a,
                              s.data
                            );
                  else if (0 < l.length && r) {
                    for (c = 0, h = l.length; c < h; c++)
                      (s = l[c]), m.texImage2D(f.TEXTURE_2D, c, o, o, a, s);
                    t.generateMipmaps = !1;
                  } else m.texImage2D(f.TEXTURE_2D, 0, o, o, a, n);
                  w(t, r) && f.generateMipmap(f.TEXTURE_2D),
                    (e.__version = t.version),
                    t.onUpdate && t.onUpdate(t);
                })(i, e, t);
              console.warn(
                "THREE.WebGLRenderer: Texture marked for update but image is incomplete",
                e
              );
            }
          }
          m.activeTexture(f.TEXTURE0 + t),
            m.bindTexture(f.TEXTURE_2D, i.__webglTexture);
        }
        function S(e, t, i) {
          i
            ? (f.texParameteri(e, f.TEXTURE_WRAP_S, y.convert(t.wrapS)),
              f.texParameteri(e, f.TEXTURE_WRAP_T, y.convert(t.wrapT)),
              f.texParameteri(e, f.TEXTURE_MAG_FILTER, y.convert(t.magFilter)),
              f.texParameteri(e, f.TEXTURE_MIN_FILTER, y.convert(t.minFilter)))
            : (f.texParameteri(e, f.TEXTURE_WRAP_S, f.CLAMP_TO_EDGE),
              f.texParameteri(e, f.TEXTURE_WRAP_T, f.CLAMP_TO_EDGE),
              (t.wrapS === Me && t.wrapT === Me) ||
                console.warn(
                  "THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",
                  t
                ),
              f.texParameteri(e, f.TEXTURE_MAG_FILTER, r(t.magFilter)),
              f.texParameteri(e, f.TEXTURE_MIN_FILTER, r(t.minFilter)),
              t.minFilter !== Ce &&
                t.minFilter !== Oe &&
                console.warn(
                  "THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",
                  t
                )),
            (i = n.get("EXT_texture_filter_anisotropic")) &&
              ((t.type === je && null === n.get("OES_texture_float_linear")) ||
                (t.type === He &&
                  null === n.get("OES_texture_half_float_linear")) ||
                ((1 < t.anisotropy || g.get(t).__currentAnisotropy) &&
                  (f.texParameterf(
                    e,
                    i.TEXTURE_MAX_ANISOTROPY_EXT,
                    Math.min(t.anisotropy, v.getMaxAnisotropy())
                  ),
                  (g.get(t).__currentAnisotropy = t.anisotropy))));
        }
        function s(e, t, i, n) {
          var r = y.convert(t.texture.format),
            o = y.convert(t.texture.type);
          m.texImage2D(n, 0, r, t.width, t.height, 0, r, o, null),
            f.bindFramebuffer(f.FRAMEBUFFER, e),
            f.framebufferTexture2D(
              f.FRAMEBUFFER,
              i,
              n,
              g.get(t.texture).__webglTexture,
              0
            ),
            f.bindFramebuffer(f.FRAMEBUFFER, null);
        }
        function l(e, t) {
          f.bindRenderbuffer(f.RENDERBUFFER, e),
            t.depthBuffer && !t.stencilBuffer
              ? (f.renderbufferStorage(
                  f.RENDERBUFFER,
                  f.DEPTH_COMPONENT16,
                  t.width,
                  t.height
                ),
                f.framebufferRenderbuffer(
                  f.FRAMEBUFFER,
                  f.DEPTH_ATTACHMENT,
                  f.RENDERBUFFER,
                  e
                ))
              : t.depthBuffer && t.stencilBuffer
              ? (f.renderbufferStorage(
                  f.RENDERBUFFER,
                  f.DEPTH_STENCIL,
                  t.width,
                  t.height
                ),
                f.framebufferRenderbuffer(
                  f.FRAMEBUFFER,
                  f.DEPTH_STENCIL_ATTACHMENT,
                  f.RENDERBUFFER,
                  e
                ))
              : f.renderbufferStorage(
                  f.RENDERBUFFER,
                  f.RGBA4,
                  t.width,
                  t.height
                ),
            f.bindRenderbuffer(f.RENDERBUFFER, null);
        }
        function c(e) {
          var t = g.get(e),
            i = !0 === e.isWebGLRenderTargetCube;
          if (e.depthTexture) {
            if (i)
              throw new Error(
                "target.depthTexture not supported in Cube render targets"
              );
            !(function (e, t) {
              if (t && t.isWebGLRenderTargetCube)
                throw new Error(
                  "Depth Texture with cube render targets is not supported"
                );
              if (
                (f.bindFramebuffer(f.FRAMEBUFFER, e),
                !t.depthTexture || !t.depthTexture.isDepthTexture)
              )
                throw new Error(
                  "renderTarget.depthTexture must be an instance of THREE.DepthTexture"
                );
              if (
                ((g.get(t.depthTexture).__webglTexture &&
                  t.depthTexture.image.width === t.width &&
                  t.depthTexture.image.height === t.height) ||
                  ((t.depthTexture.image.width = t.width),
                  (t.depthTexture.image.height = t.height),
                  (t.depthTexture.needsUpdate = !0)),
                o(t.depthTexture, 0),
                (e = g.get(t.depthTexture).__webglTexture),
                t.depthTexture.format === Ke)
              )
                f.framebufferTexture2D(
                  f.FRAMEBUFFER,
                  f.DEPTH_ATTACHMENT,
                  f.TEXTURE_2D,
                  e,
                  0
                );
              else {
                if (t.depthTexture.format !== et)
                  throw new Error("Unknown depthTexture format");
                f.framebufferTexture2D(
                  f.FRAMEBUFFER,
                  f.DEPTH_STENCIL_ATTACHMENT,
                  f.TEXTURE_2D,
                  e,
                  0
                );
              }
            })(t.__webglFramebuffer, e);
          } else if (i) {
            t.__webglDepthbuffer = [];
            for (var n = 0; n < 6; n++)
              f.bindFramebuffer(f.FRAMEBUFFER, t.__webglFramebuffer[n]),
                (t.__webglDepthbuffer[n] = f.createRenderbuffer()),
                l(t.__webglDepthbuffer[n], e);
          } else
            f.bindFramebuffer(f.FRAMEBUFFER, t.__webglFramebuffer),
              (t.__webglDepthbuffer = f.createRenderbuffer()),
              l(t.__webglDepthbuffer, e);
          f.bindFramebuffer(f.FRAMEBUFFER, null);
        }
        (this.setTexture2D = o),
          (this.setTextureCube = function (e, t) {
            var i = g.get(e);
            if (6 === e.image.length)
              if (0 < e.version && i.__version !== e.version) {
                i.__image__webglTextureCube ||
                  (e.addEventListener("dispose", T),
                  (i.__image__webglTextureCube = f.createTexture()),
                  _.textures++),
                  m.activeTexture(f.TEXTURE0 + t),
                  m.bindTexture(
                    f.TEXTURE_CUBE_MAP,
                    i.__image__webglTextureCube
                  ),
                  f.pixelStorei(f.UNPACK_FLIP_Y_WEBGL, e.flipY);
                for (
                  var n = e && e.isCompressedTexture,
                    r = e.image[0] && e.image[0].isDataTexture,
                    o = [],
                    a = 0;
                  a < 6;
                  a++
                )
                  o[a] =
                    n || r
                      ? r
                        ? e.image[a].image
                        : e.image[a]
                      : x(e.image[a], v.maxCubemapSize);
                var s = b(o[0]),
                  l = y.convert(e.format),
                  c = y.convert(e.type);
                S(f.TEXTURE_CUBE_MAP, e, s);
                for (a = 0; a < 6; a++)
                  if (n)
                    for (
                      var h, u = o[a].mipmaps, d = 0, p = u.length;
                      d < p;
                      d++
                    )
                      (h = u[d]),
                        e.format !== Qe && e.format !== Ye
                          ? -1 < m.getCompressedTextureFormats().indexOf(l)
                            ? m.compressedTexImage2D(
                                f.TEXTURE_CUBE_MAP_POSITIVE_X + a,
                                d,
                                l,
                                h.width,
                                h.height,
                                0,
                                h.data
                              )
                            : console.warn(
                                "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"
                              )
                          : m.texImage2D(
                              f.TEXTURE_CUBE_MAP_POSITIVE_X + a,
                              d,
                              l,
                              h.width,
                              h.height,
                              0,
                              l,
                              c,
                              h.data
                            );
                  else
                    r
                      ? m.texImage2D(
                          f.TEXTURE_CUBE_MAP_POSITIVE_X + a,
                          0,
                          l,
                          o[a].width,
                          o[a].height,
                          0,
                          l,
                          c,
                          o[a].data
                        )
                      : m.texImage2D(
                          f.TEXTURE_CUBE_MAP_POSITIVE_X + a,
                          0,
                          l,
                          l,
                          c,
                          o[a]
                        );
                w(e, s) && f.generateMipmap(f.TEXTURE_CUBE_MAP),
                  (i.__version = e.version),
                  e.onUpdate && e.onUpdate(e);
              } else
                m.activeTexture(f.TEXTURE0 + t),
                  m.bindTexture(
                    f.TEXTURE_CUBE_MAP,
                    i.__image__webglTextureCube
                  );
          }),
          (this.setTextureCubeDynamic = function (e, t) {
            m.activeTexture(f.TEXTURE0 + t),
              m.bindTexture(f.TEXTURE_CUBE_MAP, g.get(e).__webglTexture);
          }),
          (this.setupRenderTarget = function (e) {
            var t = g.get(e),
              i = g.get(e.texture);
            e.addEventListener("dispose", a),
              (i.__webglTexture = f.createTexture()),
              _.textures++;
            var n = !0 === e.isWebGLRenderTargetCube,
              r = b(e);
            if (n) {
              t.__webglFramebuffer = [];
              for (var o = 0; o < 6; o++)
                t.__webglFramebuffer[o] = f.createFramebuffer();
            } else t.__webglFramebuffer = f.createFramebuffer();
            if (n) {
              m.bindTexture(f.TEXTURE_CUBE_MAP, i.__webglTexture),
                S(f.TEXTURE_CUBE_MAP, e.texture, r);
              for (o = 0; o < 6; o++)
                s(
                  t.__webglFramebuffer[o],
                  e,
                  f.COLOR_ATTACHMENT0,
                  f.TEXTURE_CUBE_MAP_POSITIVE_X + o
                );
              w(e.texture, r) && f.generateMipmap(f.TEXTURE_CUBE_MAP),
                m.bindTexture(f.TEXTURE_CUBE_MAP, null);
            } else
              m.bindTexture(f.TEXTURE_2D, i.__webglTexture),
                S(f.TEXTURE_2D, e.texture, r),
                s(t.__webglFramebuffer, e, f.COLOR_ATTACHMENT0, f.TEXTURE_2D),
                w(e.texture, r) && f.generateMipmap(f.TEXTURE_2D),
                m.bindTexture(f.TEXTURE_2D, null);
            e.depthBuffer && c(e);
          }),
          (this.updateRenderTargetMipmap = function (e) {
            var t = e.texture;
            w(t, b(e)) &&
              ((e = e.isWebGLRenderTargetCube
                ? f.TEXTURE_CUBE_MAP
                : f.TEXTURE_2D),
              (t = g.get(t).__webglTexture),
              m.bindTexture(e, t),
              f.generateMipmap(e),
              m.bindTexture(e, null));
          });
      }
      function ia() {
        var i = {};
        return {
          get: function (e) {
            var t = e.uuid;
            return void 0 === (e = i[t]) && ((e = {}), (i[t] = e)), e;
          },
          remove: function (e) {
            delete i[e.uuid];
          },
          clear: function () {
            i = {};
          },
        };
      }
      function na(h, i, l) {
        var t = new (function () {
            var t = !1,
              o = new Nt(),
              i = null,
              a = new Nt(0, 0, 0, 0);
            return {
              setMask: function (e) {
                i === e || t || (h.colorMask(e, e, e, e), (i = e));
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (e, t, i, n, r) {
                !0 === r && ((e *= n), (t *= n), (i *= n)),
                  o.set(e, t, i, n),
                  !1 === a.equals(o) && (h.clearColor(e, t, i, n), a.copy(o));
              },
              reset: function () {
                (t = !1), (i = null), a.set(-1, 0, 0, 0);
              },
            };
          })(),
          n = new (function () {
            var t = !1,
              i = null,
              n = null,
              r = null;
            return {
              setTest: function (e) {
                (e ? D : N)(h.DEPTH_TEST);
              },
              setMask: function (e) {
                i === e || t || (h.depthMask(e), (i = e));
              },
              setFunc: function (e) {
                if (n !== e) {
                  if (e)
                    switch (e) {
                      case ie:
                        h.depthFunc(h.NEVER);
                        break;
                      case ne:
                        h.depthFunc(h.ALWAYS);
                        break;
                      case re:
                        h.depthFunc(h.LESS);
                        break;
                      case oe:
                        h.depthFunc(h.LEQUAL);
                        break;
                      case ae:
                        h.depthFunc(h.EQUAL);
                        break;
                      case se:
                        h.depthFunc(h.GEQUAL);
                        break;
                      case le:
                        h.depthFunc(h.GREATER);
                        break;
                      case ce:
                        h.depthFunc(h.NOTEQUAL);
                        break;
                      default:
                        h.depthFunc(h.LEQUAL);
                    }
                  else h.depthFunc(h.LEQUAL);
                  n = e;
                }
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (e) {
                r !== e && (h.clearDepth(e), (r = e));
              },
              reset: function () {
                (t = !1), (r = n = i = null);
              },
            };
          })(),
          r = new (function () {
            var t = !1,
              i = null,
              n = null,
              r = null,
              o = null,
              a = null,
              s = null,
              l = null,
              c = null;
            return {
              setTest: function (e) {
                (e ? D : N)(h.STENCIL_TEST);
              },
              setMask: function (e) {
                i === e || t || (h.stencilMask(e), (i = e));
              },
              setFunc: function (e, t, i) {
                (n === e && r === t && o === i) ||
                  (h.stencilFunc(e, t, i), (n = e), (r = t), (o = i));
              },
              setOp: function (e, t, i) {
                (a === e && s === t && l === i) ||
                  (h.stencilOp(e, t, i), (a = e), (s = t), (l = i));
              },
              setLocked: function (e) {
                t = e;
              },
              setClear: function (e) {
                c !== e && (h.clearStencil(e), (c = e));
              },
              reset: function () {
                (t = !1), (c = l = s = a = o = r = n = i = null);
              },
            };
          })(),
          e = h.getParameter(h.MAX_VERTEX_ATTRIBS),
          o = new Uint8Array(e),
          a = new Uint8Array(e),
          s = new Uint8Array(e),
          c = {},
          u = null,
          d = null,
          p = null,
          f = null,
          m = null,
          g = null,
          v = null,
          y = null,
          _ = null,
          x = !1,
          b = null,
          w = null,
          T = null,
          S = null,
          M = null,
          E = h.getParameter(h.MAX_COMBINED_TEXTURE_IMAGE_UNITS),
          e = parseFloat(/^WebGL\ ([0-9])/.exec(h.getParameter(h.VERSION))[1]),
          A = 1 <= parseFloat(e),
          L = null,
          C = {},
          P = new Nt(),
          R = new Nt();
        function O(e, t, i) {
          var n = new Uint8Array(4),
            r = h.createTexture();
          h.bindTexture(e, r),
            h.texParameteri(e, h.TEXTURE_MIN_FILTER, h.NEAREST),
            h.texParameteri(e, h.TEXTURE_MAG_FILTER, h.NEAREST);
          for (var o = 0; o < i; o++)
            h.texImage2D(t + o, 0, h.RGBA, 1, 1, 0, h.RGBA, h.UNSIGNED_BYTE, n);
          return r;
        }
        var I = {};
        function D(e) {
          !0 !== c[e] && (h.enable(e), (c[e] = !0));
        }
        function N(e) {
          !1 !== c[e] && (h.disable(e), (c[e] = !1));
        }
        function F(e, t, i, n, r, o, a, s) {
          if (((e !== X ? D : N)(h.BLEND), e !== J)) {
            if (e !== p || s !== x)
              switch (e) {
                case Y:
                  s
                    ? (h.blendEquationSeparate(h.FUNC_ADD, h.FUNC_ADD),
                      h.blendFuncSeparate(h.ONE, h.ONE, h.ONE, h.ONE))
                    : (h.blendEquation(h.FUNC_ADD),
                      h.blendFunc(h.SRC_ALPHA, h.ONE));
                  break;
                case Q:
                  s
                    ? (h.blendEquationSeparate(h.FUNC_ADD, h.FUNC_ADD),
                      h.blendFuncSeparate(
                        h.ZERO,
                        h.ZERO,
                        h.ONE_MINUS_SRC_COLOR,
                        h.ONE_MINUS_SRC_ALPHA
                      ))
                    : (h.blendEquation(h.FUNC_ADD),
                      h.blendFunc(h.ZERO, h.ONE_MINUS_SRC_COLOR));
                  break;
                case Z:
                  s
                    ? (h.blendEquationSeparate(h.FUNC_ADD, h.FUNC_ADD),
                      h.blendFuncSeparate(
                        h.ZERO,
                        h.SRC_COLOR,
                        h.ZERO,
                        h.SRC_ALPHA
                      ))
                    : (h.blendEquation(h.FUNC_ADD),
                      h.blendFunc(h.ZERO, h.SRC_COLOR));
                  break;
                default:
                  s
                    ? (h.blendEquationSeparate(h.FUNC_ADD, h.FUNC_ADD),
                      h.blendFuncSeparate(
                        h.ONE,
                        h.ONE_MINUS_SRC_ALPHA,
                        h.ONE,
                        h.ONE_MINUS_SRC_ALPHA
                      ))
                    : (h.blendEquationSeparate(h.FUNC_ADD, h.FUNC_ADD),
                      h.blendFuncSeparate(
                        h.SRC_ALPHA,
                        h.ONE_MINUS_SRC_ALPHA,
                        h.ONE,
                        h.ONE_MINUS_SRC_ALPHA
                      ));
              }
            _ = y = v = g = m = f = null;
          } else
            (r = r || t),
              (o = o || i),
              (a = a || n),
              (t === f && r === v) ||
                (h.blendEquationSeparate(l.convert(t), l.convert(r)),
                (f = t),
                (v = r)),
              (i === m && n === g && o === y && a === _) ||
                (h.blendFuncSeparate(
                  l.convert(i),
                  l.convert(n),
                  l.convert(o),
                  l.convert(a)
                ),
                (m = i),
                (g = n),
                (y = o),
                (_ = a));
          (p = e), (x = s);
        }
        function k(e) {
          b !== e && (e ? h.frontFace(h.CW) : h.frontFace(h.CCW), (b = e));
        }
        function U(e) {
          e !== j
            ? (D(h.CULL_FACE),
              e !== w &&
                (e === H
                  ? h.cullFace(h.BACK)
                  : e === G
                  ? h.cullFace(h.FRONT)
                  : h.cullFace(h.FRONT_AND_BACK)))
            : N(h.CULL_FACE),
            (w = e);
        }
        function B(e, t, i) {
          e
            ? (D(h.POLYGON_OFFSET_FILL),
              (S === t && M === i) || (h.polygonOffset(t, i), (S = t), (M = i)))
            : N(h.POLYGON_OFFSET_FILL);
        }
        function z(e) {
          void 0 === e && (e = h.TEXTURE0 + E - 1),
            L !== e && (h.activeTexture(e), (L = e));
        }
        return (
          (I[h.TEXTURE_2D] = O(h.TEXTURE_2D, h.TEXTURE_2D, 1)),
          (I[h.TEXTURE_CUBE_MAP] = O(
            h.TEXTURE_CUBE_MAP,
            h.TEXTURE_CUBE_MAP_POSITIVE_X,
            6
          )),
          t.setClear(0, 0, 0, 1),
          n.setClear(1),
          r.setClear(0),
          D(h.DEPTH_TEST),
          n.setFunc(oe),
          k(!1),
          U(H),
          D(h.CULL_FACE),
          D(h.BLEND),
          F(q),
          {
            buffers: { color: t, depth: n, stencil: r },
            initAttributes: function () {
              for (var e = 0, t = o.length; e < t; e++) o[e] = 0;
            },
            enableAttribute: function (e) {
              (o[e] = 1),
                0 === a[e] && (h.enableVertexAttribArray(e), (a[e] = 1)),
                0 !== s[e] &&
                  (i
                    .get("ANGLE_instanced_arrays")
                    .vertexAttribDivisorANGLE(e, 0),
                  (s[e] = 0));
            },
            enableAttributeAndDivisor: function (e, t) {
              (o[e] = 1),
                0 === a[e] && (h.enableVertexAttribArray(e), (a[e] = 1)),
                s[e] !== t &&
                  (i
                    .get("ANGLE_instanced_arrays")
                    .vertexAttribDivisorANGLE(e, t),
                  (s[e] = t));
            },
            disableUnusedAttributes: function () {
              for (var e = 0, t = a.length; e !== t; ++e)
                a[e] !== o[e] && (h.disableVertexAttribArray(e), (a[e] = 0));
            },
            enable: D,
            disable: N,
            getCompressedTextureFormats: function () {
              if (
                null === u &&
                ((u = []),
                i.get("WEBGL_compressed_texture_pvrtc") ||
                  i.get("WEBGL_compressed_texture_s3tc") ||
                  i.get("WEBGL_compressed_texture_etc1"))
              )
                for (
                  var e = h.getParameter(h.COMPRESSED_TEXTURE_FORMATS), t = 0;
                  t < e.length;
                  t++
                )
                  u.push(e[t]);
              return u;
            },
            useProgram: function (e) {
              return d !== e && (h.useProgram(e), (d = e), !0);
            },
            setBlending: F,
            setMaterial: function (e) {
              (e.side === W ? N : D)(h.CULL_FACE),
                k(e.side === V),
                !0 === e.transparent
                  ? F(
                      e.blending,
                      e.blendEquation,
                      e.blendSrc,
                      e.blendDst,
                      e.blendEquationAlpha,
                      e.blendSrcAlpha,
                      e.blendDstAlpha,
                      e.premultipliedAlpha
                    )
                  : F(X),
                n.setFunc(e.depthFunc),
                n.setTest(e.depthTest),
                n.setMask(e.depthWrite),
                t.setMask(e.colorWrite),
                B(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits);
            },
            setFlipSided: k,
            setCullFace: U,
            setLineWidth: function (e) {
              e !== T && (A && h.lineWidth(e), (T = e));
            },
            setPolygonOffset: B,
            setScissorTest: function (e) {
              (e ? D : N)(h.SCISSOR_TEST);
            },
            activeTexture: z,
            bindTexture: function (e, t) {
              null === L && z();
              var i = C[L];
              void 0 === i &&
                ((i = { type: void 0, texture: void 0 }), (C[L] = i)),
                (i.type === e && i.texture === t) ||
                  (h.bindTexture(e, t || I[e]), (i.type = e), (i.texture = t));
            },
            compressedTexImage2D: function () {
              try {
                h.compressedTexImage2D.apply(h, arguments);
              } catch (e) {
                console.error("THREE.WebGLState:", e);
              }
            },
            texImage2D: function () {
              try {
                h.texImage2D.apply(h, arguments);
              } catch (e) {
                console.error("THREE.WebGLState:", e);
              }
            },
            scissor: function (e) {
              !1 === P.equals(e) && (h.scissor(e.x, e.y, e.z, e.w), P.copy(e));
            },
            viewport: function (e) {
              !1 === R.equals(e) && (h.viewport(e.x, e.y, e.z, e.w), R.copy(e));
            },
            reset: function () {
              for (var e = 0; e < a.length; e++)
                1 === a[e] && (h.disableVertexAttribArray(e), (a[e] = 0));
              (c = {}),
                (C = {}),
                (w = b = p = d = L = u = null),
                t.reset(),
                n.reset(),
                r.reset();
            },
          }
        );
      }
      function ra(t, i, e) {
        var n;
        function r(e) {
          if ("highp" === e) {
            if (
              0 <
                t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT)
                  .precision &&
              0 <
                t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT)
                  .precision
            )
              return "highp";
            e = "mediump";
          }
          return "mediump" === e &&
            0 <
              t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT)
                .precision &&
            0 <
              t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT)
                .precision
            ? "mediump"
            : "lowp";
        }
        var o = void 0 !== e.precision ? e.precision : "highp",
          a = r(o);
        a !== o &&
          (console.warn(
            "THREE.WebGLRenderer:",
            o,
            "not supported, using",
            a,
            "instead."
          ),
          (o = a));
        var s = !0 === e.logarithmicDepthBuffer,
          l = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),
          c = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
          h = t.getParameter(t.MAX_TEXTURE_SIZE),
          u = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),
          d = t.getParameter(t.MAX_VERTEX_ATTRIBS),
          p = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),
          f = t.getParameter(t.MAX_VARYING_VECTORS),
          m = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),
          a = 0 < c,
          e = !!i.get("OES_texture_float");
        return {
          getMaxAnisotropy: function () {
            if (void 0 !== n) return n;
            var e = i.get("EXT_texture_filter_anisotropic");
            return (n =
              null !== e
                ? t.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT)
                : 0);
          },
          getMaxPrecision: r,
          precision: o,
          logarithmicDepthBuffer: s,
          maxTextures: l,
          maxVertexTextures: c,
          maxTextureSize: h,
          maxCubemapSize: u,
          maxAttributes: d,
          maxVertexUniforms: p,
          maxVaryings: f,
          maxFragmentUniforms: m,
          vertexTextures: a,
          floatFragmentTextures: e,
          floatVertexTextures: a && e,
        };
      }
      function oa(e, t, i, n) {
        Bn.call(this),
          (this.type = "PerspectiveCamera"),
          (this.fov = void 0 !== e ? e : 50),
          (this.zoom = 1),
          (this.near = void 0 !== i ? i : 0.1),
          (this.far = void 0 !== n ? n : 2e3),
          (this.focus = 10),
          (this.aspect = void 0 !== t ? t : 1),
          (this.view = null),
          (this.filmGauge = 35),
          (this.filmOffset = 0),
          this.updateProjectionMatrix();
      }
      function aa(e) {
        oa.call(this), (this.cameras = e || []);
      }
      function sa(i) {
        var n = this,
          r = null,
          o = null;
        "undefined" != typeof window &&
          "VRFrameData" in window &&
          (o = new window.VRFrameData());
        var a = new At(),
          s = new At(),
          l = new At(),
          c = new oa();
        (c.bounds = new Nt(0, 0, 0.5, 1)), c.layers.enable(1);
        var h = new oa();
        (h.bounds = new Nt(0.5, 0, 0.5, 1)), h.layers.enable(2);
        var u,
          d,
          p = new aa([c, h]);
        function e() {
          var e, t;
          null !== r && r.isPresenting
            ? ((e = (t = r.getEyeParameters("left")).renderWidth),
              (t = t.renderHeight),
              (d = i.getPixelRatio()),
              (u = i.getSize()),
              i.setDrawingBufferSize(2 * e, t, 1))
            : n.enabled && i.setDrawingBufferSize(u.width, u.height, d);
        }
        p.layers.enable(1),
          p.layers.enable(2),
          "undefined" != typeof window &&
            window.addEventListener("vrdisplaypresentchange", e, !1),
          (this.enabled = !1),
          (this.standing = !1),
          (this.getDevice = function () {
            return r;
          }),
          (this.setDevice = function (e) {
            void 0 !== e && (r = e);
          }),
          (this.getCamera = function (e) {
            if (null === r) return e;
            (r.depthNear = e.near), (r.depthFar = e.far), r.getFrameData(o);
            var t = o.pose;
            null !== t.position
              ? e.position.fromArray(t.position)
              : e.position.set(0, 0, 0),
              null !== t.orientation && e.quaternion.fromArray(t.orientation),
              e.updateMatrixWorld();
            t = r.stageParameters;
            if (
              (this.standing &&
                t &&
                (s.fromArray(t.sittingToStandingTransform),
                l.getInverse(s),
                e.matrixWorld.multiply(s),
                e.matrixWorldInverse.multiply(l)),
              !1 === r.isPresenting)
            )
              return e;
            (c.near = e.near),
              (h.near = e.near),
              (c.far = e.far),
              (h.far = e.far),
              p.matrixWorld.copy(e.matrixWorld),
              p.matrixWorldInverse.copy(e.matrixWorldInverse),
              c.matrixWorldInverse.fromArray(o.leftViewMatrix),
              h.matrixWorldInverse.fromArray(o.rightViewMatrix),
              this.standing &&
                t &&
                (c.matrixWorldInverse.multiply(l),
                h.matrixWorldInverse.multiply(l));
            e = e.parent;
            null !== e &&
              (a.getInverse(e.matrixWorld),
              c.matrixWorldInverse.multiply(a),
              h.matrixWorldInverse.multiply(a)),
              c.matrixWorld.getInverse(c.matrixWorldInverse),
              h.matrixWorld.getInverse(h.matrixWorldInverse),
              c.projectionMatrix.fromArray(o.leftProjectionMatrix),
              h.projectionMatrix.fromArray(o.rightProjectionMatrix),
              p.projectionMatrix.copy(c.projectionMatrix);
            e = r.getLayers();
            return (
              e.length &&
                (null !== (e = e[0]).leftBounds &&
                  4 === e.leftBounds.length &&
                  c.bounds.fromArray(e.leftBounds),
                null !== e.rightBounds &&
                  4 === e.rightBounds.length &&
                  h.bounds.fromArray(e.rightBounds)),
              p
            );
          }),
          (this.getStandingMatrix = function () {
            return s;
          }),
          (this.submitFrame = function () {
            r && r.isPresenting && r.submitFrame();
          }),
          (this.dispose = function () {
            "undefined" != typeof window &&
              window.removeEventListener("vrdisplaypresentchange", e);
          });
      }
      function la(i) {
        var n = {};
        return {
          get: function (e) {
            if (void 0 !== n[e]) return n[e];
            var t;
            switch (e) {
              case "WEBGL_depth_texture":
                t =
                  i.getExtension("WEBGL_depth_texture") ||
                  i.getExtension("MOZ_WEBGL_depth_texture") ||
                  i.getExtension("WEBKIT_WEBGL_depth_texture");
                break;
              case "EXT_texture_filter_anisotropic":
                t =
                  i.getExtension("EXT_texture_filter_anisotropic") ||
                  i.getExtension("MOZ_EXT_texture_filter_anisotropic") ||
                  i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                break;
              case "WEBGL_compressed_texture_s3tc":
                t =
                  i.getExtension("WEBGL_compressed_texture_s3tc") ||
                  i.getExtension("MOZ_WEBGL_compressed_texture_s3tc") ||
                  i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                break;
              case "WEBGL_compressed_texture_pvrtc":
                t =
                  i.getExtension("WEBGL_compressed_texture_pvrtc") ||
                  i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                break;
              case "WEBGL_compressed_texture_etc1":
                t = i.getExtension("WEBGL_compressed_texture_etc1");
                break;
              default:
                t = i.getExtension(e);
            }
            return (
              null === t &&
                console.warn(
                  "THREE.WebGLRenderer: " + e + " extension not supported."
                ),
              (n[e] = t)
            );
          },
        };
      }
      function ca() {
        var c = this,
          h = null,
          u = 0,
          d = !1,
          p = !1,
          f = new dn(),
          m = new Pt(),
          g = { value: null, needsUpdate: !1 };
        function v() {
          g.value !== h && ((g.value = h), (g.needsUpdate = 0 < u)),
            (c.numPlanes = u),
            (c.numIntersection = 0);
        }
        function y(e, t, i, n) {
          var r = null !== e ? e.length : 0,
            o = null;
          if (0 !== r) {
            if (((o = g.value), !0 !== n || null === o)) {
              var n = i + 4 * r,
                a = t.matrixWorldInverse;
              m.getNormalMatrix(a),
                (null === o || o.length < n) && (o = new Float32Array(n));
              for (var s = 0, l = i; s !== r; ++s, l += 4)
                f.copy(e[s]).applyMatrix4(a, m),
                  f.normal.toArray(o, l),
                  (o[l + 3] = f.constant);
            }
            (g.value = o), (g.needsUpdate = !0);
          }
          return (c.numPlanes = r), o;
        }
        (this.uniform = g),
          (this.numPlanes = 0),
          (this.numIntersection = 0),
          (this.init = function (e, t, i) {
            var n = 0 !== e.length || t || 0 !== u || d;
            return (d = t), (h = y(e, i, 0)), (u = e.length), n;
          }),
          (this.beginShadows = function () {
            (p = !0), y(null);
          }),
          (this.endShadows = function () {
            (p = !1), v();
          }),
          (this.setState = function (e, t, i, n, r, o) {
            if (!d || null === e || 0 === e.length || (p && !i))
              p ? y(null) : v();
            else {
              var i = p ? 0 : u,
                a = 4 * i,
                s = r.clippingState || null;
              (g.value = s), (s = y(e, n, a, o));
              for (var l = 0; l !== a; ++l) s[l] = h[l];
              (r.clippingState = s),
                (this.numIntersection = t ? this.numPlanes : 0),
                (this.numPlanes += i);
            }
          });
      }
      function ha(i, n) {
        return {
          convert: function (e) {
            var t;
            if (e === Se) return i.REPEAT;
            if (e === Me) return i.CLAMP_TO_EDGE;
            if (e === Ee) return i.MIRRORED_REPEAT;
            if (e === Ce) return i.NEAREST;
            if (e === Pe) return i.NEAREST_MIPMAP_NEAREST;
            if (e === Re) return i.NEAREST_MIPMAP_LINEAR;
            if (e === Oe) return i.LINEAR;
            if (e === Ie) return i.LINEAR_MIPMAP_NEAREST;
            if (e === De) return i.LINEAR_MIPMAP_LINEAR;
            if (e === Ne) return i.UNSIGNED_BYTE;
            if (e === Ge) return i.UNSIGNED_SHORT_4_4_4_4;
            if (e === Ve) return i.UNSIGNED_SHORT_5_5_5_1;
            if (e === We) return i.UNSIGNED_SHORT_5_6_5;
            if (e === Fe) return i.BYTE;
            if (e === ke) return i.SHORT;
            if (e === Ue) return i.UNSIGNED_SHORT;
            if (e === Be) return i.INT;
            if (e === ze) return i.UNSIGNED_INT;
            if (e === je) return i.FLOAT;
            if (e === He && null !== (t = n.get("OES_texture_half_float")))
              return t.HALF_FLOAT_OES;
            if (e === qe) return i.ALPHA;
            if (e === Ye) return i.RGB;
            if (e === Qe) return i.RGBA;
            if (e === Ze) return i.LUMINANCE;
            if (e === Je) return i.LUMINANCE_ALPHA;
            if (e === Ke) return i.DEPTH_COMPONENT;
            if (e === et) return i.DEPTH_STENCIL;
            if (e === A) return i.FUNC_ADD;
            if (e === L) return i.FUNC_SUBTRACT;
            if (e === C) return i.FUNC_REVERSE_SUBTRACT;
            if (e === D) return i.ZERO;
            if (e === N) return i.ONE;
            if (e === F) return i.SRC_COLOR;
            if (e === k) return i.ONE_MINUS_SRC_COLOR;
            if (e === U) return i.SRC_ALPHA;
            if (e === B) return i.ONE_MINUS_SRC_ALPHA;
            if (e === z) return i.DST_ALPHA;
            if (e === $) return i.ONE_MINUS_DST_ALPHA;
            if (e === K) return i.DST_COLOR;
            if (e === ee) return i.ONE_MINUS_DST_COLOR;
            if (e === te) return i.SRC_ALPHA_SATURATE;
            if (
              (e === tt || e === it || e === nt || e === rt) &&
              null !== (t = n.get("WEBGL_compressed_texture_s3tc"))
            ) {
              if (e === tt) return t.COMPRESSED_RGB_S3TC_DXT1_EXT;
              if (e === it) return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;
              if (e === nt) return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;
              if (e === rt) return t.COMPRESSED_RGBA_S3TC_DXT5_EXT;
            }
            if (
              (e === ot || e === at || e === st || e === lt) &&
              null !== (t = n.get("WEBGL_compressed_texture_pvrtc"))
            ) {
              if (e === ot) return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
              if (e === at) return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
              if (e === st) return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
              if (e === lt) return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
            }
            if (
              e === ct &&
              null !== (t = n.get("WEBGL_compressed_texture_etc1"))
            )
              return t.COMPRESSED_RGB_ETC1_WEBGL;
            if (
              (e === O || e === I) &&
              null !== (t = n.get("EXT_blend_minmax"))
            ) {
              if (e === O) return t.MIN_EXT;
              if (e === I) return t.MAX_EXT;
            }
            return e === Xe && null !== (t = n.get("WEBGL_depth_texture"))
              ? t.UNSIGNED_INT_24_8_WEBGL
              : 0;
          },
        };
      }
      function ua(e) {
        console.log("THREE.WebGLRenderer", "88");
        var r =
            void 0 !== (e = e || {}).canvas
              ? e.canvas
              : document.createElementNS(
                  "http://www.w3.org/1999/xhtml",
                  "canvas"
                ),
          t = void 0 !== e.context ? e.context : null,
          i = void 0 !== e.alpha && e.alpha,
          n = void 0 === e.depth || e.depth,
          o = void 0 === e.stencil || e.stencil,
          a = void 0 !== e.antialias && e.antialias,
          s = void 0 === e.premultipliedAlpha || e.premultipliedAlpha,
          l = void 0 !== e.preserveDrawingBuffer && e.preserveDrawingBuffer,
          p = [],
          f = [],
          m = null,
          g = [],
          v = [];
        (this.domElement = r),
          (this.context = null),
          (this.autoClear = !0),
          (this.autoClearColor = !0),
          (this.autoClearDepth = !0),
          (this.autoClearStencil = !0),
          (this.sortObjects = !0),
          (this.clippingPlanes = []),
          (this.localClippingEnabled = !1),
          (this.gammaFactor = 2),
          (this.gammaInput = !1),
          (this.gammaOutput = !1),
          (this.physicallyCorrectLights = !1),
          (this.toneMapping = Le),
          (this.toneMappingExposure = 1),
          (this.toneMappingWhitePoint = 1),
          (this.maxMorphTargets = 8),
          (this.maxMorphNormals = 4);
        var _,
          M,
          E,
          A,
          c,
          x,
          u,
          y,
          L,
          h,
          d,
          b,
          w,
          T,
          S,
          C,
          P,
          R,
          O = this,
          I = !1,
          D = null,
          N = null,
          F = -1,
          k = "",
          U = null,
          B = null,
          z = new Nt(),
          j = new Nt(),
          H = null,
          G = 0,
          V = r.width,
          W = r.height,
          X = 1,
          q = new Nt(0, 0, V, W),
          Y = new Nt(0, 0, V, W),
          Q = !1,
          Z = new pn(),
          J = new ca(),
          $ = !1,
          K = !1,
          ee = new At(),
          te = new Ct(),
          ie = { geometries: 0, textures: 0 },
          ne = { frame: 0, calls: 0, vertices: 0, faces: 0, points: 0 };
        function re() {
          return null === D ? X : 1;
        }
        this.info = { render: ne, memory: ie, programs: null };
        try {
          var oe,
            ae = {
              alpha: i,
              depth: n,
              stencil: o,
              antialias: a,
              premultipliedAlpha: s,
              preserveDrawingBuffer: l,
            };
          if (
            null ===
            (oe =
              t ||
              r.getContext("webgl", ae) ||
              r.getContext("experimental-webgl", ae))
          )
            throw null !== r.getContext("webgl")
              ? "Error creating WebGL context with your selected attributes."
              : "Error creating WebGL context.";
          void 0 === oe.getShaderPrecisionFormat &&
            (oe.getShaderPrecisionFormat = function () {
              return { rangeMin: 1, rangeMax: 1, precision: 1 };
            }),
            r.addEventListener("webglcontextlost", he, !1),
            r.addEventListener("webglcontextrestored", ue, !1);
        } catch (e) {
          console.error("THREE.WebGLRenderer: " + e);
        }
        function se() {
          (_ = new la(oe)).get("WEBGL_depth_texture"),
            _.get("OES_texture_float"),
            _.get("OES_texture_float_linear"),
            _.get("OES_texture_half_float"),
            _.get("OES_texture_half_float_linear"),
            _.get("OES_standard_derivatives"),
            _.get("OES_element_index_uint"),
            _.get("ANGLE_instanced_arrays"),
            (R = new ha(oe, _)),
            (M = new ra(oe, _, e)),
            (E = new na(oe, _, R)).scissor(j.copy(Y).multiplyScalar(X)),
            E.viewport(z.copy(q).multiplyScalar(X)),
            (A = new ia()),
            (c = new ta(oe, _, E, A, M, R, ie)),
            (x = new mn(oe)),
            (u = new Ao(oe, x, ie)),
            (y = new Po(u, ne)),
            (w = new So(oe)),
            (h = new ea(O, _, M)),
            (L = new Co()),
            (d = new wo()),
            (b = new yo(O, E, u, s)),
            (T = new Eo(oe, _, ne)),
            (S = new Mo(oe, _, ne)),
            (C = new Di(0, oe, E, c, M)),
            (P = new Fi(O, oe, E, c, M)),
            (O.info.programs = h.programs),
            (O.context = oe),
            (O.capabilities = M),
            (O.extensions = _),
            (O.properties = A),
            (O.renderLists = d),
            (O.state = E);
        }
        se();
        var le = new sa(O);
        this.vr = le;
        var ce = new fn(O, y, M.maxTextureSize);
        function he(e) {
          e.preventDefault(),
            console.log("THREE.WebGLRenderer: Context Lost."),
            (I = !0);
        }
        function ue() {
          console.log("THREE.WebGLRenderer: Context Restored."), (I = !1), se();
        }
        function de(e) {
          e = e.target;
          e.removeEventListener("dispose", de), pe((e = e)), A.remove(e);
        }
        function pe(e) {
          var t = A.get(e).program;
          (e.program = void 0) !== t && h.releaseProgram(t);
        }
        (this.shadowMap = ce),
          (this.getContext = function () {
            return oe;
          }),
          (this.getContextAttributes = function () {
            return oe.getContextAttributes();
          }),
          (this.forceContextLoss = function () {
            var e = _.get("WEBGL_lose_context");
            e && e.loseContext();
          }),
          (this.forceContextRestore = function () {
            var e = _.get("WEBGL_lose_context");
            e && e.restoreContext();
          }),
          (this.getPixelRatio = function () {
            return X;
          }),
          (this.setPixelRatio = function (e) {
            void 0 !== e && ((X = e), this.setSize(V, W, !1));
          }),
          (this.getSize = function () {
            return { width: V, height: W };
          }),
          (this.setSize = function (e, t, i) {
            var n = le.getDevice();
            n && n.isPresenting
              ? console.warn(
                  "THREE.WebGLRenderer: Can't change size while VR device is presenting."
                )
              : ((V = e),
                (W = t),
                (r.width = e * X),
                (r.height = t * X),
                !1 !== i &&
                  ((r.style.width = e + "px"), (r.style.height = t + "px")),
                this.setViewport(0, 0, e, t));
          }),
          (this.getDrawingBufferSize = function () {
            return { width: V * X, height: W * X };
          }),
          (this.setDrawingBufferSize = function (e, t, i) {
            (V = e),
              (W = t),
              (X = i),
              (r.width = e * i),
              (r.height = t * i),
              this.setViewport(0, 0, e, t);
          }),
          (this.setViewport = function (e, t, i, n) {
            q.set(e, W - t - n, i, n), E.viewport(z.copy(q).multiplyScalar(X));
          }),
          (this.setScissor = function (e, t, i, n) {
            Y.set(e, W - t - n, i, n), E.scissor(j.copy(Y).multiplyScalar(X));
          }),
          (this.setScissorTest = function (e) {
            E.setScissorTest((Q = e));
          }),
          (this.getClearColor = function () {
            return b.getClearColor();
          }),
          (this.setClearColor = function () {
            b.setClearColor.apply(b, arguments);
          }),
          (this.getClearAlpha = function () {
            return b.getClearAlpha();
          }),
          (this.setClearAlpha = function () {
            b.setClearAlpha.apply(b, arguments);
          }),
          (this.clear = function (e, t, i) {
            var n = 0;
            (void 0 !== e && !e) || (n |= oe.COLOR_BUFFER_BIT),
              (void 0 !== t && !t) || (n |= oe.DEPTH_BUFFER_BIT),
              (void 0 !== i && !i) || (n |= oe.STENCIL_BUFFER_BIT),
              oe.clear(n);
          }),
          (this.clearColor = function () {
            this.clear(!0, !1, !1);
          }),
          (this.clearDepth = function () {
            this.clear(!1, !0, !1);
          }),
          (this.clearStencil = function () {
            this.clear(!1, !1, !0);
          }),
          (this.clearTarget = function (e, t, i, n) {
            this.setRenderTarget(e), this.clear(t, i, n);
          }),
          (this.dispose = function () {
            r.removeEventListener("webglcontextlost", he, !1),
              r.removeEventListener("webglcontextrestored", ue, !1),
              d.dispose(),
              le.dispose();
          }),
          (this.renderBufferImmediate = function (e, t, i) {
            E.initAttributes();
            var n = A.get(e);
            e.hasPositions && !n.position && (n.position = oe.createBuffer()),
              e.hasNormals && !n.normal && (n.normal = oe.createBuffer()),
              e.hasUvs && !n.uv && (n.uv = oe.createBuffer()),
              e.hasColors && !n.color && (n.color = oe.createBuffer());
            t = t.getAttributes();
            if (
              (e.hasPositions &&
                (oe.bindBuffer(oe.ARRAY_BUFFER, n.position),
                oe.bufferData(
                  oe.ARRAY_BUFFER,
                  e.positionArray,
                  oe.DYNAMIC_DRAW
                ),
                E.enableAttribute(t.position),
                oe.vertexAttribPointer(t.position, 3, oe.FLOAT, !1, 0, 0)),
              e.hasNormals)
            ) {
              if (
                (oe.bindBuffer(oe.ARRAY_BUFFER, n.normal),
                !i.isMeshPhongMaterial &&
                  !i.isMeshStandardMaterial &&
                  !i.isMeshNormalMaterial &&
                  !0 === i.flatShading)
              )
                for (var r = 0, o = 3 * e.count; r < o; r += 9) {
                  var a = e.normalArray,
                    s = (a[r + 0] + a[r + 3] + a[r + 6]) / 3,
                    l = (a[r + 1] + a[r + 4] + a[r + 7]) / 3,
                    c = (a[r + 2] + a[r + 5] + a[r + 8]) / 3;
                  (a[r + 0] = s),
                    (a[r + 1] = l),
                    (a[r + 2] = c),
                    (a[r + 3] = s),
                    (a[r + 4] = l),
                    (a[r + 5] = c),
                    (a[r + 6] = s),
                    (a[r + 7] = l),
                    (a[r + 8] = c);
                }
              oe.bufferData(oe.ARRAY_BUFFER, e.normalArray, oe.DYNAMIC_DRAW),
                E.enableAttribute(t.normal),
                oe.vertexAttribPointer(t.normal, 3, oe.FLOAT, !1, 0, 0);
            }
            e.hasUvs &&
              i.map &&
              (oe.bindBuffer(oe.ARRAY_BUFFER, n.uv),
              oe.bufferData(oe.ARRAY_BUFFER, e.uvArray, oe.DYNAMIC_DRAW),
              E.enableAttribute(t.uv),
              oe.vertexAttribPointer(t.uv, 2, oe.FLOAT, !1, 0, 0)),
              e.hasColors &&
                i.vertexColors !== Ae &&
                (oe.bindBuffer(oe.ARRAY_BUFFER, n.color),
                oe.bufferData(oe.ARRAY_BUFFER, e.colorArray, oe.DYNAMIC_DRAW),
                E.enableAttribute(t.color),
                oe.vertexAttribPointer(t.color, 3, oe.FLOAT, !1, 0, 0)),
              E.disableUnusedAttributes(),
              oe.drawArrays(oe.TRIANGLES, 0, e.count),
              (e.count = 0);
          }),
          (this.renderBufferDirect = function (e, t, i, n, r, o) {
            E.setMaterial(n);
            var a = Te(e, t, n, r),
              s = i.id + "_" + a.id + "_" + (!0 === n.wireframe),
              l = !1;
            s !== k && ((k = s), (l = !0)),
              r.morphTargetInfluences && (w.update(r, i, n, a), (l = !0));
            (e = i.index), (t = i.attributes.position), (s = 1);
            !0 === n.wireframe && ((e = u.getWireframeAttribute(i)), (s = 2));
            var c = T;
            null !== e && ((h = x.get(e)), (c = S).setIndex(h)),
              l &&
                ((function (e, t, i, n) {
                  if (
                    i &&
                    i.isInstancedBufferGeometry &&
                    null === _.get("ANGLE_instanced_arrays")
                  )
                    return console.error(
                      "THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
                    );
                  void 0 === n && (n = 0), E.initAttributes();
                  var r,
                    o = i.attributes,
                    a = t.getAttributes(),
                    s = e.defaultAttributeValues;
                  for (r in a) {
                    var l = a[r];
                    if (0 <= l) {
                      var c = o[r];
                      if (void 0 !== c) {
                        var h,
                          u,
                          d,
                          p,
                          f,
                          m = c.normalized,
                          g = c.itemSize,
                          v = x.get(c);
                        void 0 !== v &&
                          ((h = v.buffer),
                          (u = v.type),
                          (d = v.bytesPerElement),
                          c.isInterleavedBufferAttribute
                            ? ((p = c.data),
                              (f = p.stride),
                              (v = c.offset),
                              p && p.isInstancedInterleavedBuffer
                                ? (E.enableAttributeAndDivisor(
                                    l,
                                    p.meshPerAttribute
                                  ),
                                  void 0 === i.maxInstancedCount &&
                                    (i.maxInstancedCount =
                                      p.meshPerAttribute * p.count))
                                : E.enableAttribute(l),
                              oe.bindBuffer(oe.ARRAY_BUFFER, h),
                              oe.vertexAttribPointer(
                                l,
                                g,
                                u,
                                m,
                                f * d,
                                (n * f + v) * d
                              ))
                            : (c.isInstancedBufferAttribute
                                ? (E.enableAttributeAndDivisor(
                                    l,
                                    c.meshPerAttribute
                                  ),
                                  void 0 === i.maxInstancedCount &&
                                    (i.maxInstancedCount =
                                      c.meshPerAttribute * c.count))
                                : E.enableAttribute(l),
                              oe.bindBuffer(oe.ARRAY_BUFFER, h),
                              oe.vertexAttribPointer(
                                l,
                                g,
                                u,
                                m,
                                0,
                                n * g * d
                              )));
                      } else if (void 0 !== s) {
                        var y = s[r];
                        if (void 0 !== y)
                          switch (y.length) {
                            case 2:
                              oe.vertexAttrib2fv(l, y);
                              break;
                            case 3:
                              oe.vertexAttrib3fv(l, y);
                              break;
                            case 4:
                              oe.vertexAttrib4fv(l, y);
                              break;
                            default:
                              oe.vertexAttrib1fv(l, y);
                          }
                      }
                    }
                  }
                  E.disableUnusedAttributes();
                })(n, a, i),
                null !== e && oe.bindBuffer(oe.ELEMENT_ARRAY_BUFFER, h.buffer));
            a = 0;
            null !== e ? (a = e.count) : void 0 !== t && (a = t.count);
            var h = i.drawRange.start * s,
              e = i.drawRange.count * s,
              t = null !== o ? o.start * s : 0,
              o = null !== o ? o.count * s : 1 / 0,
              s = Math.max(h, t),
              o = Math.min(a, h + e, t + o) - 1,
              o = Math.max(0, o - s + 1);
            if (0 !== o) {
              if (r.isMesh)
                if (!0 === n.wireframe)
                  E.setLineWidth(n.wireframeLinewidth * re()),
                    c.setMode(oe.LINES);
                else
                  switch (r.drawMode) {
                    case mt:
                      c.setMode(oe.TRIANGLES);
                      break;
                    case 1:
                      c.setMode(oe.TRIANGLE_STRIP);
                      break;
                    case 2:
                      c.setMode(oe.TRIANGLE_FAN);
                  }
              else
                r.isLine
                  ? (void 0 === (n = n.linewidth) && (n = 1),
                    E.setLineWidth(n * re()),
                    r.isLineSegments
                      ? c.setMode(oe.LINES)
                      : r.isLineLoop
                      ? c.setMode(oe.LINE_LOOP)
                      : c.setMode(oe.LINE_STRIP))
                  : r.isPoints && c.setMode(oe.POINTS);
              i && i.isInstancedBufferGeometry
                ? 0 < i.maxInstancedCount && c.renderInstances(i, s, o)
                : c.render(s, o);
            }
          });
        var fe,
          me,
          ge,
          ve = !(this.compile = function (i, e) {
            (p.length = 0),
              (f.length = 0),
              i.traverse(function (e) {
                e.isLight && (p.push(e), e.castShadow && f.push(e));
              }),
              L.setup(p, f, e),
              i.traverse(function (e) {
                if (e.material)
                  if (Array.isArray(e.material))
                    for (var t = 0; t < e.material.length; t++)
                      we(e.material[t], i.fog, e);
                  else we(e.material, i.fog, e);
              });
          }),
          ye = null;
        function _e(e) {
          null !== ye && ye(e);
          e = le.getDevice();
          (e && e.isPresenting ? e : window).requestAnimationFrame(_e);
        }
        function xe(e, t, i, n) {
          for (var r = 0, o = e.length; r < o; r++) {
            var a = e[r],
              s = a.object,
              l = a.geometry,
              c = void 0 === n ? a.material : n,
              h = a.group;
            if (i.isArrayCamera)
              for (var u = (B = i).cameras, d = 0, p = u.length; d < p; d++) {
                var f,
                  m,
                  g,
                  v,
                  y = u[d];
                s.layers.test(y.layers) &&
                  ((f = (v = y.bounds).x * V),
                  (m = v.y * W),
                  (g = v.z * V),
                  (v = v.w * W),
                  E.viewport(z.set(f, m, g, v).multiplyScalar(X)),
                  be(s, t, y, l, c, h));
              }
            else (B = null), be(s, t, i, l, c, h);
          }
        }
        function be(e, t, i, n, r, o) {
          var a, s, l;
          e.onBeforeRender(O, t, i, n, r, o),
            e.modelViewMatrix.multiplyMatrices(
              i.matrixWorldInverse,
              e.matrixWorld
            ),
            e.normalMatrix.getNormalMatrix(e.modelViewMatrix),
            e.isImmediateRenderObject
              ? (E.setMaterial(r),
                (a = Te(i, t.fog, r, e)),
                (k = ""),
                (s = a),
                (l = r),
                e.render(function (e) {
                  O.renderBufferImmediate(e, s, l);
                }))
              : O.renderBufferDirect(i, t.fog, n, r, e, o),
            e.onAfterRender(O, t, i, n, r, o);
        }
        function we(e, t, i) {
          var n = A.get(e),
            r = h.getParameters(
              e,
              L.state,
              f,
              t,
              J.numPlanes,
              J.numIntersection,
              i
            ),
            o = h.getProgramCode(e, r),
            a = n.program,
            i = !0;
          if (void 0 === a) e.addEventListener("dispose", de);
          else if (a.code !== o) pe(e);
          else {
            if (void 0 !== r.shaderID) return;
            i = !1;
          }
          i &&
            (r.shaderID
              ? ((i = Oi[r.shaderID]),
                (n.shader = {
                  name: e.type,
                  uniforms: Pi.clone(i.uniforms),
                  vertexShader: i.vertexShader,
                  fragmentShader: i.fragmentShader,
                }))
              : (n.shader = {
                  name: e.type,
                  uniforms: e.uniforms,
                  vertexShader: e.vertexShader,
                  fragmentShader: e.fragmentShader,
                }),
            e.onBeforeCompile(n.shader),
            (a = h.acquireProgram(e, n.shader, r, o)),
            (n.program = a),
            (e.program = a));
          var s = a.getAttributes();
          if (e.morphTargets)
            for (
              var l = (e.numSupportedMorphTargets = 0);
              l < O.maxMorphTargets;
              l++
            )
              0 <= s["morphTarget" + l] && e.numSupportedMorphTargets++;
          if (e.morphNormals)
            for (l = e.numSupportedMorphNormals = 0; l < O.maxMorphNormals; l++)
              0 <= s["morphNormal" + l] && e.numSupportedMorphNormals++;
          a = n.shader.uniforms;
          ((e.isShaderMaterial || e.isRawShaderMaterial) &&
            !0 !== e.clipping) ||
            ((n.numClippingPlanes = J.numPlanes),
            (n.numIntersection = J.numIntersection),
            (a.clippingPlanes = J.uniform)),
            (n.fog = t),
            (n.lightsHash = L.state.hash),
            e.lights &&
              ((a.ambientLightColor.value = L.state.ambient),
              (a.directionalLights.value = L.state.directional),
              (a.spotLights.value = L.state.spot),
              (a.rectAreaLights.value = L.state.rectArea),
              (a.pointLights.value = L.state.point),
              (a.hemisphereLights.value = L.state.hemi),
              (a.directionalShadowMap.value = L.state.directionalShadowMap),
              (a.directionalShadowMatrix.value =
                L.state.directionalShadowMatrix),
              (a.spotShadowMap.value = L.state.spotShadowMap),
              (a.spotShadowMatrix.value = L.state.spotShadowMatrix),
              (a.pointShadowMap.value = L.state.pointShadowMap),
              (a.pointShadowMatrix.value = L.state.pointShadowMatrix));
          (t = n.program.getUniforms()), (a = Ti.seqWithValue(t.seq, a));
          n.uniformsList = a;
        }
        function Te(e, t, i, n) {
          G = 0;
          var r = A.get(i);
          $ &&
            ((!K && e === U) ||
              ((o = e === U && i.id === F),
              J.setState(
                i.clippingPlanes,
                i.clipIntersection,
                i.clipShadows,
                e,
                r,
                o
              ))),
            !1 === i.needsUpdate &&
              (void 0 === r.program ||
                (i.fog && r.fog !== t) ||
                (i.lights && r.lightsHash !== L.state.hash) ||
                (void 0 !== r.numClippingPlanes &&
                  (r.numClippingPlanes !== J.numPlanes ||
                    r.numIntersection !== J.numIntersection))) &&
              (i.needsUpdate = !0),
            i.needsUpdate && (we(i, t, n), (i.needsUpdate = !1));
          var o,
            a,
            s,
            l,
            c,
            h,
            u,
            d,
            p,
            f,
            m,
            g,
            v,
            y,
            _ = !1,
            x = !1,
            b = !1,
            w = r.program,
            T = w.getUniforms(),
            S = r.shader.uniforms;
          return (
            E.useProgram(w.program) && (b = x = _ = !0),
            i.id !== F && ((F = i.id), (x = !0)),
            (!_ && e === U) ||
              (T.setValue(oe, "projectionMatrix", e.projectionMatrix),
              M.logarithmicDepthBuffer &&
                T.setValue(
                  oe,
                  "logDepthBufFC",
                  2 / (Math.log(e.far + 1) / Math.LN2)
                ),
              U !== (B || e) && ((U = B || e), (b = x = !0)),
              !(
                i.isShaderMaterial ||
                i.isMeshPhongMaterial ||
                i.isMeshStandardMaterial ||
                i.envMap
              ) ||
                (void 0 !== (a = T.map.cameraPosition) &&
                  a.setValue(oe, te.setFromMatrixPosition(e.matrixWorld))),
              (i.isMeshPhongMaterial ||
                i.isMeshLambertMaterial ||
                i.isMeshBasicMaterial ||
                i.isMeshStandardMaterial ||
                i.isShaderMaterial ||
                i.skinning) &&
                T.setValue(oe, "viewMatrix", e.matrixWorldInverse)),
            i.skinning &&
              (T.setOptional(oe, n, "bindMatrix"),
              T.setOptional(oe, n, "bindMatrixInverse"),
              (o = n.skeleton) &&
                ((_ = o.bones),
                M.floatVertexTextures
                  ? (void 0 === o.boneTexture &&
                      ((a = Math.sqrt(4 * _.length)),
                      (a = Mt.ceilPowerOfTwo(a)),
                      (a = Math.max(a, 4)),
                      (e = new Float32Array(a * a * 4)).set(o.boneMatrices),
                      (_ = new Ut(e, a, a, Qe, je)),
                      (o.boneMatrices = e),
                      (o.boneTexture = _),
                      (o.boneTextureSize = a)),
                    T.setValue(oe, "boneTexture", o.boneTexture),
                    T.setValue(oe, "boneTextureSize", o.boneTextureSize))
                  : T.setOptional(oe, o, "boneMatrices"))),
            x &&
              (T.setValue(oe, "toneMappingExposure", O.toneMappingExposure),
              T.setValue(oe, "toneMappingWhitePoint", O.toneMappingWhitePoint),
              i.lights &&
                ((x = b),
                ((b = S).ambientLightColor.needsUpdate = x),
                (b.directionalLights.needsUpdate = x),
                (b.pointLights.needsUpdate = x),
                (b.spotLights.needsUpdate = x),
                (b.rectAreaLights.needsUpdate = x),
                (b.hemisphereLights.needsUpdate = x)),
              t &&
                i.fog &&
                ((y = t),
                ((v = S).fogColor.value = y.color),
                y.isFog
                  ? ((v.fogNear.value = y.near), (v.fogFar.value = y.far))
                  : y.isFogExp2 && (v.fogDensity.value = y.density)),
              i.isMeshBasicMaterial
                ? Se(S, i)
                : i.isMeshLambertMaterial
                ? (Se(S, i),
                  (v = S),
                  (y = i).emissiveMap && (v.emissiveMap.value = y.emissiveMap))
                : i.isMeshPhongMaterial
                ? (Se(S, i),
                  i.isMeshToonMaterial
                    ? (Me((m = S), (g = i)),
                      g.gradientMap && (m.gradientMap.value = g.gradientMap))
                    : Me(S, i))
                : i.isMeshStandardMaterial
                ? (Se(S, i),
                  i.isMeshPhysicalMaterial
                    ? ((m = i),
                      ((g = S).clearCoat.value = m.clearCoat),
                      (g.clearCoatRoughness.value = m.clearCoatRoughness),
                      Ee(g, m))
                    : Ee(S, i))
                : i.isMeshDepthMaterial
                ? (Se(S, i),
                  (p = S),
                  (f = i).displacementMap &&
                    ((p.displacementMap.value = f.displacementMap),
                    (p.displacementScale.value = f.displacementScale),
                    (p.displacementBias.value = f.displacementBias)))
                : i.isMeshDistanceMaterial
                ? (Se(S, i),
                  (p = S),
                  (f = i).displacementMap &&
                    ((p.displacementMap.value = f.displacementMap),
                    (p.displacementScale.value = f.displacementScale),
                    (p.displacementBias.value = f.displacementBias)),
                  p.referencePosition.value.copy(f.referencePosition),
                  (p.nearDistance.value = f.nearDistance),
                  (p.farDistance.value = f.farDistance))
                : i.isMeshNormalMaterial
                ? (Se(S, i),
                  (u = S),
                  (d = i).bumpMap &&
                    ((u.bumpMap.value = d.bumpMap),
                    (u.bumpScale.value = d.bumpScale)),
                  d.normalMap &&
                    ((u.normalMap.value = d.normalMap),
                    u.normalScale.value.copy(d.normalScale)),
                  d.displacementMap &&
                    ((u.displacementMap.value = d.displacementMap),
                    (u.displacementScale.value = d.displacementScale),
                    (u.displacementBias.value = d.displacementBias)))
                : i.isLineBasicMaterial
                ? ((h = i),
                  ((c = S).diffuse.value = h.color),
                  (c.opacity.value = h.opacity),
                  i.isLineDashedMaterial &&
                    ((l = i),
                    ((s = S).dashSize.value = l.dashSize),
                    (s.totalSize.value = l.dashSize + l.gapSize),
                    (s.scale.value = l.scale)))
                : i.isPointsMaterial
                ? ((u = i),
                  ((d = S).diffuse.value = u.color),
                  (d.opacity.value = u.opacity),
                  (d.size.value = u.size * X),
                  (d.scale.value = 0.5 * W),
                  (d.map.value = u.map),
                  null !== u.map &&
                    (!0 === u.map.matrixAutoUpdate &&
                      ((c = u.map.offset),
                      (h = u.map.repeat),
                      (s = u.map.rotation),
                      (l = u.map.center),
                      u.map.matrix.setUvTransform(
                        c.x,
                        c.y,
                        h.x,
                        h.y,
                        s,
                        l.x,
                        l.y
                      )),
                    d.uvTransform.value.copy(u.map.matrix)))
                : i.isShadowMaterial &&
                  ((S.color.value = i.color), (S.opacity.value = i.opacity)),
              void 0 !== S.ltcMat && (S.ltcMat.value = Ci.LTC_MAT_TEXTURE),
              void 0 !== S.ltcMag && (S.ltcMag.value = Ci.LTC_MAG_TEXTURE),
              Ti.upload(oe, r.uniformsList, S, O)),
            T.setValue(oe, "modelViewMatrix", n.modelViewMatrix),
            T.setValue(oe, "normalMatrix", n.normalMatrix),
            T.setValue(oe, "modelMatrix", n.matrixWorld),
            w
          );
        }
        function Se(e, t) {
          var i, n, r, o;
          (e.opacity.value = t.opacity),
            t.color && (e.diffuse.value = t.color),
            t.emissive &&
              e.emissive.value
                .copy(t.emissive)
                .multiplyScalar(t.emissiveIntensity),
            t.map && (e.map.value = t.map),
            t.alphaMap && (e.alphaMap.value = t.alphaMap),
            t.specularMap && (e.specularMap.value = t.specularMap),
            t.envMap &&
              ((e.envMap.value = t.envMap),
              (e.flipEnvMap.value =
                t.envMap && t.envMap.isCubeTexture ? -1 : 1),
              (e.reflectivity.value = t.reflectivity),
              (e.refractionRatio.value = t.refractionRatio)),
            t.lightMap &&
              ((e.lightMap.value = t.lightMap),
              (e.lightMapIntensity.value = t.lightMapIntensity)),
            t.aoMap &&
              ((e.aoMap.value = t.aoMap),
              (e.aoMapIntensity.value = t.aoMapIntensity)),
            t.map
              ? (i = t.map)
              : t.specularMap
              ? (i = t.specularMap)
              : t.displacementMap
              ? (i = t.displacementMap)
              : t.normalMap
              ? (i = t.normalMap)
              : t.bumpMap
              ? (i = t.bumpMap)
              : t.roughnessMap
              ? (i = t.roughnessMap)
              : t.metalnessMap
              ? (i = t.metalnessMap)
              : t.alphaMap
              ? (i = t.alphaMap)
              : t.emissiveMap && (i = t.emissiveMap),
            void 0 !== i &&
              (i.isWebGLRenderTarget && (i = i.texture),
              !0 === i.matrixAutoUpdate &&
                ((n = i.offset),
                (r = i.repeat),
                (o = i.rotation),
                (t = i.center),
                i.matrix.setUvTransform(n.x, n.y, r.x, r.y, o, t.x, t.y)),
              e.uvTransform.value.copy(i.matrix));
        }
        function Me(e, t) {
          (e.specular.value = t.specular),
            (e.shininess.value = Math.max(t.shininess, 1e-4)),
            t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
            t.bumpMap &&
              ((e.bumpMap.value = t.bumpMap),
              (e.bumpScale.value = t.bumpScale)),
            t.normalMap &&
              ((e.normalMap.value = t.normalMap),
              e.normalScale.value.copy(t.normalScale)),
            t.displacementMap &&
              ((e.displacementMap.value = t.displacementMap),
              (e.displacementScale.value = t.displacementScale),
              (e.displacementBias.value = t.displacementBias));
        }
        function Ee(e, t) {
          (e.roughness.value = t.roughness),
            (e.metalness.value = t.metalness),
            t.roughnessMap && (e.roughnessMap.value = t.roughnessMap),
            t.metalnessMap && (e.metalnessMap.value = t.metalnessMap),
            t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
            t.bumpMap &&
              ((e.bumpMap.value = t.bumpMap),
              (e.bumpScale.value = t.bumpScale)),
            t.normalMap &&
              ((e.normalMap.value = t.normalMap),
              e.normalScale.value.copy(t.normalScale)),
            t.displacementMap &&
              ((e.displacementMap.value = t.displacementMap),
              (e.displacementScale.value = t.displacementScale),
              (e.displacementBias.value = t.displacementBias)),
            t.envMap && (e.envMapIntensity.value = t.envMapIntensity);
        }
        (this.animate = function (e) {
          (ye = e),
            ve ||
              (((e = le.getDevice()) && e.isPresenting
                ? e
                : window
              ).requestAnimationFrame(_e),
              (ve = !0));
        }),
          (this.render = function (e, t, i, n) {
            var r, o;
            t && t.isCamera
              ? I ||
                ((k = ""),
                (F = -1),
                !(U = null) === e.autoUpdate && e.updateMatrixWorld(),
                null === t.parent && t.updateMatrixWorld(),
                le.enabled && (t = le.getCamera(t)),
                ee.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
                Z.setFromMatrix(ee),
                (p.length = 0),
                (f.length = 0),
                (g.length = 0),
                (v.length = 0),
                (K = this.localClippingEnabled),
                ($ = J.init(this.clippingPlanes, K, t)),
                (m = d.get(e, t)).init(),
                (function e(t, i, n) {
                  if (!1 === t.visible) return;
                  var r = t.layers.test(i.layers);
                  if (r)
                    if (t.isLight) p.push(t), t.castShadow && f.push(t);
                    else if (t.isSprite)
                      (t.frustumCulled && !Z.intersectsSprite(t)) || g.push(t);
                    else if (t.isLensFlare) v.push(t);
                    else if (t.isImmediateRenderObject)
                      n &&
                        te
                          .setFromMatrixPosition(t.matrixWorld)
                          .applyMatrix4(ee),
                        m.push(t, null, t.material, te.z, null);
                    else if (
                      (t.isMesh || t.isLine || t.isPoints) &&
                      (t.isSkinnedMesh && t.skeleton.update(),
                      !t.frustumCulled || Z.intersectsObject(t))
                    ) {
                      n &&
                        te
                          .setFromMatrixPosition(t.matrixWorld)
                          .applyMatrix4(ee);
                      var o = y.update(t),
                        a = t.material;
                      if (Array.isArray(a))
                        for (
                          var s = o.groups, l = 0, c = s.length;
                          l < c;
                          l++
                        ) {
                          var h = s[l],
                            u = a[h.materialIndex];
                          u && u.visible && m.push(t, o, u, te.z, h);
                        }
                      else a.visible && m.push(t, o, a, te.z, null);
                    }
                  var d = t.children;
                  for (var l = 0, c = d.length; l < c; l++) e(d[l], i, n);
                })(e, t, O.sortObjects),
                !0 === O.sortObjects && m.sort(),
                $ && J.beginShadows(),
                ce.render(f, e, t),
                L.setup(p, f, t),
                $ && J.endShadows(),
                ne.frame++,
                (ne.calls = 0),
                (ne.vertices = 0),
                (ne.faces = 0),
                void (ne.points = 0) === i && (i = null),
                this.setRenderTarget(i),
                b.render(m, e, t, n),
                (r = m.opaque),
                (o = m.transparent),
                e.overrideMaterial
                  ? ((n = e.overrideMaterial),
                    r.length && xe(r, e, t, n),
                    o.length && xe(o, e, t, n))
                  : (r.length && xe(r, e, t), o.length && xe(o, e, t)),
                P.render(g, e, t),
                C.render(v, e, t, z),
                i && c.updateRenderTargetMipmap(i),
                E.buffers.depth.setTest(!0),
                E.buffers.depth.setMask(!0),
                E.buffers.color.setMask(!0),
                E.setPolygonOffset(!1),
                le.enabled && le.submitFrame())
              : console.error(
                  "THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."
                );
          }),
          (this.setFaceCulling = function (e, t) {
            E.setCullFace(e), E.setFlipSided(0 === t);
          }),
          (this.allocTextureUnit = function () {
            var e = G;
            return (
              e >= M.maxTextures &&
                console.warn(
                  "THREE.WebGLRenderer: Trying to use " +
                    e +
                    " texture units while this GPU supports only " +
                    M.maxTextures
                ),
              (G += 1),
              e
            );
          }),
          (this.setTexture2D =
            ((fe = !1),
            function (e, t) {
              e &&
                e.isWebGLRenderTarget &&
                (fe ||
                  (console.warn(
                    "THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."
                  ),
                  (fe = !0)),
                (e = e.texture)),
                c.setTexture2D(e, t);
            })),
          (this.setTexture =
            ((me = !1),
            function (e, t) {
              me ||
                (console.warn(
                  "THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."
                ),
                (me = !0)),
                c.setTexture2D(e, t);
            })),
          (this.setTextureCube =
            ((ge = !1),
            function (e, t) {
              e &&
                e.isWebGLRenderTargetCube &&
                (ge ||
                  (console.warn(
                    "THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."
                  ),
                  (ge = !0)),
                (e = e.texture)),
                (e && e.isCubeTexture) ||
                (Array.isArray(e.image) && 6 === e.image.length)
                  ? c.setTextureCube(e, t)
                  : c.setTextureCubeDynamic(e, t);
            })),
          (this.getRenderTarget = function () {
            return D;
          }),
          (this.setRenderTarget = function (e) {
            (D = e) &&
              void 0 === A.get(e).__webglFramebuffer &&
              c.setupRenderTarget(e);
            var t,
              i = null,
              n = !1;
            (H = e
              ? ((t = A.get(e).__webglFramebuffer),
                e.isWebGLRenderTargetCube
                  ? ((i = t[e.activeCubeFace]), (n = !0))
                  : (i = t),
                z.copy(e.viewport),
                j.copy(e.scissor),
                e.scissorTest)
              : (z.copy(q).multiplyScalar(X), j.copy(Y).multiplyScalar(X), Q)),
              N !== i && (oe.bindFramebuffer(oe.FRAMEBUFFER, i), (N = i)),
              E.viewport(z),
              E.scissor(j),
              E.setScissorTest(H),
              n &&
                ((n = A.get(e.texture)),
                oe.framebufferTexture2D(
                  oe.FRAMEBUFFER,
                  oe.COLOR_ATTACHMENT0,
                  oe.TEXTURE_CUBE_MAP_POSITIVE_X + e.activeCubeFace,
                  n.__webglTexture,
                  e.activeMipMapLevel
                ));
          }),
          (this.readRenderTargetPixels = function (e, t, i, n, r, o) {
            if (e && e.isWebGLRenderTarget) {
              var a = A.get(e).__webglFramebuffer;
              if (a) {
                var s = !1;
                a !== N && (oe.bindFramebuffer(oe.FRAMEBUFFER, a), (s = !0));
                try {
                  var l = e.texture,
                    c = l.format,
                    l = l.type;
                  if (
                    c !== Qe &&
                    R.convert(c) !==
                      oe.getParameter(oe.IMPLEMENTATION_COLOR_READ_FORMAT)
                  )
                    return void console.error(
                      "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."
                    );
                  if (
                    !(
                      l === Ne ||
                      R.convert(l) ===
                        oe.getParameter(oe.IMPLEMENTATION_COLOR_READ_TYPE) ||
                      (l === je &&
                        (_.get("OES_texture_float") ||
                          _.get("WEBGL_color_buffer_float"))) ||
                      (l === He && _.get("EXT_color_buffer_half_float"))
                    )
                  )
                    return void console.error(
                      "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type."
                    );
                  oe.checkFramebufferStatus(oe.FRAMEBUFFER) ===
                  oe.FRAMEBUFFER_COMPLETE
                    ? 0 <= t &&
                      t <= e.width - n &&
                      0 <= i &&
                      i <= e.height - r &&
                      oe.readPixels(t, i, n, r, R.convert(c), R.convert(l), o)
                    : console.error(
                        "THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete."
                      );
                } finally {
                  s && oe.bindFramebuffer(oe.FRAMEBUFFER, N);
                }
              }
            } else
              console.error(
                "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget."
              );
          });
      }
      function da(e, t) {
        (this.name = ""),
          (this.color = new Mi(e)),
          (this.density = void 0 !== t ? t : 25e-5);
      }
      function pa(e, t, i) {
        (this.name = ""),
          (this.color = new Mi(e)),
          (this.near = void 0 !== t ? t : 1),
          (this.far = void 0 !== i ? i : 1e3);
      }
      function fa() {
        Un.call(this),
          (this.type = "Scene"),
          (this.background = null),
          (this.fog = null),
          (this.overrideMaterial = null),
          (this.autoUpdate = !0);
      }
      function ma(e, t, i, n, r) {
        Un.call(this),
          (this.lensFlares = []),
          (this.positionScreen = new Ct()),
          (this.customUpdateCallback = void 0) !== e && this.add(e, t, i, n, r);
      }
      function ga(e) {
        an.call(this),
          (this.type = "SpriteMaterial"),
          (this.color = new Mi(16777215)),
          (this.map = null),
          (this.rotation = 0),
          (this.fog = !1),
          (this.lights = !1),
          this.setValues(e);
      }
      function va(e) {
        Un.call(this),
          (this.type = "Sprite"),
          (this.material = void 0 !== e ? e : new ga());
      }
      function ya() {
        Un.call(this),
          (this.type = "LOD"),
          Object.defineProperties(this, {
            levels: { enumerable: !0, value: [] },
          });
      }
      function _a(e, t) {
        if (
          ((e = e || []),
          (this.bones = e.slice(0)),
          (this.boneMatrices = new Float32Array(16 * this.bones.length)),
          void 0 === t)
        )
          this.calculateInverses();
        else if (this.bones.length === t.length) this.boneInverses = t.slice(0);
        else {
          console.warn("THREE.Skeleton boneInverses is the wrong length."),
            (this.boneInverses = []);
          for (var i = 0, n = this.bones.length; i < n; i++)
            this.boneInverses.push(new At());
        }
      }
      function xa() {
        Un.call(this), (this.type = "Bone");
      }
      function ba(e, t) {
        fo.call(this, e, t),
          (this.type = "SkinnedMesh"),
          (this.bindMode = "attached"),
          (this.bindMatrix = new At()),
          (this.bindMatrixInverse = new At());
        t = new _a(this.initBones());
        this.bind(t, this.matrixWorld), this.normalizeSkinWeights();
      }
      function wa(e) {
        an.call(this),
          (this.type = "LineBasicMaterial"),
          (this.color = new Mi(16777215)),
          (this.linewidth = 1),
          (this.linecap = "round"),
          (this.linejoin = "round"),
          (this.lights = !1),
          this.setValues(e);
      }
      function Ta(e, t, i) {
        if (1 === i)
          return (
            console.warn(
              "THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."
            ),
            new Sa(e, t)
          );
        Un.call(this),
          (this.type = "Line"),
          (this.geometry = void 0 !== e ? e : new no()),
          (this.material =
            void 0 !== t ? t : new wa({ color: 16777215 * Math.random() }));
      }
      function Sa(e, t) {
        Ta.call(this, e, t), (this.type = "LineSegments");
      }
      function Ma(e, t) {
        Ta.call(this, e, t), (this.type = "LineLoop");
      }
      function Ea(e) {
        an.call(this),
          (this.type = "PointsMaterial"),
          (this.color = new Mi(16777215)),
          (this.map = null),
          (this.size = 1),
          (this.sizeAttenuation = !0),
          (this.lights = !1),
          this.setValues(e);
      }
      function Aa(e, t) {
        Un.call(this),
          (this.type = "Points"),
          (this.geometry = void 0 !== e ? e : new no()),
          (this.material =
            void 0 !== t ? t : new Ea({ color: 16777215 * Math.random() }));
      }
      function La() {
        Un.call(this), (this.type = "Group");
      }
      function Ca(e, t, i, n, r, o, a, s, l) {
        Dt.call(this, e, t, i, n, r, o, a, s, l), (this.generateMipmaps = !1);
        var c = this;
        requestAnimationFrame(function e() {
          var t = c.image;
          t.readyState >= t.HAVE_CURRENT_DATA && (c.needsUpdate = !0),
            requestAnimationFrame(e);
        });
      }
      function Pa(e, t, i, n, r, o, a, s, l, c, h, u) {
        Dt.call(this, null, o, a, s, l, c, n, r, h, u),
          (this.image = { width: t, height: i }),
          (this.mipmaps = e),
          (this.flipY = !1),
          (this.generateMipmaps = !1);
      }
      function Ra(e, t, i, n, r, o, a, s, l, c) {
        if ((c = void 0 !== c ? c : Ke) !== Ke && c !== et)
          throw new Error(
            "DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat"
          );
        void 0 === i && c === Ke && (i = Ue),
          void 0 === i && c === et && (i = Xe),
          Dt.call(this, null, n, r, o, a, s, c, i, l),
          (this.image = { width: e, height: t }),
          (this.magFilter = void 0 !== a ? a : Ce),
          (this.minFilter = void 0 !== s ? s : Ce),
          (this.flipY = !1),
          (this.generateMipmaps = !1);
      }
      function Oa(e) {
        no.call(this), (this.type = "WireframeGeometry");
        var t,
          i,
          n,
          r,
          o,
          a,
          s = [],
          l = [0, 0],
          c = {},
          h = ["a", "b", "c"];
        if (e && e.isGeometry) {
          for (var u = e.faces, d = 0, p = u.length; d < p; d++)
            for (var f = u[d], m = 0; m < 3; m++)
              (r = f[h[m]]),
                (o = f[h[(m + 1) % 3]]),
                (l[0] = Math.min(r, o)),
                (l[1] = Math.max(r, o)),
                void 0 === c[(a = l[0] + "," + l[1])] &&
                  (c[a] = { index1: l[0], index2: l[1] });
          for (a in c)
            (n = c[a]),
              (b = e.vertices[n.index1]),
              s.push(b.x, b.y, b.z),
              (b = e.vertices[n.index2]),
              s.push(b.x, b.y, b.z);
        } else if (e && e.isBufferGeometry) {
          var g,
            v,
            y,
            _,
            x,
            b = new Ct();
          if (null !== e.index) {
            for (
              g = e.attributes.position,
                v = e.index,
                0 === (y = e.groups).length &&
                  (y = [{ start: 0, count: v.count, materialIndex: 0 }]),
                t = 0,
                i = y.length;
              t < i;
              ++t
            )
              for (p = (d = (_ = y[t]).start) + _.count; d < p; d += 3)
                for (m = 0; m < 3; m++)
                  (r = v.getX(d + m)),
                    (o = v.getX(d + ((m + 1) % 3))),
                    (l[0] = Math.min(r, o)),
                    (l[1] = Math.max(r, o)),
                    void 0 === c[(a = l[0] + "," + l[1])] &&
                      (c[a] = { index1: l[0], index2: l[1] });
            for (a in c)
              (n = c[a]),
                b.fromBufferAttribute(g, n.index1),
                s.push(b.x, b.y, b.z),
                b.fromBufferAttribute(g, n.index2),
                s.push(b.x, b.y, b.z);
          } else
            for (d = 0, p = (g = e.attributes.position).count / 3; d < p; d++)
              for (m = 0; m < 3; m++)
                (x = 3 * d + m),
                  b.fromBufferAttribute(g, x),
                  s.push(b.x, b.y, b.z),
                  (x = 3 * d + ((m + 1) % 3)),
                  b.fromBufferAttribute(g, x),
                  s.push(b.x, b.y, b.z);
        }
        this.addAttribute("position", new rr(s, 3));
      }
      function Ia(e, t, i) {
        Qn.call(this),
          (this.type = "ParametricGeometry"),
          (this.parameters = { func: e, slices: t, stacks: i }),
          this.fromBufferGeometry(new Da(e, t, i)),
          this.mergeVertices();
      }
      function Da(e, t, i) {
        no.call(this),
          (this.type = "ParametricBufferGeometry"),
          (this.parameters = { func: e, slices: t, stacks: i });
        for (
          var n = [],
            r = [],
            o = [],
            a = [],
            s = new Ct(),
            l = new Ct(),
            c = new Ct(),
            h = new Ct(),
            u = new Ct(),
            d = t + 1,
            p = 0;
          p <= i;
          p++
        )
          for (var f = p / i, m = 0; m <= t; m++) {
            var g = m / t,
              l = e(g, f, l);
            r.push(l.x, l.y, l.z),
              0 <= g - 1e-5
                ? ((c = e(g - 1e-5, f, c)), h.subVectors(l, c))
                : ((c = e(1e-5 + g, f, c)), h.subVectors(c, l)),
              0 <= f - 1e-5
                ? ((c = e(g, f - 1e-5, c)), u.subVectors(l, c))
                : ((c = e(g, 1e-5 + f, c)), u.subVectors(c, l)),
              s.crossVectors(h, u).normalize(),
              o.push(s.x, s.y, s.z),
              a.push(g, f);
          }
        for (p = 0; p < i; p++)
          for (m = 0; m < t; m++) {
            var v = p * d + m,
              y = p * d + m + 1,
              _ = (p + 1) * d + m + 1,
              x = (p + 1) * d + m;
            n.push(v, y, x), n.push(y, _, x);
          }
        this.setIndex(n),
          this.addAttribute("position", new rr(r, 3)),
          this.addAttribute("normal", new rr(o, 3)),
          this.addAttribute("uv", new rr(a, 2));
      }
      function Na(e, t, i, n) {
        Qn.call(this),
          (this.type = "PolyhedronGeometry"),
          (this.parameters = { vertices: e, indices: t, radius: i, detail: n }),
          this.fromBufferGeometry(new Fa(e, t, i, n)),
          this.mergeVertices();
      }
      function Fa(i, r, e, t) {
        no.call(this),
          (this.type = "PolyhedronBufferGeometry"),
          (this.parameters = { vertices: i, indices: r, radius: e, detail: t }),
          (e = e || 1);
        var h = [],
          u = [];
        function d(e) {
          h.push(e.x, e.y, e.z);
        }
        function o(e, t) {
          e *= 3;
          (t.x = i[0 + e]), (t.y = i[1 + e]), (t.z = i[2 + e]);
        }
        function p(e, t, i, n) {
          n < 0 && 1 === e.x && (u[t] = e.x - 1),
            0 === i.x && 0 === i.z && (u[t] = n / 2 / Math.PI + 0.5);
        }
        function f(e) {
          return Math.atan2(e.z, -e.x);
        }
        !(function (u) {
          for (
            var e = new Ct(), t = new Ct(), i = new Ct(), n = 0;
            n < r.length;
            n += 3
          )
            o(r[n + 0], e),
              o(r[n + 1], t),
              o(r[n + 2], i),
              (function (e, t, i) {
                var n,
                  r,
                  o = Math.pow(2, u),
                  a = [];
                for (n = 0; n <= o; n++) {
                  a[n] = [];
                  var s = e.clone().lerp(i, n / o),
                    l = t.clone().lerp(i, n / o),
                    c = o - n;
                  for (r = 0; r <= c; r++)
                    a[n][r] = 0 === r && n === o ? s : s.clone().lerp(l, r / c);
                }
                for (n = 0; n < o; n++)
                  for (r = 0; r < 2 * (o - n) - 1; r++) {
                    var h = Math.floor(r / 2);
                    r % 2 == 0
                      ? (d(a[n][h + 1]), d(a[n + 1][h]), d(a[n][h]))
                      : (d(a[n][h + 1]), d(a[n + 1][h + 1]), d(a[n + 1][h]));
                  }
              })(e, t, i);
        })((t = t || 0)),
          (function (e) {
            for (var t = new Ct(), i = 0; i < h.length; i += 3)
              (t.x = h[i + 0]),
                (t.y = h[i + 1]),
                (t.z = h[i + 2]),
                t.normalize().multiplyScalar(e),
                (h[i + 0] = t.x),
                (h[i + 1] = t.y),
                (h[i + 2] = t.z);
          })(e),
          (function () {
            for (var e = new Ct(), t = 0; t < h.length; t += 3) {
              (e.x = h[t + 0]), (e.y = h[t + 1]), (e.z = h[t + 2]);
              var i = f(e) / 2 / Math.PI + 0.5,
                n =
                  (function (e) {
                    return Math.atan2(-e.y, Math.sqrt(e.x * e.x + e.z * e.z));
                  })(e) /
                    Math.PI +
                  0.5;
              u.push(i, 1 - n);
            }
            (function () {
              for (
                var e = new Ct(),
                  t = new Ct(),
                  i = new Ct(),
                  n = new Ct(),
                  r = new Et(),
                  o = new Et(),
                  a = new Et(),
                  s = 0,
                  l = 0;
                s < h.length;
                s += 9, l += 6
              ) {
                e.set(h[s + 0], h[s + 1], h[s + 2]),
                  t.set(h[s + 3], h[s + 4], h[s + 5]),
                  i.set(h[s + 6], h[s + 7], h[s + 8]),
                  r.set(u[l + 0], u[l + 1]),
                  o.set(u[l + 2], u[l + 3]),
                  a.set(u[l + 4], u[l + 5]),
                  n.copy(e).add(t).add(i).divideScalar(3);
                var c = f(n);
                p(r, l + 0, e, c), p(o, l + 2, t, c), p(a, l + 4, i, c);
              }
            })(),
              (function () {
                for (var e = 0; e < u.length; e += 6) {
                  var t = u[e + 0],
                    i = u[e + 2],
                    n = u[e + 4],
                    r = Math.max(t, i, n),
                    o = Math.min(t, i, n);
                  0.9 < r &&
                    o < 0.1 &&
                    (t < 0.2 && (u[e + 0] += 1),
                    i < 0.2 && (u[e + 2] += 1),
                    n < 0.2 && (u[e + 4] += 1));
                }
              })();
          })(),
          this.addAttribute("position", new rr(h, 3)),
          this.addAttribute("normal", new rr(h.slice(), 3)),
          this.addAttribute("uv", new rr(u, 2)),
          0 === t ? this.computeVertexNormals() : this.normalizeNormals();
      }
      function ka(e, t) {
        Qn.call(this),
          (this.type = "TetrahedronGeometry"),
          (this.parameters = { radius: e, detail: t }),
          this.fromBufferGeometry(new Ua(e, t)),
          this.mergeVertices();
      }
      function Ua(e, t) {
        Fa.call(
          this,
          [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1],
          [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1],
          e,
          t
        ),
          (this.type = "TetrahedronBufferGeometry"),
          (this.parameters = { radius: e, detail: t });
      }
      function Ba(e, t) {
        Qn.call(this),
          (this.type = "OctahedronGeometry"),
          (this.parameters = { radius: e, detail: t }),
          this.fromBufferGeometry(new za(e, t)),
          this.mergeVertices();
      }
      function za(e, t) {
        Fa.call(
          this,
          [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1],
          [
            0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4,
            2,
          ],
          e,
          t
        ),
          (this.type = "OctahedronBufferGeometry"),
          (this.parameters = { radius: e, detail: t });
      }
      function ja(e, t) {
        Qn.call(this),
          (this.type = "IcosahedronGeometry"),
          (this.parameters = { radius: e, detail: t }),
          this.fromBufferGeometry(new Ha(e, t)),
          this.mergeVertices();
      }
      function Ha(e, t) {
        var i = (1 + Math.sqrt(5)) / 2;
        Fa.call(
          this,
          [
            -1,
            i,
            0,
            1,
            i,
            0,
            -1,
            -i,
            0,
            1,
            -i,
            0,
            0,
            -1,
            i,
            0,
            1,
            i,
            0,
            -1,
            -i,
            0,
            1,
            -i,
            i,
            0,
            -1,
            i,
            0,
            1,
            -i,
            0,
            -1,
            -i,
            0,
            1,
          ],
          [
            0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4,
            11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3,
            8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1,
          ],
          e,
          t
        ),
          (this.type = "IcosahedronBufferGeometry"),
          (this.parameters = { radius: e, detail: t });
      }
      function Ga(e, t) {
        Qn.call(this),
          (this.type = "DodecahedronGeometry"),
          (this.parameters = { radius: e, detail: t }),
          this.fromBufferGeometry(new Va(e, t)),
          this.mergeVertices();
      }
      function Va(e, t) {
        var i = (1 + Math.sqrt(5)) / 2,
          n = 1 / i;
        Fa.call(
          this,
          [
            -1,
            -1,
            -1,
            -1,
            -1,
            1,
            -1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            1,
            1,
            1,
            -1,
            1,
            1,
            1,
            0,
            -n,
            -i,
            0,
            -n,
            i,
            0,
            n,
            -i,
            0,
            n,
            i,
            -n,
            -i,
            0,
            -n,
            i,
            0,
            n,
            -i,
            0,
            n,
            i,
            0,
            -i,
            0,
            -n,
            i,
            0,
            -n,
            -i,
            0,
            n,
            i,
            0,
            n,
          ],
          [
            3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4,
            8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0,
            1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18,
            3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4,
            0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4,
            17, 1, 12, 14, 1, 14, 5, 1, 5, 9,
          ],
          e,
          t
        ),
          (this.type = "DodecahedronBufferGeometry"),
          (this.parameters = { radius: e, detail: t });
      }
      function Wa(e, t, i, n, r, o) {
        Qn.call(this),
          (this.type = "TubeGeometry"),
          (this.parameters = {
            path: e,
            tubularSegments: t,
            radius: i,
            radialSegments: n,
            closed: r,
          }),
          void 0 !== o &&
            console.warn("THREE.TubeGeometry: taper has been removed.");
        r = new Xa(e, t, i, n, r);
        (this.tangents = r.tangents),
          (this.normals = r.normals),
          (this.binormals = r.binormals),
          this.fromBufferGeometry(r),
          this.mergeVertices();
      }
      function Xa(o, a, s, l, e) {
        no.call(this),
          (this.type = "TubeBufferGeometry"),
          (this.parameters = {
            path: o,
            tubularSegments: a,
            radius: s,
            radialSegments: l,
            closed: e,
          }),
          (a = a || 64),
          (s = s || 1),
          (l = l || 8),
          (e = e || !1);
        var c = o.computeFrenetFrames(a, e);
        (this.tangents = c.tangents),
          (this.normals = c.normals),
          (this.binormals = c.binormals);
        var r,
          h,
          u = new Ct(),
          d = new Ct(),
          t = new Et(),
          p = new Ct(),
          f = [],
          m = [],
          i = [],
          g = [];
        function n(e) {
          p = o.getPointAt(e / a, p);
          var t = c.normals[e],
            i = c.binormals[e];
          for (h = 0; h <= l; h++) {
            var n = (h / l) * Math.PI * 2,
              r = Math.sin(n),
              n = -Math.cos(n);
            (d.x = n * t.x + r * i.x),
              (d.y = n * t.y + r * i.y),
              (d.z = n * t.z + r * i.z),
              d.normalize(),
              m.push(d.x, d.y, d.z),
              (u.x = p.x + s * d.x),
              (u.y = p.y + s * d.y),
              (u.z = p.z + s * d.z),
              f.push(u.x, u.y, u.z);
          }
        }
        !(function () {
          for (r = 0; r < a; r++) n(r);
          n(!1 === e ? a : 0),
            (function () {
              for (r = 0; r <= a; r++)
                for (h = 0; h <= l; h++)
                  (t.x = r / a), (t.y = h / l), i.push(t.x, t.y);
            })(),
            (function () {
              for (h = 1; h <= a; h++)
                for (r = 1; r <= l; r++) {
                  var e = (l + 1) * (h - 1) + (r - 1),
                    t = (l + 1) * h + (r - 1),
                    i = (l + 1) * h + r,
                    n = (l + 1) * (h - 1) + r;
                  g.push(e, t, n), g.push(t, i, n);
                }
            })();
        })(),
          this.setIndex(g),
          this.addAttribute("position", new rr(f, 3)),
          this.addAttribute("normal", new rr(m, 3)),
          this.addAttribute("uv", new rr(i, 2));
      }
      function qa(e, t, i, n, r, o, a) {
        Qn.call(this),
          (this.type = "TorusKnotGeometry"),
          (this.parameters = {
            radius: e,
            tube: t,
            tubularSegments: i,
            radialSegments: n,
            p: r,
            q: o,
          }),
          void 0 !== a &&
            console.warn(
              "THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."
            ),
          this.fromBufferGeometry(new Ya(e, t, i, n, r, o)),
          this.mergeVertices();
      }
      function Ya(e, t, i, n, r, o) {
        no.call(this),
          (this.type = "TorusKnotBufferGeometry"),
          (this.parameters = {
            radius: e,
            tube: t,
            tubularSegments: i,
            radialSegments: n,
            p: r,
            q: o,
          }),
          (e = e || 1),
          (t = t || 0.4),
          (i = Math.floor(i) || 64),
          (n = Math.floor(n) || 8),
          (r = r || 2),
          (o = o || 3);
        for (
          var a,
            s = [],
            l = [],
            c = [],
            h = [],
            u = new Ct(),
            d = new Ct(),
            p = new Ct(),
            f = new Ct(),
            m = new Ct(),
            g = new Ct(),
            v = new Ct(),
            y = 0;
          y <= i;
          ++y
        ) {
          var _ = (y / i) * r * Math.PI * 2;
          for (
            E(_, r, o, e, p),
              E(0.01 + _, r, o, e, f),
              g.subVectors(f, p),
              v.addVectors(f, p),
              m.crossVectors(g, v),
              v.crossVectors(m, g),
              m.normalize(),
              v.normalize(),
              a = 0;
            a <= n;
            ++a
          ) {
            var x = (a / n) * Math.PI * 2,
              b = -t * Math.cos(x),
              x = t * Math.sin(x);
            (u.x = p.x + (b * v.x + x * m.x)),
              (u.y = p.y + (b * v.y + x * m.y)),
              (u.z = p.z + (b * v.z + x * m.z)),
              l.push(u.x, u.y, u.z),
              d.subVectors(u, p).normalize(),
              c.push(d.x, d.y, d.z),
              h.push(y / i),
              h.push(a / n);
          }
        }
        for (a = 1; a <= i; a++)
          for (y = 1; y <= n; y++) {
            var w = (n + 1) * (a - 1) + (y - 1),
              T = (n + 1) * a + (y - 1),
              S = (n + 1) * a + y,
              M = (n + 1) * (a - 1) + y;
            s.push(w, T, M), s.push(T, S, M);
          }
        function E(e, t, i, n, r) {
          var o = Math.cos(e),
            a = Math.sin(e),
            t = (i / t) * e,
            e = Math.cos(t);
          (r.x = n * (2 + e) * 0.5 * o),
            (r.y = n * (2 + e) * a * 0.5),
            (r.z = n * Math.sin(t) * 0.5);
        }
        this.setIndex(s),
          this.addAttribute("position", new rr(l, 3)),
          this.addAttribute("normal", new rr(c, 3)),
          this.addAttribute("uv", new rr(h, 2));
      }
      function Qa(e, t, i, n, r) {
        Qn.call(this),
          (this.type = "TorusGeometry"),
          (this.parameters = {
            radius: e,
            tube: t,
            radialSegments: i,
            tubularSegments: n,
            arc: r,
          }),
          this.fromBufferGeometry(new Za(e, t, i, n, r)),
          this.mergeVertices();
      }
      function Za(e, t, i, n, r) {
        no.call(this),
          (this.type = "TorusBufferGeometry"),
          (this.parameters = {
            radius: e,
            tube: t,
            radialSegments: i,
            tubularSegments: n,
            arc: r,
          }),
          (e = e || 1),
          (t = t || 0.4),
          (i = Math.floor(i) || 8),
          (n = Math.floor(n) || 6),
          (r = r || 2 * Math.PI);
        for (
          var o,
            a = [],
            s = [],
            l = [],
            c = [],
            h = new Ct(),
            u = new Ct(),
            d = new Ct(),
            p = 0;
          p <= i;
          p++
        )
          for (o = 0; o <= n; o++) {
            var f = (o / n) * r,
              m = (p / i) * Math.PI * 2;
            (u.x = (e + t * Math.cos(m)) * Math.cos(f)),
              (u.y = (e + t * Math.cos(m)) * Math.sin(f)),
              (u.z = t * Math.sin(m)),
              s.push(u.x, u.y, u.z),
              (h.x = e * Math.cos(f)),
              (h.y = e * Math.sin(f)),
              d.subVectors(u, h).normalize(),
              l.push(d.x, d.y, d.z),
              c.push(o / n),
              c.push(p / i);
          }
        for (p = 1; p <= i; p++)
          for (o = 1; o <= n; o++) {
            var g = (n + 1) * p + o - 1,
              v = (n + 1) * (p - 1) + o - 1,
              y = (n + 1) * (p - 1) + o,
              _ = (n + 1) * p + o;
            a.push(g, v, _), a.push(v, y, _);
          }
        this.setIndex(a),
          this.addAttribute("position", new rr(s, 3)),
          this.addAttribute("normal", new rr(l, 3)),
          this.addAttribute("uv", new rr(c, 2));
      }
      (oa.prototype = Object.assign(Object.create(Bn.prototype), {
        constructor: oa,
        isPerspectiveCamera: !0,
        copy: function (e, t) {
          return (
            Bn.prototype.copy.call(this, e, t),
            (this.fov = e.fov),
            (this.zoom = e.zoom),
            (this.near = e.near),
            (this.far = e.far),
            (this.focus = e.focus),
            (this.aspect = e.aspect),
            (this.view = null === e.view ? null : Object.assign({}, e.view)),
            (this.filmGauge = e.filmGauge),
            (this.filmOffset = e.filmOffset),
            this
          );
        },
        setFocalLength: function (e) {
          e = (0.5 * this.getFilmHeight()) / e;
          (this.fov = 2 * Mt.RAD2DEG * Math.atan(e)),
            this.updateProjectionMatrix();
        },
        getFocalLength: function () {
          var e = Math.tan(0.5 * Mt.DEG2RAD * this.fov);
          return (0.5 * this.getFilmHeight()) / e;
        },
        getEffectiveFOV: function () {
          return (
            2 *
            Mt.RAD2DEG *
            Math.atan(Math.tan(0.5 * Mt.DEG2RAD * this.fov) / this.zoom)
          );
        },
        getFilmWidth: function () {
          return this.filmGauge * Math.min(this.aspect, 1);
        },
        getFilmHeight: function () {
          return this.filmGauge / Math.max(this.aspect, 1);
        },
        setViewOffset: function (e, t, i, n, r, o) {
          (this.aspect = e / t),
            null === this.view &&
              (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1,
              }),
            (this.view.enabled = !0),
            (this.view.fullWidth = e),
            (this.view.fullHeight = t),
            (this.view.offsetX = i),
            (this.view.offsetY = n),
            (this.view.width = r),
            (this.view.height = o),
            this.updateProjectionMatrix();
        },
        clearViewOffset: function () {
          null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix();
        },
        updateProjectionMatrix: function () {
          var e,
            t = this.near,
            i = (t * Math.tan(0.5 * Mt.DEG2RAD * this.fov)) / this.zoom,
            n = 2 * i,
            r = this.aspect * n,
            o = -0.5 * r,
            a = this.view;
          null !== this.view &&
            this.view.enabled &&
            ((e = a.fullWidth),
            (s = a.fullHeight),
            (o += (a.offsetX * r) / e),
            (i -= (a.offsetY * n) / s),
            (r *= a.width / e),
            (n *= a.height / s));
          var s = this.filmOffset;
          0 !== s && (o += (t * s) / this.getFilmWidth()),
            this.projectionMatrix.makePerspective(
              o,
              o + r,
              i,
              i - n,
              t,
              this.far
            );
        },
        toJSON: function (e) {
          e = Un.prototype.toJSON.call(this, e);
          return (
            (e.object.fov = this.fov),
            (e.object.zoom = this.zoom),
            (e.object.near = this.near),
            (e.object.far = this.far),
            (e.object.focus = this.focus),
            (e.object.aspect = this.aspect),
            null !== this.view &&
              (e.object.view = Object.assign({}, this.view)),
            (e.object.filmGauge = this.filmGauge),
            (e.object.filmOffset = this.filmOffset),
            e
          );
        },
      })),
        (aa.prototype = Object.assign(Object.create(oa.prototype), {
          constructor: aa,
          isArrayCamera: !0,
        })),
        (da.prototype.isFogExp2 = !0),
        (da.prototype.clone = function () {
          return new da(this.color.getHex(), this.density);
        }),
        (da.prototype.toJSON = function () {
          return {
            type: "FogExp2",
            color: this.color.getHex(),
            density: this.density,
          };
        }),
        (pa.prototype.isFog = !0),
        (pa.prototype.clone = function () {
          return new pa(this.color.getHex(), this.near, this.far);
        }),
        (pa.prototype.toJSON = function () {
          return {
            type: "Fog",
            color: this.color.getHex(),
            near: this.near,
            far: this.far,
          };
        }),
        (fa.prototype = Object.assign(Object.create(Un.prototype), {
          constructor: fa,
          copy: function (e, t) {
            return (
              Un.prototype.copy.call(this, e, t),
              null !== e.background && (this.background = e.background.clone()),
              null !== e.fog && (this.fog = e.fog.clone()),
              null !== e.overrideMaterial &&
                (this.overrideMaterial = e.overrideMaterial.clone()),
              (this.autoUpdate = e.autoUpdate),
              (this.matrixAutoUpdate = e.matrixAutoUpdate),
              this
            );
          },
          toJSON: function (e) {
            var t = Un.prototype.toJSON.call(this, e);
            return (
              null !== this.background &&
                (t.object.background = this.background.toJSON(e)),
              null !== this.fog && (t.object.fog = this.fog.toJSON()),
              t
            );
          },
        })),
        (ma.prototype = Object.assign(Object.create(Un.prototype), {
          constructor: ma,
          isLensFlare: !0,
          copy: function (e) {
            Un.prototype.copy.call(this, e),
              this.positionScreen.copy(e.positionScreen),
              (this.customUpdateCallback = e.customUpdateCallback);
            for (var t = 0, i = e.lensFlares.length; t < i; t++)
              this.lensFlares.push(e.lensFlares[t]);
            return this;
          },
          add: function (e, t, i, n, r, o) {
            void 0 === t && (t = -1),
              void 0 === i && (i = 0),
              void 0 === o && (o = 1),
              void 0 === r && (r = new Mi(16777215)),
              void 0 === n && (n = q),
              (i = Math.min(i, Math.max(0, i))),
              this.lensFlares.push({
                texture: e,
                size: t,
                distance: i,
                x: 0,
                y: 0,
                z: 0,
                scale: 1,
                rotation: 0,
                opacity: o,
                color: r,
                blending: n,
              });
          },
          updateLensFlares: function () {
            for (
              var e,
                t = this.lensFlares.length,
                i = 2 * -this.positionScreen.x,
                n = 2 * -this.positionScreen.y,
                r = 0;
              r < t;
              r++
            )
              ((e = this.lensFlares[r]).x =
                this.positionScreen.x + i * e.distance),
                (e.y = this.positionScreen.y + n * e.distance),
                (e.wantedRotation = e.x * Math.PI * 0.25),
                (e.rotation += 0.25 * (e.wantedRotation - e.rotation));
          },
        })),
        (((ga.prototype = Object.create(an.prototype)).constructor =
          ga).prototype.isSpriteMaterial = !0),
        (ga.prototype.copy = function (e) {
          return (
            an.prototype.copy.call(this, e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.rotation = e.rotation),
            this
          );
        }),
        (va.prototype = Object.assign(Object.create(Un.prototype), {
          constructor: va,
          isSprite: !0,
          raycast:
            ((Oo = new Ct()),
            (Io = new Ct()),
            (Do = new Ct()),
            function (e, t) {
              Io.setFromMatrixPosition(this.matrixWorld),
                e.ray.closestPointToPoint(Io, Oo),
                Do.setFromMatrixScale(this.matrixWorld);
              var i = (Do.x * Do.y) / 4;
              Io.distanceToSquared(Oo) > i ||
                (i = e.ray.origin.distanceTo(Oo)) < e.near ||
                i > e.far ||
                t.push({
                  distance: i,
                  point: Oo.clone(),
                  face: null,
                  object: this,
                });
            }),
          clone: function () {
            return new this.constructor(this.material).copy(this);
          },
        })),
        (ya.prototype = Object.assign(Object.create(Un.prototype), {
          constructor: ya,
          copy: function (e) {
            Un.prototype.copy.call(this, e, !1);
            for (var t = e.levels, i = 0, n = t.length; i < n; i++) {
              var r = t[i];
              this.addLevel(r.object.clone(), r.distance);
            }
            return this;
          },
          addLevel: function (e, t) {
            void 0 === t && (t = 0), (t = Math.abs(t));
            for (
              var i = this.levels, n = 0;
              n < i.length && !(t < i[n].distance);
              n++
            );
            i.splice(n, 0, { distance: t, object: e }), this.add(e);
          },
          getObjectForDistance: function (e) {
            for (
              var t = this.levels, i = 1, n = t.length;
              i < n && !(e < t[i].distance);
              i++
            );
            return t[i - 1].object;
          },
          raycast:
            ((ko = new Ct()),
            function (e, t) {
              ko.setFromMatrixPosition(this.matrixWorld);
              var i = e.ray.origin.distanceTo(ko);
              this.getObjectForDistance(i).raycast(e, t);
            }),
          update:
            ((No = new Ct()),
            (Fo = new Ct()),
            function (e) {
              var t = this.levels;
              if (1 < t.length) {
                No.setFromMatrixPosition(e.matrixWorld),
                  Fo.setFromMatrixPosition(this.matrixWorld);
                var i = No.distanceTo(Fo);
                t[0].object.visible = !0;
                for (var n = 1, r = t.length; n < r && i >= t[n].distance; n++)
                  (t[n - 1].object.visible = !1), (t[n].object.visible = !0);
                for (; n < r; n++) t[n].object.visible = !1;
              }
            }),
          toJSON: function (e) {
            var t = Un.prototype.toJSON.call(this, e);
            t.object.levels = [];
            for (var i = this.levels, n = 0, r = i.length; n < r; n++) {
              var o = i[n];
              t.object.levels.push({
                object: o.object.uuid,
                distance: o.distance,
              });
            }
            return t;
          },
        })),
        Object.assign(_a.prototype, {
          calculateInverses: function () {
            this.boneInverses = [];
            for (var e = 0, t = this.bones.length; e < t; e++) {
              var i = new At();
              this.bones[e] && i.getInverse(this.bones[e].matrixWorld),
                this.boneInverses.push(i);
            }
          },
          pose: function () {
            for (var e, t = 0, i = this.bones.length; t < i; t++)
              (e = this.bones[t]) &&
                e.matrixWorld.getInverse(this.boneInverses[t]);
            for (t = 0, i = this.bones.length; t < i; t++)
              (e = this.bones[t]) &&
                (e.parent && e.parent.isBone
                  ? (e.matrix.getInverse(e.parent.matrixWorld),
                    e.matrix.multiply(e.matrixWorld))
                  : e.matrix.copy(e.matrixWorld),
                e.matrix.decompose(e.position, e.quaternion, e.scale));
          },
          update:
            ((Uo = new At()),
            (Bo = new At()),
            function () {
              for (
                var e = this.bones,
                  t = this.boneInverses,
                  i = this.boneMatrices,
                  n = this.boneTexture,
                  r = 0,
                  o = e.length;
                r < o;
                r++
              ) {
                var a = e[r] ? e[r].matrixWorld : Bo;
                Uo.multiplyMatrices(a, t[r]), Uo.toArray(i, 16 * r);
              }
              void 0 !== n && (n.needsUpdate = !0);
            }),
          clone: function () {
            return new _a(this.bones, this.boneInverses);
          },
        }),
        (xa.prototype = Object.assign(Object.create(Un.prototype), {
          constructor: xa,
          isBone: !0,
        })),
        (ba.prototype = Object.assign(Object.create(fo.prototype), {
          constructor: ba,
          isSkinnedMesh: !0,
          initBones: function () {
            var e,
              t,
              i,
              n,
              r = [];
            if (this.geometry && void 0 !== this.geometry.bones) {
              for (i = 0, n = this.geometry.bones.length; i < n; i++)
                (t = this.geometry.bones[i]),
                  (e = new xa()),
                  r.push(e),
                  (e.name = t.name),
                  e.position.fromArray(t.pos),
                  e.quaternion.fromArray(t.rotq),
                  void 0 !== t.scl && e.scale.fromArray(t.scl);
              for (i = 0, n = this.geometry.bones.length; i < n; i++)
                (-1 !== (t = this.geometry.bones[i]).parent &&
                null !== t.parent &&
                void 0 !== r[t.parent]
                  ? r[t.parent]
                  : this
                ).add(r[i]);
            }
            return this.updateMatrixWorld(!0), r;
          },
          bind: function (e, t) {
            (this.skeleton = e),
              void 0 === t &&
                (this.updateMatrixWorld(!0),
                this.skeleton.calculateInverses(),
                (t = this.matrixWorld)),
              this.bindMatrix.copy(t),
              this.bindMatrixInverse.getInverse(t);
          },
          pose: function () {
            this.skeleton.pose();
          },
          normalizeSkinWeights: function () {
            if (this.geometry && this.geometry.isGeometry)
              for (r = 0; r < this.geometry.skinWeights.length; r++) {
                var e,
                  t = this.geometry.skinWeights[r];
                (e = 1 / t.manhattanLength()) !== 1 / 0
                  ? t.multiplyScalar(e)
                  : t.set(1, 0, 0, 0);
              }
            else if (this.geometry && this.geometry.isBufferGeometry)
              for (
                var i = new Nt(),
                  n = this.geometry.attributes.skinWeight,
                  r = 0;
                r < n.count;
                r++
              )
                (i.x = n.getX(r)),
                  (i.y = n.getY(r)),
                  (i.z = n.getZ(r)),
                  (i.w = n.getW(r)),
                  (e = 1 / i.manhattanLength()) !== 1 / 0
                    ? i.multiplyScalar(e)
                    : i.set(1, 0, 0, 0),
                  n.setXYZW(r, i.x, i.y, i.z, i.w);
          },
          updateMatrixWorld: function (e) {
            fo.prototype.updateMatrixWorld.call(this, e),
              "attached" === this.bindMode
                ? this.bindMatrixInverse.getInverse(this.matrixWorld)
                : "detached" === this.bindMode
                ? this.bindMatrixInverse.getInverse(this.bindMatrix)
                : console.warn(
                    "THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode
                  );
          },
          clone: function () {
            return new this.constructor(this.geometry, this.material).copy(
              this
            );
          },
        })),
        (((wa.prototype = Object.create(an.prototype)).constructor =
          wa).prototype.isLineBasicMaterial = !0),
        (wa.prototype.copy = function (e) {
          return (
            an.prototype.copy.call(this, e),
            this.color.copy(e.color),
            (this.linewidth = e.linewidth),
            (this.linecap = e.linecap),
            (this.linejoin = e.linejoin),
            this
          );
        }),
        (Ta.prototype = Object.assign(Object.create(Un.prototype), {
          constructor: Ta,
          isLine: !0,
          raycast:
            ((zo = new At()),
            (jo = new ho()),
            (Ho = new un()),
            function (e, t) {
              var i = e.linePrecision,
                n = i * i,
                r = this.geometry,
                i = this.matrixWorld;
              if (
                (null === r.boundingSphere && r.computeBoundingSphere(),
                Ho.copy(r.boundingSphere),
                Ho.applyMatrix4(i),
                !1 !== e.ray.intersectsSphere(Ho))
              ) {
                zo.getInverse(i), jo.copy(e.ray).applyMatrix4(zo);
                var o = new Ct(),
                  a = new Ct(),
                  s = new Ct(),
                  l = new Ct(),
                  c = this && this.isLineSegments ? 2 : 1;
                if (r.isBufferGeometry) {
                  var i = r.index,
                    h = r.attributes.position.array;
                  if (null !== i)
                    for (
                      var u = i.array, d = 0, p = u.length - 1;
                      d < p;
                      d += c
                    ) {
                      var f = u[d],
                        m = u[d + 1];
                      o.fromArray(h, 3 * f),
                        a.fromArray(h, 3 * m),
                        n < jo.distanceSqToSegment(o, a, l, s) ||
                          (l.applyMatrix4(this.matrixWorld),
                          (g = e.ray.origin.distanceTo(l)) < e.near ||
                            g > e.far ||
                            t.push({
                              distance: g,
                              point: s.clone().applyMatrix4(this.matrixWorld),
                              index: d,
                              face: null,
                              faceIndex: null,
                              object: this,
                            }));
                    }
                  else
                    for (d = 0, p = h.length / 3 - 1; d < p; d += c)
                      o.fromArray(h, 3 * d),
                        a.fromArray(h, 3 * d + 3),
                        n < jo.distanceSqToSegment(o, a, l, s) ||
                          (l.applyMatrix4(this.matrixWorld),
                          (g = e.ray.origin.distanceTo(l)) < e.near ||
                            g > e.far ||
                            t.push({
                              distance: g,
                              point: s.clone().applyMatrix4(this.matrixWorld),
                              index: d,
                              face: null,
                              faceIndex: null,
                              object: this,
                            }));
                } else if (r.isGeometry)
                  for (
                    var g, v = r.vertices, y = v.length, d = 0;
                    d < y - 1;
                    d += c
                  )
                    n < jo.distanceSqToSegment(v[d], v[d + 1], l, s) ||
                      (l.applyMatrix4(this.matrixWorld),
                      (g = e.ray.origin.distanceTo(l)) < e.near ||
                        g > e.far ||
                        t.push({
                          distance: g,
                          point: s.clone().applyMatrix4(this.matrixWorld),
                          index: d,
                          face: null,
                          faceIndex: null,
                          object: this,
                        }));
              }
            }),
          clone: function () {
            return new this.constructor(this.geometry, this.material).copy(
              this
            );
          },
        })),
        (Sa.prototype = Object.assign(Object.create(Ta.prototype), {
          constructor: Sa,
          isLineSegments: !0,
        })),
        (Ma.prototype = Object.assign(Object.create(Ta.prototype), {
          constructor: Ma,
          isLineLoop: !0,
        })),
        (((Ea.prototype = Object.create(an.prototype)).constructor =
          Ea).prototype.isPointsMaterial = !0),
        (Ea.prototype.copy = function (e) {
          return (
            an.prototype.copy.call(this, e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.size = e.size),
            (this.sizeAttenuation = e.sizeAttenuation),
            this
          );
        }),
        (Aa.prototype = Object.assign(Object.create(Un.prototype), {
          constructor: Aa,
          isPoints: !0,
          raycast:
            ((Go = new At()),
            (Vo = new ho()),
            (Wo = new un()),
            function (r, o) {
              var a = this,
                e = this.geometry,
                s = this.matrixWorld,
                t = r.params.Points.threshold;
              if (
                (null === e.boundingSphere && e.computeBoundingSphere(),
                Wo.copy(e.boundingSphere),
                Wo.applyMatrix4(s),
                (Wo.radius += t),
                !1 !== r.ray.intersectsSphere(Wo))
              ) {
                Go.getInverse(s), Vo.copy(r.ray).applyMatrix4(Go);
                var t = t / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                  l = t * t,
                  i = new Ct();
                if (e.isBufferGeometry) {
                  var t = e.index,
                    n = e.attributes.position.array;
                  if (null !== t)
                    for (var c = t.array, h = 0, u = c.length; h < u; h++) {
                      var d = c[h];
                      i.fromArray(n, 3 * d), m(i, d);
                    }
                  else
                    for (var h = 0, p = n.length / 3; h < p; h++)
                      i.fromArray(n, 3 * h), m(i, h);
                } else
                  for (var f = e.vertices, h = 0, p = f.length; h < p; h++)
                    m(f[h], h);
              }
              function m(e, t) {
                var i,
                  n = Vo.distanceSqToPoint(e);
                n < l &&
                  ((i = Vo.closestPointToPoint(e)).applyMatrix4(s),
                  (e = r.ray.origin.distanceTo(i)) < r.near ||
                    e > r.far ||
                    o.push({
                      distance: e,
                      distanceToRay: Math.sqrt(n),
                      point: i.clone(),
                      index: t,
                      face: null,
                      object: a,
                    }));
              }
            }),
          clone: function () {
            return new this.constructor(this.geometry, this.material).copy(
              this
            );
          },
        })),
        (La.prototype = Object.assign(Object.create(Un.prototype), {
          constructor: La,
        })),
        ((Ca.prototype = Object.create(Dt.prototype)).constructor = Ca),
        (((Pa.prototype = Object.create(Dt.prototype)).constructor =
          Pa).prototype.isCompressedTexture = !0),
        (((Ra.prototype = Object.create(Dt.prototype)).constructor =
          Ra).prototype.isDepthTexture = !0),
        ((Oa.prototype = Object.create(no.prototype)).constructor = Oa),
        ((Ia.prototype = Object.create(Qn.prototype)).constructor = Ia),
        ((Da.prototype = Object.create(no.prototype)).constructor = Da),
        ((Na.prototype = Object.create(Qn.prototype)).constructor = Na),
        ((Fa.prototype = Object.create(no.prototype)).constructor = Fa),
        ((ka.prototype = Object.create(Qn.prototype)).constructor = ka),
        ((Ua.prototype = Object.create(Fa.prototype)).constructor = Ua),
        ((Ba.prototype = Object.create(Qn.prototype)).constructor = Ba),
        ((za.prototype = Object.create(Fa.prototype)).constructor = za),
        ((ja.prototype = Object.create(Qn.prototype)).constructor = ja),
        ((Ha.prototype = Object.create(Fa.prototype)).constructor = Ha),
        ((Ga.prototype = Object.create(Qn.prototype)).constructor = Ga),
        ((Va.prototype = Object.create(Fa.prototype)).constructor = Va),
        ((Wa.prototype = Object.create(Qn.prototype)).constructor = Wa),
        ((Xa.prototype = Object.create(no.prototype)).constructor = Xa),
        ((qa.prototype = Object.create(Qn.prototype)).constructor = qa),
        ((Ya.prototype = Object.create(no.prototype)).constructor = Ya),
        ((Qa.prototype = Object.create(Qn.prototype)).constructor = Qa),
        ((Za.prototype = Object.create(no.prototype)).constructor = Za);
      var Ja = {
        area: function (e) {
          for (var t = e.length, i = 0, n = t - 1, r = 0; r < t; n = r++)
            i += e[n].x * e[r].y - e[r].x * e[n].y;
          return 0.5 * i;
        },
        triangulate: function (e, t) {
          var i = e.length;
          if (i < 3) return null;
          var n,
            r,
            o = [],
            a = [],
            s = [];
          if (0 < Ja.area(e)) for (h = 0; h < i; h++) a[h] = h;
          else for (h = 0; h < i; h++) a[h] = i - 1 - h;
          for (var l = i, c = 2 * l, h = l - 1; 2 < l; ) {
            if (c-- <= 0)
              return (
                console.warn(
                  "THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"
                ),
                t ? s : o
              );
            if (
              (l <= (n = h) && (n = 0),
              l <= (h = n + 1) && (h = 0),
              l <= (r = h + 1) && (r = 0),
              (function (e, t, i, n, r, o) {
                var a,
                  s,
                  l = e[o[t]].x,
                  c = e[o[t]].y,
                  h = e[o[i]].x,
                  u = e[o[i]].y,
                  d = e[o[n]].x,
                  p = e[o[n]].y;
                if (!((h - l) * (p - c) - (u - c) * (d - l) <= 0)) {
                  for (
                    var f,
                      m,
                      g = d - h,
                      v = p - u,
                      y = l - d,
                      _ = c - p,
                      x = h - l,
                      b = u - c,
                      w = 0;
                    w < r;
                    w++
                  )
                    if (
                      ((a = e[o[w]].x),
                      (s = e[o[w]].y),
                      !(
                        (a === l && s === c) ||
                        (a === h && s === u) ||
                        (a === d && s === p)
                      ) &&
                        ((f = x * (s - c) - b * (a - l)),
                        (m = y * (s - p) - _ * (a - d)),
                        g * (s - u) - v * (a - h) >= -Number.EPSILON &&
                          m >= -Number.EPSILON &&
                          f >= -Number.EPSILON))
                    )
                      return;
                  return 1;
                }
              })(e, n, h, r, l, a))
            ) {
              var u,
                d,
                p = a[n],
                f = a[h],
                m = a[r];
              for (
                o.push([e[p], e[f], e[m]]),
                  s.push([a[n], a[h], a[r]]),
                  d = (u = h) + 1;
                d < l;
                u++, d++
              )
                a[u] = a[d];
              c = 2 * --l;
            }
          }
          return t ? s : o;
        },
        triangulateShape: function (e, t) {
          function i(e) {
            var t = e.length;
            2 < t && e[t - 1].equals(e[0]) && e.pop();
          }
          function b(e, t, i) {
            return e.x !== t.x
              ? e.x < t.x
                ? e.x <= i.x && i.x <= t.x
                : t.x <= i.x && i.x <= e.x
              : e.y < t.y
              ? e.y <= i.y && i.y <= t.y
              : t.y <= i.y && i.y <= e.y;
          }
          function x(e, t, i, n, r) {
            var o,
              a = t.x - e.x,
              s = t.y - e.y,
              l = n.x - i.x,
              c = n.y - i.y,
              h = e.x - i.x,
              u = e.y - i.y,
              d = s * l - a * c,
              p = s * h - a * u;
            if (Math.abs(d) > Number.EPSILON) {
              if (0 < d) {
                if (p < 0 || d < p) return [];
                if ((o = c * h - l * u) < 0 || d < o) return [];
              } else {
                if (0 < p || p < d) return [];
                if (0 < (o = c * h - l * u) || o < d) return [];
              }
              if (0 === o) return !r || (0 != p && p != d) ? [e] : [];
              if (o === d) return !r || (0 != p && p != d) ? [t] : [];
              if (0 == p) return [i];
              if (p == d) return [n];
              d = o / d;
              return [{ x: e.x + d * a, y: e.y + d * s }];
            }
            if (0 != p || c * h != l * u) return [];
            var f,
              m,
              g,
              v,
              y,
              _,
              x,
              s = 0 == a && 0 == s,
              c = 0 == l && 0 == c;
            return s && c
              ? e.x !== i.x || e.y !== i.y
                ? []
                : [e]
              : s
              ? b(i, n, e)
                ? [e]
                : []
              : c
              ? b(e, t, i)
                ? [i]
                : []
              : ((i =
                  0 != a
                    ? ((v =
                        e.x < t.x
                          ? ((g = (f = e).x), (m = t).x)
                          : ((g = (f = t).x), (m = e).x)),
                      i.x < n.x
                        ? ((x = (y = i).x), (_ = n).x)
                        : ((x = (y = n).x), (_ = i).x))
                    : ((v =
                        e.y < t.y
                          ? ((g = (f = e).y), (m = t).y)
                          : ((g = (f = t).y), (m = e).y)),
                      i.y < n.y
                        ? ((x = (y = i).y), (_ = n).y)
                        : ((x = (y = n).y), (_ = i).y))),
                g <= x
                  ? v < x
                    ? []
                    : v === x
                    ? r
                      ? []
                      : [y]
                    : v <= i
                    ? [y, m]
                    : [y, _]
                  : i < g
                  ? []
                  : g === i
                  ? r
                    ? []
                    : [f]
                  : v <= i
                  ? [f, m]
                  : [f, _]);
          }
          function w(e, t, i, n) {
            var r = t.x - e.x,
              o = t.y - e.y,
              a = i.x - e.x,
              t = i.y - e.y,
              i = n.x - e.x,
              n = n.y - e.y,
              e = r * t - o * a,
              o = r * n - o * i;
            if (Math.abs(e) > Number.EPSILON) {
              a = i * t - n * a;
              return 0 < e ? 0 <= o && 0 <= a : 0 <= o || 0 <= a;
            }
            return 0 < o;
          }
          i(e), t.forEach(i);
          for (
            var n, r, o, a, s = {}, l = e.concat(), c = 0, h = t.length;
            c < h;
            c++
          )
            Array.prototype.push.apply(l, t[c]);
          for (d = 0, p = l.length; d < p; d++)
            void 0 !== s[(o = l[d].x + ":" + l[d].y)] &&
              console.warn("THREE.ShapeUtils: Duplicate point", o, d),
              (s[o] = d);
          for (
            var e = (function (e, a) {
                for (
                  var s,
                    t,
                    i,
                    n,
                    r,
                    o,
                    l,
                    c,
                    h,
                    u,
                    d = e.concat(),
                    p = [],
                    f = [],
                    m = 0,
                    g = a.length;
                  m < g;
                  m++
                )
                  p.push(m);
                for (var v = 0, y = 2 * p.length; 0 < p.length; ) {
                  if (--y < 0) {
                    console.log(
                      'THREE.ShapeUtils: Infinite Loop! Holes left:" + indepHoles.length + ", Probably Hole outside Shape!'
                    );
                    break;
                  }
                  for (i = v; i < d.length; i++) {
                    (n = d[i]), (t = -1);
                    for (m = 0; m < p.length; m++)
                      if (
                        ((r = p[m]),
                        void 0 === f[(o = n.x + ":" + n.y + ":" + r)])
                      ) {
                        s = a[r];
                        for (var _ = 0; _ < s.length; _++)
                          if (
                            ((u = s[_]),
                            (function (e, t) {
                              var i = d.length - 1,
                                n = e - 1;
                              n < 0 && (n = i);
                              var r = e + 1;
                              i < r && (r = 0);
                              var o = w(d[e], d[n], d[r], s[t]);
                              if (o) {
                                (i = s.length - 1), (n = t - 1);
                                n < 0 && (n = i);
                                r = t + 1;
                                return (
                                  i < r && (r = 0),
                                  w(s[t], s[n], s[r], d[e]) ? 1 : void 0
                                );
                              }
                            })(i, _) &&
                              !(function (e, t) {
                                for (var i, n = 0; n < d.length; n++)
                                  if (
                                    ((i = n + 1),
                                    (i %= d.length),
                                    0 < x(e, t, d[n], d[i], !0).length)
                                  )
                                    return 1;
                              })(n, u) &&
                              !(function (e, t) {
                                for (var i, n, r, o = 0; o < p.length; o++)
                                  for (i = a[p[o]], n = 0; n < i.length; n++)
                                    if (
                                      ((r = n + 1),
                                      (r %= i.length),
                                      0 < x(e, t, i[n], i[r], !0).length)
                                    )
                                      return 1;
                              })(n, u))
                          ) {
                            (t = _),
                              p.splice(m, 1),
                              (l = d.slice(0, i + 1)),
                              (c = d.slice(i)),
                              (h = s.slice(t)),
                              (u = s.slice(0, t + 1)),
                              (d = l.concat(h).concat(u).concat(c)),
                              (v = i);
                            break;
                          }
                        if (0 <= t) break;
                        f[o] = !0;
                      }
                    if (0 <= t) break;
                  }
                }
                return d;
              })(e, t),
              u = Ja.triangulate(e, !1),
              d = 0,
              p = u.length;
            d < p;
            d++
          )
            for (r = u[d], n = 0; n < 3; n++)
              void 0 !== (a = s[(o = r[n].x + ":" + r[n].y)]) && (r[n] = a);
          return u.concat();
        },
        isClockWise: function (e) {
          return Ja.area(e) < 0;
        },
      };
      function $a(e, t) {
        Qn.call(this),
          (this.type = "ExtrudeGeometry"),
          (this.parameters = { shapes: e, options: t }),
          this.fromBufferGeometry(new Ka(e, t)),
          this.mergeVertices();
      }
      function Ka(e, t) {
        void 0 !== e &&
          (no.call(this),
          (this.type = "ExtrudeBufferGeometry"),
          (e = Array.isArray(e) ? e : [e]),
          this.addShapeList(e, t),
          this.computeVertexNormals());
      }
      function es(e, t) {
        Qn.call(this),
          (this.type = "TextGeometry"),
          (this.parameters = { text: e, parameters: t }),
          this.fromBufferGeometry(new ts(e, t)),
          this.mergeVertices();
      }
      function ts(e, t) {
        var i = (t = t || {}).font;
        if (!i || !i.isFont)
          return (
            console.error(
              "THREE.TextGeometry: font parameter is not an instance of THREE.Font."
            ),
            new Qn()
          );
        e = i.generateShapes(e, t.size, t.curveSegments);
        (t.amount = void 0 !== t.height ? t.height : 50),
          void 0 === t.bevelThickness && (t.bevelThickness = 10),
          void 0 === t.bevelSize && (t.bevelSize = 8),
          void 0 === t.bevelEnabled && (t.bevelEnabled = !1),
          Ka.call(this, e, t),
          (this.type = "TextBufferGeometry");
      }
      function is(e, t, i, n, r, o, a) {
        Qn.call(this),
          (this.type = "SphereGeometry"),
          (this.parameters = {
            radius: e,
            widthSegments: t,
            heightSegments: i,
            phiStart: n,
            phiLength: r,
            thetaStart: o,
            thetaLength: a,
          }),
          this.fromBufferGeometry(new ns(e, t, i, n, r, o, a)),
          this.mergeVertices();
      }
      function ns(e, t, i, n, r, o, a) {
        no.call(this),
          (this.type = "SphereBufferGeometry"),
          (this.parameters = {
            radius: e,
            widthSegments: t,
            heightSegments: i,
            phiStart: n,
            phiLength: r,
            thetaStart: o,
            thetaLength: a,
          }),
          (e = e || 1),
          (t = Math.max(3, Math.floor(t) || 8)),
          (i = Math.max(2, Math.floor(i) || 6)),
          (n = void 0 !== n ? n : 0),
          (r = void 0 !== r ? r : 2 * Math.PI);
        for (
          var s = (o = void 0 !== o ? o : 0) + (a = void 0 !== a ? a : Math.PI),
            l = 0,
            c = [],
            h = new Ct(),
            u = new Ct(),
            d = [],
            p = [],
            f = [],
            m = [],
            g = 0;
          g <= i;
          g++
        ) {
          for (var v = [], y = g / i, _ = 0; _ <= t; _++) {
            var x = _ / t;
            (h.x = -e * Math.cos(n + x * r) * Math.sin(o + y * a)),
              (h.y = e * Math.cos(o + y * a)),
              (h.z = e * Math.sin(n + x * r) * Math.sin(o + y * a)),
              p.push(h.x, h.y, h.z),
              u.set(h.x, h.y, h.z).normalize(),
              f.push(u.x, u.y, u.z),
              m.push(x, 1 - y),
              v.push(l++);
          }
          c.push(v);
        }
        for (g = 0; g < i; g++)
          for (_ = 0; _ < t; _++) {
            var b = c[g][_ + 1],
              w = c[g][_],
              T = c[g + 1][_],
              S = c[g + 1][_ + 1];
            (0 !== g || 0 < o) && d.push(b, w, S),
              (g !== i - 1 || s < Math.PI) && d.push(w, T, S);
          }
        this.setIndex(d),
          this.addAttribute("position", new rr(p, 3)),
          this.addAttribute("normal", new rr(f, 3)),
          this.addAttribute("uv", new rr(m, 2));
      }
      function rs(e, t, i, n, r, o) {
        Qn.call(this),
          (this.type = "RingGeometry"),
          (this.parameters = {
            innerRadius: e,
            outerRadius: t,
            thetaSegments: i,
            phiSegments: n,
            thetaStart: r,
            thetaLength: o,
          }),
          this.fromBufferGeometry(new os(e, t, i, n, r, o)),
          this.mergeVertices();
      }
      function os(e, t, i, n, r, o) {
        no.call(this),
          (this.type = "RingBufferGeometry"),
          (this.parameters = {
            innerRadius: e,
            outerRadius: t,
            thetaSegments: i,
            phiSegments: n,
            thetaStart: r,
            thetaLength: o,
          }),
          (e = e || 0.5),
          (t = t || 1),
          (r = void 0 !== r ? r : 0),
          (o = void 0 !== o ? o : 2 * Math.PI),
          (i = void 0 !== i ? Math.max(3, i) : 8);
        for (
          var a,
            s = [],
            l = [],
            c = [],
            h = [],
            u = e,
            d = (t - e) / (n = void 0 !== n ? Math.max(1, n) : 1),
            p = new Ct(),
            f = new Et(),
            m = 0;
          m <= n;
          m++
        ) {
          for (v = 0; v <= i; v++)
            (a = r + (v / i) * o),
              (p.x = u * Math.cos(a)),
              (p.y = u * Math.sin(a)),
              l.push(p.x, p.y, p.z),
              c.push(0, 0, 1),
              (f.x = (p.x / t + 1) / 2),
              (f.y = (p.y / t + 1) / 2),
              h.push(f.x, f.y);
          u += d;
        }
        for (m = 0; m < n; m++)
          for (var g = m * (i + 1), v = 0; v < i; v++) {
            var y = (a = v + g) + i + 1,
              _ = a + i + 2,
              x = a + 1;
            s.push(a, y, x), s.push(y, _, x);
          }
        this.setIndex(s),
          this.addAttribute("position", new rr(l, 3)),
          this.addAttribute("normal", new rr(c, 3)),
          this.addAttribute("uv", new rr(h, 2));
      }
      function as(e, t, i, n) {
        Qn.call(this),
          (this.type = "LatheGeometry"),
          (this.parameters = {
            points: e,
            segments: t,
            phiStart: i,
            phiLength: n,
          }),
          this.fromBufferGeometry(new ss(e, t, i, n)),
          this.mergeVertices();
      }
      function ss(e, t, i, n) {
        no.call(this),
          (this.type = "LatheBufferGeometry"),
          (this.parameters = {
            points: e,
            segments: t,
            phiStart: i,
            phiLength: n,
          }),
          (t = Math.floor(t) || 12),
          (i = i || 0),
          (n = n || 2 * Math.PI),
          (n = Mt.clamp(n, 0, 2 * Math.PI));
        var r = [],
          o = [],
          a = [],
          s = 1 / t,
          l = new Ct(),
          c = new Et();
        for (w = 0; w <= t; w++)
          for (
            var h = i + w * s * n, u = Math.sin(h), d = Math.cos(h), p = 0;
            p <= e.length - 1;
            p++
          )
            (l.x = e[p].x * u),
              (l.y = e[p].y),
              (l.z = e[p].x * d),
              o.push(l.x, l.y, l.z),
              (c.x = w / t),
              (c.y = p / (e.length - 1)),
              a.push(c.x, c.y);
        for (w = 0; w < t; w++)
          for (p = 0; p < e.length - 1; p++) {
            var f = (b = p + w * e.length) + e.length,
              m = b + e.length + 1,
              g = b + 1;
            r.push(b, f, g), r.push(f, m, g);
          }
        if (
          (this.setIndex(r),
          this.addAttribute("position", new rr(o, 3)),
          this.addAttribute("uv", new rr(a, 2)),
          this.computeVertexNormals(),
          n === 2 * Math.PI)
        ) {
          var v = this.attributes.normal.array,
            y = new Ct(),
            _ = new Ct(),
            x = new Ct(),
            b = t * e.length * 3,
            w = 0;
          for (p = 0; w < e.length; w++, p += 3)
            (y.x = v[p + 0]),
              (y.y = v[p + 1]),
              (y.z = v[p + 2]),
              (_.x = v[b + p + 0]),
              (_.y = v[b + p + 1]),
              (_.z = v[b + p + 2]),
              x.addVectors(y, _).normalize(),
              (v[p + 0] = v[b + p + 0] = x.x),
              (v[p + 1] = v[b + p + 1] = x.y),
              (v[p + 2] = v[b + p + 2] = x.z);
        }
      }
      function ls(e, t) {
        Qn.call(this),
          (this.type = "ShapeGeometry"),
          "object" == typeof t &&
            (console.warn(
              "THREE.ShapeGeometry: Options parameter has been removed."
            ),
            (t = t.curveSegments)),
          (this.parameters = { shapes: e, curveSegments: t }),
          this.fromBufferGeometry(new cs(e, t)),
          this.mergeVertices();
      }
      function cs(e, d) {
        no.call(this),
          (this.type = "ShapeBufferGeometry"),
          (this.parameters = { shapes: e, curveSegments: d }),
          (d = d || 12);
        var p = [],
          f = [],
          m = [],
          g = [],
          t = 0,
          v = 0;
        if (!1 === Array.isArray(e)) n(e);
        else
          for (var i = 0; i < e.length; i++)
            n(e[i]), this.addGroup(t, v, i), (t += v), (v = 0);
        function n(e) {
          var t,
            i = f.length / 3,
            e = e.extractPoints(d),
            n = e.shape,
            r = e.holes;
          if (!1 === Ja.isClockWise(n))
            for (n = n.reverse(), a = 0, s = r.length; a < s; a++)
              (t = r[a]), !0 === Ja.isClockWise(t) && (r[a] = t.reverse());
          for (
            var o = Ja.triangulateShape(n, r), a = 0, s = r.length;
            a < s;
            a++
          )
            (t = r[a]), (n = n.concat(t));
          for (a = 0, s = n.length; a < s; a++) {
            var l = n[a];
            f.push(l.x, l.y, 0), m.push(0, 0, 1), g.push(l.x, l.y);
          }
          for (a = 0, s = o.length; a < s; a++) {
            var c = o[a],
              h = c[0] + i,
              u = c[1] + i,
              c = c[2] + i;
            p.push(h, u, c), (v += 3);
          }
        }
        this.setIndex(p),
          this.addAttribute("position", new rr(f, 3)),
          this.addAttribute("normal", new rr(m, 3)),
          this.addAttribute("uv", new rr(g, 2));
      }
      function hs(e, t) {
        no.call(this),
          (this.type = "EdgesGeometry"),
          (this.parameters = { thresholdAngle: t }),
          (t = void 0 !== t ? t : 1);
        var i,
          n,
          r,
          o,
          a = [],
          s = Math.cos(Mt.DEG2RAD * t),
          l = [0, 0],
          c = {},
          h = ["a", "b", "c"];
        e.isBufferGeometry
          ? (o = new Qn()).fromBufferGeometry(e)
          : (o = e.clone()),
          o.mergeVertices(),
          o.computeFaceNormals();
        for (var u = o.vertices, d = o.faces, p = 0, f = d.length; p < f; p++)
          for (var m = d[p], g = 0; g < 3; g++)
            (i = m[h[g]]),
              (n = m[h[(g + 1) % 3]]),
              (l[0] = Math.min(i, n)),
              (l[1] = Math.max(i, n)),
              void 0 === c[(r = l[0] + "," + l[1])]
                ? (c[r] = {
                    index1: l[0],
                    index2: l[1],
                    face1: p,
                    face2: void 0,
                  })
                : (c[r].face2 = p);
        for (r in c) {
          var v,
            y = c[r];
          (void 0 === y.face2 ||
            d[y.face1].normal.dot(d[y.face2].normal) <= s) &&
            ((v = u[y.index1]),
            a.push(v.x, v.y, v.z),
            (v = u[y.index2]),
            a.push(v.x, v.y, v.z));
        }
        this.addAttribute("position", new rr(a, 3));
      }
      function us(e, t, i, n, r, o, a, s) {
        Qn.call(this),
          (this.type = "CylinderGeometry"),
          (this.parameters = {
            radiusTop: e,
            radiusBottom: t,
            height: i,
            radialSegments: n,
            heightSegments: r,
            openEnded: o,
            thetaStart: a,
            thetaLength: s,
          }),
          this.fromBufferGeometry(new ds(e, t, i, n, r, o, a, s)),
          this.mergeVertices();
      }
      function ds(g, v, y, _, x, e, b, w) {
        no.call(this),
          (this.type = "CylinderBufferGeometry"),
          (this.parameters = {
            radiusTop: g,
            radiusBottom: v,
            height: y,
            radialSegments: _,
            heightSegments: x,
            openEnded: e,
            thetaStart: b,
            thetaLength: w,
          });
        var T = this;
        (g = void 0 !== g ? g : 1),
          (v = void 0 !== v ? v : 1),
          (y = y || 1),
          (_ = Math.floor(_) || 8),
          (x = Math.floor(x) || 1),
          (e = void 0 !== e && e),
          (b = void 0 !== b ? b : 0),
          (w = void 0 !== w ? w : 2 * Math.PI);
        var S = [],
          M = [],
          E = [],
          A = [],
          L = 0,
          C = [],
          P = y / 2,
          R = 0;
        function t(e) {
          for (
            var t,
              i = new Et(),
              n = new Ct(),
              r = 0,
              o = !0 === e ? g : v,
              a = !0 === e ? 1 : -1,
              s = L,
              l = 1;
            l <= _;
            l++
          )
            M.push(0, P * a, 0), E.push(0, a, 0), A.push(0.5, 0.5), L++;
          for (t = L, l = 0; l <= _; l++) {
            var c = (l / _) * w + b,
              h = Math.cos(c),
              c = Math.sin(c);
            (n.x = o * c),
              (n.y = P * a),
              (n.z = o * h),
              M.push(n.x, n.y, n.z),
              E.push(0, a, 0),
              (i.x = 0.5 * h + 0.5),
              (i.y = 0.5 * c * a + 0.5),
              A.push(i.x, i.y),
              L++;
          }
          for (l = 0; l < _; l++) {
            var u = s + l,
              d = t + l;
            !0 === e ? S.push(d, d + 1, u) : S.push(d + 1, d, u), (r += 3);
          }
          T.addGroup(R, r, !0 === e ? 1 : 2), (R += r);
        }
        !(function () {
          var e,
            t,
            i = new Ct(),
            n = new Ct(),
            r = 0,
            o = (v - g) / y;
          for (t = 0; t <= x; t++) {
            var a = [],
              s = t / x,
              l = s * (v - g) + g;
            for (e = 0; e <= _; e++) {
              var c = e / _,
                h = c * w + b,
                u = Math.sin(h),
                h = Math.cos(h);
              (n.x = l * u),
                (n.y = -s * y + P),
                (n.z = l * h),
                M.push(n.x, n.y, n.z),
                i.set(u, o, h).normalize(),
                E.push(i.x, i.y, i.z),
                A.push(c, 1 - s),
                a.push(L++);
            }
            C.push(a);
          }
          for (e = 0; e < _; e++)
            for (t = 0; t < x; t++) {
              var d = C[t][e],
                p = C[t + 1][e],
                f = C[t + 1][e + 1],
                m = C[t][e + 1];
              S.push(d, p, m), S.push(p, f, m), (r += 6);
            }
          T.addGroup(R, r, 0), (R += r);
        })(),
          !1 === e && (0 < g && t(!0), 0 < v && t(!1)),
          this.setIndex(S),
          this.addAttribute("position", new rr(M, 3)),
          this.addAttribute("normal", new rr(E, 3)),
          this.addAttribute("uv", new rr(A, 2));
      }
      function ps(e, t, i, n, r, o, a) {
        us.call(this, 0, e, t, i, n, r, o, a),
          (this.type = "ConeGeometry"),
          (this.parameters = {
            radius: e,
            height: t,
            radialSegments: i,
            heightSegments: n,
            openEnded: r,
            thetaStart: o,
            thetaLength: a,
          });
      }
      function fs(e, t, i, n, r, o, a) {
        ds.call(this, 0, e, t, i, n, r, o, a),
          (this.type = "ConeBufferGeometry"),
          (this.parameters = {
            radius: e,
            height: t,
            radialSegments: i,
            heightSegments: n,
            openEnded: r,
            thetaStart: o,
            thetaLength: a,
          });
      }
      function ms(e, t, i, n) {
        Qn.call(this),
          (this.type = "CircleGeometry"),
          (this.parameters = {
            radius: e,
            segments: t,
            thetaStart: i,
            thetaLength: n,
          }),
          this.fromBufferGeometry(new gs(e, t, i, n)),
          this.mergeVertices();
      }
      function gs(e, t, i, n) {
        no.call(this),
          (this.type = "CircleBufferGeometry"),
          (this.parameters = {
            radius: e,
            segments: t,
            thetaStart: i,
            thetaLength: n,
          }),
          (e = e || 1),
          (t = void 0 !== t ? Math.max(3, t) : 8),
          (i = void 0 !== i ? i : 0),
          (n = void 0 !== n ? n : 2 * Math.PI);
        var r,
          o,
          a = [],
          s = [],
          l = [],
          c = [],
          h = new Ct(),
          u = new Et();
        for (
          s.push(0, 0, 0), l.push(0, 0, 1), c.push(0.5, 0.5), o = 0, r = 3;
          o <= t;
          o++, r += 3
        ) {
          var d = i + (o / t) * n;
          (h.x = e * Math.cos(d)),
            (h.y = e * Math.sin(d)),
            s.push(h.x, h.y, h.z),
            l.push(0, 0, 1),
            (u.x = (s[r] / e + 1) / 2),
            (u.y = (s[r + 1] / e + 1) / 2),
            c.push(u.x, u.y);
        }
        for (r = 1; r <= t; r++) a.push(r, r + 1, 0);
        this.setIndex(a),
          this.addAttribute("position", new rr(s, 3)),
          this.addAttribute("normal", new rr(l, 3)),
          this.addAttribute("uv", new rr(c, 2));
      }
      (($a.prototype = Object.create(Qn.prototype)).constructor = $a),
        (((Ka.prototype = Object.create(no.prototype)).constructor =
          Ka).prototype.getArrays = function () {
          var e = this.getAttribute("position"),
            t = e ? Array.prototype.slice.call(e.array) : [],
            i = this.getAttribute("uv"),
            e = i ? Array.prototype.slice.call(i.array) : [],
            i = this.index;
          return {
            position: t,
            uv: e,
            index: i ? Array.prototype.slice.call(i.array) : [],
          };
        }),
        (Ka.prototype.addShapeList = function (e, t) {
          var i = e.length;
          t.arrays = this.getArrays();
          for (var n = 0; n < i; n++) {
            var r = e[n];
            this.addShape(r, t);
          }
          this.setIndex(t.arrays.index),
            this.addAttribute("position", new rr(t.arrays.position, 3)),
            this.addAttribute("uv", new rr(t.arrays.uv, 2));
        }),
        (Ka.prototype.addShape = function (e, i) {
          var t,
            n,
            r,
            o,
            a,
            s,
            l = i.arrays || this.getArrays(),
            h = l.position,
            c = l.index,
            u = l.uv,
            d = [],
            p = void 0 !== i.amount ? i.amount : 100,
            f = void 0 !== i.bevelThickness ? i.bevelThickness : 6,
            m = void 0 !== i.bevelSize ? i.bevelSize : f - 2,
            g = void 0 !== i.bevelSegments ? i.bevelSegments : 3,
            v = void 0 === i.bevelEnabled || i.bevelEnabled,
            y = void 0 !== i.curveSegments ? i.curveSegments : 12,
            _ = void 0 !== i.steps ? i.steps : 1,
            l = i.extrudePath,
            x = !1,
            b = void 0 !== i.UVGenerator ? i.UVGenerator : $a.WorldUVGenerator;
          l &&
            ((t = l.getSpacedPoints(_)),
            (v = !(x = !0)),
            (n = void 0 !== i.frames ? i.frames : l.computeFrenetFrames(_, !1)),
            (r = new Ct()),
            (o = new Ct()),
            (a = new Ct())),
            v || (m = f = g = 0);
          var w = this,
            y = e.extractPoints(y),
            T = y.shape,
            S = y.holes;
          if (!Ja.isClockWise(T))
            for (T = T.reverse(), A = 0, L = S.length; A < L; A++)
              (s = S[A]), Ja.isClockWise(s) && (S[A] = s.reverse());
          for (
            var M = Ja.triangulateShape(T, S), E = T, A = 0, L = S.length;
            A < L;
            A++
          )
            (s = S[A]), (T = T.concat(s));
          function C(e, t, i) {
            return (
              t || console.error("THREE.ExtrudeGeometry: vec does not exist"),
              t.clone().multiplyScalar(i).add(e)
            );
          }
          var P,
            R,
            O,
            I,
            D,
            N,
            F = T.length,
            k = M.length;
          function U(e, t, i) {
            var n = e.x - t.x,
              r = e.y - t.y,
              o = i.x - e.x,
              a = i.y - e.y,
              s = n * n + r * r,
              l = n * a - r * o;
            if (Math.abs(l) > Number.EPSILON) {
              var c = Math.sqrt(s),
                h = Math.sqrt(o * o + a * a),
                u = t.x - r / c,
                d = t.y + n / c,
                c =
                  ((i.x - a / h - u) * a - (i.y + o / h - d) * o) /
                  (n * a - r * o),
                d = (h = u + n * c - e.x) * h + (u = d + r * c - e.y) * u;
              if (d <= 2) return new Et(h, u);
              c = Math.sqrt(d / 2);
            } else {
              d = !1;
              n > Number.EPSILON
                ? o > Number.EPSILON && (d = !0)
                : n < -Number.EPSILON
                ? o < -Number.EPSILON && (d = !0)
                : Math.sign(r) === Math.sign(a) && (d = !0),
                (c = d
                  ? ((h = -r), (u = n), Math.sqrt(s))
                  : ((h = n), (u = r), Math.sqrt(s / 2)));
            }
            return new Et(h / c, u / c);
          }
          for (
            var B = [], z = 0, j = E.length, H = j - 1, G = z + 1;
            z < j;
            z++, H++, G++
          )
            H === j && (H = 0),
              G === j && (G = 0),
              (B[z] = U(E[z], E[H], E[G]));
          var V,
            W,
            X = [],
            q = B.concat();
          for (A = 0, L = S.length; A < L; A++) {
            for (
              s = S[A], V = [], z = 0, H = (j = s.length) - 1, G = z + 1;
              z < j;
              z++, H++, G++
            )
              H === j && (H = 0),
                G === j && (G = 0),
                (V[z] = U(s[z], s[H], s[G]));
            X.push(V), (q = q.concat(V));
          }
          for (P = 0; P < g; P++) {
            for (
              O = P / g,
                I = f * Math.cos((O * Math.PI) / 2),
                R = m * Math.sin((O * Math.PI) / 2),
                z = 0,
                j = E.length;
              z < j;
              z++
            )
              Q((D = C(E[z], B[z], R)).x, D.y, -I);
            for (A = 0, L = S.length; A < L; A++)
              for (s = S[A], V = X[A], z = 0, j = s.length; z < j; z++)
                Q((D = C(s[z], V[z], R)).x, D.y, -I);
          }
          for (R = m, z = 0; z < F; z++)
            (D = v ? C(T[z], q[z], R) : T[z]),
              x
                ? (o.copy(n.normals[0]).multiplyScalar(D.x),
                  r.copy(n.binormals[0]).multiplyScalar(D.y),
                  a.copy(t[0]).add(o).add(r),
                  Q(a.x, a.y, a.z))
                : Q(D.x, D.y, 0);
          for (W = 1; W <= _; W++)
            for (z = 0; z < F; z++)
              (D = v ? C(T[z], q[z], R) : T[z]),
                x
                  ? (o.copy(n.normals[W]).multiplyScalar(D.x),
                    r.copy(n.binormals[W]).multiplyScalar(D.y),
                    a.copy(t[W]).add(o).add(r),
                    Q(a.x, a.y, a.z))
                  : Q(D.x, D.y, (p / _) * W);
          for (P = g - 1; 0 <= P; P--) {
            for (
              O = P / g,
                I = f * Math.cos((O * Math.PI) / 2),
                R = m * Math.sin((O * Math.PI) / 2),
                z = 0,
                j = E.length;
              z < j;
              z++
            )
              Q((D = C(E[z], B[z], R)).x, D.y, p + I);
            for (A = 0, L = S.length; A < L; A++)
              for (s = S[A], V = X[A], z = 0, j = s.length; z < j; z++)
                (D = C(s[z], V[z], R)),
                  x
                    ? Q(D.x, D.y + t[_ - 1].y, t[_ - 1].x + I)
                    : Q(D.x, D.y, p + I);
          }
          function Y(e, t) {
            var i, n, r;
            for (z = e.length; 0 <= --z; ) {
              (n = (i = z) - 1) < 0 && (n = e.length - 1);
              for (var o = 0, a = _ + 2 * g, o = 0; o < a; o++) {
                var s = F * o,
                  l = F * (o + 1),
                  c = t + i + s;
                (r = t + n + s),
                  (s = t + n + l),
                  (l = t + i + l),
                  J(c),
                  J(r),
                  J(l),
                  J(r),
                  J(s),
                  J(l),
                  (l = h.length / 3),
                  $(
                    (l = b.generateSideWallUV(
                      w,
                      h,
                      l - 6,
                      l - 3,
                      l - 2,
                      l - 1
                    ))[0]
                  ),
                  $(l[1]),
                  $(l[3]),
                  $(l[1]),
                  $(l[2]),
                  !void $(l[3]);
              }
            }
          }
          function Q(e, t, i) {
            d.push(e), d.push(t), d.push(i);
          }
          function Z(e, t, i) {
            J(e), J(t), J(i);
            (i = h.length / 3),
              (i = b.generateTopUV(w, h, i - 3, i - 2, i - 1));
            $(i[0]), $(i[1]), $(i[2]);
          }
          function J(e) {
            c.push(h.length / 3),
              h.push(d[3 * e + 0]),
              h.push(d[3 * e + 1]),
              h.push(d[3 * e + 2]);
          }
          function $(e) {
            u.push(e.x), u.push(e.y);
          }
          !(function () {
            var e = h.length / 3;
            if (v) {
              var t = 0 * F;
              for (z = 0; z < k; z++) Z((N = M[z])[2] + t, N[1] + t, N[0] + t);
              for (t = F * (_ + 2 * g), z = 0; z < k; z++)
                Z((N = M[z])[0] + t, N[1] + t, N[2] + t);
            } else {
              for (z = 0; z < k; z++) Z((N = M[z])[2], N[1], N[0]);
              for (z = 0; z < k; z++)
                Z((N = M[z])[0] + F * _, N[1] + F * _, N[2] + F * _);
            }
            w.addGroup(
              e,
              h.length / 3 - e,
              void 0 !== i.material ? i.material : 0
            );
          })(),
            (function () {
              var e = h.length / 3,
                t = 0;
              for (Y(E, t), t += E.length, A = 0, L = S.length; A < L; A++)
                Y((s = S[A]), t), (t += s.length);
              w.addGroup(
                e,
                h.length / 3 - e,
                void 0 !== i.extrudeMaterial ? i.extrudeMaterial : 1
              );
            })(),
            i.arrays ||
              (this.setIndex(c),
              this.addAttribute("position", new rr(h, 3)),
              this.addAttribute("uv", new rr(i.arrays.uv, 2)));
        }),
        ($a.WorldUVGenerator = {
          generateTopUV: function (e, t, i, n, r) {
            var o = t[3 * i],
              a = t[3 * i + 1],
              s = t[3 * n],
              i = t[3 * n + 1],
              n = t[3 * r],
              r = t[3 * r + 1];
            return [new Et(o, a), new Et(s, i), new Et(n, r)];
          },
          generateSideWallUV: function (e, t, i, n, r, o) {
            var a = t[3 * i],
              s = t[3 * i + 1],
              l = t[3 * i + 2],
              c = t[3 * n],
              h = t[3 * n + 1],
              u = t[3 * n + 2],
              d = t[3 * r],
              p = t[3 * r + 1],
              i = t[3 * r + 2],
              n = t[3 * o],
              r = t[3 * o + 1],
              o = t[3 * o + 2];
            return Math.abs(s - h) < 0.01
              ? [
                  new Et(a, 1 - l),
                  new Et(c, 1 - u),
                  new Et(d, 1 - i),
                  new Et(n, 1 - o),
                ]
              : [
                  new Et(s, 1 - l),
                  new Et(h, 1 - u),
                  new Et(p, 1 - i),
                  new Et(r, 1 - o),
                ];
          },
        }),
        ((es.prototype = Object.create(Qn.prototype)).constructor = es),
        ((ts.prototype = Object.create(Ka.prototype)).constructor = ts),
        ((is.prototype = Object.create(Qn.prototype)).constructor = is),
        ((ns.prototype = Object.create(no.prototype)).constructor = ns),
        ((rs.prototype = Object.create(Qn.prototype)).constructor = rs),
        ((os.prototype = Object.create(no.prototype)).constructor = os),
        ((as.prototype = Object.create(Qn.prototype)).constructor = as),
        ((ss.prototype = Object.create(no.prototype)).constructor = ss),
        ((ls.prototype = Object.create(Qn.prototype)).constructor = ls),
        ((cs.prototype = Object.create(no.prototype)).constructor = cs),
        ((hs.prototype = Object.create(no.prototype)).constructor = hs),
        ((us.prototype = Object.create(Qn.prototype)).constructor = us),
        ((ds.prototype = Object.create(no.prototype)).constructor = ds),
        ((ps.prototype = Object.create(us.prototype)).constructor = ps),
        ((fs.prototype = Object.create(ds.prototype)).constructor = fs),
        ((ms.prototype = Object.create(Qn.prototype)).constructor = ms),
        ((gs.prototype = Object.create(no.prototype)).constructor = gs);
      var vs = Object.freeze({
        WireframeGeometry: Oa,
        ParametricGeometry: Ia,
        ParametricBufferGeometry: Da,
        TetrahedronGeometry: ka,
        TetrahedronBufferGeometry: Ua,
        OctahedronGeometry: Ba,
        OctahedronBufferGeometry: za,
        IcosahedronGeometry: ja,
        IcosahedronBufferGeometry: Ha,
        DodecahedronGeometry: Ga,
        DodecahedronBufferGeometry: Va,
        PolyhedronGeometry: Na,
        PolyhedronBufferGeometry: Fa,
        TubeGeometry: Wa,
        TubeBufferGeometry: Xa,
        TorusKnotGeometry: qa,
        TorusKnotBufferGeometry: Ya,
        TorusGeometry: Qa,
        TorusBufferGeometry: Za,
        TextGeometry: es,
        TextBufferGeometry: ts,
        SphereGeometry: is,
        SphereBufferGeometry: ns,
        RingGeometry: rs,
        RingBufferGeometry: os,
        PlaneGeometry: ao,
        PlaneBufferGeometry: so,
        LatheGeometry: as,
        LatheBufferGeometry: ss,
        ShapeGeometry: ls,
        ShapeBufferGeometry: cs,
        ExtrudeGeometry: $a,
        ExtrudeBufferGeometry: Ka,
        EdgesGeometry: hs,
        ConeGeometry: ps,
        ConeBufferGeometry: fs,
        CylinderGeometry: us,
        CylinderBufferGeometry: ds,
        CircleGeometry: ms,
        CircleBufferGeometry: gs,
        BoxGeometry: ro,
        BoxBufferGeometry: oo,
      });
      function ys(e) {
        an.call(this),
          (this.type = "ShadowMaterial"),
          (this.color = new Mi(0)),
          (this.opacity = 1),
          (this.lights = !0),
          (this.transparent = !0),
          this.setValues(e);
      }
      function _s(e) {
        co.call(this, e), (this.type = "RawShaderMaterial");
      }
      function xs(e) {
        an.call(this),
          (this.defines = { STANDARD: "" }),
          (this.type = "MeshStandardMaterial"),
          (this.color = new Mi(16777215)),
          (this.roughness = 0.5),
          (this.metalness = 0.5),
          (this.map = null),
          (this.lightMap = null),
          (this.lightMapIntensity = 1),
          (this.aoMap = null),
          (this.aoMapIntensity = 1),
          (this.emissive = new Mi(0)),
          (this.emissiveIntensity = 1),
          (this.emissiveMap = null),
          (this.bumpMap = null),
          (this.bumpScale = 1),
          (this.normalMap = null),
          (this.normalScale = new Et(1, 1)),
          (this.displacementMap = null),
          (this.displacementScale = 1),
          (this.displacementBias = 0),
          (this.roughnessMap = null),
          (this.metalnessMap = null),
          (this.alphaMap = null),
          (this.envMap = null),
          (this.envMapIntensity = 1),
          (this.refractionRatio = 0.98),
          (this.wireframe = !1),
          (this.wireframeLinewidth = 1),
          (this.wireframeLinecap = "round"),
          (this.wireframeLinejoin = "round"),
          (this.skinning = !1),
          (this.morphTargets = !1),
          (this.morphNormals = !1),
          this.setValues(e);
      }
      function bs(e) {
        xs.call(this),
          (this.defines = { PHYSICAL: "" }),
          (this.type = "MeshPhysicalMaterial"),
          (this.reflectivity = 0.5),
          (this.clearCoat = 0),
          (this.clearCoatRoughness = 0),
          this.setValues(e);
      }
      function ws(e) {
        an.call(this),
          (this.type = "MeshPhongMaterial"),
          (this.color = new Mi(16777215)),
          (this.specular = new Mi(1118481)),
          (this.shininess = 30),
          (this.map = null),
          (this.lightMap = null),
          (this.lightMapIntensity = 1),
          (this.aoMap = null),
          (this.aoMapIntensity = 1),
          (this.emissive = new Mi(0)),
          (this.emissiveIntensity = 1),
          (this.emissiveMap = null),
          (this.bumpMap = null),
          (this.bumpScale = 1),
          (this.normalMap = null),
          (this.normalScale = new Et(1, 1)),
          (this.displacementMap = null),
          (this.displacementScale = 1),
          (this.displacementBias = 0),
          (this.specularMap = null),
          (this.alphaMap = null),
          (this.envMap = null),
          (this.combine = he),
          (this.reflectivity = 1),
          (this.refractionRatio = 0.98),
          (this.wireframe = !1),
          (this.wireframeLinewidth = 1),
          (this.wireframeLinecap = "round"),
          (this.wireframeLinejoin = "round"),
          (this.skinning = !1),
          (this.morphTargets = !1),
          (this.morphNormals = !1),
          this.setValues(e);
      }
      function Ts(e) {
        ws.call(this),
          (this.defines = { TOON: "" }),
          (this.type = "MeshToonMaterial"),
          (this.gradientMap = null),
          this.setValues(e);
      }
      function Ss(e) {
        an.call(this),
          (this.type = "MeshNormalMaterial"),
          (this.bumpMap = null),
          (this.bumpScale = 1),
          (this.normalMap = null),
          (this.normalScale = new Et(1, 1)),
          (this.displacementMap = null),
          (this.displacementScale = 1),
          (this.displacementBias = 0),
          (this.wireframe = !1),
          (this.wireframeLinewidth = 1),
          (this.fog = !1),
          (this.lights = !1),
          (this.skinning = !1),
          (this.morphTargets = !1),
          (this.morphNormals = !1),
          this.setValues(e);
      }
      function Ms(e) {
        an.call(this),
          (this.type = "MeshLambertMaterial"),
          (this.color = new Mi(16777215)),
          (this.map = null),
          (this.lightMap = null),
          (this.lightMapIntensity = 1),
          (this.aoMap = null),
          (this.aoMapIntensity = 1),
          (this.emissive = new Mi(0)),
          (this.emissiveIntensity = 1),
          (this.emissiveMap = null),
          (this.specularMap = null),
          (this.alphaMap = null),
          (this.envMap = null),
          (this.combine = he),
          (this.reflectivity = 1),
          (this.refractionRatio = 0.98),
          (this.wireframe = !1),
          (this.wireframeLinewidth = 1),
          (this.wireframeLinecap = "round"),
          (this.wireframeLinejoin = "round"),
          (this.skinning = !1),
          (this.morphTargets = !1),
          (this.morphNormals = !1),
          this.setValues(e);
      }
      function Es(e) {
        wa.call(this),
          (this.type = "LineDashedMaterial"),
          (this.scale = 1),
          (this.dashSize = 3),
          (this.gapSize = 1),
          this.setValues(e);
      }
      (((ys.prototype = Object.create(an.prototype)).constructor =
        ys).prototype.isShadowMaterial = !0),
        (((_s.prototype = Object.create(co.prototype)).constructor =
          _s).prototype.isRawShaderMaterial = !0),
        (((xs.prototype = Object.create(an.prototype)).constructor =
          xs).prototype.isMeshStandardMaterial = !0),
        (xs.prototype.copy = function (e) {
          return (
            an.prototype.copy.call(this, e),
            (this.defines = { STANDARD: "" }),
            this.color.copy(e.color),
            (this.roughness = e.roughness),
            (this.metalness = e.metalness),
            (this.map = e.map),
            (this.lightMap = e.lightMap),
            (this.lightMapIntensity = e.lightMapIntensity),
            (this.aoMap = e.aoMap),
            (this.aoMapIntensity = e.aoMapIntensity),
            this.emissive.copy(e.emissive),
            (this.emissiveMap = e.emissiveMap),
            (this.emissiveIntensity = e.emissiveIntensity),
            (this.bumpMap = e.bumpMap),
            (this.bumpScale = e.bumpScale),
            (this.normalMap = e.normalMap),
            this.normalScale.copy(e.normalScale),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.roughnessMap = e.roughnessMap),
            (this.metalnessMap = e.metalnessMap),
            (this.alphaMap = e.alphaMap),
            (this.envMap = e.envMap),
            (this.envMapIntensity = e.envMapIntensity),
            (this.refractionRatio = e.refractionRatio),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.wireframeLinecap = e.wireframeLinecap),
            (this.wireframeLinejoin = e.wireframeLinejoin),
            (this.skinning = e.skinning),
            (this.morphTargets = e.morphTargets),
            (this.morphNormals = e.morphNormals),
            this
          );
        }),
        (((bs.prototype = Object.create(xs.prototype)).constructor =
          bs).prototype.isMeshPhysicalMaterial = !0),
        (bs.prototype.copy = function (e) {
          return (
            xs.prototype.copy.call(this, e),
            (this.defines = { PHYSICAL: "" }),
            (this.reflectivity = e.reflectivity),
            (this.clearCoat = e.clearCoat),
            (this.clearCoatRoughness = e.clearCoatRoughness),
            this
          );
        }),
        (((ws.prototype = Object.create(an.prototype)).constructor =
          ws).prototype.isMeshPhongMaterial = !0),
        (ws.prototype.copy = function (e) {
          return (
            an.prototype.copy.call(this, e),
            this.color.copy(e.color),
            this.specular.copy(e.specular),
            (this.shininess = e.shininess),
            (this.map = e.map),
            (this.lightMap = e.lightMap),
            (this.lightMapIntensity = e.lightMapIntensity),
            (this.aoMap = e.aoMap),
            (this.aoMapIntensity = e.aoMapIntensity),
            this.emissive.copy(e.emissive),
            (this.emissiveMap = e.emissiveMap),
            (this.emissiveIntensity = e.emissiveIntensity),
            (this.bumpMap = e.bumpMap),
            (this.bumpScale = e.bumpScale),
            (this.normalMap = e.normalMap),
            this.normalScale.copy(e.normalScale),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.specularMap = e.specularMap),
            (this.alphaMap = e.alphaMap),
            (this.envMap = e.envMap),
            (this.combine = e.combine),
            (this.reflectivity = e.reflectivity),
            (this.refractionRatio = e.refractionRatio),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.wireframeLinecap = e.wireframeLinecap),
            (this.wireframeLinejoin = e.wireframeLinejoin),
            (this.skinning = e.skinning),
            (this.morphTargets = e.morphTargets),
            (this.morphNormals = e.morphNormals),
            this
          );
        }),
        (((Ts.prototype = Object.create(ws.prototype)).constructor =
          Ts).prototype.isMeshToonMaterial = !0),
        (Ts.prototype.copy = function (e) {
          return (
            ws.prototype.copy.call(this, e),
            (this.gradientMap = e.gradientMap),
            this
          );
        }),
        (((Ss.prototype = Object.create(an.prototype)).constructor =
          Ss).prototype.isMeshNormalMaterial = !0),
        (Ss.prototype.copy = function (e) {
          return (
            an.prototype.copy.call(this, e),
            (this.bumpMap = e.bumpMap),
            (this.bumpScale = e.bumpScale),
            (this.normalMap = e.normalMap),
            this.normalScale.copy(e.normalScale),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.skinning = e.skinning),
            (this.morphTargets = e.morphTargets),
            (this.morphNormals = e.morphNormals),
            this
          );
        }),
        (((Ms.prototype = Object.create(an.prototype)).constructor =
          Ms).prototype.isMeshLambertMaterial = !0),
        (Ms.prototype.copy = function (e) {
          return (
            an.prototype.copy.call(this, e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.lightMap = e.lightMap),
            (this.lightMapIntensity = e.lightMapIntensity),
            (this.aoMap = e.aoMap),
            (this.aoMapIntensity = e.aoMapIntensity),
            this.emissive.copy(e.emissive),
            (this.emissiveMap = e.emissiveMap),
            (this.emissiveIntensity = e.emissiveIntensity),
            (this.specularMap = e.specularMap),
            (this.alphaMap = e.alphaMap),
            (this.envMap = e.envMap),
            (this.combine = e.combine),
            (this.reflectivity = e.reflectivity),
            (this.refractionRatio = e.refractionRatio),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.wireframeLinecap = e.wireframeLinecap),
            (this.wireframeLinejoin = e.wireframeLinejoin),
            (this.skinning = e.skinning),
            (this.morphTargets = e.morphTargets),
            (this.morphNormals = e.morphNormals),
            this
          );
        }),
        (((Es.prototype = Object.create(wa.prototype)).constructor =
          Es).prototype.isLineDashedMaterial = !0),
        (Es.prototype.copy = function (e) {
          return (
            wa.prototype.copy.call(this, e),
            (this.scale = e.scale),
            (this.dashSize = e.dashSize),
            (this.gapSize = e.gapSize),
            this
          );
        });
      var As = Object.freeze({
          ShadowMaterial: ys,
          SpriteMaterial: ga,
          RawShaderMaterial: _s,
          ShaderMaterial: co,
          PointsMaterial: Ea,
          MeshPhysicalMaterial: bs,
          MeshStandardMaterial: xs,
          MeshPhongMaterial: ws,
          MeshToonMaterial: Ts,
          MeshNormalMaterial: Ss,
          MeshLambertMaterial: Ms,
          MeshDepthMaterial: sn,
          MeshDistanceMaterial: ln,
          MeshBasicMaterial: lo,
          LineDashedMaterial: Es,
          LineBasicMaterial: wa,
          Material: an,
        }),
        Ls = {
          enabled: !1,
          files: {},
          add: function (e, t) {
            !1 !== this.enabled && (this.files[e] = t);
          },
          get: function (e) {
            if (!1 !== this.enabled) return this.files[e];
          },
          remove: function (e) {
            delete this.files[e];
          },
          clear: function () {
            this.files = {};
          },
        };
      function Cs(e, t, i) {
        var n = this,
          r = !1,
          o = 0,
          a = 0,
          s = void 0;
        (this.onStart = void 0),
          (this.onLoad = e),
          (this.onProgress = t),
          (this.onError = i),
          (this.itemStart = function (e) {
            a++,
              !1 === r && void 0 !== n.onStart && n.onStart(e, o, a),
              (r = !0);
          }),
          (this.itemEnd = function (e) {
            o++,
              void 0 !== n.onProgress && n.onProgress(e, o, a),
              o === a && ((r = !1), void 0 !== n.onLoad && n.onLoad());
          }),
          (this.itemError = function (e) {
            void 0 !== n.onError && n.onError(e);
          }),
          (this.resolveURL = function (e) {
            return s ? s(e) : e;
          }),
          (this.setURLModifier = function (e) {
            s = e;
          });
      }
      var Ps = new Cs(),
        Rs = {};
      function Os(e) {
        this.manager = void 0 !== e ? e : Ps;
      }
      function Is(e) {
        (this.manager = void 0 !== e ? e : Ps), (this._parser = null);
      }
      function Ds(e) {
        (this.manager = void 0 !== e ? e : Ps), (this._parser = null);
      }
      function Ns(e) {
        this.manager = void 0 !== e ? e : Ps;
      }
      function Fs(e) {
        this.manager = void 0 !== e ? e : Ps;
      }
      function ks(e) {
        this.manager = void 0 !== e ? e : Ps;
      }
      function Us(e, t) {
        Un.call(this),
          (this.type = "Light"),
          (this.color = new Mi(e)),
          (this.intensity = void 0 !== t ? t : 1),
          (this.receiveShadow = void 0);
      }
      function Bs(e, t, i) {
        Us.call(this, e, i),
          (this.type = "HemisphereLight"),
          (this.castShadow = void 0),
          this.position.copy(Un.DefaultUp),
          this.updateMatrix(),
          (this.groundColor = new Mi(t));
      }
      function zs(e) {
        (this.camera = e),
          (this.bias = 0),
          (this.radius = 1),
          (this.mapSize = new Et(512, 512)),
          (this.map = null),
          (this.matrix = new At());
      }
      function js() {
        zs.call(this, new oa(50, 1, 0.5, 500));
      }
      function Hs(e, t, i, n, r, o) {
        Us.call(this, e, t),
          (this.type = "SpotLight"),
          this.position.copy(Un.DefaultUp),
          this.updateMatrix(),
          (this.target = new Un()),
          Object.defineProperty(this, "power", {
            get: function () {
              return this.intensity * Math.PI;
            },
            set: function (e) {
              this.intensity = e / Math.PI;
            },
          }),
          (this.distance = void 0 !== i ? i : 0),
          (this.angle = void 0 !== n ? n : Math.PI / 3),
          (this.penumbra = void 0 !== r ? r : 0),
          (this.decay = void 0 !== o ? o : 1),
          (this.shadow = new js());
      }
      function Gs(e, t, i, n) {
        Us.call(this, e, t),
          (this.type = "PointLight"),
          Object.defineProperty(this, "power", {
            get: function () {
              return 4 * this.intensity * Math.PI;
            },
            set: function (e) {
              this.intensity = e / (4 * Math.PI);
            },
          }),
          (this.distance = void 0 !== i ? i : 0),
          (this.decay = void 0 !== n ? n : 1),
          (this.shadow = new zs(new oa(90, 1, 0.5, 500)));
      }
      function Vs() {
        zs.call(this, new zn(-5, 5, 5, -5, 0.5, 500));
      }
      function Ws(e, t) {
        Us.call(this, e, t),
          (this.type = "DirectionalLight"),
          this.position.copy(Un.DefaultUp),
          this.updateMatrix(),
          (this.target = new Un()),
          (this.shadow = new Vs());
      }
      function Xs(e, t) {
        Us.call(this, e, t),
          (this.type = "AmbientLight"),
          (this.castShadow = void 0);
      }
      function qs(e, t, i, n) {
        Us.call(this, e, t),
          (this.type = "RectAreaLight"),
          this.position.set(0, 1, 0),
          this.updateMatrix(),
          (this.width = void 0 !== i ? i : 10),
          (this.height = void 0 !== n ? n : 10);
      }
      Object.assign(Os.prototype, {
        load: function (a, e, t, i) {
          void 0 === a && (a = ""),
            void 0 !== this.path && (a = this.path + a),
            (a = this.manager.resolveURL(a));
          var s = this,
            n = Ls.get(a);
          if (void 0 !== n)
            return (
              s.manager.itemStart(a),
              setTimeout(function () {
                e && e(n), s.manager.itemEnd(a);
              }, 0),
              n
            );
          if (void 0 === Rs[a]) {
            var r = a.match(/^data:(.*?)(;base64)?,(.*)$/);
            if (r) {
              var o = r[1],
                l = !!r[2],
                c = r[3],
                c = window.decodeURIComponent(c);
              l && (c = window.atob(c));
              try {
                var h = (this.responseType || "").toLowerCase();
                switch (h) {
                  case "arraybuffer":
                  case "blob":
                    for (
                      var u = new Uint8Array(c.length), d = 0;
                      d < c.length;
                      d++
                    )
                      u[d] = c.charCodeAt(d);
                    p =
                      "blob" === h
                        ? new Blob([u.buffer], { type: o })
                        : u.buffer;
                    break;
                  case "document":
                    var p = new DOMParser().parseFromString(c, o);
                    break;
                  case "json":
                    p = JSON.parse(c);
                    break;
                  default:
                    p = c;
                }
                window.setTimeout(function () {
                  e && e(p), s.manager.itemEnd(a);
                }, 0);
              } catch (e) {
                window.setTimeout(function () {
                  i && i(e), s.manager.itemEnd(a), s.manager.itemError(a);
                }, 0);
              }
            } else {
              (Rs[a] = []),
                Rs[a].push({ onLoad: e, onProgress: t, onError: i });
              var f,
                m = new XMLHttpRequest();
              for (f in (m.open("GET", a, !0),
              m.addEventListener(
                "load",
                function (e) {
                  var t = e.target.response;
                  Ls.add(a, t);
                  var i = Rs[a];
                  if ((delete Rs[a], 200 === this.status)) {
                    for (var n = 0, r = i.length; n < r; n++)
                      (o = i[n]).onLoad && o.onLoad(t);
                    s.manager.itemEnd(a);
                  } else if (0 === this.status) {
                    console.warn("THREE.FileLoader: HTTP Status 0 received.");
                    for (n = 0, r = i.length; n < r; n++)
                      (o = i[n]).onLoad && o.onLoad(t);
                    s.manager.itemEnd(a);
                  } else {
                    for (var o, n = 0, r = i.length; n < r; n++)
                      (o = i[n]).onError && o.onError(e);
                    s.manager.itemEnd(a), s.manager.itemError(a);
                  }
                },
                !1
              ),
              m.addEventListener(
                "progress",
                function (e) {
                  for (var t = Rs[a], i = 0, n = t.length; i < n; i++) {
                    var r = t[i];
                    r.onProgress && r.onProgress(e);
                  }
                },
                !1
              ),
              m.addEventListener(
                "error",
                function (e) {
                  var t = Rs[a];
                  delete Rs[a];
                  for (var i = 0, n = t.length; i < n; i++) {
                    var r = t[i];
                    r.onError && r.onError(e);
                  }
                  s.manager.itemEnd(a), s.manager.itemError(a);
                },
                !1
              ),
              void 0 !== this.responseType &&
                (m.responseType = this.responseType),
              void 0 !== this.withCredentials &&
                (m.withCredentials = this.withCredentials),
              m.overrideMimeType &&
                m.overrideMimeType(
                  void 0 !== this.mimeType ? this.mimeType : "text/plain"
                ),
              this.requestHeader))
                m.setRequestHeader(f, this.requestHeader[f]);
              m.send(null);
            }
            return s.manager.itemStart(a), m;
          }
          Rs[a].push({ onLoad: e, onProgress: t, onError: i });
        },
        setPath: function (e) {
          return (this.path = e), this;
        },
        setResponseType: function (e) {
          return (this.responseType = e), this;
        },
        setWithCredentials: function (e) {
          return (this.withCredentials = e), this;
        },
        setMimeType: function (e) {
          return (this.mimeType = e), this;
        },
        setRequestHeader: function (e) {
          return (this.requestHeader = e), this;
        },
      }),
        Object.assign(Is.prototype, {
          load: function (e, o, i, n) {
            var a = this,
              s = [],
              l = new Pa();
            l.image = s;
            var r = new Os(this.manager);
            if (
              (r.setPath(this.path),
              r.setResponseType("arraybuffer"),
              Array.isArray(e))
            )
              for (var c = 0, t = 0, h = e.length; t < h; ++t)
                !(function (t) {
                  r.load(
                    e[t],
                    function (e) {
                      e = a._parser(e, !0);
                      (s[t] = {
                        width: e.width,
                        height: e.height,
                        format: e.format,
                        mipmaps: e.mipmaps,
                      }),
                        6 === (c += 1) &&
                          (1 === e.mipmapCount && (l.minFilter = Oe),
                          (l.format = e.format),
                          (l.needsUpdate = !0),
                          o && o(l));
                    },
                    i,
                    n
                  );
                })(t);
            else
              r.load(
                e,
                function (e) {
                  var t = a._parser(e, !0);
                  if (t.isCubemap)
                    for (
                      var i = t.mipmaps.length / t.mipmapCount, n = 0;
                      n < i;
                      n++
                    ) {
                      s[n] = { mipmaps: [] };
                      for (var r = 0; r < t.mipmapCount; r++)
                        s[n].mipmaps.push(t.mipmaps[n * t.mipmapCount + r]),
                          (s[n].format = t.format),
                          (s[n].width = t.width),
                          (s[n].height = t.height);
                    }
                  else
                    (l.image.width = t.width),
                      (l.image.height = t.height),
                      (l.mipmaps = t.mipmaps);
                  1 === t.mipmapCount && (l.minFilter = Oe),
                    (l.format = t.format),
                    (l.needsUpdate = !0),
                    o && o(l);
                },
                i,
                n
              );
            return l;
          },
          setPath: function (e) {
            return (this.path = e), this;
          },
        }),
        Object.assign(Ds.prototype, {
          load: function (e, t, i, n) {
            var r = this,
              o = new Ut(),
              a = new Os(this.manager);
            return (
              a.setResponseType("arraybuffer"),
              a.load(
                e,
                function (e) {
                  e = r._parser(e);
                  e &&
                    (void 0 !== e.image
                      ? (o.image = e.image)
                      : void 0 !== e.data &&
                        ((o.image.width = e.width),
                        (o.image.height = e.height),
                        (o.image.data = e.data)),
                    (o.wrapS = void 0 !== e.wrapS ? e.wrapS : Me),
                    (o.wrapT = void 0 !== e.wrapT ? e.wrapT : Me),
                    (o.magFilter = void 0 !== e.magFilter ? e.magFilter : Oe),
                    (o.minFilter = void 0 !== e.minFilter ? e.minFilter : De),
                    (o.anisotropy = void 0 !== e.anisotropy ? e.anisotropy : 1),
                    void 0 !== e.format && (o.format = e.format),
                    void 0 !== e.type && (o.type = e.type),
                    void 0 !== e.mipmaps && (o.mipmaps = e.mipmaps),
                    1 === e.mipmapCount && (o.minFilter = Oe),
                    (o.needsUpdate = !0),
                    t && t(o, e));
                },
                i,
                n
              ),
              o
            );
          },
        }),
        Object.assign(Ns.prototype, {
          crossOrigin: "Anonymous",
          load: function (t, e, i, n) {
            void 0 === t && (t = ""),
              void 0 !== this.path && (t = this.path + t),
              (t = this.manager.resolveURL(t));
            var r = this,
              o = Ls.get(t);
            if (void 0 !== o)
              return (
                r.manager.itemStart(t),
                setTimeout(function () {
                  e && e(o), r.manager.itemEnd(t);
                }, 0),
                o
              );
            var a = document.createElementNS(
              "http://www.w3.org/1999/xhtml",
              "img"
            );
            return (
              a.addEventListener(
                "load",
                function () {
                  Ls.add(t, this), e && e(this), r.manager.itemEnd(t);
                },
                !1
              ),
              a.addEventListener(
                "error",
                function (e) {
                  n && n(e), r.manager.itemEnd(t), r.manager.itemError(t);
                },
                !1
              ),
              "data:" !== t.substr(0, 5) &&
                void 0 !== this.crossOrigin &&
                (a.crossOrigin = this.crossOrigin),
              r.manager.itemStart(t),
              (a.src = t),
              a
            );
          },
          setCrossOrigin: function (e) {
            return (this.crossOrigin = e), this;
          },
          setPath: function (e) {
            return (this.path = e), this;
          },
        }),
        Object.assign(Fs.prototype, {
          crossOrigin: "Anonymous",
          load: function (e, i, t, n) {
            var r = new Bt(),
              o = new Ns(this.manager);
            o.setCrossOrigin(this.crossOrigin), o.setPath(this.path);
            var a = 0;
            for (var s = 0; s < e.length; ++s)
              !(function (t) {
                o.load(
                  e[t],
                  function (e) {
                    (r.images[t] = e),
                      6 === ++a && ((r.needsUpdate = !0), i && i(r));
                  },
                  void 0,
                  n
                );
              })(s);
            return r;
          },
          setCrossOrigin: function (e) {
            return (this.crossOrigin = e), this;
          },
          setPath: function (e) {
            return (this.path = e), this;
          },
        }),
        Object.assign(ks.prototype, {
          crossOrigin: "Anonymous",
          load: function (t, i, e, n) {
            var r = new Ns(this.manager);
            r.setCrossOrigin(this.crossOrigin), r.setPath(this.path);
            var o = new Dt();
            return (
              (o.image = r.load(
                t,
                function () {
                  var e =
                    0 < t.search(/\.(jpg|jpeg)$/) ||
                    0 === t.search(/^data\:image\/jpeg/);
                  (o.format = e ? Ye : Qe),
                    (o.needsUpdate = !0),
                    void 0 !== i && i(o);
                },
                e,
                n
              )),
              o
            );
          },
          setCrossOrigin: function (e) {
            return (this.crossOrigin = e), this;
          },
          setPath: function (e) {
            return (this.path = e), this;
          },
        }),
        (Us.prototype = Object.assign(Object.create(Un.prototype), {
          constructor: Us,
          isLight: !0,
          copy: function (e) {
            return (
              Un.prototype.copy.call(this, e),
              this.color.copy(e.color),
              (this.intensity = e.intensity),
              this
            );
          },
          toJSON: function (e) {
            e = Un.prototype.toJSON.call(this, e);
            return (
              (e.object.color = this.color.getHex()),
              (e.object.intensity = this.intensity),
              void 0 !== this.groundColor &&
                (e.object.groundColor = this.groundColor.getHex()),
              void 0 !== this.distance && (e.object.distance = this.distance),
              void 0 !== this.angle && (e.object.angle = this.angle),
              void 0 !== this.decay && (e.object.decay = this.decay),
              void 0 !== this.penumbra && (e.object.penumbra = this.penumbra),
              void 0 !== this.shadow &&
                (e.object.shadow = this.shadow.toJSON()),
              e
            );
          },
        })),
        (Bs.prototype = Object.assign(Object.create(Us.prototype), {
          constructor: Bs,
          isHemisphereLight: !0,
          copy: function (e) {
            return (
              Us.prototype.copy.call(this, e),
              this.groundColor.copy(e.groundColor),
              this
            );
          },
        })),
        Object.assign(zs.prototype, {
          copy: function (e) {
            return (
              (this.camera = e.camera.clone()),
              (this.bias = e.bias),
              (this.radius = e.radius),
              this.mapSize.copy(e.mapSize),
              this
            );
          },
          clone: function () {
            return new this.constructor().copy(this);
          },
          toJSON: function () {
            var e = {};
            return (
              0 !== this.bias && (e.bias = this.bias),
              1 !== this.radius && (e.radius = this.radius),
              (512 === this.mapSize.x && 512 === this.mapSize.y) ||
                (e.mapSize = this.mapSize.toArray()),
              (e.camera = this.camera.toJSON(!1).object),
              delete e.camera.matrix,
              e
            );
          },
        }),
        (js.prototype = Object.assign(Object.create(zs.prototype), {
          constructor: js,
          isSpotLightShadow: !0,
          update: function (e) {
            var t = this.camera,
              i = 2 * Mt.RAD2DEG * e.angle,
              n = this.mapSize.width / this.mapSize.height,
              e = e.distance || t.far;
            (i === t.fov && n === t.aspect && e === t.far) ||
              ((t.fov = i),
              (t.aspect = n),
              (t.far = e),
              t.updateProjectionMatrix());
          },
        })),
        (Hs.prototype = Object.assign(Object.create(Us.prototype), {
          constructor: Hs,
          isSpotLight: !0,
          copy: function (e) {
            return (
              Us.prototype.copy.call(this, e),
              (this.distance = e.distance),
              (this.angle = e.angle),
              (this.penumbra = e.penumbra),
              (this.decay = e.decay),
              (this.target = e.target.clone()),
              (this.shadow = e.shadow.clone()),
              this
            );
          },
        })),
        (Gs.prototype = Object.assign(Object.create(Us.prototype), {
          constructor: Gs,
          isPointLight: !0,
          copy: function (e) {
            return (
              Us.prototype.copy.call(this, e),
              (this.distance = e.distance),
              (this.decay = e.decay),
              (this.shadow = e.shadow.clone()),
              this
            );
          },
        })),
        (Vs.prototype = Object.assign(Object.create(zs.prototype), {
          constructor: Vs,
        })),
        (Ws.prototype = Object.assign(Object.create(Us.prototype), {
          constructor: Ws,
          isDirectionalLight: !0,
          copy: function (e) {
            return (
              Us.prototype.copy.call(this, e),
              (this.target = e.target.clone()),
              (this.shadow = e.shadow.clone()),
              this
            );
          },
        })),
        (Xs.prototype = Object.assign(Object.create(Us.prototype), {
          constructor: Xs,
          isAmbientLight: !0,
        })),
        (qs.prototype = Object.assign(Object.create(Us.prototype), {
          constructor: qs,
          isRectAreaLight: !0,
          copy: function (e) {
            return (
              Us.prototype.copy.call(this, e),
              (this.width = e.width),
              (this.height = e.height),
              this
            );
          },
          toJSON: function (e) {
            e = Us.prototype.toJSON.call(this, e);
            return (
              (e.object.width = this.width), (e.object.height = this.height), e
            );
          },
        }));
      var Ys = {
        arraySlice: function (e, t, i) {
          return Ys.isTypedArray(e)
            ? new e.constructor(e.subarray(t, void 0 !== i ? i : e.length))
            : e.slice(t, i);
        },
        convertArray: function (e, t, i) {
          return !e || (!i && e.constructor === t)
            ? e
            : "number" == typeof t.BYTES_PER_ELEMENT
            ? new t(e)
            : Array.prototype.slice.call(e);
        },
        isTypedArray: function (e) {
          return ArrayBuffer.isView(e) && !(e instanceof DataView);
        },
        getKeyframeOrder: function (i) {
          for (var e = i.length, t = new Array(e), n = 0; n !== e; ++n)
            t[n] = n;
          return (
            t.sort(function (e, t) {
              return i[e] - i[t];
            }),
            t
          );
        },
        sortedArray: function (e, t, i) {
          for (
            var n = e.length, r = new e.constructor(n), o = 0, a = 0;
            a !== n;
            ++o
          )
            for (var s = i[o] * t, l = 0; l !== t; ++l) r[a++] = e[s + l];
          return r;
        },
        flattenJSON: function (e, t, i, n) {
          for (var r = 1, o = e[0]; void 0 !== o && void 0 === o[n]; )
            o = e[r++];
          if (void 0 !== o) {
            var a = o[n];
            if (void 0 !== a)
              if (Array.isArray(a))
                for (
                  ;
                  void 0 !== (a = o[n]) && (t.push(o.time), i.push.apply(i, a)),
                    (o = e[r++]),
                    void 0 !== o;

                );
              else if (void 0 !== a.toArray)
                for (
                  ;
                  void 0 !== (a = o[n]) &&
                    (t.push(o.time), a.toArray(i, i.length)),
                    (o = e[r++]),
                    void 0 !== o;

                );
              else
                for (
                  ;
                  void 0 !== (a = o[n]) && (t.push(o.time), i.push(a)),
                    (o = e[r++]),
                    void 0 !== o;

                );
          }
        },
      };
      function Qs(e, t, i, n) {
        (this.parameterPositions = e),
          (this._cachedIndex = 0),
          (this.resultBuffer = void 0 !== n ? n : new t.constructor(i)),
          (this.sampleValues = t),
          (this.valueSize = i);
      }
      function Zs(e, t, i, n) {
        Qs.call(this, e, t, i, n),
          (this._weightPrev = -0),
          (this._offsetPrev = -0),
          (this._weightNext = -0),
          (this._offsetNext = -0);
      }
      function Js(e, t, i, n) {
        Qs.call(this, e, t, i, n);
      }
      function $s(e, t, i, n) {
        Qs.call(this, e, t, i, n);
      }
      function Ks(e, t, i, n) {
        if (void 0 === e) throw new Error("track name is undefined");
        if (void 0 === t || 0 === t.length)
          throw new Error("no keyframes in track named " + e);
        (this.name = e),
          (this.times = Ys.convertArray(t, this.TimeBufferType)),
          (this.values = Ys.convertArray(i, this.ValueBufferType)),
          this.setInterpolation(n || this.DefaultInterpolation),
          this.validate(),
          this.optimize();
      }
      function el(e, t, i, n) {
        Ks.call(this, e, t, i, n);
      }
      function tl(e, t, i, n) {
        Qs.call(this, e, t, i, n);
      }
      function il(e, t, i, n) {
        Ks.call(this, e, t, i, n);
      }
      function nl(e, t, i, n) {
        Ks.call(this, e, t, i, n);
      }
      function rl(e, t, i, n) {
        Ks.call(this, e, t, i, n);
      }
      function ol(e, t, i) {
        Ks.call(this, e, t, i);
      }
      function al(e, t, i, n) {
        Ks.call(this, e, t, i, n);
      }
      function sl(e, t, i, n) {
        Ks.apply(this, e, t, i, n);
      }
      function ll(e, t, i) {
        (this.name = e),
          (this.tracks = i),
          (this.duration = void 0 !== t ? t : -1),
          (this.uuid = Mt.generateUUID()),
          this.duration < 0 && this.resetDuration(),
          this.optimize();
      }
      function cl(e) {
        (this.manager = void 0 !== e ? e : Ps), (this.textures = {});
      }
      function hl(e) {
        this.manager = void 0 !== e ? e : Ps;
      }
      Object.assign(Qs.prototype, {
        evaluate: function (e) {
          var t,
            i = this.parameterPositions,
            n = this._cachedIndex,
            r = i[n],
            o = i[n - 1];
          e: {
            t: {
              i: {
                n: if (!(e < r)) {
                  for (var a = n + 2; ; ) {
                    if (void 0 === r) {
                      if (e < o) break n;
                      return (
                        (n = i.length),
                        (this._cachedIndex = n),
                        this.afterEnd_(n - 1, e, o)
                      );
                    }
                    if (n === a) break;
                    if (((o = r), e < (r = i[++n]))) break t;
                  }
                  t = i.length;
                  break i;
                }
                if (o <= e) break e;
                var s = i[1];
                e < s && ((n = 2), (o = s));
                for (a = n - 2; ; ) {
                  if (void 0 === o)
                    return (this._cachedIndex = 0), this.beforeStart_(0, e, r);
                  if (n === a) break;
                  if (((r = o), (o = i[--n - 1]) <= e)) break t;
                }
                (t = n), (n = 0);
              }
              for (; n < t; ) {
                var l = (n + t) >>> 1;
                e < i[l] ? (t = l) : (n = 1 + l);
              }
              if (((r = i[n]), void 0 === (o = i[n - 1])))
                return (this._cachedIndex = 0), this.beforeStart_(0, e, r);
              if (void 0 === r)
                return (
                  (n = i.length),
                  (this._cachedIndex = n),
                  this.afterEnd_(n - 1, o, e)
                );
            }
            (this._cachedIndex = n), this.intervalChanged_(n, o, r);
          }
          return this.interpolate_(n, o, e, r);
        },
        settings: null,
        DefaultSettings_: {},
        getSettings_: function () {
          return this.settings || this.DefaultSettings_;
        },
        copySampleValue_: function (e) {
          for (
            var t = this.resultBuffer,
              i = this.sampleValues,
              n = this.valueSize,
              r = e * n,
              o = 0;
            o !== n;
            ++o
          )
            t[o] = i[r + o];
          return t;
        },
        interpolate_: function () {
          throw new Error("call to abstract method");
        },
        intervalChanged_: function () {},
      }),
        Object.assign(Qs.prototype, {
          beforeStart_: Qs.prototype.copySampleValue_,
          afterEnd_: Qs.prototype.copySampleValue_,
        }),
        (Zs.prototype = Object.assign(Object.create(Qs.prototype), {
          constructor: Zs,
          DefaultSettings_: { endingStart: dt, endingEnd: dt },
          intervalChanged_: function (e, t, i) {
            var n = this.parameterPositions,
              r = e - 2,
              o = e + 1,
              a = n[r],
              s = n[o];
            if (void 0 === a)
              switch (this.getSettings_().endingStart) {
                case pt:
                  (r = e), (a = 2 * t - i);
                  break;
                case ft:
                  a = t + n[(r = n.length - 2)] - n[r + 1];
                  break;
                default:
                  (r = e), (a = i);
              }
            if (void 0 === s)
              switch (this.getSettings_().endingEnd) {
                case pt:
                  (o = e), (s = 2 * i - t);
                  break;
                case ft:
                  s = i + n[(o = 1)] - n[0];
                  break;
                default:
                  (o = e - 1), (s = t);
              }
            var l = 0.5 * (i - t),
              c = this.valueSize;
            (this._weightPrev = l / (t - a)),
              (this._weightNext = l / (s - i)),
              (this._offsetPrev = r * c),
              (this._offsetNext = o * c);
          },
          interpolate_: function (e, t, i, n) {
            for (
              var r = this.resultBuffer,
                o = this.sampleValues,
                a = this.valueSize,
                s = e * a,
                l = s - a,
                c = this._offsetPrev,
                h = this._offsetNext,
                u = this._weightPrev,
                e = this._weightNext,
                i = (i - t) / (n - t),
                n = i * i,
                t = n * i,
                d = -u * t + 2 * u * n - u * i,
                p = (1 + u) * t + (-1.5 - 2 * u) * n + (-0.5 + u) * i + 1,
                f = (-1 - e) * t + (1.5 + e) * n + 0.5 * i,
                m = e * t - e * n,
                g = 0;
              g !== a;
              ++g
            )
              r[g] = d * o[c + g] + p * o[l + g] + f * o[s + g] + m * o[h + g];
            return r;
          },
        })),
        (Js.prototype = Object.assign(Object.create(Qs.prototype), {
          constructor: Js,
          interpolate_: function (e, t, i, n) {
            for (
              var r = this.resultBuffer,
                o = this.sampleValues,
                a = this.valueSize,
                s = e * a,
                l = s - a,
                c = (i - t) / (n - t),
                h = 1 - c,
                u = 0;
              u !== a;
              ++u
            )
              r[u] = o[l + u] * h + o[s + u] * c;
            return r;
          },
        })),
        ($s.prototype = Object.assign(Object.create(Qs.prototype), {
          constructor: $s,
          interpolate_: function (e) {
            return this.copySampleValue_(e - 1);
          },
        })),
        (Dh = {
          TimeBufferType: Float32Array,
          ValueBufferType: Float32Array,
          DefaultInterpolation: ut,
          InterpolantFactoryMethodDiscrete: function (e) {
            return new $s(this.times, this.values, this.getValueSize(), e);
          },
          InterpolantFactoryMethodLinear: function (e) {
            return new Js(this.times, this.values, this.getValueSize(), e);
          },
          InterpolantFactoryMethodSmooth: function (e) {
            return new Zs(this.times, this.values, this.getValueSize(), e);
          },
          setInterpolation: function (e) {
            var t;
            switch (e) {
              case ht:
                t = this.InterpolantFactoryMethodDiscrete;
                break;
              case ut:
                t = this.InterpolantFactoryMethodLinear;
                break;
              case 2302:
                t = this.InterpolantFactoryMethodSmooth;
            }
            if (void 0 !== t) this.createInterpolant = t;
            else {
              var i =
                "unsupported interpolation for " +
                this.ValueTypeName +
                " keyframe track named " +
                this.name;
              if (void 0 === this.createInterpolant) {
                if (e === this.DefaultInterpolation) throw new Error(i);
                this.setInterpolation(this.DefaultInterpolation);
              }
              console.warn("THREE.KeyframeTrackPrototype:", i);
            }
          },
          getInterpolation: function () {
            switch (this.createInterpolant) {
              case this.InterpolantFactoryMethodDiscrete:
                return ht;
              case this.InterpolantFactoryMethodLinear:
                return ut;
              case this.InterpolantFactoryMethodSmooth:
                return 2302;
            }
          },
          getValueSize: function () {
            return this.values.length / this.times.length;
          },
          shift: function (e) {
            if (0 !== e)
              for (var t = this.times, i = 0, n = t.length; i !== n; ++i)
                t[i] += e;
            return this;
          },
          scale: function (e) {
            if (1 !== e)
              for (var t = this.times, i = 0, n = t.length; i !== n; ++i)
                t[i] *= e;
            return this;
          },
          trim: function (e, t) {
            for (
              var i, n = this.times, r = n.length, o = 0, a = r - 1;
              o !== r && n[o] < e;

            )
              ++o;
            for (; -1 !== a && n[a] > t; ) --a;
            return (
              ++a,
              (0 === o && a === r) ||
                (a <= o && (o = (a = Math.max(a, 1)) - 1),
                (i = this.getValueSize()),
                (this.times = Ys.arraySlice(n, o, a)),
                (this.values = Ys.arraySlice(this.values, o * i, a * i))),
              this
            );
          },
          validate: function () {
            var e = !0,
              t = this.getValueSize();
            t - Math.floor(t) != 0 &&
              (console.error(
                "THREE.KeyframeTrackPrototype: Invalid value size in track.",
                this
              ),
              (e = !1));
            var i = this.times,
              n = this.values,
              r = i.length;
            0 === r &&
              (console.error(
                "THREE.KeyframeTrackPrototype: Track is empty.",
                this
              ),
              (e = !1));
            for (var o = null, a = 0; a !== r; a++) {
              var s = i[a];
              if ("number" == typeof s && isNaN(s)) {
                console.error(
                  "THREE.KeyframeTrackPrototype: Time is not a valid number.",
                  this,
                  a,
                  s
                ),
                  (e = !1);
                break;
              }
              if (null !== o && s < o) {
                console.error(
                  "THREE.KeyframeTrackPrototype: Out of order keys.",
                  this,
                  a,
                  s,
                  o
                ),
                  (e = !1);
                break;
              }
              o = s;
            }
            if (void 0 !== n && Ys.isTypedArray(n))
              for (var a = 0, l = n.length; a !== l; ++a) {
                var c = n[a];
                if (isNaN(c)) {
                  console.error(
                    "THREE.KeyframeTrackPrototype: Value is not a valid number.",
                    this,
                    a,
                    c
                  ),
                    (e = !1);
                  break;
                }
              }
            return e;
          },
          optimize: function () {
            for (
              var e = this.times,
                t = this.values,
                i = this.getValueSize(),
                n = 2302 === this.getInterpolation(),
                r = 1,
                o = e.length - 1,
                a = 1;
              a < o;
              ++a
            ) {
              var s = !1,
                l = e[a];
              if (l !== e[a + 1] && (1 !== a || l !== l[0]))
                if (n) s = !0;
                else
                  for (
                    var c = a * i, h = c - i, u = c + i, d = 0;
                    d !== i;
                    ++d
                  ) {
                    var p = t[c + d];
                    if (p !== t[h + d] || p !== t[u + d]) {
                      s = !0;
                      break;
                    }
                  }
              if (s) {
                if (a !== r) {
                  e[r] = e[a];
                  for (var f = a * i, m = r * i, d = 0; d !== i; ++d)
                    t[m + d] = t[f + d];
                }
                ++r;
              }
            }
            if (0 < o) {
              e[r] = e[o];
              for (f = o * i, m = r * i, d = 0; d !== i; ++d)
                t[m + d] = t[f + d];
              ++r;
            }
            return (
              r !== e.length &&
                ((this.times = Ys.arraySlice(e, 0, r)),
                (this.values = Ys.arraySlice(t, 0, r * i))),
              this
            );
          },
        }),
        (el.prototype = Object.assign(Object.create(Dh), {
          constructor: el,
          ValueTypeName: "vector",
        })),
        (tl.prototype = Object.assign(Object.create(Qs.prototype), {
          constructor: tl,
          interpolate_: function (e, t, i, n) {
            for (
              var r = this.resultBuffer,
                o = this.sampleValues,
                a = this.valueSize,
                s = e * a,
                l = (i - t) / (n - t),
                c = s + a;
              s !== c;
              s += 4
            )
              Lt.slerpFlat(r, 0, o, s - a, o, s, l);
            return r;
          },
        })),
        (il.prototype = Object.assign(Object.create(Dh), {
          constructor: il,
          ValueTypeName: "quaternion",
          DefaultInterpolation: ut,
          InterpolantFactoryMethodLinear: function (e) {
            return new tl(this.times, this.values, this.getValueSize(), e);
          },
          InterpolantFactoryMethodSmooth: void 0,
        })),
        (nl.prototype = Object.assign(Object.create(Dh), {
          constructor: nl,
          ValueTypeName: "number",
        })),
        (rl.prototype = Object.assign(Object.create(Dh), {
          constructor: rl,
          ValueTypeName: "string",
          ValueBufferType: Array,
          DefaultInterpolation: ht,
          InterpolantFactoryMethodLinear: void 0,
          InterpolantFactoryMethodSmooth: void 0,
        })),
        (ol.prototype = Object.assign(Object.create(Dh), {
          constructor: ol,
          ValueTypeName: "bool",
          ValueBufferType: Array,
          DefaultInterpolation: ht,
          InterpolantFactoryMethodLinear: void 0,
          InterpolantFactoryMethodSmooth: void 0,
        })),
        (al.prototype = Object.assign(Object.create(Dh), {
          constructor: al,
          ValueTypeName: "color",
        })),
        ((sl.prototype = Dh).constructor = sl),
        Object.assign(sl, {
          parse: function (e) {
            if (void 0 === e.type)
              throw new Error("track type undefined, can not parse");
            var t,
              i,
              n = sl._getTrackTypeForValueTypeName(e.type);
            return (
              void 0 === e.times &&
                ((t = []),
                (i = []),
                Ys.flattenJSON(e.keys, t, i, "value"),
                (e.times = t),
                (e.values = i)),
              void 0 !== n.parse
                ? n.parse(e)
                : new n(e.name, e.times, e.values, e.interpolation)
            );
          },
          toJSON: function (e) {
            var t,
              i = e.constructor;
            return (
              void 0 !== i.toJSON
                ? (t = i.toJSON(e))
                : ((t = {
                    name: e.name,
                    times: Ys.convertArray(e.times, Array),
                    values: Ys.convertArray(e.values, Array),
                  }),
                  (i = e.getInterpolation()) !== e.DefaultInterpolation &&
                    (t.interpolation = i)),
              (t.type = e.ValueTypeName),
              t
            );
          },
          _getTrackTypeForValueTypeName: function (e) {
            switch (e.toLowerCase()) {
              case "scalar":
              case "double":
              case "float":
              case "number":
              case "integer":
                return nl;
              case "vector":
              case "vector2":
              case "vector3":
              case "vector4":
                return el;
              case "color":
                return al;
              case "quaternion":
                return il;
              case "bool":
              case "boolean":
                return ol;
              case "string":
                return rl;
            }
            throw new Error("Unsupported typeName: " + e);
          },
        }),
        Object.assign(ll, {
          parse: function (e) {
            for (
              var t = [],
                i = e.tracks,
                n = 1 / (e.fps || 1),
                r = 0,
                o = i.length;
              r !== o;
              ++r
            )
              t.push(sl.parse(i[r]).scale(n));
            return new ll(e.name, e.duration, t);
          },
          toJSON: function (e) {
            for (
              var t = [],
                i = e.tracks,
                e = { name: e.name, duration: e.duration, tracks: t },
                n = 0,
                r = i.length;
              n !== r;
              ++n
            )
              t.push(sl.toJSON(i[n]));
            return e;
          },
          CreateFromMorphTargetSequence: function (e, t, i, n) {
            for (var r = t.length, o = [], a = 0; a < r; a++) {
              var s = [];
              (c = []).push((a + r - 1) % r, a, (a + 1) % r), s.push(0, 1, 0);
              var l = Ys.getKeyframeOrder(c),
                c = Ys.sortedArray(c, 1, l),
                s = Ys.sortedArray(s, 1, l);
              n || 0 !== c[0] || (c.push(r), s.push(s[0])),
                o.push(
                  new nl(
                    ".morphTargetInfluences[" + t[a].name + "]",
                    c,
                    s
                  ).scale(1 / i)
                );
            }
            return new ll(e, -1, o);
          },
          findByName: function (e, t) {
            var i = e;
            Array.isArray(e) ||
              (i = (e.geometry && e.geometry.animations) || e.animations);
            for (var n = 0; n < i.length; n++) if (i[n].name === t) return i[n];
            return null;
          },
          CreateClipsFromMorphTargetSequences: function (e, t, i) {
            for (
              var n = {}, r = /^([\w-]*?)([\d]+)$/, o = 0, a = e.length;
              o < a;
              o++
            ) {
              var s = e[o],
                l = s.name.match(r);
              l &&
                1 < l.length &&
                ((l = n[(c = l[1])]) || (n[c] = l = []), l.push(s));
            }
            var c,
              h = [];
            for (c in n)
              h.push(ll.CreateFromMorphTargetSequence(c, n[c], t, i));
            return h;
          },
          parseAnimation: function (e, t) {
            if (!e)
              return (
                console.error(
                  "THREE.AnimationClip: No animation in JSONLoader data."
                ),
                null
              );
            for (
              var i = function (e, t, i, n, r) {
                  var o, a;
                  0 !== i.length &&
                    ((o = []),
                    (a = []),
                    Ys.flattenJSON(i, o, a, n),
                    0 !== o.length && r.push(new e(t, o, a)));
                },
                n = [],
                r = e.name || "default",
                o = e.length || -1,
                a = e.fps || 30,
                s = e.hierarchy || [],
                l = 0;
              l < s.length;
              l++
            ) {
              var c = s[l].keys;
              if (c && 0 !== c.length)
                if (c[0].morphTargets) {
                  for (var h, u = {}, d = 0; d < c.length; d++)
                    if (c[d].morphTargets)
                      for (var p = 0; p < c[d].morphTargets.length; p++)
                        u[c[d].morphTargets[p]] = -1;
                  for (h in u) {
                    for (
                      var f = [], m = [], p = 0;
                      p !== c[d].morphTargets.length;
                      ++p
                    ) {
                      var g = c[d];
                      f.push(g.time), m.push(g.morphTarget === h ? 1 : 0);
                    }
                    n.push(new nl(".morphTargetInfluence[" + h + "]", f, m));
                  }
                  o = u.length * (a || 1);
                } else {
                  var v = ".bones[" + t[l].name + "]";
                  i(el, v + ".position", c, "pos", n),
                    i(il, v + ".quaternion", c, "rot", n),
                    i(el, v + ".scale", c, "scl", n);
                }
            }
            return 0 === n.length ? null : new ll(r, o, n);
          },
        }),
        Object.assign(ll.prototype, {
          resetDuration: function () {
            for (var e = 0, t = 0, i = this.tracks.length; t !== i; ++t)
              var n = this.tracks[t],
                e = Math.max(e, n.times[n.times.length - 1]);
            this.duration = e;
          },
          trim: function () {
            for (var e = 0; e < this.tracks.length; e++)
              this.tracks[e].trim(0, this.duration);
            return this;
          },
          optimize: function () {
            for (var e = 0; e < this.tracks.length; e++)
              this.tracks[e].optimize();
            return this;
          },
        }),
        Object.assign(cl.prototype, {
          load: function (e, t, i, n) {
            var r = this;
            new Os(r.manager).load(
              e,
              function (e) {
                t(r.parse(JSON.parse(e)));
              },
              i,
              n
            );
          },
          setTextures: function (e) {
            this.textures = e;
          },
          parse: function (e) {
            var t = this.textures;
            function i(e) {
              return (
                void 0 === t[e] &&
                  console.warn("THREE.MaterialLoader: Undefined texture", e),
                t[e]
              );
            }
            var n,
              r = new As[e.type]();
            return (
              void 0 !== e.uuid && (r.uuid = e.uuid),
              void 0 !== e.name && (r.name = e.name),
              void 0 !== e.color && r.color.setHex(e.color),
              void 0 !== e.roughness && (r.roughness = e.roughness),
              void 0 !== e.metalness && (r.metalness = e.metalness),
              void 0 !== e.emissive && r.emissive.setHex(e.emissive),
              void 0 !== e.specular && r.specular.setHex(e.specular),
              void 0 !== e.shininess && (r.shininess = e.shininess),
              void 0 !== e.clearCoat && (r.clearCoat = e.clearCoat),
              void 0 !== e.clearCoatRoughness &&
                (r.clearCoatRoughness = e.clearCoatRoughness),
              void 0 !== e.uniforms && (r.uniforms = e.uniforms),
              void 0 !== e.vertexShader && (r.vertexShader = e.vertexShader),
              void 0 !== e.fragmentShader &&
                (r.fragmentShader = e.fragmentShader),
              void 0 !== e.vertexColors && (r.vertexColors = e.vertexColors),
              void 0 !== e.fog && (r.fog = e.fog),
              void 0 !== e.flatShading && (r.flatShading = e.flatShading),
              void 0 !== e.blending && (r.blending = e.blending),
              void 0 !== e.side && (r.side = e.side),
              void 0 !== e.opacity && (r.opacity = e.opacity),
              void 0 !== e.transparent && (r.transparent = e.transparent),
              void 0 !== e.alphaTest && (r.alphaTest = e.alphaTest),
              void 0 !== e.depthTest && (r.depthTest = e.depthTest),
              void 0 !== e.depthWrite && (r.depthWrite = e.depthWrite),
              void 0 !== e.colorWrite && (r.colorWrite = e.colorWrite),
              void 0 !== e.wireframe && (r.wireframe = e.wireframe),
              void 0 !== e.wireframeLinewidth &&
                (r.wireframeLinewidth = e.wireframeLinewidth),
              void 0 !== e.wireframeLinecap &&
                (r.wireframeLinecap = e.wireframeLinecap),
              void 0 !== e.wireframeLinejoin &&
                (r.wireframeLinejoin = e.wireframeLinejoin),
              void 0 !== e.rotation && (r.rotation = e.rotation),
              1 !== e.linewidth && (r.linewidth = e.linewidth),
              void 0 !== e.dashSize && (r.dashSize = e.dashSize),
              void 0 !== e.gapSize && (r.gapSize = e.gapSize),
              void 0 !== e.scale && (r.scale = e.scale),
              void 0 !== e.skinning && (r.skinning = e.skinning),
              void 0 !== e.morphTargets && (r.morphTargets = e.morphTargets),
              void 0 !== e.dithering && (r.dithering = e.dithering),
              void 0 !== e.visible && (r.visible = e.visible),
              void 0 !== e.userData && (r.userData = e.userData),
              void 0 !== e.shading && (r.flatShading = 1 === e.shading),
              void 0 !== e.size && (r.size = e.size),
              void 0 !== e.sizeAttenuation &&
                (r.sizeAttenuation = e.sizeAttenuation),
              void 0 !== e.map && (r.map = i(e.map)),
              void 0 !== e.alphaMap &&
                ((r.alphaMap = i(e.alphaMap)), (r.transparent = !0)),
              void 0 !== e.bumpMap && (r.bumpMap = i(e.bumpMap)),
              void 0 !== e.bumpScale && (r.bumpScale = e.bumpScale),
              void 0 !== e.normalMap && (r.normalMap = i(e.normalMap)),
              void 0 !== e.normalScale &&
                ((n = e.normalScale),
                !1 === Array.isArray(n) && (n = [n, n]),
                (r.normalScale = new Et().fromArray(n))),
              void 0 !== e.displacementMap &&
                (r.displacementMap = i(e.displacementMap)),
              void 0 !== e.displacementScale &&
                (r.displacementScale = e.displacementScale),
              void 0 !== e.displacementBias &&
                (r.displacementBias = e.displacementBias),
              void 0 !== e.roughnessMap && (r.roughnessMap = i(e.roughnessMap)),
              void 0 !== e.metalnessMap && (r.metalnessMap = i(e.metalnessMap)),
              void 0 !== e.emissiveMap && (r.emissiveMap = i(e.emissiveMap)),
              void 0 !== e.emissiveIntensity &&
                (r.emissiveIntensity = e.emissiveIntensity),
              void 0 !== e.specularMap && (r.specularMap = i(e.specularMap)),
              void 0 !== e.envMap && (r.envMap = i(e.envMap)),
              void 0 !== e.reflectivity && (r.reflectivity = e.reflectivity),
              void 0 !== e.lightMap && (r.lightMap = i(e.lightMap)),
              void 0 !== e.lightMapIntensity &&
                (r.lightMapIntensity = e.lightMapIntensity),
              void 0 !== e.aoMap && (r.aoMap = i(e.aoMap)),
              void 0 !== e.aoMapIntensity &&
                (r.aoMapIntensity = e.aoMapIntensity),
              void 0 !== e.gradientMap && (r.gradientMap = i(e.gradientMap)),
              r
            );
          },
        }),
        Object.assign(hl.prototype, {
          load: function (e, t, i, n) {
            var r = this;
            new Os(r.manager).load(
              e,
              function (e) {
                t(r.parse(JSON.parse(e)));
              },
              i,
              n
            );
          },
          parse: function (e) {
            var t = new no(),
              i = e.data.index;
            void 0 !== i &&
              ((a = new gl[i.type](i.array)), t.setIndex(new Zn(a, 1)));
            var n,
              r = e.data.attributes;
            for (n in r) {
              var o = r[n],
                a = new gl[o.type](o.array);
              t.addAttribute(n, new Zn(a, o.itemSize, o.normalized));
            }
            var s = e.data.groups || e.data.drawcalls || e.data.offsets;
            if (void 0 !== s)
              for (var l = 0, c = s.length; l !== c; ++l) {
                var h = s[l];
                t.addGroup(h.start, h.count, h.materialIndex);
              }
            i = e.data.boundingSphere;
            return (
              void 0 !== i &&
                ((e = new Ct()),
                void 0 !== i.center && e.fromArray(i.center),
                (t.boundingSphere = new un(e, i.radius))),
              t
            );
          },
        });
      var ul,
        dl,
        pl,
        fl,
        ml,
        gl = {
          Int8Array: Int8Array,
          Uint8Array: Uint8Array,
          Uint8ClampedArray:
            "undefined" != typeof Uint8ClampedArray
              ? Uint8ClampedArray
              : Uint8Array,
          Int16Array: Int16Array,
          Uint16Array: Uint16Array,
          Int32Array: Int32Array,
          Uint32Array: Uint32Array,
          Float32Array: Float32Array,
          Float64Array: Float64Array,
        };
      function vl() {
        (this.onLoadStart = function () {}),
          (this.onLoadProgress = function () {}),
          (this.onLoadComplete = function () {});
      }
      function yl(e) {
        "boolean" == typeof e &&
          (console.warn(
            "THREE.JSONLoader: showStatus parameter has been removed from constructor."
          ),
          (e = void 0)),
          (this.manager = void 0 !== e ? e : Ps),
          (this.withCredentials = !1);
      }
      function _l(e) {
        (this.manager = void 0 !== e ? e : Ps), (this.texturePath = "");
      }
      (vl.Handlers = {
        handlers: [],
        add: function (e, t) {
          this.handlers.push(e, t);
        },
        get: function (e) {
          for (var t = this.handlers, i = 0, n = t.length; i < n; i += 2) {
            var r = t[i],
              o = t[i + 1];
            if (r.test(e)) return o;
          }
          return null;
        },
      }),
        Object.assign(vl.prototype, {
          crossOrigin: void 0,
          extractUrlBase: function (e) {
            e = e.split("/");
            return 1 === e.length ? "./" : (e.pop(), e.join("/") + "/");
          },
          initMaterials: function (e, t, i) {
            for (var n = [], r = 0; r < e.length; ++r)
              n[r] = this.createMaterial(e[r], t, i);
            return n;
          },
          createMaterial:
            ((ul = {
              NoBlending: X,
              NormalBlending: q,
              AdditiveBlending: Y,
              SubtractiveBlending: Q,
              MultiplyBlending: Z,
              CustomBlending: J,
            }),
            (dl = new Mi()),
            (pl = new ks()),
            (fl = new cl()),
            function (e, a, s) {
              var l = {};
              function t(e, t, i, n, r) {
                var o = a + e,
                  e = vl.Handlers.get(o),
                  o =
                    null !== e ? e.load(o) : (pl.setCrossOrigin(s), pl.load(o));
                void 0 !== t &&
                  (o.repeat.fromArray(t),
                  1 !== t[0] && (o.wrapS = Se),
                  1 !== t[1] && (o.wrapT = Se)),
                  void 0 !== i && o.offset.fromArray(i),
                  void 0 !== n &&
                    ("repeat" === n[0] && (o.wrapS = Se),
                    "mirror" === n[0] && (o.wrapS = Ee),
                    "repeat" === n[1] && (o.wrapT = Se),
                    "mirror" === n[1] && (o.wrapT = Ee)),
                  void 0 !== r && (o.anisotropy = r);
                r = Mt.generateUUID();
                return (l[r] = o), r;
              }
              var i,
                n = { uuid: Mt.generateUUID(), type: "MeshLambertMaterial" };
              for (i in e) {
                var r = e[i];
                switch (i) {
                  case "DbgColor":
                  case "DbgIndex":
                  case "opticalDensity":
                  case "illumination":
                    break;
                  case "DbgName":
                    n.name = r;
                    break;
                  case "blending":
                    n.blending = ul[r];
                    break;
                  case "colorAmbient":
                  case "mapAmbient":
                    console.warn(
                      "THREE.Loader.createMaterial:",
                      i,
                      "is no longer supported."
                    );
                    break;
                  case "colorDiffuse":
                    n.color = dl.fromArray(r).getHex();
                    break;
                  case "colorSpecular":
                    n.specular = dl.fromArray(r).getHex();
                    break;
                  case "colorEmissive":
                    n.emissive = dl.fromArray(r).getHex();
                    break;
                  case "specularCoef":
                    n.shininess = r;
                    break;
                  case "shading":
                    "basic" === r.toLowerCase() &&
                      (n.type = "MeshBasicMaterial"),
                      "phong" === r.toLowerCase() &&
                        (n.type = "MeshPhongMaterial"),
                      "standard" === r.toLowerCase() &&
                        (n.type = "MeshStandardMaterial");
                    break;
                  case "mapDiffuse":
                    n.map = t(
                      r,
                      e.mapDiffuseRepeat,
                      e.mapDiffuseOffset,
                      e.mapDiffuseWrap,
                      e.mapDiffuseAnisotropy
                    );
                    break;
                  case "mapDiffuseRepeat":
                  case "mapDiffuseOffset":
                  case "mapDiffuseWrap":
                  case "mapDiffuseAnisotropy":
                    break;
                  case "mapEmissive":
                    n.emissiveMap = t(
                      r,
                      e.mapEmissiveRepeat,
                      e.mapEmissiveOffset,
                      e.mapEmissiveWrap,
                      e.mapEmissiveAnisotropy
                    );
                    break;
                  case "mapEmissiveRepeat":
                  case "mapEmissiveOffset":
                  case "mapEmissiveWrap":
                  case "mapEmissiveAnisotropy":
                    break;
                  case "mapLight":
                    n.lightMap = t(
                      r,
                      e.mapLightRepeat,
                      e.mapLightOffset,
                      e.mapLightWrap,
                      e.mapLightAnisotropy
                    );
                    break;
                  case "mapLightRepeat":
                  case "mapLightOffset":
                  case "mapLightWrap":
                  case "mapLightAnisotropy":
                    break;
                  case "mapAO":
                    n.aoMap = t(
                      r,
                      e.mapAORepeat,
                      e.mapAOOffset,
                      e.mapAOWrap,
                      e.mapAOAnisotropy
                    );
                    break;
                  case "mapAORepeat":
                  case "mapAOOffset":
                  case "mapAOWrap":
                  case "mapAOAnisotropy":
                    break;
                  case "mapBump":
                    n.bumpMap = t(
                      r,
                      e.mapBumpRepeat,
                      e.mapBumpOffset,
                      e.mapBumpWrap,
                      e.mapBumpAnisotropy
                    );
                    break;
                  case "mapBumpScale":
                    n.bumpScale = r;
                    break;
                  case "mapBumpRepeat":
                  case "mapBumpOffset":
                  case "mapBumpWrap":
                  case "mapBumpAnisotropy":
                    break;
                  case "mapNormal":
                    n.normalMap = t(
                      r,
                      e.mapNormalRepeat,
                      e.mapNormalOffset,
                      e.mapNormalWrap,
                      e.mapNormalAnisotropy
                    );
                    break;
                  case "mapNormalFactor":
                    n.normalScale = [r, r];
                    break;
                  case "mapNormalRepeat":
                  case "mapNormalOffset":
                  case "mapNormalWrap":
                  case "mapNormalAnisotropy":
                    break;
                  case "mapSpecular":
                    n.specularMap = t(
                      r,
                      e.mapSpecularRepeat,
                      e.mapSpecularOffset,
                      e.mapSpecularWrap,
                      e.mapSpecularAnisotropy
                    );
                    break;
                  case "mapSpecularRepeat":
                  case "mapSpecularOffset":
                  case "mapSpecularWrap":
                  case "mapSpecularAnisotropy":
                    break;
                  case "mapMetalness":
                    n.metalnessMap = t(
                      r,
                      e.mapMetalnessRepeat,
                      e.mapMetalnessOffset,
                      e.mapMetalnessWrap,
                      e.mapMetalnessAnisotropy
                    );
                    break;
                  case "mapMetalnessRepeat":
                  case "mapMetalnessOffset":
                  case "mapMetalnessWrap":
                  case "mapMetalnessAnisotropy":
                    break;
                  case "mapRoughness":
                    n.roughnessMap = t(
                      r,
                      e.mapRoughnessRepeat,
                      e.mapRoughnessOffset,
                      e.mapRoughnessWrap,
                      e.mapRoughnessAnisotropy
                    );
                    break;
                  case "mapRoughnessRepeat":
                  case "mapRoughnessOffset":
                  case "mapRoughnessWrap":
                  case "mapRoughnessAnisotropy":
                    break;
                  case "mapAlpha":
                    n.alphaMap = t(
                      r,
                      e.mapAlphaRepeat,
                      e.mapAlphaOffset,
                      e.mapAlphaWrap,
                      e.mapAlphaAnisotropy
                    );
                    break;
                  case "mapAlphaRepeat":
                  case "mapAlphaOffset":
                  case "mapAlphaWrap":
                  case "mapAlphaAnisotropy":
                    break;
                  case "flipSided":
                    n.side = V;
                    break;
                  case "doubleSided":
                    n.side = W;
                    break;
                  case "transparency":
                    console.warn(
                      "THREE.Loader.createMaterial: transparency has been renamed to opacity"
                    ),
                      (n.opacity = r);
                    break;
                  case "depthTest":
                  case "depthWrite":
                  case "colorWrite":
                  case "opacity":
                  case "reflectivity":
                  case "transparent":
                  case "visible":
                  case "wireframe":
                    n[i] = r;
                    break;
                  case "vertexColors":
                    !0 === r && (n.vertexColors = E),
                      "face" === r && (n.vertexColors = 1);
                    break;
                  default:
                    console.error(
                      "THREE.Loader.createMaterial: Unsupported",
                      i,
                      r
                    );
                }
              }
              return (
                "MeshBasicMaterial" === n.type && delete n.emissive,
                "MeshPhongMaterial" !== n.type && delete n.specular,
                n.opacity < 1 && (n.transparent = !0),
                fl.setTextures(l),
                fl.parse(n)
              );
            }),
        }),
        Object.assign(yl.prototype, {
          load: function (i, n, e, t) {
            var r = this,
              o =
                this.texturePath && "string" == typeof this.texturePath
                  ? this.texturePath
                  : vl.prototype.extractUrlBase(i),
              a = new Os(this.manager);
            a.setWithCredentials(this.withCredentials),
              a.load(
                i,
                function (e) {
                  var t = JSON.parse(e),
                    e = t.metadata;
                  if (void 0 !== e) {
                    e = e.type;
                    if (void 0 !== e) {
                      if ("object" === e.toLowerCase())
                        return void console.error(
                          "THREE.JSONLoader: " +
                            i +
                            " should be loaded with THREE.ObjectLoader instead."
                        );
                      if ("scene" === e.toLowerCase())
                        return void console.error(
                          "THREE.JSONLoader: " +
                            i +
                            " should be loaded with THREE.SceneLoader instead."
                        );
                    }
                  }
                  t = r.parse(t, o);
                  n(t.geometry, t.materials);
                },
                e,
                t
              );
          },
          setTexturePath: function (e) {
            this.texturePath = e;
          },
          parse: function (e, t) {
            void 0 !== e.data && (e = e.data),
              void 0 !== e.scale ? (e.scale = 1 / e.scale) : (e.scale = 1);
            var i = new Qn();
            return (
              (function (e, t) {
                var i,
                  n,
                  r,
                  o,
                  a,
                  s,
                  l,
                  c,
                  h,
                  u,
                  d,
                  p,
                  f,
                  m,
                  g,
                  v,
                  y,
                  _,
                  x,
                  b,
                  w,
                  T,
                  S,
                  M,
                  E = e.faces,
                  A = e.vertices,
                  L = e.normals,
                  C = e.colors,
                  P = e.scale,
                  R = 0;
                if (void 0 !== e.uvs) {
                  for (i = 0; i < e.uvs.length; i++) e.uvs[i].length && R++;
                  for (i = 0; i < R; i++) t.faceVertexUvs[i] = [];
                }
                for (o = 0, a = A.length; o < a; )
                  ((y = new Ct()).x = A[o++] * P),
                    (y.y = A[o++] * P),
                    (y.z = A[o++] * P),
                    t.vertices.push(y);
                for (o = 0, a = E.length; o < a; )
                  if (
                    ((d = (u = E[o++]) & 2),
                    (p = u & 8),
                    (f = u & 16),
                    (m = u & 32),
                    (g = u & 64),
                    (v = u & 128),
                    u & 1)
                  ) {
                    if (
                      (((x = new jn()).a = E[o]),
                      (x.b = E[o + 1]),
                      (x.c = E[o + 3]),
                      ((b = new jn()).a = E[o + 1]),
                      (b.b = E[o + 2]),
                      (b.c = E[o + 3]),
                      (o += 4),
                      d &&
                        ((h = E[o++]),
                        (x.materialIndex = h),
                        (b.materialIndex = h)),
                      (r = t.faces.length),
                      p)
                    )
                      for (i = 0; i < R; i++)
                        for (
                          S = e.uvs[i],
                            t.faceVertexUvs[i][r] = [],
                            t.faceVertexUvs[i][r + 1] = [],
                            n = 0;
                          n < 4;
                          n++
                        )
                          (M = new Et(S[2 * (c = E[o++])], S[2 * c + 1])),
                            2 !== n && t.faceVertexUvs[i][r].push(M),
                            0 !== n && t.faceVertexUvs[i][r + 1].push(M);
                    if (
                      (f &&
                        ((l = 3 * E[o++]),
                        x.normal.set(L[l++], L[l++], L[l]),
                        b.normal.copy(x.normal)),
                      m)
                    )
                      for (i = 0; i < 4; i++)
                        (l = 3 * E[o++]),
                          (T = new Ct(L[l++], L[l++], L[l])),
                          2 !== i && x.vertexNormals.push(T),
                          0 !== i && b.vertexNormals.push(T);
                    if (
                      (g &&
                        ((w = C[(s = E[o++])]),
                        x.color.setHex(w),
                        b.color.setHex(w)),
                      v)
                    )
                      for (i = 0; i < 4; i++)
                        (w = C[(s = E[o++])]),
                          2 !== i && x.vertexColors.push(new Mi(w)),
                          0 !== i && b.vertexColors.push(new Mi(w));
                    t.faces.push(x), t.faces.push(b);
                  } else {
                    if (
                      (((_ = new jn()).a = E[o++]),
                      (_.b = E[o++]),
                      (_.c = E[o++]),
                      d && ((h = E[o++]), (_.materialIndex = h)),
                      (r = t.faces.length),
                      p)
                    )
                      for (i = 0; i < R; i++)
                        for (
                          S = e.uvs[i], t.faceVertexUvs[i][r] = [], n = 0;
                          n < 3;
                          n++
                        )
                          (M = new Et(S[2 * (c = E[o++])], S[2 * c + 1])),
                            t.faceVertexUvs[i][r].push(M);
                    if (
                      (f &&
                        ((l = 3 * E[o++]), _.normal.set(L[l++], L[l++], L[l])),
                      m)
                    )
                      for (i = 0; i < 3; i++)
                        (l = 3 * E[o++]),
                          (T = new Ct(L[l++], L[l++], L[l])),
                          _.vertexNormals.push(T);
                    if ((g && ((s = E[o++]), _.color.setHex(C[s])), v))
                      for (i = 0; i < 3; i++)
                        (s = E[o++]), _.vertexColors.push(new Mi(C[s]));
                    t.faces.push(_);
                  }
              })(e, i),
              (function (e, t) {
                var i =
                  void 0 !== e.influencesPerVertex ? e.influencesPerVertex : 2;
                if (e.skinWeights)
                  for (var n = 0, r = e.skinWeights.length; n < r; n += i) {
                    var o = e.skinWeights[n],
                      a = 1 < i ? e.skinWeights[n + 1] : 0,
                      s = 2 < i ? e.skinWeights[n + 2] : 0,
                      l = 3 < i ? e.skinWeights[n + 3] : 0;
                    t.skinWeights.push(new Nt(o, a, s, l));
                  }
                if (e.skinIndices)
                  for (n = 0, r = e.skinIndices.length; n < r; n += i) {
                    var c = e.skinIndices[n],
                      h = 1 < i ? e.skinIndices[n + 1] : 0,
                      u = 2 < i ? e.skinIndices[n + 2] : 0,
                      d = 3 < i ? e.skinIndices[n + 3] : 0;
                    t.skinIndices.push(new Nt(c, h, u, d));
                  }
                (t.bones = e.bones),
                  t.bones &&
                    0 < t.bones.length &&
                    (t.skinWeights.length !== t.skinIndices.length ||
                      t.skinIndices.length !== t.vertices.length) &&
                    console.warn(
                      "When skinning, number of vertices (" +
                        t.vertices.length +
                        "), skinIndices (" +
                        t.skinIndices.length +
                        "), and skinWeights (" +
                        t.skinWeights.length +
                        ") should match."
                    );
              })(e, i),
              (function (e, t) {
                var i = e.scale;
                if (void 0 !== e.morphTargets)
                  for (var n = 0, r = e.morphTargets.length; n < r; n++) {
                    (t.morphTargets[n] = {}),
                      (t.morphTargets[n].name = e.morphTargets[n].name),
                      (t.morphTargets[n].vertices = []);
                    for (
                      var o = t.morphTargets[n].vertices,
                        a = e.morphTargets[n].vertices,
                        s = 0,
                        l = a.length;
                      s < l;
                      s += 3
                    ) {
                      var c = new Ct();
                      (c.x = a[s] * i),
                        (c.y = a[s + 1] * i),
                        (c.z = a[s + 2] * i),
                        o.push(c);
                    }
                  }
                if (void 0 !== e.morphColors && 0 < e.morphColors.length) {
                  console.warn(
                    'THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.'
                  );
                  for (
                    var h = t.faces,
                      u = e.morphColors[0].colors,
                      n = 0,
                      r = h.length;
                    n < r;
                    n++
                  )
                    h[n].color.fromArray(u, 3 * n);
                }
              })(e, i),
              (function (e, t) {
                var i = [],
                  n = [];
                void 0 !== e.animation && n.push(e.animation),
                  void 0 !== e.animations &&
                    (e.animations.length
                      ? (n = n.concat(e.animations))
                      : n.push(e.animations));
                for (var r = 0; r < n.length; r++) {
                  var o = ll.parseAnimation(n[r], t.bones);
                  o && i.push(o);
                }
                t.morphTargets &&
                  ((e = ll.CreateClipsFromMorphTargetSequences(
                    t.morphTargets,
                    10
                  )),
                  (i = i.concat(e))),
                  0 < i.length && (t.animations = i);
              })(e, i),
              i.computeFaceNormals(),
              i.computeBoundingSphere(),
              void 0 === e.materials || 0 === e.materials.length
                ? { geometry: i }
                : {
                    geometry: i,
                    materials: vl.prototype.initMaterials(
                      e.materials,
                      t,
                      this.crossOrigin
                    ),
                  }
            );
          },
        }),
        Object.assign(_l.prototype, {
          load: function (n, r, e, o) {
            "" === this.texturePath &&
              (this.texturePath = n.substring(0, n.lastIndexOf("/") + 1));
            var a = this;
            new Os(a.manager).load(
              n,
              function (e) {
                var t = null;
                try {
                  t = JSON.parse(e);
                } catch (e) {
                  return (
                    void 0 !== o && o(e),
                    void console.error(
                      "THREE:ObjectLoader: Can't parse " + n + ".",
                      e.message
                    )
                  );
                }
                var i = t.metadata;
                void 0 !== i &&
                void 0 !== i.type &&
                "geometry" !== i.type.toLowerCase()
                  ? a.parse(t, r)
                  : console.error(
                      "THREE.ObjectLoader: Can't load " +
                        n +
                        ". Use THREE.JSONLoader instead."
                    );
              },
              e,
              o
            );
          },
          setTexturePath: function (e) {
            this.texturePath = e;
          },
          setCrossOrigin: function (e) {
            this.crossOrigin = e;
          },
          parse: function (e, t) {
            var i = this.parseGeometries(e.geometries),
              n = this.parseImages(e.images, function () {
                void 0 !== t && t(r);
              }),
              n = this.parseTextures(e.textures, n),
              n = this.parseMaterials(e.materials, n),
              r = this.parseObject(e.object, i, n);
            return (
              e.animations &&
                (r.animations = this.parseAnimations(e.animations)),
              (void 0 !== e.images && 0 !== e.images.length) ||
                (void 0 !== t && t(r)),
              r
            );
          },
          parseGeometries: function (e) {
            var t = {};
            if (void 0 !== e)
              for (
                var i = new yl(), n = new hl(), r = 0, o = e.length;
                r < o;
                r++
              ) {
                var a,
                  s = e[r];
                switch (s.type) {
                  case "PlaneGeometry":
                  case "PlaneBufferGeometry":
                    a = new vs[s.type](
                      s.width,
                      s.height,
                      s.widthSegments,
                      s.heightSegments
                    );
                    break;
                  case "BoxGeometry":
                  case "BoxBufferGeometry":
                  case "CubeGeometry":
                    a = new vs[s.type](
                      s.width,
                      s.height,
                      s.depth,
                      s.widthSegments,
                      s.heightSegments,
                      s.depthSegments
                    );
                    break;
                  case "CircleGeometry":
                  case "CircleBufferGeometry":
                    a = new vs[s.type](
                      s.radius,
                      s.segments,
                      s.thetaStart,
                      s.thetaLength
                    );
                    break;
                  case "CylinderGeometry":
                  case "CylinderBufferGeometry":
                    a = new vs[s.type](
                      s.radiusTop,
                      s.radiusBottom,
                      s.height,
                      s.radialSegments,
                      s.heightSegments,
                      s.openEnded,
                      s.thetaStart,
                      s.thetaLength
                    );
                    break;
                  case "ConeGeometry":
                  case "ConeBufferGeometry":
                    a = new vs[s.type](
                      s.radius,
                      s.height,
                      s.radialSegments,
                      s.heightSegments,
                      s.openEnded,
                      s.thetaStart,
                      s.thetaLength
                    );
                    break;
                  case "SphereGeometry":
                  case "SphereBufferGeometry":
                    a = new vs[s.type](
                      s.radius,
                      s.widthSegments,
                      s.heightSegments,
                      s.phiStart,
                      s.phiLength,
                      s.thetaStart,
                      s.thetaLength
                    );
                    break;
                  case "DodecahedronGeometry":
                  case "DodecahedronBufferGeometry":
                  case "IcosahedronGeometry":
                  case "IcosahedronBufferGeometry":
                  case "OctahedronGeometry":
                  case "OctahedronBufferGeometry":
                  case "TetrahedronGeometry":
                  case "TetrahedronBufferGeometry":
                    a = new vs[s.type](s.radius, s.detail);
                    break;
                  case "RingGeometry":
                  case "RingBufferGeometry":
                    a = new vs[s.type](
                      s.innerRadius,
                      s.outerRadius,
                      s.thetaSegments,
                      s.phiSegments,
                      s.thetaStart,
                      s.thetaLength
                    );
                    break;
                  case "TorusGeometry":
                  case "TorusBufferGeometry":
                    a = new vs[s.type](
                      s.radius,
                      s.tube,
                      s.radialSegments,
                      s.tubularSegments,
                      s.arc
                    );
                    break;
                  case "TorusKnotGeometry":
                  case "TorusKnotBufferGeometry":
                    a = new vs[s.type](
                      s.radius,
                      s.tube,
                      s.tubularSegments,
                      s.radialSegments,
                      s.p,
                      s.q
                    );
                    break;
                  case "LatheGeometry":
                  case "LatheBufferGeometry":
                    a = new vs[s.type](
                      s.points,
                      s.segments,
                      s.phiStart,
                      s.phiLength
                    );
                    break;
                  case "PolyhedronGeometry":
                  case "PolyhedronBufferGeometry":
                    a = new vs[s.type](
                      s.vertices,
                      s.indices,
                      s.radius,
                      s.details
                    );
                    break;
                  case "BufferGeometry":
                    a = n.parse(s);
                    break;
                  case "Geometry":
                    a = i.parse(s, this.texturePath).geometry;
                    break;
                  default:
                    console.warn(
                      'THREE.ObjectLoader: Unsupported geometry type "' +
                        s.type +
                        '"'
                    );
                    continue;
                }
                (a.uuid = s.uuid),
                  void 0 !== s.name && (a.name = s.name),
                  (t[s.uuid] = a);
              }
            return t;
          },
          parseMaterials: function (e, t) {
            var i = {};
            if (void 0 !== e) {
              var n = new cl();
              n.setTextures(t);
              for (var r = 0, o = e.length; r < o; r++) {
                var a = e[r];
                if ("MultiMaterial" === a.type) {
                  for (var s = [], l = 0; l < a.materials.length; l++)
                    s.push(n.parse(a.materials[l]));
                  i[a.uuid] = s;
                } else i[a.uuid] = n.parse(a);
              }
            }
            return i;
          },
          parseAnimations: function (e) {
            for (var t = [], i = 0; i < e.length; i++) {
              var n = ll.parse(e[i]);
              t.push(n);
            }
            return t;
          },
          parseImages: function (e, t) {
            var i = this,
              n = {};
            if (void 0 !== e && 0 < e.length) {
              var r = new Ns(new Cs(t));
              r.setCrossOrigin(this.crossOrigin);
              for (var o = 0, a = e.length; o < a; o++) {
                var s = e[o],
                  l = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(s.url)
                    ? s.url
                    : i.texturePath + s.url;
                n[s.uuid] = (function (e) {
                  return (
                    i.manager.itemStart(e),
                    r.load(
                      e,
                      function () {
                        i.manager.itemEnd(e);
                      },
                      void 0,
                      function () {
                        i.manager.itemEnd(e), i.manager.itemError(e);
                      }
                    )
                  );
                })(l);
              }
            }
            return n;
          },
          parseTextures: function (e, t) {
            function i(e, t) {
              return "number" == typeof e
                ? e
                : (console.warn(
                    "THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",
                    e
                  ),
                  t[e]);
            }
            var n = {};
            if (void 0 !== e)
              for (var r = 0, o = e.length; r < o; r++) {
                var a = e[r];
                void 0 === a.image &&
                  console.warn(
                    'THREE.ObjectLoader: No "image" specified for',
                    a.uuid
                  ),
                  void 0 === t[a.image] &&
                    console.warn(
                      "THREE.ObjectLoader: Undefined image",
                      a.image
                    );
                var s = new Dt(t[a.image]);
                (s.needsUpdate = !0),
                  (s.uuid = a.uuid),
                  void 0 !== a.name && (s.name = a.name),
                  void 0 !== a.mapping && (s.mapping = i(a.mapping, xl)),
                  void 0 !== a.offset && s.offset.fromArray(a.offset),
                  void 0 !== a.repeat && s.repeat.fromArray(a.repeat),
                  void 0 !== a.center && s.center.fromArray(a.center),
                  void 0 !== a.rotation && (s.rotation = a.rotation),
                  void 0 !== a.wrap &&
                    ((s.wrapS = i(a.wrap[0], bl)),
                    (s.wrapT = i(a.wrap[1], bl))),
                  void 0 !== a.minFilter && (s.minFilter = i(a.minFilter, wl)),
                  void 0 !== a.magFilter && (s.magFilter = i(a.magFilter, wl)),
                  void 0 !== a.anisotropy && (s.anisotropy = a.anisotropy),
                  void 0 !== a.flipY && (s.flipY = a.flipY),
                  (n[a.uuid] = s);
              }
            return n;
          },
          parseObject:
            ((ml = new At()),
            function (e, t, o) {
              function i(e) {
                return (
                  void 0 === t[e] &&
                    console.warn("THREE.ObjectLoader: Undefined geometry", e),
                  t[e]
                );
              }
              function n(e) {
                if (void 0 !== e) {
                  if (Array.isArray(e)) {
                    for (var t = [], i = 0, n = e.length; i < n; i++) {
                      var r = e[i];
                      void 0 === o[r] &&
                        console.warn(
                          "THREE.ObjectLoader: Undefined material",
                          r
                        ),
                        t.push(o[r]);
                    }
                    return t;
                  }
                  return (
                    void 0 === o[e] &&
                      console.warn("THREE.ObjectLoader: Undefined material", e),
                    o[e]
                  );
                }
              }
              switch (e.type) {
                case "Scene":
                  (s = new fa()),
                    void 0 !== e.background &&
                      Number.isInteger(e.background) &&
                      (s.background = new Mi(e.background)),
                    void 0 !== e.fog &&
                      ("Fog" === e.fog.type
                        ? (s.fog = new pa(e.fog.color, e.fog.near, e.fog.far))
                        : "FogExp2" === e.fog.type &&
                          (s.fog = new da(e.fog.color, e.fog.density)));
                  break;
                case "PerspectiveCamera":
                  (s = new oa(e.fov, e.aspect, e.near, e.far)),
                    void 0 !== e.focus && (s.focus = e.focus),
                    void 0 !== e.zoom && (s.zoom = e.zoom),
                    void 0 !== e.filmGauge && (s.filmGauge = e.filmGauge),
                    void 0 !== e.filmOffset && (s.filmOffset = e.filmOffset),
                    void 0 !== e.view && (s.view = Object.assign({}, e.view));
                  break;
                case "OrthographicCamera":
                  s = new zn(e.left, e.right, e.top, e.bottom, e.near, e.far);
                  break;
                case "AmbientLight":
                  s = new Xs(e.color, e.intensity);
                  break;
                case "DirectionalLight":
                  s = new Ws(e.color, e.intensity);
                  break;
                case "PointLight":
                  s = new Gs(e.color, e.intensity, e.distance, e.decay);
                  break;
                case "RectAreaLight":
                  s = new qs(e.color, e.intensity, e.width, e.height);
                  break;
                case "SpotLight":
                  s = new Hs(
                    e.color,
                    e.intensity,
                    e.distance,
                    e.angle,
                    e.penumbra,
                    e.decay
                  );
                  break;
                case "HemisphereLight":
                  s = new Bs(e.color, e.groundColor, e.intensity);
                  break;
                case "SkinnedMesh":
                  console.warn(
                    "THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet."
                  );
                case "Mesh":
                  var r = i(e.geometry),
                    a = n(e.material),
                    s = new (r.bones && 0 < r.bones.length ? ba : fo)(r, a);
                  break;
                case "LOD":
                  s = new ya();
                  break;
                case "Line":
                  s = new Ta(i(e.geometry), n(e.material), e.mode);
                  break;
                case "LineLoop":
                  s = new Ma(i(e.geometry), n(e.material));
                  break;
                case "LineSegments":
                  s = new Sa(i(e.geometry), n(e.material));
                  break;
                case "PointCloud":
                case "Points":
                  s = new Aa(i(e.geometry), n(e.material));
                  break;
                case "Sprite":
                  s = new va(n(e.material));
                  break;
                case "Group":
                  s = new La();
                  break;
                default:
                  s = new Un();
              }
              if (
                ((s.uuid = e.uuid),
                void 0 !== e.name && (s.name = e.name),
                void 0 !== e.matrix
                  ? (ml.fromArray(e.matrix),
                    ml.decompose(s.position, s.quaternion, s.scale))
                  : (void 0 !== e.position && s.position.fromArray(e.position),
                    void 0 !== e.rotation && s.rotation.fromArray(e.rotation),
                    void 0 !== e.quaternion &&
                      s.quaternion.fromArray(e.quaternion),
                    void 0 !== e.scale && s.scale.fromArray(e.scale)),
                void 0 !== e.castShadow && (s.castShadow = e.castShadow),
                void 0 !== e.receiveShadow &&
                  (s.receiveShadow = e.receiveShadow),
                e.shadow &&
                  (void 0 !== e.shadow.bias && (s.shadow.bias = e.shadow.bias),
                  void 0 !== e.shadow.radius &&
                    (s.shadow.radius = e.shadow.radius),
                  void 0 !== e.shadow.mapSize &&
                    s.shadow.mapSize.fromArray(e.shadow.mapSize),
                  void 0 !== e.shadow.camera &&
                    (s.shadow.camera = this.parseObject(e.shadow.camera))),
                void 0 !== e.visible && (s.visible = e.visible),
                void 0 !== e.userData && (s.userData = e.userData),
                void 0 !== e.children)
              )
                for (var l = e.children, c = 0; c < l.length; c++)
                  s.add(this.parseObject(l[c], t, o));
              if ("LOD" === e.type)
                for (var h = e.levels, u = 0; u < h.length; u++) {
                  var d = h[u],
                    p = s.getObjectByProperty("uuid", d.object);
                  void 0 !== p && s.addLevel(p, d.distance);
                }
              return s;
            }),
        });
      var xl = {
          UVMapping: 300,
          CubeReflectionMapping: ve,
          CubeRefractionMapping: ye,
          EquirectangularReflectionMapping: _e,
          EquirectangularRefractionMapping: xe,
          SphericalReflectionMapping: be,
          CubeUVReflectionMapping: we,
          CubeUVRefractionMapping: Te,
        },
        bl = {
          RepeatWrapping: Se,
          ClampToEdgeWrapping: Me,
          MirroredRepeatWrapping: Ee,
        },
        wl = {
          NearestFilter: Ce,
          NearestMipMapNearestFilter: Pe,
          NearestMipMapLinearFilter: Re,
          LinearFilter: Oe,
          LinearMipMapNearestFilter: Ie,
          LinearMipMapLinearFilter: De,
        };
      function Tl(e, t, i, n, r) {
        var o = 0.5 * (n - t),
          t = 0.5 * (r - i),
          r = e * e;
        return (
          (2 * i - 2 * n + o + t) * (e * r) +
          (-3 * i + 3 * n - 2 * o - t) * r +
          o * e +
          i
        );
      }
      function Sl(e, t, i, n) {
        return (
          (r = 1 - (r = e)) * r * t +
          2 * (1 - (t = e)) * t * i +
          (e = e) * e * n
        );
        var r;
      }
      function Ml(e, t, i, n, r) {
        return (
          (o = 1 - (o = e)) * o * o * t +
          3 * (t = 1 - (o = e)) * t * o * i +
          3 * (1 - (i = e)) * i * i * n +
          (e = e) * e * e * r
        );
        var o;
      }
      function El() {
        (this.type = "Curve"), (this.arcLengthDivisions = 200);
      }
      function Al(e, t) {
        El.call(this),
          (this.type = "LineCurve"),
          (this.v1 = e || new Et()),
          (this.v2 = t || new Et());
      }
      function Ll() {
        El.call(this),
          (this.type = "CurvePath"),
          (this.curves = []),
          (this.autoClose = !1);
      }
      function Cl(e, t, i, n, r, o, a, s) {
        El.call(this),
          (this.type = "EllipseCurve"),
          (this.aX = e || 0),
          (this.aY = t || 0),
          (this.xRadius = i || 1),
          (this.yRadius = n || 1),
          (this.aStartAngle = r || 0),
          (this.aEndAngle = o || 2 * Math.PI),
          (this.aClockwise = a || !1),
          (this.aRotation = s || 0);
      }
      function Pl(e) {
        El.call(this), (this.type = "SplineCurve"), (this.points = e || []);
      }
      function Rl(e, t, i, n) {
        El.call(this),
          (this.type = "CubicBezierCurve"),
          (this.v0 = e || new Et()),
          (this.v1 = t || new Et()),
          (this.v2 = i || new Et()),
          (this.v3 = n || new Et());
      }
      function Ol(e, t, i) {
        El.call(this),
          (this.type = "QuadraticBezierCurve"),
          (this.v0 = e || new Et()),
          (this.v1 = t || new Et()),
          (this.v2 = i || new Et());
      }
      Object.assign(El.prototype, {
        getPoint: function () {
          return (
            console.warn("THREE.Curve: .getPoint() not implemented."), null
          );
        },
        getPointAt: function (e, t) {
          e = this.getUtoTmapping(e);
          return this.getPoint(e, t);
        },
        getPoints: function (e) {
          void 0 === e && (e = 5);
          for (var t = [], i = 0; i <= e; i++) t.push(this.getPoint(i / e));
          return t;
        },
        getSpacedPoints: function (e) {
          void 0 === e && (e = 5);
          for (var t = [], i = 0; i <= e; i++) t.push(this.getPointAt(i / e));
          return t;
        },
        getLength: function () {
          var e = this.getLengths();
          return e[e.length - 1];
        },
        getLengths: function (e) {
          if (
            (void 0 === e && (e = this.arcLengthDivisions),
            this.cacheArcLengths &&
              this.cacheArcLengths.length === e + 1 &&
              !this.needsUpdate)
          )
            return this.cacheArcLengths;
          this.needsUpdate = !1;
          var t,
            i,
            n = [],
            r = this.getPoint(0),
            o = 0;
          for (n.push(0), i = 1; i <= e; i++)
            (o += (t = this.getPoint(i / e)).distanceTo(r)), n.push(o), (r = t);
          return (this.cacheArcLengths = n);
        },
        updateArcLengths: function () {
          (this.needsUpdate = !0), this.getLengths();
        },
        getUtoTmapping: function (e, t) {
          for (
            var i,
              n = this.getLengths(),
              r = 0,
              o = n.length,
              a = t || e * n[o - 1],
              s = 0,
              l = o - 1;
            s <= l;

          )
            if ((i = n[(r = Math.floor(s + (l - s) / 2))] - a) < 0) s = r + 1;
            else {
              if (!(0 < i)) {
                l = r;
                break;
              }
              l = r - 1;
            }
          if (n[(r = l)] === a) return r / (o - 1);
          e = n[r];
          return (r + (a - e) / (n[r + 1] - e)) / (o - 1);
        },
        getTangent: function (e) {
          var t = e - 1e-4,
            e = e + 1e-4;
          t < 0 && (t = 0), 1 < e && (e = 1);
          t = this.getPoint(t);
          return this.getPoint(e).clone().sub(t).normalize();
        },
        getTangentAt: function (e) {
          e = this.getUtoTmapping(e);
          return this.getTangent(e);
        },
        computeFrenetFrames: function (e, t) {
          for (
            var i,
              n,
              r = new Ct(),
              o = [],
              a = [],
              s = [],
              l = new Ct(),
              c = new At(),
              h = 0;
            h <= e;
            h++
          )
            (i = h / e), (o[h] = this.getTangentAt(i)), o[h].normalize();
          (a[0] = new Ct()), (s[0] = new Ct());
          var u = Number.MAX_VALUE,
            d = Math.abs(o[0].x),
            p = Math.abs(o[0].y),
            f = Math.abs(o[0].z);
          for (
            d <= u && ((u = d), r.set(1, 0, 0)),
              p <= u && ((u = p), r.set(0, 1, 0)),
              f <= u && r.set(0, 0, 1),
              l.crossVectors(o[0], r).normalize(),
              a[0].crossVectors(o[0], l),
              s[0].crossVectors(o[0], a[0]),
              h = 1;
            h <= e;
            h++
          )
            (a[h] = a[h - 1].clone()),
              (s[h] = s[h - 1].clone()),
              l.crossVectors(o[h - 1], o[h]),
              l.length() > Number.EPSILON &&
                (l.normalize(),
                (n = Math.acos(Mt.clamp(o[h - 1].dot(o[h]), -1, 1))),
                a[h].applyMatrix4(c.makeRotationAxis(l, n))),
              s[h].crossVectors(o[h], a[h]);
          if (!0 === t)
            for (
              n = Math.acos(Mt.clamp(a[0].dot(a[e]), -1, 1)),
                n /= e,
                0 < o[0].dot(l.crossVectors(a[0], a[e])) && (n = -n),
                h = 1;
              h <= e;
              h++
            )
              a[h].applyMatrix4(c.makeRotationAxis(o[h], n * h)),
                s[h].crossVectors(o[h], a[h]);
          return { tangents: o, normals: a, binormals: s };
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return (this.arcLengthDivisions = e.arcLengthDivisions), this;
        },
      }),
        (((Al.prototype = Object.create(El.prototype)).constructor =
          Al).prototype.isLineCurve = !0),
        (Al.prototype.getPoint = function (e, t) {
          t = t || new Et();
          return (
            1 === e
              ? t.copy(this.v2)
              : (t.copy(this.v2).sub(this.v1),
                t.multiplyScalar(e).add(this.v1)),
            t
          );
        }),
        (Al.prototype.getPointAt = function (e, t) {
          return this.getPoint(e, t);
        }),
        (Al.prototype.getTangent = function () {
          return this.v2.clone().sub(this.v1).normalize();
        }),
        (Al.prototype.copy = function (e) {
          return (
            El.prototype.copy.call(this, e),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this
          );
        }),
        (Ll.prototype = Object.assign(Object.create(El.prototype), {
          constructor: Ll,
          add: function (e) {
            this.curves.push(e);
          },
          closePath: function () {
            var e = this.curves[0].getPoint(0),
              t = this.curves[this.curves.length - 1].getPoint(1);
            e.equals(t) || this.curves.push(new Al(t, e));
          },
          getPoint: function (e) {
            for (
              var t = e * this.getLength(), i = this.getCurveLengths(), n = 0;
              n < i.length;

            ) {
              if (i[n] >= t) {
                var r = i[n] - t,
                  o = this.curves[n],
                  a = o.getLength(),
                  a = 0 === a ? 0 : 1 - r / a;
                return o.getPointAt(a);
              }
              n++;
            }
            return null;
          },
          getLength: function () {
            var e = this.getCurveLengths();
            return e[e.length - 1];
          },
          updateArcLengths: function () {
            (this.needsUpdate = !0),
              (this.cacheLengths = null),
              this.getCurveLengths();
          },
          getCurveLengths: function () {
            if (
              this.cacheLengths &&
              this.cacheLengths.length === this.curves.length
            )
              return this.cacheLengths;
            for (var e = [], t = 0, i = 0, n = this.curves.length; i < n; i++)
              (t += this.curves[i].getLength()), e.push(t);
            return (this.cacheLengths = e);
          },
          getSpacedPoints: function (e) {
            void 0 === e && (e = 40);
            for (var t = [], i = 0; i <= e; i++) t.push(this.getPoint(i / e));
            return this.autoClose && t.push(t[0]), t;
          },
          getPoints: function (e) {
            e = e || 12;
            for (var t, i = [], n = 0, r = this.curves; n < r.length; n++)
              for (
                var o = r[n],
                  a =
                    o && o.isEllipseCurve
                      ? 2 * e
                      : o && o.isLineCurve
                      ? 1
                      : o && o.isSplineCurve
                      ? e * o.points.length
                      : e,
                  s = o.getPoints(a),
                  l = 0;
                l < s.length;
                l++
              ) {
                var c = s[l];
                (t && t.equals(c)) || (i.push(c), (t = c));
              }
            return (
              this.autoClose &&
                1 < i.length &&
                !i[i.length - 1].equals(i[0]) &&
                i.push(i[0]),
              i
            );
          },
          copy: function (e) {
            El.prototype.copy.call(this, e), (this.curves = []);
            for (var t = 0, i = e.curves.length; t < i; t++) {
              var n = e.curves[t];
              this.curves.push(n.clone());
            }
            return (this.autoClose = e.autoClose), this;
          },
        })),
        (((Cl.prototype = Object.create(El.prototype)).constructor =
          Cl).prototype.isEllipseCurve = !0),
        (Cl.prototype.getPoint = function (e, t) {
          for (
            var i = t || new Et(),
              n = 2 * Math.PI,
              r = this.aEndAngle - this.aStartAngle,
              o = Math.abs(r) < Number.EPSILON;
            r < 0;

          )
            r += n;
          for (; n < r; ) r -= n;
          r < Number.EPSILON && (r = o ? 0 : n),
            !0 !== this.aClockwise || o || (r === n ? (r = -n) : (r -= n));
          var a = this.aStartAngle + e * r,
            s = this.aX + this.xRadius * Math.cos(a),
            l = this.aY + this.yRadius * Math.sin(a);
          return (
            0 !== this.aRotation &&
              ((t = Math.cos(this.aRotation)),
              (o = Math.sin(this.aRotation)),
              (s = (e = s - this.aX) * t - (a = l - this.aY) * o + this.aX),
              (l = e * o + a * t + this.aY)),
            i.set(s, l)
          );
        }),
        (Cl.prototype.copy = function (e) {
          return (
            El.prototype.copy.call(this, e),
            (this.aX = e.aX),
            (this.aY = e.aY),
            (this.xRadius = e.xRadius),
            (this.yRadius = e.yRadius),
            (this.aStartAngle = e.aStartAngle),
            (this.aEndAngle = e.aEndAngle),
            (this.aClockwise = e.aClockwise),
            (this.aRotation = e.aRotation),
            this
          );
        }),
        (((Pl.prototype = Object.create(El.prototype)).constructor =
          Pl).prototype.isSplineCurve = !0),
        (Pl.prototype.getPoint = function (e, t) {
          var i = t || new Et(),
            n = this.points,
            r = (n.length - 1) * e,
            o = Math.floor(r),
            a = r - o,
            t = n[0 === o ? o : o - 1],
            e = n[o],
            r = n[o > n.length - 2 ? n.length - 1 : o + 1],
            o = n[o > n.length - 3 ? n.length - 1 : o + 2];
          return i.set(Tl(a, t.x, e.x, r.x, o.x), Tl(a, t.y, e.y, r.y, o.y)), i;
        }),
        (Pl.prototype.copy = function (e) {
          El.prototype.copy.call(this, e), (this.points = []);
          for (var t = 0, i = e.points.length; t < i; t++) {
            var n = e.points[t];
            this.points.push(n.clone());
          }
          return this;
        }),
        (((Rl.prototype = Object.create(El.prototype)).constructor =
          Rl).prototype.isCubicBezierCurve = !0),
        (Rl.prototype.getPoint = function (e, t) {
          var i = t || new Et(),
            n = this.v0,
            r = this.v1,
            o = this.v2,
            t = this.v3;
          return i.set(Ml(e, n.x, r.x, o.x, t.x), Ml(e, n.y, r.y, o.y, t.y)), i;
        }),
        (Rl.prototype.copy = function (e) {
          return (
            El.prototype.copy.call(this, e),
            this.v0.copy(e.v0),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this.v3.copy(e.v3),
            this
          );
        }),
        (((Ol.prototype = Object.create(El.prototype)).constructor =
          Ol).prototype.isQuadraticBezierCurve = !0),
        (Ol.prototype.getPoint = function (e, t) {
          var i = t || new Et(),
            n = this.v0,
            r = this.v1,
            t = this.v2;
          return i.set(Sl(e, n.x, r.x, t.x), Sl(e, n.y, r.y, t.y)), i;
        }),
        (Ol.prototype.copy = function (e) {
          return (
            El.prototype.copy.call(this, e),
            this.v0.copy(e.v0),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this
          );
        });
      var Il,
        Dl = Object.assign(Object.create(Ll.prototype), {
          setFromPoints: function (e) {
            this.moveTo(e[0].x, e[0].y);
            for (var t = 1, i = e.length; t < i; t++)
              this.lineTo(e[t].x, e[t].y);
          },
          moveTo: function (e, t) {
            this.currentPoint.set(e, t);
          },
          lineTo: function (e, t) {
            var i = new Al(this.currentPoint.clone(), new Et(e, t));
            this.curves.push(i), this.currentPoint.set(e, t);
          },
          quadraticCurveTo: function (e, t, i, n) {
            t = new Ol(this.currentPoint.clone(), new Et(e, t), new Et(i, n));
            this.curves.push(t), this.currentPoint.set(i, n);
          },
          bezierCurveTo: function (e, t, i, n, r, o) {
            n = new Rl(
              this.currentPoint.clone(),
              new Et(e, t),
              new Et(i, n),
              new Et(r, o)
            );
            this.curves.push(n), this.currentPoint.set(r, o);
          },
          splineThru: function (e) {
            var t = new Pl([this.currentPoint.clone()].concat(e));
            this.curves.push(t), this.currentPoint.copy(e[e.length - 1]);
          },
          arc: function (e, t, i, n, r, o) {
            var a = this.currentPoint.x,
              s = this.currentPoint.y;
            this.absarc(e + a, t + s, i, n, r, o);
          },
          absarc: function (e, t, i, n, r, o) {
            this.absellipse(e, t, i, i, n, r, o);
          },
          ellipse: function (e, t, i, n, r, o, a, s) {
            var l = this.currentPoint.x,
              c = this.currentPoint.y;
            this.absellipse(e + l, t + c, i, n, r, o, a, s);
          },
          absellipse: function (e, t, i, n, r, o, a, s) {
            a = new Cl(e, t, i, n, r, o, a, s);
            0 < this.curves.length &&
              ((s = a.getPoint(0)).equals(this.currentPoint) ||
                this.lineTo(s.x, s.y)),
              this.curves.push(a);
            a = a.getPoint(1);
            this.currentPoint.copy(a);
          },
          copy: function (e) {
            return (
              Ll.prototype.copy.call(this, e),
              this.currentPoint.copy(e.currentPoint),
              this
            );
          },
        });
      function Nl(e) {
        Ll.call(this),
          (this.type = "Path"),
          (this.currentPoint = new Et()),
          e && this.setFromPoints(e);
      }
      function Fl(e) {
        Nl.call(this, e), (this.type = "Shape"), (this.holes = []);
      }
      function kl() {
        (this.type = "ShapePath"),
          (this.subPaths = []),
          (this.currentPath = null);
      }
      function Ul(e) {
        (this.type = "Font"), (this.data = e);
      }
      function Bl(e) {
        this.manager = void 0 !== e ? e : Ps;
      }
      ((Nl.prototype = Dl).constructor = Nl),
        (Fl.prototype = Object.assign(Object.create(Dl), {
          constructor: Fl,
          getPointsHoles: function (e) {
            for (var t = [], i = 0, n = this.holes.length; i < n; i++)
              t[i] = this.holes[i].getPoints(e);
            return t;
          },
          extractPoints: function (e) {
            return { shape: this.getPoints(e), holes: this.getPointsHoles(e) };
          },
          copy: function (e) {
            Nl.prototype.copy.call(this, e), (this.holes = []);
            for (var t = 0, i = e.holes.length; t < i; t++) {
              var n = e.holes[t];
              this.holes.push(n.clone());
            }
            return this;
          },
        })),
        Object.assign(kl.prototype, {
          moveTo: function (e, t) {
            (this.currentPath = new Nl()),
              this.subPaths.push(this.currentPath),
              this.currentPath.moveTo(e, t);
          },
          lineTo: function (e, t) {
            this.currentPath.lineTo(e, t);
          },
          quadraticCurveTo: function (e, t, i, n) {
            this.currentPath.quadraticCurveTo(e, t, i, n);
          },
          bezierCurveTo: function (e, t, i, n, r, o) {
            this.currentPath.bezierCurveTo(e, t, i, n, r, o);
          },
          splineThru: function (e) {
            this.currentPath.splineThru(e);
          },
          toShapes: function (e, t) {
            function i(e) {
              for (var t = [], i = 0, n = e.length; i < n; i++) {
                var r = e[i],
                  o = new Fl();
                (o.curves = r.curves), t.push(o);
              }
              return t;
            }
            var n = Ja.isClockWise,
              r = this.subPaths;
            if (0 === r.length) return [];
            if (!0 === t) return i(r);
            var o,
              a,
              s,
              l = [];
            if (1 === r.length)
              return (
                (a = r[0]), ((s = new Fl()).curves = a.curves), l.push(s), l
              );
            var c,
              h = !n(r[0].getPoints()),
              h = e ? !h : h,
              u = [],
              d = [],
              p = [],
              f = 0;
            (d[f] = void 0), (p[f] = []);
            for (var m, g = 0, v = r.length; g < v; g++)
              (o = n((c = (a = r[g]).getPoints()))),
                (o = e ? !o : o)
                  ? (!h && d[f] && f++,
                    (d[f] = { s: new Fl(), p: c }),
                    (d[f].s.curves = a.curves),
                    h && f++,
                    (p[f] = []))
                  : p[f].push({ h: a, p: c[0] });
            if (!d[0]) return i(r);
            if (1 < d.length) {
              for (var y = !1, _ = [], x = 0, b = d.length; x < b; x++)
                u[x] = [];
              for (x = 0, b = d.length; x < b; x++)
                for (var w = p[x], T = 0; T < w.length; T++) {
                  for (var S = w[T], M = !0, E = 0; E < d.length; E++)
                    !(function (e, t) {
                      for (
                        var i = t.length, n = !1, r = i - 1, o = 0;
                        o < i;
                        r = o++
                      ) {
                        var a = t[r],
                          s = t[o],
                          l = s.x - a.x,
                          c = s.y - a.y;
                        if (Math.abs(c) > Number.EPSILON) {
                          if (
                            (c < 0 &&
                              ((a = t[o]), (l = -l), (s = t[r]), (c = -c)),
                            !(e.y < a.y || e.y > s.y))
                          )
                            if (e.y === a.y) {
                              if (e.x === a.x) return 1;
                            } else {
                              l = c * (e.x - a.x) - l * (e.y - a.y);
                              if (0 == l) return 1;
                              l < 0 || (n = !n);
                            }
                        } else if (
                          e.y === a.y &&
                          ((s.x <= e.x && e.x <= a.x) ||
                            (a.x <= e.x && e.x <= s.x))
                        )
                          return 1;
                      }
                      return n;
                    })(S.p, d[E].p) ||
                      (x !== E && _.push({ froms: x, tos: E, hole: T }),
                      M ? ((M = !1), u[E].push(S)) : (y = !0));
                  M && u[x].push(S);
                }
              0 < _.length && (y || (p = u));
            }
            for (var g = 0, A = d.length; g < A; g++) {
              (s = d[g].s), l.push(s);
              for (var L = 0, C = (m = p[g]).length; L < C; L++)
                s.holes.push(m[L].h);
            }
            return l;
          },
        }),
        Object.assign(Ul.prototype, {
          isFont: !0,
          generateShapes: function (e, c, w) {
            void 0 === c && (c = 100), void 0 === w && (w = 4);
            for (
              var T = this.data,
                t = (function (e) {
                  for (
                    var t = String(e).split(""),
                      i = c / T.resolution,
                      n =
                        (T.boundingBox.yMax -
                          T.boundingBox.yMin +
                          T.underlineThickness) *
                        i,
                      r = 0,
                      o = 0,
                      a = [],
                      s = 0;
                    s < t.length;
                    s++
                  ) {
                    var l = t[s];
                    "\n" === l
                      ? ((r = 0), (o -= n))
                      : ((r += (l = (function (e, t, i, n) {
                          e = T.glyphs[e] || T.glyphs["?"];
                          if (!e) return;
                          var r,
                            o,
                            a,
                            s,
                            l,
                            c,
                            h,
                            u,
                            d,
                            p,
                            f,
                            m = new kl(),
                            g = [];
                          if (e.o)
                            for (
                              var v =
                                  e._cachedOutline ||
                                  (e._cachedOutline = e.o.split(" ")),
                                y = 0,
                                _ = v.length;
                              y < _;

                            )
                              switch (v[y++]) {
                                case "m":
                                  (r = v[y++] * t + i),
                                    (o = v[y++] * t + n),
                                    m.moveTo(r, o);
                                  break;
                                case "l":
                                  (r = v[y++] * t + i),
                                    (o = v[y++] * t + n),
                                    m.lineTo(r, o);
                                  break;
                                case "q":
                                  if (
                                    ((a = v[y++] * t + i),
                                    (s = v[y++] * t + n),
                                    (h = v[y++] * t + i),
                                    (u = v[y++] * t + n),
                                    m.quadraticCurveTo(h, u, a, s),
                                    (f = g[g.length - 1]))
                                  ) {
                                    (l = f.x), (c = f.y);
                                    for (var x = 1; x <= w; x++)
                                      Sl((b = x / w), l, h, a), Sl(b, c, u, s);
                                  }
                                  break;
                                case "b":
                                  if (
                                    ((a = v[y++] * t + i),
                                    (s = v[y++] * t + n),
                                    (h = v[y++] * t + i),
                                    (u = v[y++] * t + n),
                                    (d = v[y++] * t + i),
                                    (p = v[y++] * t + n),
                                    m.bezierCurveTo(h, u, d, p, a, s),
                                    (f = g[g.length - 1]))
                                  ) {
                                    (l = f.x), (c = f.y);
                                    for (var b, x = 1; x <= w; x++)
                                      Ml((b = x / w), l, h, d, a),
                                        Ml(b, c, u, p, s);
                                  }
                              }
                          return { offsetX: e.ha * t, path: m };
                        })(l, i, r, o)).offsetX),
                        a.push(l.path));
                  }
                  return a;
                })(e),
                i = [],
                n = 0,
                r = t.length;
              n < r;
              n++
            )
              Array.prototype.push.apply(i, t[n].toShapes());
            return i;
          },
        }),
        Object.assign(Bl.prototype, {
          load: function (e, n, t, i) {
            var r = this,
              o = new Os(this.manager);
            o.setPath(this.path),
              o.load(
                e,
                function (t) {
                  var i;
                  try {
                    i = JSON.parse(t);
                  } catch (e) {
                    console.warn(
                      "THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."
                    ),
                      (i = JSON.parse(t.substring(65, t.length - 2)));
                  }
                  var e = r.parse(i);
                  n && n(e);
                },
                t,
                i
              );
          },
          parse: function (e) {
            return new Ul(e);
          },
          setPath: function (e) {
            return (this.path = e), this;
          },
        });
      var zl,
        jl,
        Hl,
        Gl,
        Vl,
        Wl,
        Xl,
        ql,
        Yl,
        Ql,
        Zl,
        Jl,
        $l,
        Kl,
        ec,
        tc,
        ic,
        nc,
        rc,
        oc,
        ac,
        sc,
        lc,
        cc,
        hc,
        uc,
        dc,
        pc,
        fc,
        mc,
        gc,
        vc,
        yc,
        _c,
        xc,
        bc,
        wc,
        Tc,
        Sc,
        Mc,
        Ec,
        Ac,
        Lc,
        Cc = {
          getContext: function () {
            return (
              void 0 === Il &&
                (Il = new (window.AudioContext || window.webkitAudioContext)()),
              Il
            );
          },
          setContext: function (e) {
            Il = e;
          },
        };
      function Pc(e) {
        this.manager = void 0 !== e ? e : Ps;
      }
      function Rc() {
        (this.type = "StereoCamera"),
          (this.aspect = 1),
          (this.eyeSep = 0.064),
          (this.cameraL = new oa()),
          this.cameraL.layers.enable(1),
          (this.cameraL.matrixAutoUpdate = !1),
          (this.cameraR = new oa()),
          this.cameraR.layers.enable(2),
          (this.cameraR.matrixAutoUpdate = !1);
      }
      function Oc(e, t, i) {
        Un.call(this), (this.type = "CubeCamera");
        var r = new oa(90, 1, e, t);
        r.up.set(0, -1, 0), r.lookAt(new Ct(1, 0, 0)), this.add(r);
        var o = new oa(90, 1, e, t);
        o.up.set(0, -1, 0), o.lookAt(new Ct(-1, 0, 0)), this.add(o);
        var a = new oa(90, 1, e, t);
        a.up.set(0, 0, 1), a.lookAt(new Ct(0, 1, 0)), this.add(a);
        var s = new oa(90, 1, e, t);
        s.up.set(0, 0, -1), s.lookAt(new Ct(0, -1, 0)), this.add(s);
        var l = new oa(90, 1, e, t);
        l.up.set(0, -1, 0), l.lookAt(new Ct(0, 0, 1)), this.add(l);
        var c = new oa(90, 1, e, t);
        c.up.set(0, -1, 0), c.lookAt(new Ct(0, 0, -1)), this.add(c);
        t = { format: Ye, magFilter: Oe, minFilter: Oe };
        (this.renderTarget = new kt(i, i, t)),
          (this.renderTarget.texture.name = "CubeCamera"),
          (this.update = function (e, t) {
            null === this.parent && this.updateMatrixWorld();
            var i = this.renderTarget,
              n = i.texture.generateMipmaps;
            (i.texture.generateMipmaps = !1),
              (i.activeCubeFace = 0),
              e.render(t, r, i),
              (i.activeCubeFace = 1),
              e.render(t, o, i),
              (i.activeCubeFace = 2),
              e.render(t, a, i),
              (i.activeCubeFace = 3),
              e.render(t, s, i),
              (i.activeCubeFace = 4),
              e.render(t, l, i),
              (i.texture.generateMipmaps = n),
              (i.activeCubeFace = 5),
              e.render(t, c, i),
              e.setRenderTarget(null);
          }),
          (this.clear = function (e, t, i, n) {
            for (var r = this.renderTarget, o = 0; o < 6; o++)
              (r.activeCubeFace = o), e.setRenderTarget(r), e.clear(t, i, n);
            e.setRenderTarget(null);
          });
      }
      function Ic() {
        Un.call(this),
          (this.type = "AudioListener"),
          (this.context = Cc.getContext()),
          (this.gain = this.context.createGain()),
          this.gain.connect(this.context.destination),
          (this.filter = null);
      }
      function Dc(e) {
        Un.call(this),
          (this.type = "Audio"),
          (this.context = e.context),
          (this.gain = this.context.createGain()),
          this.gain.connect(e.getInput()),
          (this.autoplay = !1),
          (this.buffer = null),
          (this.loop = !1),
          (this.startTime = 0),
          (this.offset = 0),
          (this.playbackRate = 1),
          (this.isPlaying = !1),
          (this.hasPlaybackControl = !0),
          (this.sourceType = "empty"),
          (this.filters = []);
      }
      function Nc(e) {
        Dc.call(this, e),
          (this.panner = this.context.createPanner()),
          this.panner.connect(this.gain);
      }
      function Fc(e, t) {
        (this.analyser = e.context.createAnalyser()),
          (this.analyser.fftSize = void 0 !== t ? t : 2048),
          (this.data = new Uint8Array(this.analyser.frequencyBinCount)),
          e.getOutput().connect(this.analyser);
      }
      function kc(e, t, i) {
        (this.binding = e), (this.valueSize = i);
        var n,
          r = Float64Array;
        switch (t) {
          case "quaternion":
            n = this._slerp;
            break;
          case "string":
          case "bool":
            (r = Array), (n = this._select);
            break;
          default:
            n = this._lerp;
        }
        (this.buffer = new r(4 * i)),
          (this._mixBufferRegion = n),
          (this.cumulativeWeight = 0),
          (this.useCount = 0),
          (this.referenceCount = 0);
      }
      function Uc(e, t, i) {
        i = i || Bc.parseTrackName(t);
        (this._targetGroup = e), (this._bindings = e.subscribe_(t, i));
      }
      function Bc(e, t, i) {
        (this.path = t),
          (this.parsedPath = i || Bc.parseTrackName(t)),
          (this.node = Bc.findNode(e, this.parsedPath.nodeName) || e),
          (this.rootNode = e);
      }
      function zc() {
        (this.uuid = Mt.generateUUID()),
          (this._objects = Array.prototype.slice.call(arguments)),
          (this.nCachedObjects_ = 0);
        var e = {};
        this._indicesByUUID = e;
        for (var t = 0, i = arguments.length; t !== i; ++t)
          e[arguments[t].uuid] = t;
        (this._paths = []),
          (this._parsedPaths = []),
          (this._bindings = []),
          (this._bindingsIndicesByPath = {});
        var n = this;
        this.stats = {
          objects: {
            get total() {
              return n._objects.length;
            },
            get inUse() {
              return this.total - n.nCachedObjects_;
            },
          },
          get bindingsPerObject() {
            return n._bindings.length;
          },
        };
      }
      function jc(e, t, i) {
        (this._mixer = e), (this._clip = t), (this._localRoot = i || null);
        for (
          var n = t.tracks,
            r = n.length,
            o = new Array(r),
            a = { endingStart: dt, endingEnd: dt },
            s = 0;
          s !== r;
          ++s
        ) {
          var l = n[s].createInterpolant(null);
          (o[s] = l).settings = a;
        }
        (this._interpolantSettings = a),
          (this._interpolants = o),
          (this._propertyBindings = new Array(r)),
          (this._cacheIndex = null),
          (this._byClipCacheIndex = null),
          (this._timeScaleInterpolant = null),
          (this._weightInterpolant = null),
          (this.loop = 2201),
          (this._loopCount = -1),
          (this._startTime = null),
          (this.time = 0),
          (this.timeScale = 1),
          (this._effectiveTimeScale = 1),
          (this.weight = 1),
          (this._effectiveWeight = 1),
          (this.repetitions = 1 / 0),
          (this.paused = !1),
          (this.enabled = !0),
          (this.clampWhenFinished = !1),
          (this.zeroSlopeAtStart = !0),
          (this.zeroSlopeAtEnd = !0);
      }
      function Hc(e) {
        (this._root = e),
          this._initMemoryManager(),
          (this._accuIndex = 0),
          (this.time = 0),
          (this.timeScale = 1);
      }
      function Gc(e) {
        "string" == typeof e &&
          (console.warn("THREE.Uniform: Type parameter is no longer needed."),
          (e = arguments[1])),
          (this.value = e);
      }
      function Vc() {
        no.call(this),
          (this.type = "InstancedBufferGeometry"),
          (this.maxInstancedCount = void 0);
      }
      function Wc(e, t, i, n) {
        (this.uuid = Mt.generateUUID()),
          (this.data = e),
          (this.itemSize = t),
          (this.offset = i),
          (this.normalized = !0 === n);
      }
      function Xc(e, t) {
        (this.uuid = Mt.generateUUID()),
          (this.array = e),
          (this.stride = t),
          (this.count = void 0 !== e ? e.length / t : 0),
          (this.dynamic = !1),
          (this.updateRange = { offset: 0, count: -1 }),
          (this.onUploadCallback = function () {}),
          (this.version = 0);
      }
      function qc(e, t, i) {
        Xc.call(this, e, t), (this.meshPerAttribute = i || 1);
      }
      function Yc(e, t, i) {
        Zn.call(this, e, t), (this.meshPerAttribute = i || 1);
      }
      function Qc(e, t, i, n) {
        (this.ray = new ho(e, t)),
          (this.near = i || 0),
          (this.far = n || 1 / 0),
          (this.params = {
            Mesh: {},
            Line: {},
            LOD: {},
            Points: { threshold: 1 },
            Sprite: {},
          }),
          Object.defineProperties(this.params, {
            PointCloud: {
              get: function () {
                return (
                  console.warn(
                    "THREE.Raycaster: params.PointCloud has been renamed to params.Points."
                  ),
                  this.Points
                );
              },
            },
          });
      }
      function Zc(e, t) {
        return e.distance - t.distance;
      }
      function Jc(e, t, i, n) {
        if (!1 !== e.visible && (e.raycast(t, i), !0 === n))
          for (var r = e.children, o = 0, a = r.length; o < a; o++)
            Jc(r[o], t, i, !0);
      }
      function $c(e) {
        (this.autoStart = void 0 === e || e),
          (this.startTime = 0),
          (this.oldTime = 0),
          (this.elapsedTime = 0),
          (this.running = !1);
      }
      function Kc(e, t, i) {
        return (
          (this.radius = void 0 !== e ? e : 1),
          (this.phi = void 0 !== t ? t : 0),
          (this.theta = void 0 !== i ? i : 0),
          this
        );
      }
      function eh(e, t, i) {
        return (
          (this.radius = void 0 !== e ? e : 1),
          (this.theta = void 0 !== t ? t : 0),
          (this.y = void 0 !== i ? i : 0),
          this
        );
      }
      function th(e) {
        Un.call(this), (this.material = e), (this.render = function () {});
      }
      function ih(e, t, i, n) {
        (this.object = e), (this.size = void 0 !== t ? t : 1);
        (e = void 0 !== i ? i : 16711680),
          (t = void 0 !== n ? n : 1),
          (i = 0),
          (n = this.object.geometry);
        n && n.isGeometry
          ? (i = 3 * n.faces.length)
          : n && n.isBufferGeometry && (i = n.attributes.normal.count);
        (n = new no()), (i = new rr(2 * i * 3, 3));
        n.addAttribute("position", i),
          Sa.call(this, n, new wa({ color: e, linewidth: t })),
          (this.matrixAutoUpdate = !1),
          this.update();
      }
      function nh(e, t) {
        Un.call(this),
          (this.light = e),
          this.light.updateMatrixWorld(),
          (this.matrix = e.matrixWorld),
          (this.matrixAutoUpdate = !1),
          (this.color = t);
        for (
          var e = new no(),
            i = [
              0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0,
              1, 1, 0, 0, 0, 0, -1, 1,
            ],
            n = 0,
            r = 1;
          n < 32;
          n++, r++
        ) {
          var o = (n / 32) * Math.PI * 2,
            a = (r / 32) * Math.PI * 2;
          i.push(Math.cos(o), Math.sin(o), 1, Math.cos(a), Math.sin(a), 1);
        }
        e.addAttribute("position", new rr(i, 3));
        t = new wa({ fog: !1 });
        (this.cone = new Sa(e, t)), this.add(this.cone), this.update();
      }
      function rh(e) {
        for (
          var t = (function e(t) {
              var i = [];
              t && t.isBone && i.push(t);
              for (var n = 0; n < t.children.length; n++)
                i.push.apply(i, e(t.children[n]));
              return i;
            })(e),
            i = new no(),
            n = [],
            r = [],
            o = new Mi(0, 0, 1),
            a = new Mi(0, 1, 0),
            s = 0;
          s < t.length;
          s++
        ) {
          var l = t[s];
          l.parent &&
            l.parent.isBone &&
            (n.push(0, 0, 0),
            n.push(0, 0, 0),
            r.push(o.r, o.g, o.b),
            r.push(a.r, a.g, a.b));
        }
        i.addAttribute("position", new rr(n, 3)),
          i.addAttribute("color", new rr(r, 3));
        var c = new wa({
          vertexColors: E,
          depthTest: !1,
          depthWrite: !1,
          transparent: !0,
        });
        Sa.call(this, i, c),
          (this.root = e),
          (this.bones = t),
          (this.matrix = e.matrixWorld),
          (this.matrixAutoUpdate = !1);
      }
      function oh(e, t, i) {
        (this.light = e), this.light.updateMatrixWorld(), (this.color = i);
        (i = new ns(t, 4, 2)), (t = new lo({ wireframe: !0, fog: !1 }));
        fo.call(this, i, t),
          (this.matrix = this.light.matrixWorld),
          (this.matrixAutoUpdate = !1),
          this.update();
      }
      function ah(e, t) {
        Un.call(this),
          (this.light = e),
          this.light.updateMatrixWorld(),
          (this.matrix = e.matrixWorld),
          (this.matrixAutoUpdate = !1),
          (this.color = t);
        (e = new wa({ fog: !1 })), (t = new no());
        t.addAttribute("position", new Zn(new Float32Array(15), 3)),
          (this.line = new Ta(t, e)),
          this.add(this.line),
          this.update();
      }
      function sh(e, t, i) {
        Un.call(this),
          (this.light = e),
          this.light.updateMatrixWorld(),
          (this.matrix = e.matrixWorld),
          (this.matrixAutoUpdate = !1),
          (this.color = i);
        i = new za(t);
        i.rotateY(0.5 * Math.PI),
          (this.material = new lo({ wireframe: !0, fog: !1 })),
          void 0 === this.color && (this.material.vertexColors = E);
        (t = i.getAttribute("position")), (t = new Float32Array(3 * t.count));
        i.addAttribute("color", new Zn(t, 3)),
          this.add(new fo(i, this.material)),
          this.update();
      }
      function lh(e, t, i, n) {
        (e = e || 10),
          (t = t || 10),
          (i = new Mi(void 0 !== i ? i : 4473924)),
          (n = new Mi(void 0 !== n ? n : 8947848));
        for (
          var r = t / 2,
            o = e / t,
            a = e / 2,
            s = [],
            l = [],
            c = 0,
            h = 0,
            u = -a;
          c <= t;
          c++, u += o
        ) {
          s.push(-a, 0, u, a, 0, u), s.push(u, 0, -a, u, 0, a);
          var d = c === r ? i : n;
          d.toArray(l, h),
            (h += 3),
            d.toArray(l, h),
            (h += 3),
            d.toArray(l, h),
            (h += 3),
            d.toArray(l, h),
            (h += 3);
        }
        var p = new no();
        p.addAttribute("position", new rr(s, 3)),
          p.addAttribute("color", new rr(l, 3));
        e = new wa({ vertexColors: E });
        Sa.call(this, p, e);
      }
      function ch(e, t, i, n, r, o) {
        (e = e || 10),
          (t = t || 16),
          (i = i || 8),
          (n = n || 64),
          (r = new Mi(void 0 !== r ? r : 4473924)),
          (o = new Mi(void 0 !== o ? o : 8947848));
        for (var a, s, l, c, h, u, d = [], p = [], f = 0; f <= t; f++)
          (l = (f / t) * (2 * Math.PI)),
            (a = Math.sin(l) * e),
            (s = Math.cos(l) * e),
            d.push(0, 0, 0),
            d.push(a, 0, s),
            (u = 1 & f ? r : o),
            p.push(u.r, u.g, u.b),
            p.push(u.r, u.g, u.b);
        for (f = 0; f <= i; f++)
          for (u = 1 & f ? r : o, h = e - (e / i) * f, c = 0; c < n; c++)
            (l = (c / n) * (2 * Math.PI)),
              (a = Math.sin(l) * h),
              (s = Math.cos(l) * h),
              d.push(a, 0, s),
              p.push(u.r, u.g, u.b),
              (l = ((c + 1) / n) * (2 * Math.PI)),
              (a = Math.sin(l) * h),
              (s = Math.cos(l) * h),
              d.push(a, 0, s),
              p.push(u.r, u.g, u.b);
        var m = new no();
        m.addAttribute("position", new rr(d, 3)),
          m.addAttribute("color", new rr(p, 3));
        var g = new wa({ vertexColors: E });
        Sa.call(this, m, g);
      }
      function hh(e, t, i, n) {
        (this.object = e), (this.size = void 0 !== t ? t : 1);
        (e = void 0 !== i ? i : 16776960),
          (t = void 0 !== n ? n : 1),
          (i = 0),
          (n = this.object.geometry);
        n && n.isGeometry
          ? (i = n.faces.length)
          : console.warn(
              "THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead."
            );
        (n = new no()), (i = new rr(2 * i * 3, 3));
        n.addAttribute("position", i),
          Sa.call(this, n, new wa({ color: e, linewidth: t })),
          (this.matrixAutoUpdate = !1),
          this.update();
      }
      function uh(e, t, i) {
        Un.call(this),
          (this.light = e),
          this.light.updateMatrixWorld(),
          (this.matrix = e.matrixWorld),
          (this.matrixAutoUpdate = !1),
          (this.color = i),
          void 0 === t && (t = 1);
        i = new no();
        i.addAttribute(
          "position",
          new rr([-t, t, 0, t, t, 0, t, -t, 0, -t, -t, 0, -t, t, 0], 3)
        );
        t = new wa({ fog: !1 });
        (this.lightPlane = new Ta(i, t)),
          this.add(this.lightPlane),
          (i = new no()).addAttribute(
            "position",
            new rr([0, 0, 0, 0, 0, 1], 3)
          ),
          (this.targetLine = new Ta(i, t)),
          this.add(this.targetLine),
          this.update();
      }
      function dh(e) {
        var t = new no(),
          i = new wa({ color: 16777215, vertexColors: 1 }),
          n = [],
          r = [],
          o = {},
          a = new Mi(16755200),
          s = new Mi(16711680),
          l = new Mi(43775),
          c = new Mi(16777215),
          h = new Mi(3355443);
        function u(e, t, i) {
          d(e, i), d(t, i);
        }
        function d(e, t) {
          n.push(0, 0, 0),
            r.push(t.r, t.g, t.b),
            void 0 === o[e] && (o[e] = []),
            o[e].push(n.length / 3 - 1);
        }
        u("n1", "n2", a),
          u("n2", "n4", a),
          u("n4", "n3", a),
          u("n3", "n1", a),
          u("f1", "f2", a),
          u("f2", "f4", a),
          u("f4", "f3", a),
          u("f3", "f1", a),
          u("n1", "f1", a),
          u("n2", "f2", a),
          u("n3", "f3", a),
          u("n4", "f4", a),
          u("p", "n1", s),
          u("p", "n2", s),
          u("p", "n3", s),
          u("p", "n4", s),
          u("u1", "u2", l),
          u("u2", "u3", l),
          u("u3", "u1", l),
          u("c", "t", c),
          u("p", "c", h),
          u("cn1", "cn2", h),
          u("cn3", "cn4", h),
          u("cf1", "cf2", h),
          u("cf3", "cf4", h),
          t.addAttribute("position", new rr(n, 3)),
          t.addAttribute("color", new rr(r, 3)),
          Sa.call(this, t, i),
          (this.camera = e),
          this.camera.updateProjectionMatrix &&
            this.camera.updateProjectionMatrix(),
          (this.matrix = e.matrixWorld),
          (this.matrixAutoUpdate = !1),
          (this.pointMap = o),
          this.update();
      }
      function ph(e, t, i, n) {
        wc.set(t, i, n).unproject(Tc);
        var r = bc[e];
        if (void 0 !== r)
          for (
            var o = xc.getAttribute("position"), a = 0, s = r.length;
            a < s;
            a++
          )
            o.setXYZ(r[a], wc.x, wc.y, wc.z);
      }
      function fh(e, t) {
        (this.object = e), void 0 === t && (t = 16776960);
        var i = new Uint16Array([
            0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3,
            7,
          ]),
          n = new Float32Array(24),
          e = new no();
        e.setIndex(new Zn(i, 1)),
          e.addAttribute("position", new Zn(n, 3)),
          Sa.call(this, e, new wa({ color: t })),
          (this.matrixAutoUpdate = !1),
          this.update();
      }
      function mh(e, t) {
        (this.type = "Box3Helper"), (this.box = e);
        var i = void 0 !== t ? t : 16776960,
          e = new Uint16Array([
            0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3,
            7,
          ]),
          t = new no();
        t.setIndex(new Zn(e, 1)),
          t.addAttribute(
            "position",
            new rr(
              [
                1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1,
                -1, -1, 1, -1, -1,
              ],
              3
            )
          ),
          Sa.call(this, t, new wa({ color: i })),
          this.geometry.computeBoundingSphere();
      }
      function gh(e, t, i) {
        (this.type = "PlaneHelper"),
          (this.plane = e),
          (this.size = void 0 === t ? 1 : t);
        (t = void 0 !== i ? i : 16776960), (i = new no());
        i.addAttribute(
          "position",
          new rr(
            [
              1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1,
              -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0,
            ],
            3
          )
        ),
          i.computeBoundingSphere(),
          Ta.call(this, i, new wa({ color: t }));
        i = new no();
        i.addAttribute(
          "position",
          new rr(
            [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1],
            3
          )
        ),
          i.computeBoundingSphere(),
          this.add(
            new fo(
              i,
              new lo({
                color: t,
                opacity: 0.2,
                transparent: !0,
                depthWrite: !1,
              })
            )
          );
      }
      function vh(e, t, i, n, r, o) {
        Un.call(this),
          void 0 === n && (n = 16776960),
          void 0 === i && (i = 1),
          void 0 === r && (r = 0.2 * i),
          void 0 === o && (o = 0.2 * r),
          void 0 === Mc &&
            ((Mc = new no()).addAttribute(
              "position",
              new rr([0, 0, 0, 0, 1, 0], 3)
            ),
            (Ec = new ds(0, 0.5, 1, 5, 1)).translate(0, -0.5, 0)),
          this.position.copy(t),
          (this.line = new Ta(Mc, new wa({ color: n }))),
          (this.line.matrixAutoUpdate = !1),
          this.add(this.line),
          (this.cone = new fo(Ec, new lo({ color: n }))),
          (this.cone.matrixAutoUpdate = !1),
          this.add(this.cone),
          this.setDirection(e),
          this.setLength(i, r, o);
      }
      function yh(e) {
        var t = [
            0,
            0,
            0,
            (e = e || 1),
            0,
            0,
            0,
            0,
            0,
            0,
            e,
            0,
            0,
            0,
            0,
            0,
            0,
            e,
          ],
          e = new no();
        e.addAttribute("position", new rr(t, 3)),
          e.addAttribute(
            "color",
            new rr(
              [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1],
              3
            )
          );
        t = new wa({ vertexColors: E });
        Sa.call(this, e, t);
      }
      function _h() {
        var r = 0,
          o = 0,
          a = 0,
          s = 0;
        function l(e, t, i, n) {
          (a = -3 * (r = e) + 3 * t - 2 * (o = i) - n),
            (s = 2 * e - 2 * t + i + n);
        }
        return {
          initCatmullRom: function (e, t, i, n, r) {
            l(t, i, r * (i - e), r * (n - t));
          },
          initNonuniformCatmullRom: function (e, t, i, n, r, o, a) {
            (r = (t - e) / r - (i - e) / (r + o) + (i - t) / o),
              (a = (i - t) / o - (n - t) / (o + a) + (n - i) / a);
            l(t, i, (r *= o), (a *= o));
          },
          calc: function (e) {
            var t = e * e;
            return r + o * e + a * t + s * (t * e);
          },
        };
      }
      Object.assign(Pc.prototype, {
        load: function (e, t, i, n) {
          var r = new Os(this.manager);
          r.setResponseType("arraybuffer"),
            r.load(
              e,
              function (e) {
                Cc.getContext().decodeAudioData(e, function (e) {
                  t(e);
                });
              },
              i,
              n
            );
        },
      }),
        Object.assign(Rc.prototype, {
          update:
            ((Yl = new At()),
            (Ql = new At()),
            function (e) {
              var t, i, n, r, o;
              (zl === this &&
                jl === e.focus &&
                Hl === e.fov &&
                Gl === e.aspect * this.aspect &&
                Vl === e.near &&
                Wl === e.far &&
                Xl === e.zoom &&
                ql === this.eyeSep) ||
                ((zl = this),
                (jl = e.focus),
                (Hl = e.fov),
                (Gl = e.aspect * this.aspect),
                (Vl = e.near),
                (Wl = e.far),
                (Xl = e.zoom),
                (t = e.projectionMatrix.clone()),
                (i = ((ql = this.eyeSep / 2) * Vl) / jl),
                (n = (Vl * Math.tan(Mt.DEG2RAD * Hl * 0.5)) / Xl),
                (Ql.elements[12] = -ql),
                (Yl.elements[12] = ql),
                (r = -n * Gl + i),
                (o = n * Gl + i),
                (t.elements[0] = (2 * Vl) / (o - r)),
                (t.elements[8] = (o + r) / (o - r)),
                this.cameraL.projectionMatrix.copy(t),
                (r = -n * Gl - i),
                (o = n * Gl - i),
                (t.elements[0] = (2 * Vl) / (o - r)),
                (t.elements[8] = (o + r) / (o - r)),
                this.cameraR.projectionMatrix.copy(t)),
                this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Ql),
                this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Yl);
            }),
        }),
        ((Oc.prototype = Object.create(Un.prototype)).constructor = Oc),
        (Ic.prototype = Object.assign(Object.create(Un.prototype), {
          constructor: Ic,
          getInput: function () {
            return this.gain;
          },
          removeFilter: function () {
            null !== this.filter &&
              (this.gain.disconnect(this.filter),
              this.filter.disconnect(this.context.destination),
              this.gain.connect(this.context.destination),
              (this.filter = null));
          },
          getFilter: function () {
            return this.filter;
          },
          setFilter: function (e) {
            null !== this.filter
              ? (this.gain.disconnect(this.filter),
                this.filter.disconnect(this.context.destination))
              : this.gain.disconnect(this.context.destination),
              (this.filter = e),
              this.gain.connect(this.filter),
              this.filter.connect(this.context.destination);
          },
          getMasterVolume: function () {
            return this.gain.gain.value;
          },
          setMasterVolume: function (e) {
            this.gain.gain.value = e;
          },
          updateMatrixWorld:
            ((Zl = new Ct()),
            (Jl = new Lt()),
            ($l = new Ct()),
            (Kl = new Ct()),
            function (e) {
              Un.prototype.updateMatrixWorld.call(this, e);
              var t = this.context.listener,
                e = this.up;
              this.matrixWorld.decompose(Zl, Jl, $l),
                Kl.set(0, 0, -1).applyQuaternion(Jl),
                t.positionX
                  ? (t.positionX.setValueAtTime(Zl.x, this.context.currentTime),
                    t.positionY.setValueAtTime(Zl.y, this.context.currentTime),
                    t.positionZ.setValueAtTime(Zl.z, this.context.currentTime),
                    t.forwardX.setValueAtTime(Kl.x, this.context.currentTime),
                    t.forwardY.setValueAtTime(Kl.y, this.context.currentTime),
                    t.forwardZ.setValueAtTime(Kl.z, this.context.currentTime),
                    t.upX.setValueAtTime(e.x, this.context.currentTime),
                    t.upY.setValueAtTime(e.y, this.context.currentTime),
                    t.upZ.setValueAtTime(e.z, this.context.currentTime))
                  : (t.setPosition(Zl.x, Zl.y, Zl.z),
                    t.setOrientation(Kl.x, Kl.y, Kl.z, e.x, e.y, e.z));
            }),
        })),
        (Dc.prototype = Object.assign(Object.create(Un.prototype), {
          constructor: Dc,
          getOutput: function () {
            return this.gain;
          },
          setNodeSource: function (e) {
            return (
              (this.hasPlaybackControl = !1),
              (this.sourceType = "audioNode"),
              (this.source = e),
              this.connect(),
              this
            );
          },
          setBuffer: function (e) {
            return (
              (this.buffer = e),
              (this.sourceType = "buffer"),
              this.autoplay && this.play(),
              this
            );
          },
          play: function () {
            if (!0 !== this.isPlaying) {
              if (!1 !== this.hasPlaybackControl) {
                var e = this.context.createBufferSource();
                return (
                  (e.buffer = this.buffer),
                  (e.loop = this.loop),
                  (e.onended = this.onEnded.bind(this)),
                  e.playbackRate.setValueAtTime(
                    this.playbackRate,
                    this.startTime
                  ),
                  (this.startTime = this.context.currentTime),
                  e.start(this.startTime, this.offset),
                  (this.isPlaying = !0),
                  (this.source = e),
                  this.connect()
                );
              }
              console.warn("THREE.Audio: this Audio has no playback control.");
            } else console.warn("THREE.Audio: Audio is already playing.");
          },
          pause: function () {
            if (!1 !== this.hasPlaybackControl)
              return (
                !0 === this.isPlaying &&
                  (this.source.stop(),
                  (this.offset +=
                    (this.context.currentTime - this.startTime) *
                    this.playbackRate),
                  (this.isPlaying = !1)),
                this
              );
            console.warn("THREE.Audio: this Audio has no playback control.");
          },
          stop: function () {
            if (!1 !== this.hasPlaybackControl)
              return (
                this.source.stop(),
                (this.offset = 0),
                (this.isPlaying = !1),
                this
              );
            console.warn("THREE.Audio: this Audio has no playback control.");
          },
          connect: function () {
            if (0 < this.filters.length) {
              this.source.connect(this.filters[0]);
              for (var e = 1, t = this.filters.length; e < t; e++)
                this.filters[e - 1].connect(this.filters[e]);
              this.filters[this.filters.length - 1].connect(this.getOutput());
            } else this.source.connect(this.getOutput());
            return this;
          },
          disconnect: function () {
            if (0 < this.filters.length) {
              this.source.disconnect(this.filters[0]);
              for (var e = 1, t = this.filters.length; e < t; e++)
                this.filters[e - 1].disconnect(this.filters[e]);
              this.filters[this.filters.length - 1].disconnect(
                this.getOutput()
              );
            } else this.source.disconnect(this.getOutput());
            return this;
          },
          getFilters: function () {
            return this.filters;
          },
          setFilters: function (e) {
            return (
              (e = e || []),
              !0 === this.isPlaying
                ? (this.disconnect(), (this.filters = e), this.connect())
                : (this.filters = e),
              this
            );
          },
          getFilter: function () {
            return this.getFilters()[0];
          },
          setFilter: function (e) {
            return this.setFilters(e ? [e] : []);
          },
          setPlaybackRate: function (e) {
            if (!1 !== this.hasPlaybackControl)
              return (
                (this.playbackRate = e),
                !0 === this.isPlaying &&
                  this.source.playbackRate.setValueAtTime(
                    this.playbackRate,
                    this.context.currentTime
                  ),
                this
              );
            console.warn("THREE.Audio: this Audio has no playback control.");
          },
          getPlaybackRate: function () {
            return this.playbackRate;
          },
          onEnded: function () {
            this.isPlaying = !1;
          },
          getLoop: function () {
            return !1 === this.hasPlaybackControl
              ? (console.warn(
                  "THREE.Audio: this Audio has no playback control."
                ),
                !1)
              : this.loop;
          },
          setLoop: function (e) {
            if (!1 !== this.hasPlaybackControl)
              return (
                (this.loop = e),
                !0 === this.isPlaying && (this.source.loop = this.loop),
                this
              );
            console.warn("THREE.Audio: this Audio has no playback control.");
          },
          getVolume: function () {
            return this.gain.gain.value;
          },
          setVolume: function (e) {
            return (this.gain.gain.value = e), this;
          },
        })),
        (Nc.prototype = Object.assign(Object.create(Dc.prototype), {
          constructor: Nc,
          getOutput: function () {
            return this.panner;
          },
          getRefDistance: function () {
            return this.panner.refDistance;
          },
          setRefDistance: function (e) {
            this.panner.refDistance = e;
          },
          getRolloffFactor: function () {
            return this.panner.rolloffFactor;
          },
          setRolloffFactor: function (e) {
            this.panner.rolloffFactor = e;
          },
          getDistanceModel: function () {
            return this.panner.distanceModel;
          },
          setDistanceModel: function (e) {
            this.panner.distanceModel = e;
          },
          getMaxDistance: function () {
            return this.panner.maxDistance;
          },
          setMaxDistance: function (e) {
            this.panner.maxDistance = e;
          },
          updateMatrixWorld:
            ((ec = new Ct()),
            function (e) {
              Un.prototype.updateMatrixWorld.call(this, e),
                ec.setFromMatrixPosition(this.matrixWorld),
                this.panner.setPosition(ec.x, ec.y, ec.z);
            }),
        })),
        Object.assign(Fc.prototype, {
          getFrequencyData: function () {
            return this.analyser.getByteFrequencyData(this.data), this.data;
          },
          getAverageFrequency: function () {
            for (
              var e = 0, t = this.getFrequencyData(), i = 0;
              i < t.length;
              i++
            )
              e += t[i];
            return e / t.length;
          },
        }),
        Object.assign(kc.prototype, {
          accumulate: function (e, t) {
            var i = this.buffer,
              n = this.valueSize,
              r = e * n + n,
              e = this.cumulativeWeight;
            if (0 === e) {
              for (var o = 0; o !== n; ++o) i[r + o] = i[o];
              e = t;
            } else {
              t = t / (e += t);
              this._mixBufferRegion(i, r, 0, t, n);
            }
            this.cumulativeWeight = e;
          },
          apply: function (e) {
            var t = this.valueSize,
              i = this.buffer,
              n = e * t + t,
              r = this.cumulativeWeight,
              o = this.binding;
            (this.cumulativeWeight = 0),
              r < 1 && ((e = 3 * t), this._mixBufferRegion(i, n, e, 1 - r, t));
            for (var a = t, s = t + t; a !== s; ++a)
              if (i[a] !== i[a + t]) {
                o.setValue(i, n);
                break;
              }
          },
          saveOriginalState: function () {
            var e = this.binding,
              t = this.buffer,
              i = this.valueSize,
              n = 3 * i;
            e.getValue(t, n);
            for (var r = i, o = n; r !== o; ++r) t[r] = t[n + (r % i)];
            this.cumulativeWeight = 0;
          },
          restoreOriginalState: function () {
            var e = 3 * this.valueSize;
            this.binding.setValue(this.buffer, e);
          },
          _select: function (e, t, i, n, r) {
            if (0.5 <= n) for (var o = 0; o !== r; ++o) e[t + o] = e[i + o];
          },
          _slerp: function (e, t, i, n) {
            Lt.slerpFlat(e, t, e, t, e, i, n);
          },
          _lerp: function (e, t, i, n, r) {
            for (var o = 1 - n, a = 0; a !== r; ++a) {
              var s = t + a;
              e[s] = e[s] * o + e[i + a] * n;
            }
          },
        }),
        Object.assign(Uc.prototype, {
          getValue: function (e, t) {
            this.bind();
            var i = this._targetGroup.nCachedObjects_,
              i = this._bindings[i];
            void 0 !== i && i.getValue(e, t);
          },
          setValue: function (e, t) {
            for (
              var i = this._bindings,
                n = this._targetGroup.nCachedObjects_,
                r = i.length;
              n !== r;
              ++n
            )
              i[n].setValue(e, t);
          },
          bind: function () {
            for (
              var e = this._bindings,
                t = this._targetGroup.nCachedObjects_,
                i = e.length;
              t !== i;
              ++t
            )
              e[t].bind();
          },
          unbind: function () {
            for (
              var e = this._bindings,
                t = this._targetGroup.nCachedObjects_,
                i = e.length;
              t !== i;
              ++t
            )
              e[t].unbind();
          },
        }),
        Object.assign(Bc, {
          Composite: Uc,
          create: function (e, t, i) {
            return new (e && e.isAnimationObjectGroup ? Bc.Composite : Bc)(
              e,
              t,
              i
            );
          },
          sanitizeNodeName: function (e) {
            return e.replace(/\s/g, "_").replace(/[^\w-]/g, "");
          },
          parseTrackName:
            ((tc = new RegExp(
              "^" +
                /((?:[\w-]+[\/:])*)/.source +
                /([\w-\.]+)?/.source +
                /(?:\.([\w-]+)(?:\[(.+)\])?)?/.source +
                /\.([\w-]+)(?:\[(.+)\])?/.source +
                "$"
            )),
            (ic = ["material", "materials", "bones"]),
            function (e) {
              var t = tc.exec(e);
              if (!t)
                throw new Error(
                  "PropertyBinding: Cannot parse trackName: " + e
                );
              var i = {
                  nodeName: t[2],
                  objectName: t[3],
                  objectIndex: t[4],
                  propertyName: t[5],
                  propertyIndex: t[6],
                },
                n = i.nodeName && i.nodeName.lastIndexOf(".");
              if (
                (void 0 !== n &&
                  -1 !== n &&
                  ((t = i.nodeName.substring(n + 1)),
                  -1 !== ic.indexOf(t) &&
                    ((i.nodeName = i.nodeName.substring(0, n)),
                    (i.objectName = t))),
                null === i.propertyName || 0 === i.propertyName.length)
              )
                throw new Error(
                  "PropertyBinding: can not parse propertyName from trackName: " +
                    e
                );
              return i;
            }),
          findNode: function (e, n) {
            if (
              !n ||
              "" === n ||
              "root" === n ||
              "." === n ||
              -1 === n ||
              n === e.name ||
              n === e.uuid
            )
              return e;
            if (e.skeleton) {
              var t = (function (e) {
                for (var t = 0; t < e.bones.length; t++) {
                  var i = e.bones[t];
                  if (i.name === n) return i;
                }
                return null;
              })(e.skeleton);
              if (t) return t;
            }
            if (e.children) {
              var r = function (e) {
                  for (var t = 0; t < e.length; t++) {
                    var i = e[t];
                    if (i.name === n || i.uuid === n) return i;
                    i = r(i.children);
                    if (i) return i;
                  }
                  return null;
                },
                e = r(e.children);
              if (e) return e;
            }
            return null;
          },
        }),
        Object.assign(Bc.prototype, {
          _getValue_unavailable: function () {},
          _setValue_unavailable: function () {},
          BindingType: {
            Direct: 0,
            EntireArray: 1,
            ArrayElement: 2,
            HasFromToArray: 3,
          },
          Versioning: { None: 0, NeedsUpdate: 1, MatrixWorldNeedsUpdate: 2 },
          GetterByBindingType: [
            function (e, t) {
              e[t] = this.node[this.propertyName];
            },
            function (e, t) {
              for (
                var i = this.resolvedProperty, n = 0, r = i.length;
                n !== r;
                ++n
              )
                e[t++] = i[n];
            },
            function (e, t) {
              e[t] = this.resolvedProperty[this.propertyIndex];
            },
            function (e, t) {
              this.resolvedProperty.toArray(e, t);
            },
          ],
          SetterByBindingTypeAndVersioning: [
            [
              function (e, t) {
                this.targetObject[this.propertyName] = e[t];
              },
              function (e, t) {
                (this.targetObject[this.propertyName] = e[t]),
                  (this.targetObject.needsUpdate = !0);
              },
              function (e, t) {
                (this.targetObject[this.propertyName] = e[t]),
                  (this.targetObject.matrixWorldNeedsUpdate = !0);
              },
            ],
            [
              function (e, t) {
                for (
                  var i = this.resolvedProperty, n = 0, r = i.length;
                  n !== r;
                  ++n
                )
                  i[n] = e[t++];
              },
              function (e, t) {
                for (
                  var i = this.resolvedProperty, n = 0, r = i.length;
                  n !== r;
                  ++n
                )
                  i[n] = e[t++];
                this.targetObject.needsUpdate = !0;
              },
              function (e, t) {
                for (
                  var i = this.resolvedProperty, n = 0, r = i.length;
                  n !== r;
                  ++n
                )
                  i[n] = e[t++];
                this.targetObject.matrixWorldNeedsUpdate = !0;
              },
            ],
            [
              function (e, t) {
                this.resolvedProperty[this.propertyIndex] = e[t];
              },
              function (e, t) {
                (this.resolvedProperty[this.propertyIndex] = e[t]),
                  (this.targetObject.needsUpdate = !0);
              },
              function (e, t) {
                (this.resolvedProperty[this.propertyIndex] = e[t]),
                  (this.targetObject.matrixWorldNeedsUpdate = !0);
              },
            ],
            [
              function (e, t) {
                this.resolvedProperty.fromArray(e, t);
              },
              function (e, t) {
                this.resolvedProperty.fromArray(e, t),
                  (this.targetObject.needsUpdate = !0);
              },
              function (e, t) {
                this.resolvedProperty.fromArray(e, t),
                  (this.targetObject.matrixWorldNeedsUpdate = !0);
              },
            ],
          ],
          getValue: function (e, t) {
            this.bind(), this.getValue(e, t);
          },
          setValue: function (e, t) {
            this.bind(), this.setValue(e, t);
          },
          bind: function () {
            var e = this.node,
              t = this.parsedPath,
              i = t.objectName,
              n = t.propertyName,
              r = t.propertyIndex;
            if (
              (e ||
                ((e = Bc.findNode(this.rootNode, t.nodeName) || this.rootNode),
                (this.node = e)),
              (this.getValue = this._getValue_unavailable),
              (this.setValue = this._setValue_unavailable),
              e)
            ) {
              if (i) {
                var o = t.objectIndex;
                switch (i) {
                  case "materials":
                    if (!e.material)
                      return void console.error(
                        "THREE.PropertyBinding: Can not bind to material as node does not have a material.",
                        this
                      );
                    if (!e.material.materials)
                      return void console.error(
                        "THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",
                        this
                      );
                    e = e.material.materials;
                    break;
                  case "bones":
                    if (!e.skeleton)
                      return void console.error(
                        "THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",
                        this
                      );
                    e = e.skeleton.bones;
                    for (var a = 0; a < e.length; a++)
                      if (e[a].name === o) {
                        o = a;
                        break;
                      }
                    break;
                  default:
                    if (void 0 === e[i])
                      return void console.error(
                        "THREE.PropertyBinding: Can not bind to objectName of node undefined.",
                        this
                      );
                    e = e[i];
                }
                if (void 0 !== o) {
                  if (void 0 === e[o])
                    return void console.error(
                      "THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",
                      this,
                      e
                    );
                  e = e[o];
                }
              }
              var s = e[n];
              if (void 0 !== s) {
                var l = this.Versioning.None;
                void 0 !== e.needsUpdate
                  ? ((l = this.Versioning.NeedsUpdate), (this.targetObject = e))
                  : void 0 !== e.matrixWorldNeedsUpdate &&
                    ((l = this.Versioning.MatrixWorldNeedsUpdate),
                    (this.targetObject = e));
                var c = this.BindingType.Direct;
                if (void 0 !== r) {
                  if ("morphTargetInfluences" === n) {
                    if (!e.geometry)
                      return void console.error(
                        "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",
                        this
                      );
                    if (e.geometry.isBufferGeometry) {
                      if (!e.geometry.morphAttributes)
                        return void console.error(
                          "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",
                          this
                        );
                      for (
                        a = 0;
                        a < this.node.geometry.morphAttributes.position.length;
                        a++
                      )
                        if (e.geometry.morphAttributes.position[a].name === r) {
                          r = a;
                          break;
                        }
                    } else {
                      if (!e.geometry.morphTargets)
                        return void console.error(
                          "THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",
                          this
                        );
                      for (
                        a = 0;
                        a < this.node.geometry.morphTargets.length;
                        a++
                      )
                        if (e.geometry.morphTargets[a].name === r) {
                          r = a;
                          break;
                        }
                    }
                  }
                  (c = this.BindingType.ArrayElement),
                    (this.resolvedProperty = s),
                    (this.propertyIndex = r);
                } else
                  void 0 !== s.fromArray && void 0 !== s.toArray
                    ? ((c = this.BindingType.HasFromToArray),
                      (this.resolvedProperty = s))
                    : Array.isArray(s)
                    ? ((c = this.BindingType.EntireArray),
                      (this.resolvedProperty = s))
                    : (this.propertyName = n);
                (this.getValue = this.GetterByBindingType[c]),
                  (this.setValue = this.SetterByBindingTypeAndVersioning[c][l]);
              } else {
                t = t.nodeName;
                console.error(
                  "THREE.PropertyBinding: Trying to update property for track: " +
                    t +
                    "." +
                    n +
                    " but it wasn't found.",
                  e
                );
              }
            } else
              console.error(
                "THREE.PropertyBinding: Trying to update node for track: " +
                  this.path +
                  " but it wasn't found."
              );
          },
          unbind: function () {
            (this.node = null),
              (this.getValue = this._getValue_unbound),
              (this.setValue = this._setValue_unbound);
          },
        }),
        Object.assign(Bc.prototype, {
          _getValue_unbound: Bc.prototype.getValue,
          _setValue_unbound: Bc.prototype.setValue,
        }),
        Object.assign(zc.prototype, {
          isAnimationObjectGroup: !0,
          add: function () {
            for (
              var e = this._objects,
                t = e.length,
                i = this.nCachedObjects_,
                n = this._indicesByUUID,
                r = this._paths,
                o = this._parsedPaths,
                a = this._bindings,
                s = a.length,
                l = 0,
                c = arguments.length;
              l !== c;
              ++l
            ) {
              var h = arguments[l],
                u = h.uuid,
                d = n[u],
                p = void 0;
              if (void 0 === d) {
                (d = t++), (n[u] = d), e.push(h);
                for (var f = 0, m = s; f !== m; ++f)
                  a[f].push(new Bc(h, r[f], o[f]));
              } else if (d < i) {
                p = e[d];
                var g = --i,
                  v = e[g];
                (e[(n[v.uuid] = d)] = v), (e[(n[u] = g)] = h);
                for (f = 0, m = s; f !== m; ++f) {
                  var y = a[f],
                    _ = y[g],
                    x = y[d];
                  (y[d] = _),
                    void 0 === x && (x = new Bc(h, r[f], o[f])),
                    (y[g] = x);
                }
              } else
                e[d] !== p &&
                  console.error(
                    "THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes."
                  );
            }
            this.nCachedObjects_ = i;
          },
          remove: function () {
            for (
              var e = this._objects,
                t = this.nCachedObjects_,
                i = this._indicesByUUID,
                n = this._bindings,
                r = n.length,
                o = 0,
                a = arguments.length;
              o !== a;
              ++o
            ) {
              var s = arguments[o],
                l = s.uuid,
                c = i[l];
              if (void 0 !== c && t <= c) {
                var h = t++,
                  u = e[h];
                (e[(i[u.uuid] = c)] = u), (e[(i[l] = h)] = s);
                for (var d = 0, p = r; d !== p; ++d) {
                  var f = n[d],
                    m = f[h],
                    g = f[c];
                  (f[c] = m), (f[h] = g);
                }
              }
            }
            this.nCachedObjects_ = t;
          },
          uncache: function () {
            for (
              var e = this._objects,
                t = e.length,
                i = this.nCachedObjects_,
                n = this._indicesByUUID,
                r = this._bindings,
                o = r.length,
                a = 0,
                s = arguments.length;
              a !== s;
              ++a
            ) {
              var l = arguments[a].uuid,
                c = n[l];
              if (void 0 !== c)
                if ((delete n[l], c < i)) {
                  var h,
                    u = --i,
                    l = e[u],
                    d = e[(h = --t)];
                  (e[(n[l.uuid] = c)] = l), (e[(n[d.uuid] = u)] = d), e.pop();
                  for (var p = 0, f = o; p !== f; ++p) {
                    var m = (v = r[p])[u],
                      g = v[h];
                    (v[c] = m), (v[u] = g), v.pop();
                  }
                } else {
                  (e[(n[(d = e[(h = --t)]).uuid] = c)] = d), e.pop();
                  for (var v, p = 0, f = o; p !== f; ++p)
                    ((v = r[p])[c] = v[h]), v.pop();
                }
            }
            this.nCachedObjects_ = i;
          },
          subscribe_: function (e, t) {
            var i = this._bindingsIndicesByPath,
              n = i[e],
              r = this._bindings;
            if (void 0 !== n) return r[n];
            var o = this._paths,
              a = this._parsedPaths,
              s = this._objects,
              l = s.length,
              c = this.nCachedObjects_,
              h = new Array(l),
              n = r.length;
            (i[e] = n), o.push(e), a.push(t), r.push(h);
            for (var u = c, d = s.length; u !== d; ++u) {
              var p = s[u];
              h[u] = new Bc(p, e, t);
            }
            return h;
          },
          unsubscribe_: function (e) {
            var t,
              i,
              n,
              r,
              o,
              a = this._bindingsIndicesByPath,
              s = a[e];
            void 0 !== s &&
              ((t = this._paths),
              (i = this._parsedPaths),
              (o = (n = this._bindings)[(r = n.length - 1)]),
              (n[(a[e[r]] = s)] = o),
              n.pop(),
              (i[s] = i[r]),
              i.pop(),
              (t[s] = t[r]),
              t.pop());
          },
        }),
        Object.assign(jc.prototype, {
          play: function () {
            return this._mixer._activateAction(this), this;
          },
          stop: function () {
            return this._mixer._deactivateAction(this), this.reset();
          },
          reset: function () {
            return (
              (this.paused = !1),
              (this.enabled = !0),
              (this.time = 0),
              (this._loopCount = -1),
              (this._startTime = null),
              this.stopFading().stopWarping()
            );
          },
          isRunning: function () {
            return (
              this.enabled &&
              !this.paused &&
              0 !== this.timeScale &&
              null === this._startTime &&
              this._mixer._isActiveAction(this)
            );
          },
          isScheduled: function () {
            return this._mixer._isActiveAction(this);
          },
          startAt: function (e) {
            return (this._startTime = e), this;
          },
          setLoop: function (e, t) {
            return (this.loop = e), (this.repetitions = t), this;
          },
          setEffectiveWeight: function (e) {
            return (
              (this.weight = e),
              (this._effectiveWeight = this.enabled ? e : 0),
              this.stopFading()
            );
          },
          getEffectiveWeight: function () {
            return this._effectiveWeight;
          },
          fadeIn: function (e) {
            return this._scheduleFading(e, 0, 1);
          },
          fadeOut: function (e) {
            return this._scheduleFading(e, 1, 0);
          },
          crossFadeFrom: function (e, t, i) {
            var n, r;
            return (
              e.fadeOut(t),
              this.fadeIn(t),
              i &&
                ((n = this._clip.duration),
                (i = (r = e._clip.duration) / n),
                (r = n / r),
                e.warp(1, i, t),
                this.warp(r, 1, t)),
              this
            );
          },
          crossFadeTo: function (e, t, i) {
            return e.crossFadeFrom(this, t, i);
          },
          stopFading: function () {
            var e = this._weightInterpolant;
            return (
              null !== e &&
                ((this._weightInterpolant = null),
                this._mixer._takeBackControlInterpolant(e)),
              this
            );
          },
          setEffectiveTimeScale: function (e) {
            return (
              (this.timeScale = e),
              (this._effectiveTimeScale = this.paused ? 0 : e),
              this.stopWarping()
            );
          },
          getEffectiveTimeScale: function () {
            return this._effectiveTimeScale;
          },
          setDuration: function (e) {
            return (
              (this.timeScale = this._clip.duration / e), this.stopWarping()
            );
          },
          syncWith: function (e) {
            return (
              (this.time = e.time),
              (this.timeScale = e.timeScale),
              this.stopWarping()
            );
          },
          halt: function (e) {
            return this.warp(this._effectiveTimeScale, 0, e);
          },
          warp: function (e, t, i) {
            var n = this._mixer,
              r = n.time,
              o = this._timeScaleInterpolant,
              a = this.timeScale;
            null === o &&
              ((o = n._lendControlInterpolant()),
              (this._timeScaleInterpolant = o));
            (n = o.parameterPositions), (o = o.sampleValues);
            return (
              (n[0] = r), (n[1] = r + i), (o[0] = e / a), (o[1] = t / a), this
            );
          },
          stopWarping: function () {
            var e = this._timeScaleInterpolant;
            return (
              null !== e &&
                ((this._timeScaleInterpolant = null),
                this._mixer._takeBackControlInterpolant(e)),
              this
            );
          },
          getMixer: function () {
            return this._mixer;
          },
          getClip: function () {
            return this._clip;
          },
          getRoot: function () {
            return this._localRoot || this._mixer._root;
          },
          _update: function (e, t, i, n) {
            if (this.enabled) {
              var r = this._startTime;
              if (null !== r) {
                r = (e - r) * i;
                if (r < 0 || 0 === i) return;
                (this._startTime = null), (t = i * r);
              }
              t *= this._updateTimeScale(e);
              var o = this._updateTime(t),
                a = this._updateWeight(e);
              if (0 < a)
                for (
                  var s = this._interpolants,
                    l = this._propertyBindings,
                    c = 0,
                    h = s.length;
                  c !== h;
                  ++c
                )
                  s[c].evaluate(o), l[c].accumulate(n, a);
            } else this._updateWeight(e);
          },
          _updateWeight: function (e) {
            var t,
              i,
              n = 0;
            return (
              this.enabled &&
                ((n = this.weight),
                null !== (t = this._weightInterpolant) &&
                  ((n *= i = t.evaluate(e)[0]),
                  e > t.parameterPositions[1] &&
                    (this.stopFading(), 0 === i && (this.enabled = !1)))),
              (this._effectiveWeight = n)
            );
          },
          _updateTimeScale: function (e) {
            var t,
              i = 0;
            return (
              this.paused ||
                ((i = this.timeScale),
                null !== (t = this._timeScaleInterpolant) &&
                  ((i *= t.evaluate(e)[0]),
                  e > t.parameterPositions[1] &&
                    (this.stopWarping(),
                    0 === i ? (this.paused = !0) : (this.timeScale = i)))),
              (this._effectiveTimeScale = i)
            );
          },
          _updateTime: function (e) {
            var t = this.time + e;
            if (0 === e) return t;
            var i = this._clip.duration,
              n = this.loop,
              r = this._loopCount;
            if (2200 === n) {
              -1 === r && ((this._loopCount = 0), this._setEndings(!0, !0, !1));
              e: {
                if (i <= t) t = i;
                else {
                  if (!(t < 0)) break e;
                  t = 0;
                }
                this.clampWhenFinished
                  ? (this.paused = !0)
                  : (this.enabled = !1),
                  this._mixer.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: e < 0 ? -1 : 1,
                  });
              }
            } else {
              var o,
                a = 2202 === n;
              if (
                (-1 === r &&
                  (0 <= e
                    ? ((r = 0), this._setEndings(!0, 0 === this.repetitions, a))
                    : this._setEndings(0 === this.repetitions, !0, a)),
                (i <= t || t < 0) &&
                  ((t -= i * (o = Math.floor(t / i))),
                  (r += Math.abs(o)),
                  (n = this.repetitions - r) < 0
                    ? (this.clampWhenFinished
                        ? (this.paused = !0)
                        : (this.enabled = !1),
                      (t = 0 < e ? i : 0),
                      this._mixer.dispatchEvent({
                        type: "finished",
                        action: this,
                        direction: 0 < e ? 1 : -1,
                      }))
                    : (0 == n
                        ? ((n = e < 0), this._setEndings(n, !n, a))
                        : this._setEndings(!1, !1, a),
                      (this._loopCount = r),
                      this._mixer.dispatchEvent({
                        type: "loop",
                        action: this,
                        loopDelta: o,
                      }))),
                a && 1 == (1 & r))
              )
                return i - (this.time = t);
            }
            return (this.time = t);
          },
          _setEndings: function (e, t, i) {
            var n = this._interpolantSettings;
            i
              ? ((n.endingStart = pt), (n.endingEnd = pt))
              : ((n.endingStart = e ? (this.zeroSlopeAtStart ? pt : dt) : ft),
                (n.endingEnd = t ? (this.zeroSlopeAtEnd ? pt : dt) : ft));
          },
          _scheduleFading: function (e, t, i) {
            var n = this._mixer,
              r = n.time,
              o = this._weightInterpolant;
            null === o &&
              ((o = n._lendControlInterpolant()),
              (this._weightInterpolant = o));
            (n = o.parameterPositions), (o = o.sampleValues);
            return (n[0] = r), (o[0] = t), (n[1] = r + e), (o[1] = i), this;
          },
        }),
        Object.assign(Hc.prototype, t.prototype, {
          _bindAction: function (e, t) {
            var i = e._localRoot || this._root,
              n = e._clip.tracks,
              r = n.length,
              o = e._propertyBindings,
              a = e._interpolants,
              s = i.uuid,
              e = this._bindingsByRootAndName,
              l = e[s];
            void 0 === l && ((l = {}), (e[s] = l));
            for (var c = 0; c !== r; ++c) {
              var h = n[c],
                u = h.name;
              if (void 0 !== (d = l[u])) o[c] = d;
              else {
                if (void 0 !== (d = o[c])) {
                  null === d._cacheIndex &&
                    (++d.referenceCount, this._addInactiveBinding(d, s, u));
                  continue;
                }
                var d,
                  p = t && t._propertyBindings[c].binding.parsedPath;
                ++(d = new kc(
                  Bc.create(i, u, p),
                  h.ValueTypeName,
                  h.getValueSize()
                )).referenceCount,
                  this._addInactiveBinding(d, s, u),
                  (o[c] = d);
              }
              a[c].resultBuffer = d.buffer;
            }
          },
          _activateAction: function (e) {
            if (!this._isActiveAction(e)) {
              var t, i, n;
              null === e._cacheIndex &&
                ((t = (e._localRoot || this._root).uuid),
                (i = e._clip.uuid),
                (n = this._actionsByClip[i]),
                this._bindAction(e, n && n.knownActions[0]),
                this._addInactiveAction(e, i, t));
              for (
                var r = e._propertyBindings, o = 0, a = r.length;
                o !== a;
                ++o
              ) {
                var s = r[o];
                0 == s.useCount++ &&
                  (this._lendBinding(s), s.saveOriginalState());
              }
              this._lendAction(e);
            }
          },
          _deactivateAction: function (e) {
            if (this._isActiveAction(e)) {
              for (
                var t = e._propertyBindings, i = 0, n = t.length;
                i !== n;
                ++i
              ) {
                var r = t[i];
                0 == --r.useCount &&
                  (r.restoreOriginalState(), this._takeBackBinding(r));
              }
              this._takeBackAction(e);
            }
          },
          _initMemoryManager: function () {
            (this._actions = []),
              (this._nActiveActions = 0),
              (this._actionsByClip = {}),
              (this._bindings = []),
              (this._nActiveBindings = 0),
              (this._bindingsByRootAndName = {}),
              (this._controlInterpolants = []),
              (this._nActiveControlInterpolants = 0);
            var e = this;
            this.stats = {
              actions: {
                get total() {
                  return e._actions.length;
                },
                get inUse() {
                  return e._nActiveActions;
                },
              },
              bindings: {
                get total() {
                  return e._bindings.length;
                },
                get inUse() {
                  return e._nActiveBindings;
                },
              },
              controlInterpolants: {
                get total() {
                  return e._controlInterpolants.length;
                },
                get inUse() {
                  return e._nActiveControlInterpolants;
                },
              },
            };
          },
          _isActiveAction: function (e) {
            e = e._cacheIndex;
            return null !== e && e < this._nActiveActions;
          },
          _addInactiveAction: function (e, t, i) {
            var n = this._actions,
              r = this._actionsByClip,
              o = r[t];
            void 0 === o
              ? ((o = { knownActions: [e], actionByRoot: {} }),
                (e._byClipCacheIndex = 0),
                (r[t] = o))
              : ((t = o.knownActions),
                (e._byClipCacheIndex = t.length),
                t.push(e)),
              (e._cacheIndex = n.length),
              n.push(e),
              (o.actionByRoot[i] = e);
          },
          _removeInactiveAction: function (e) {
            var t = this._actions,
              i = t[t.length - 1],
              n = e._cacheIndex;
            (t[(i._cacheIndex = n)] = i), t.pop(), (e._cacheIndex = null);
            var r = e._clip.uuid,
              o = this._actionsByClip,
              a = o[r],
              n = a.knownActions,
              i = n[n.length - 1],
              t = e._byClipCacheIndex;
            (n[(i._byClipCacheIndex = t)] = i),
              n.pop(),
              (e._byClipCacheIndex = null),
              delete a.actionByRoot[(e._localRoot || this._root).uuid],
              0 === n.length && delete o[r],
              this._removeInactiveBindingsForAction(e);
          },
          _removeInactiveBindingsForAction: function (e) {
            for (
              var t = e._propertyBindings, i = 0, n = t.length;
              i !== n;
              ++i
            ) {
              var r = t[i];
              0 == --r.referenceCount && this._removeInactiveBinding(r);
            }
          },
          _lendAction: function (e) {
            var t = this._actions,
              i = e._cacheIndex,
              n = this._nActiveActions++,
              r = t[n];
            (t[(e._cacheIndex = n)] = e), (t[(r._cacheIndex = i)] = r);
          },
          _takeBackAction: function (e) {
            var t = this._actions,
              i = e._cacheIndex,
              n = --this._nActiveActions,
              r = t[n];
            (t[(e._cacheIndex = n)] = e), (t[(r._cacheIndex = i)] = r);
          },
          _addInactiveBinding: function (e, t, i) {
            var n = this._bindingsByRootAndName,
              r = n[t],
              o = this._bindings;
            void 0 === r && ((r = {}), (n[t] = r)),
              ((r[i] = e)._cacheIndex = o.length),
              o.push(e);
          },
          _removeInactiveBinding: function (e) {
            var t = this._bindings,
              i = e.binding,
              n = i.rootNode.uuid,
              r = i.path,
              o = this._bindingsByRootAndName,
              a = o[n],
              i = t[t.length - 1],
              e = e._cacheIndex;
            (t[(i._cacheIndex = e)] = i), t.pop(), delete a[r];
            e: {
              for (var s in a) break e;
              delete o[n];
            }
          },
          _lendBinding: function (e) {
            var t = this._bindings,
              i = e._cacheIndex,
              n = this._nActiveBindings++,
              r = t[n];
            (t[(e._cacheIndex = n)] = e), (t[(r._cacheIndex = i)] = r);
          },
          _takeBackBinding: function (e) {
            var t = this._bindings,
              i = e._cacheIndex,
              n = --this._nActiveBindings,
              r = t[n];
            (t[(e._cacheIndex = n)] = e), (t[(r._cacheIndex = i)] = r);
          },
          _lendControlInterpolant: function () {
            var e = this._controlInterpolants,
              t = this._nActiveControlInterpolants++,
              i = e[t];
            return (
              void 0 === i &&
                (e[
                  ((i = new Js(
                    new Float32Array(2),
                    new Float32Array(2),
                    1,
                    this._controlInterpolantsResultBuffer
                  )).__cacheIndex = t)
                ] = i),
              i
            );
          },
          _takeBackControlInterpolant: function (e) {
            var t = this._controlInterpolants,
              i = e.__cacheIndex,
              n = --this._nActiveControlInterpolants,
              r = t[n];
            (t[(e.__cacheIndex = n)] = e), (t[(r.__cacheIndex = i)] = r);
          },
          _controlInterpolantsResultBuffer: new Float32Array(1),
          clipAction: function (e, t) {
            var i = t || this._root,
              n = i.uuid,
              r = "string" == typeof e ? ll.findByName(i, e) : e,
              o = null !== r ? r.uuid : e,
              a = this._actionsByClip[o],
              i = null;
            if (void 0 !== a) {
              e = a.actionByRoot[n];
              if (void 0 !== e) return e;
              (i = a.knownActions[0]), null === r && (r = i._clip);
            }
            if (null === r) return null;
            t = new jc(this, r, t);
            return this._bindAction(t, i), this._addInactiveAction(t, o, n), t;
          },
          existingAction: function (e, t) {
            var i = t || this._root,
              t = i.uuid,
              i = "string" == typeof e ? ll.findByName(i, e) : e,
              e = i ? i.uuid : e,
              e = this._actionsByClip[e];
            return (void 0 !== e && e.actionByRoot[t]) || null;
          },
          stopAllAction: function () {
            var e = this._actions,
              t = this._nActiveActions,
              i = this._bindings,
              n = this._nActiveBindings;
            this._nActiveActions = 0;
            for (var r = (this._nActiveBindings = 0); r !== t; ++r)
              e[r].reset();
            for (r = 0; r !== n; ++r) i[r].useCount = 0;
            return this;
          },
          update: function (e) {
            e *= this.timeScale;
            for (
              var t = this._actions,
                i = this._nActiveActions,
                n = (this.time += e),
                r = Math.sign(e),
                o = (this._accuIndex ^= 1),
                a = 0;
              a !== i;
              ++a
            )
              t[a]._update(n, e, r, o);
            for (
              var s = this._bindings, l = this._nActiveBindings, a = 0;
              a !== l;
              ++a
            )
              s[a].apply(o);
            return this;
          },
          getRoot: function () {
            return this._root;
          },
          uncacheClip: function (e) {
            var t = this._actions,
              i = e.uuid,
              n = this._actionsByClip,
              e = n[i];
            if (void 0 !== e) {
              for (var r = e.knownActions, o = 0, a = r.length; o !== a; ++o) {
                var s = r[o];
                this._deactivateAction(s);
                var l = s._cacheIndex,
                  c = t[t.length - 1];
                (s._cacheIndex = null),
                  (s._byClipCacheIndex = null),
                  (t[(c._cacheIndex = l)] = c),
                  t.pop(),
                  this._removeInactiveBindingsForAction(s);
              }
              delete n[i];
            }
          },
          uncacheRoot: function (e) {
            var t,
              i = e.uuid,
              n = this._actionsByClip;
            for (t in n) {
              var r = n[t].actionByRoot[i];
              void 0 !== r &&
                (this._deactivateAction(r), this._removeInactiveAction(r));
            }
            var o = this._bindingsByRootAndName[i];
            if (void 0 !== o)
              for (var a in o) {
                var s = o[a];
                s.restoreOriginalState(), this._removeInactiveBinding(s);
              }
          },
          uncacheAction: function (e, t) {
            t = this.existingAction(e, t);
            null !== t &&
              (this._deactivateAction(t), this._removeInactiveAction(t));
          },
        }),
        (Gc.prototype.clone = function () {
          return new Gc(
            void 0 === this.value.clone ? this.value : this.value.clone()
          );
        }),
        (Vc.prototype = Object.assign(Object.create(no.prototype), {
          constructor: Vc,
          isInstancedBufferGeometry: !0,
          copy: function (e) {
            return (
              no.prototype.copy.call(this, e),
              (this.maxInstancedCount = e.maxInstancedCount),
              this
            );
          },
          clone: function () {
            return new this.constructor().copy(this);
          },
        })),
        Object.defineProperties(Wc.prototype, {
          count: {
            get: function () {
              return this.data.count;
            },
          },
          array: {
            get: function () {
              return this.data.array;
            },
          },
        }),
        Object.assign(Wc.prototype, {
          isInterleavedBufferAttribute: !0,
          setX: function (e, t) {
            return (
              (this.data.array[e * this.data.stride + this.offset] = t), this
            );
          },
          setY: function (e, t) {
            return (
              (this.data.array[e * this.data.stride + this.offset + 1] = t),
              this
            );
          },
          setZ: function (e, t) {
            return (
              (this.data.array[e * this.data.stride + this.offset + 2] = t),
              this
            );
          },
          setW: function (e, t) {
            return (
              (this.data.array[e * this.data.stride + this.offset + 3] = t),
              this
            );
          },
          getX: function (e) {
            return this.data.array[e * this.data.stride + this.offset];
          },
          getY: function (e) {
            return this.data.array[e * this.data.stride + this.offset + 1];
          },
          getZ: function (e) {
            return this.data.array[e * this.data.stride + this.offset + 2];
          },
          getW: function (e) {
            return this.data.array[e * this.data.stride + this.offset + 3];
          },
          setXY: function (e, t, i) {
            return (
              (e = e * this.data.stride + this.offset),
              (this.data.array[e + 0] = t),
              (this.data.array[e + 1] = i),
              this
            );
          },
          setXYZ: function (e, t, i, n) {
            return (
              (e = e * this.data.stride + this.offset),
              (this.data.array[e + 0] = t),
              (this.data.array[e + 1] = i),
              (this.data.array[e + 2] = n),
              this
            );
          },
          setXYZW: function (e, t, i, n, r) {
            return (
              (e = e * this.data.stride + this.offset),
              (this.data.array[e + 0] = t),
              (this.data.array[e + 1] = i),
              (this.data.array[e + 2] = n),
              (this.data.array[e + 3] = r),
              this
            );
          },
        }),
        Object.defineProperty(Xc.prototype, "needsUpdate", {
          set: function (e) {
            !0 === e && this.version++;
          },
        }),
        Object.assign(Xc.prototype, {
          isInterleavedBuffer: !0,
          setArray: function (e) {
            if (Array.isArray(e))
              throw new TypeError(
                "THREE.BufferAttribute: array should be a Typed Array."
              );
            (this.count = void 0 !== e ? e.length / this.stride : 0),
              (this.array = e);
          },
          setDynamic: function (e) {
            return (this.dynamic = e), this;
          },
          copy: function (e) {
            return (
              (this.array = new e.array.constructor(e.array)),
              (this.count = e.count),
              (this.stride = e.stride),
              (this.dynamic = e.dynamic),
              this
            );
          },
          copyAt: function (e, t, i) {
            (e *= this.stride), (i *= t.stride);
            for (var n = 0, r = this.stride; n < r; n++)
              this.array[e + n] = t.array[i + n];
            return this;
          },
          set: function (e, t) {
            return void 0 === t && (t = 0), this.array.set(e, t), this;
          },
          clone: function () {
            return new this.constructor().copy(this);
          },
          onUpload: function (e) {
            return (this.onUploadCallback = e), this;
          },
        }),
        (qc.prototype = Object.assign(Object.create(Xc.prototype), {
          constructor: qc,
          isInstancedInterleavedBuffer: !0,
          copy: function (e) {
            return (
              Xc.prototype.copy.call(this, e),
              (this.meshPerAttribute = e.meshPerAttribute),
              this
            );
          },
        })),
        (Yc.prototype = Object.assign(Object.create(Zn.prototype), {
          constructor: Yc,
          isInstancedBufferAttribute: !0,
          copy: function (e) {
            return (
              Zn.prototype.copy.call(this, e),
              (this.meshPerAttribute = e.meshPerAttribute),
              this
            );
          },
        })),
        Object.assign(Qc.prototype, {
          linePrecision: 1,
          set: function (e, t) {
            this.ray.set(e, t);
          },
          setFromCamera: function (e, t) {
            t && t.isPerspectiveCamera
              ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld),
                this.ray.direction
                  .set(e.x, e.y, 0.5)
                  .unproject(t)
                  .sub(this.ray.origin)
                  .normalize())
              : t && t.isOrthographicCamera
              ? (this.ray.origin
                  .set(e.x, e.y, (t.near + t.far) / (t.near - t.far))
                  .unproject(t),
                this.ray.direction
                  .set(0, 0, -1)
                  .transformDirection(t.matrixWorld))
              : console.error("THREE.Raycaster: Unsupported camera type.");
          },
          intersectObject: function (e, t) {
            var i = [];
            return Jc(e, this, i, t), i.sort(Zc), i;
          },
          intersectObjects: function (e, t) {
            var i = [];
            if (!1 === Array.isArray(e))
              return (
                console.warn(
                  "THREE.Raycaster.intersectObjects: objects is not an Array."
                ),
                i
              );
            for (var n = 0, r = e.length; n < r; n++) Jc(e[n], this, i, t);
            return i.sort(Zc), i;
          },
        }),
        Object.assign($c.prototype, {
          start: function () {
            (this.startTime = (
              "undefined" == typeof performance ? Date : performance
            ).now()),
              (this.oldTime = this.startTime),
              (this.elapsedTime = 0),
              (this.running = !0);
          },
          stop: function () {
            this.getElapsedTime(), (this.running = !1), (this.autoStart = !1);
          },
          getElapsedTime: function () {
            return this.getDelta(), this.elapsedTime;
          },
          getDelta: function () {
            var e,
              t = 0;
            return this.autoStart && !this.running
              ? (this.start(), 0)
              : (this.running &&
                  ((t =
                    ((e = (
                      "undefined" == typeof performance ? Date : performance
                    ).now()) -
                      this.oldTime) /
                    1e3),
                  (this.oldTime = e),
                  (this.elapsedTime += t)),
                t);
          },
        }),
        Object.assign(Kc.prototype, {
          set: function (e, t, i) {
            return (this.radius = e), (this.phi = t), (this.theta = i), this;
          },
          clone: function () {
            return new this.constructor().copy(this);
          },
          copy: function (e) {
            return (
              (this.radius = e.radius),
              (this.phi = e.phi),
              (this.theta = e.theta),
              this
            );
          },
          makeSafe: function () {
            return (
              (this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi))),
              this
            );
          },
          setFromVector3: function (e) {
            return (
              (this.radius = e.length()),
              0 === this.radius
                ? ((this.theta = 0), (this.phi = 0))
                : ((this.theta = Math.atan2(e.x, e.z)),
                  (this.phi = Math.acos(Mt.clamp(e.y / this.radius, -1, 1)))),
              this
            );
          },
        }),
        Object.assign(eh.prototype, {
          set: function (e, t, i) {
            return (this.radius = e), (this.theta = t), (this.y = i), this;
          },
          clone: function () {
            return new this.constructor().copy(this);
          },
          copy: function (e) {
            return (
              (this.radius = e.radius),
              (this.theta = e.theta),
              (this.y = e.y),
              this
            );
          },
          setFromVector3: function (e) {
            return (
              (this.radius = Math.sqrt(e.x * e.x + e.z * e.z)),
              (this.theta = Math.atan2(e.x, e.z)),
              (this.y = e.y),
              this
            );
          },
        }),
        (((th.prototype = Object.create(Un.prototype)).constructor =
          th).prototype.isImmediateRenderObject = !0),
        (((ih.prototype = Object.create(Sa.prototype)).constructor =
          ih).prototype.update =
          ((nc = new Ct()),
          (rc = new Ct()),
          (oc = new Pt()),
          function () {
            var e = ["a", "b", "c"];
            this.object.updateMatrixWorld(!0),
              oc.getNormalMatrix(this.object.matrixWorld);
            var t = this.object.matrixWorld,
              i = this.geometry.attributes.position,
              n = this.object.geometry;
            if (n && n.isGeometry)
              for (
                var r = n.vertices, o = n.faces, a = 0, s = 0, l = o.length;
                s < l;
                s++
              )
                for (
                  var c = o[s], h = 0, u = c.vertexNormals.length;
                  h < u;
                  h++
                ) {
                  var d = r[c[e[h]]],
                    p = c.vertexNormals[h];
                  nc.copy(d).applyMatrix4(t),
                    rc
                      .copy(p)
                      .applyMatrix3(oc)
                      .normalize()
                      .multiplyScalar(this.size)
                      .add(nc),
                    i.setXYZ(a, nc.x, nc.y, nc.z),
                    (a += 1),
                    i.setXYZ(a, rc.x, rc.y, rc.z),
                    (a += 1);
                }
            else if (n && n.isBufferGeometry)
              for (
                var f = n.attributes.position,
                  m = n.attributes.normal,
                  a = 0,
                  h = 0,
                  u = f.count;
                h < u;
                h++
              )
                nc.set(f.getX(h), f.getY(h), f.getZ(h)).applyMatrix4(t),
                  rc.set(m.getX(h), m.getY(h), m.getZ(h)),
                  rc
                    .applyMatrix3(oc)
                    .normalize()
                    .multiplyScalar(this.size)
                    .add(nc),
                  i.setXYZ(a, nc.x, nc.y, nc.z),
                  (a += 1),
                  i.setXYZ(a, rc.x, rc.y, rc.z),
                  (a += 1);
            i.needsUpdate = !0;
          })),
        (((nh.prototype = Object.create(Un.prototype)).constructor =
          nh).prototype.dispose = function () {
          this.cone.geometry.dispose(), this.cone.material.dispose();
        }),
        (nh.prototype.update =
          ((ac = new Ct()),
          (sc = new Ct()),
          function () {
            this.light.updateMatrixWorld();
            var e = this.light.distance || 1e3,
              t = e * Math.tan(this.light.angle);
            this.cone.scale.set(t, t, e),
              ac.setFromMatrixPosition(this.light.matrixWorld),
              sc.setFromMatrixPosition(this.light.target.matrixWorld),
              this.cone.lookAt(sc.sub(ac)),
              void 0 !== this.color
                ? this.cone.material.color.set(this.color)
                : this.cone.material.color.copy(this.light.color);
          })),
        (((rh.prototype = Object.create(Sa.prototype)).constructor =
          rh).prototype.updateMatrixWorld =
          ((lc = new Ct()),
          (cc = new At()),
          (hc = new At()),
          function (e) {
            var t = this.bones,
              i = this.geometry,
              n = i.getAttribute("position");
            hc.getInverse(this.root.matrixWorld);
            for (var r = 0, o = 0; r < t.length; r++) {
              var a = t[r];
              a.parent &&
                a.parent.isBone &&
                (cc.multiplyMatrices(hc, a.matrixWorld),
                lc.setFromMatrixPosition(cc),
                n.setXYZ(o, lc.x, lc.y, lc.z),
                cc.multiplyMatrices(hc, a.parent.matrixWorld),
                lc.setFromMatrixPosition(cc),
                n.setXYZ(o + 1, lc.x, lc.y, lc.z),
                (o += 2));
            }
            (i.getAttribute("position").needsUpdate = !0),
              Un.prototype.updateMatrixWorld.call(this, e);
          })),
        (((oh.prototype = Object.create(fo.prototype)).constructor =
          oh).prototype.dispose = function () {
          this.geometry.dispose(), this.material.dispose();
        }),
        (oh.prototype.update = function () {
          void 0 !== this.color
            ? this.material.color.set(this.color)
            : this.material.color.copy(this.light.color);
        }),
        (((ah.prototype = Object.create(Un.prototype)).constructor =
          ah).prototype.dispose = function () {
          this.children[0].geometry.dispose(),
            this.children[0].material.dispose();
        }),
        (ah.prototype.update = function () {
          var e = 0.5 * this.light.width,
            t = 0.5 * this.light.height,
            i = this.line.geometry.attributes.position,
            n = i.array;
          (n[0] = e),
            (n[1] = -t),
            (n[2] = 0),
            (n[3] = e),
            (n[4] = t),
            (n[5] = 0),
            (n[6] = -e),
            (n[7] = t),
            (n[8] = 0),
            (n[9] = -e),
            (n[10] = -t),
            (n[11] = 0),
            (n[12] = e),
            (n[13] = -t),
            (n[14] = 0),
            (i.needsUpdate = !0),
            void 0 !== this.color
              ? this.line.material.color.set(this.color)
              : this.line.material.color.copy(this.light.color);
        }),
        (((sh.prototype = Object.create(Un.prototype)).constructor =
          sh).prototype.dispose = function () {
          this.children[0].geometry.dispose(),
            this.children[0].material.dispose();
        }),
        (sh.prototype.update =
          ((uc = new Ct()),
          (dc = new Mi()),
          (pc = new Mi()),
          function () {
            var e = this.children[0];
            if (void 0 !== this.color) this.material.color.set(this.color);
            else {
              var t = e.geometry.getAttribute("color");
              dc.copy(this.light.color), pc.copy(this.light.groundColor);
              for (var i = 0, n = t.count; i < n; i++) {
                var r = i < n / 2 ? dc : pc;
                t.setXYZ(i, r.r, r.g, r.b);
              }
              t.needsUpdate = !0;
            }
            e.lookAt(uc.setFromMatrixPosition(this.light.matrixWorld).negate());
          })),
        ((lh.prototype = Object.create(Sa.prototype)).constructor = lh),
        ((ch.prototype = Object.create(Sa.prototype)).constructor = ch),
        (((hh.prototype = Object.create(Sa.prototype)).constructor =
          hh).prototype.update =
          ((fc = new Ct()),
          (mc = new Ct()),
          (gc = new Pt()),
          function () {
            this.object.updateMatrixWorld(!0),
              gc.getNormalMatrix(this.object.matrixWorld);
            for (
              var e = this.object.matrixWorld,
                t = this.geometry.attributes.position,
                i = this.object.geometry,
                n = i.vertices,
                r = i.faces,
                o = 0,
                a = 0,
                s = r.length;
              a < s;
              a++
            ) {
              var l = r[a],
                c = l.normal;
              fc
                .copy(n[l.a])
                .add(n[l.b])
                .add(n[l.c])
                .divideScalar(3)
                .applyMatrix4(e),
                mc
                  .copy(c)
                  .applyMatrix3(gc)
                  .normalize()
                  .multiplyScalar(this.size)
                  .add(fc),
                t.setXYZ(o, fc.x, fc.y, fc.z),
                (o += 1),
                t.setXYZ(o, mc.x, mc.y, mc.z),
                (o += 1);
            }
            t.needsUpdate = !0;
          })),
        (((uh.prototype = Object.create(Un.prototype)).constructor =
          uh).prototype.dispose = function () {
          this.lightPlane.geometry.dispose(),
            this.lightPlane.material.dispose(),
            this.targetLine.geometry.dispose(),
            this.targetLine.material.dispose();
        }),
        (uh.prototype.update =
          ((vc = new Ct()),
          (yc = new Ct()),
          (_c = new Ct()),
          function () {
            vc.setFromMatrixPosition(this.light.matrixWorld),
              yc.setFromMatrixPosition(this.light.target.matrixWorld),
              _c.subVectors(yc, vc),
              this.lightPlane.lookAt(_c),
              void 0 !== this.color
                ? (this.lightPlane.material.color.set(this.color),
                  this.targetLine.material.color.set(this.color))
                : (this.lightPlane.material.color.copy(this.light.color),
                  this.targetLine.material.color.copy(this.light.color)),
              this.targetLine.lookAt(_c),
              (this.targetLine.scale.z = _c.length());
          })),
        (((dh.prototype = Object.create(Sa.prototype)).constructor =
          dh).prototype.update =
          ((wc = new Ct()),
          (Tc = new Bn()),
          function () {
            (xc = this.geometry), (bc = this.pointMap);
            Tc.projectionMatrix.copy(this.camera.projectionMatrix),
              ph("c", 0, 0, -1),
              ph("t", 0, 0, 1),
              ph("n1", -1, -1, -1),
              ph("n2", 1, -1, -1),
              ph("n3", -1, 1, -1),
              ph("n4", 1, 1, -1),
              ph("f1", -1, -1, 1),
              ph("f2", 1, -1, 1),
              ph("f3", -1, 1, 1),
              ph("f4", 1, 1, 1),
              ph("u1", 0.7, 1.1, -1),
              ph("u2", -0.7, 1.1, -1),
              ph("u3", 0, 2, -1),
              ph("cf1", -1, 0, 1),
              ph("cf2", 1, 0, 1),
              ph("cf3", 0, -1, 1),
              ph("cf4", 0, 1, 1),
              ph("cn1", -1, 0, -1),
              ph("cn2", 1, 0, -1),
              ph("cn3", 0, -1, -1),
              ph("cn4", 0, 1, -1),
              (xc.getAttribute("position").needsUpdate = !0);
          })),
        (((fh.prototype = Object.create(Sa.prototype)).constructor =
          fh).prototype.update =
          ((Sc = new cn()),
          function (e) {
            var t, i, n;
            void 0 !== e &&
              console.warn(
                "THREE.BoxHelper: .update() has no longer arguments."
              ),
              void 0 !== this.object && Sc.setFromObject(this.object),
              Sc.isEmpty() ||
                ((t = Sc.min),
                (i = Sc.max),
                ((e = (n = this.geometry.attributes.position).array)[0] = i.x),
                (e[1] = i.y),
                (e[2] = i.z),
                (e[3] = t.x),
                (e[4] = i.y),
                (e[5] = i.z),
                (e[6] = t.x),
                (e[7] = t.y),
                (e[8] = i.z),
                (e[9] = i.x),
                (e[10] = t.y),
                (e[11] = i.z),
                (e[12] = i.x),
                (e[13] = i.y),
                (e[14] = t.z),
                (e[15] = t.x),
                (e[16] = i.y),
                (e[17] = t.z),
                (e[18] = t.x),
                (e[19] = t.y),
                (e[20] = t.z),
                (e[21] = i.x),
                (e[22] = t.y),
                (e[23] = t.z),
                (n.needsUpdate = !0),
                this.geometry.computeBoundingSphere());
          })),
        (fh.prototype.setFromObject = function (e) {
          return (this.object = e), this.update(), this;
        }),
        (((mh.prototype = Object.create(Sa.prototype)).constructor =
          mh).prototype.updateMatrixWorld = function (e) {
          var t = this.box;
          t.isEmpty() ||
            (t.getCenter(this.position),
            t.getSize(this.scale),
            this.scale.multiplyScalar(0.5),
            Un.prototype.updateMatrixWorld.call(this, e));
        }),
        (((gh.prototype = Object.create(Ta.prototype)).constructor =
          gh).prototype.updateMatrixWorld = function (e) {
          var t = -this.plane.constant;
          Math.abs(t) < 1e-8 && (t = 1e-8),
            this.scale.set(0.5 * this.size, 0.5 * this.size, t),
            this.lookAt(this.plane.normal),
            Un.prototype.updateMatrixWorld.call(this, e);
        }),
        (((vh.prototype = Object.create(Un.prototype)).constructor =
          vh).prototype.setDirection =
          ((Lc = new Ct()),
          function (e) {
            0.99999 < e.y
              ? this.quaternion.set(0, 0, 0, 1)
              : e.y < -0.99999
              ? this.quaternion.set(1, 0, 0, 0)
              : (Lc.set(e.z, 0, -e.x).normalize(),
                (Ac = Math.acos(e.y)),
                this.quaternion.setFromAxisAngle(Lc, Ac));
          })),
        (vh.prototype.setLength = function (e, t, i) {
          void 0 === t && (t = 0.2 * e),
            void 0 === i && (i = 0.2 * t),
            this.line.scale.set(1, Math.max(0, e - t), 1),
            this.line.updateMatrix(),
            this.cone.scale.set(i, t, i),
            (this.cone.position.y = e),
            this.cone.updateMatrix();
        }),
        (vh.prototype.setColor = function (e) {
          this.line.material.color.copy(e), this.cone.material.color.copy(e);
        }),
        ((yh.prototype = Object.create(Sa.prototype)).constructor = yh);
      var xh = new Ct(),
        bh = new _h(),
        wh = new _h(),
        Th = new _h();
      function Sh(e, t, i, n) {
        El.call(this),
          (this.type = "CatmullRomCurve3"),
          (this.points = e || []),
          (this.closed = t || !1),
          (this.curveType = i || "centripetal"),
          (this.tension = n || 0.5);
      }
      function Mh(e, t, i, n) {
        El.call(this),
          (this.type = "CubicBezierCurve3"),
          (this.v0 = e || new Ct()),
          (this.v1 = t || new Ct()),
          (this.v2 = i || new Ct()),
          (this.v3 = n || new Ct());
      }
      function Eh(e, t, i) {
        El.call(this),
          (this.type = "QuadraticBezierCurve3"),
          (this.v0 = e || new Ct()),
          (this.v1 = t || new Ct()),
          (this.v2 = i || new Ct());
      }
      function Ah(e, t) {
        El.call(this),
          (this.type = "LineCurve3"),
          (this.v1 = e || new Ct()),
          (this.v2 = t || new Ct());
      }
      function Lh(e, t, i, n, r, o) {
        Cl.call(this, e, t, i, i, n, r, o), (this.type = "ArcCurve");
      }
      (((Sh.prototype = Object.create(El.prototype)).constructor =
        Sh).prototype.isCatmullRomCurve3 = !0),
        (Sh.prototype.getPoint = function (e, t) {
          var i,
            n = t || new Ct(),
            r = this.points,
            o = r.length,
            a = (o - (this.closed ? 0 : 1)) * e,
            s = Math.floor(a),
            l = a - s;
          return (
            this.closed
              ? (s +=
                  0 < s
                    ? 0
                    : (Math.floor(Math.abs(s) / r.length) + 1) * r.length)
              : 0 === l && s === o - 1 && ((s = o - 2), (l = 1)),
            (i =
              this.closed || 0 < s
                ? r[(s - 1) % o]
                : (xh.subVectors(r[0], r[1]).add(r[0]), xh)),
            (t = r[s % o]),
            (e = r[(s + 1) % o]),
            (a =
              this.closed || s + 2 < o
                ? r[(s + 2) % o]
                : (xh.subVectors(r[o - 1], r[o - 2]).add(r[o - 1]), xh)),
            "centripetal" === this.curveType || "chordal" === this.curveType
              ? ((s = "chordal" === this.curveType ? 0.5 : 0.25),
                (r = Math.pow(i.distanceToSquared(t), s)),
                (o = Math.pow(t.distanceToSquared(e), s)) < 1e-4 && (o = 1),
                r < 1e-4 && (r = o),
                (s = Math.pow(e.distanceToSquared(a), s)) < 1e-4 && (s = o),
                bh.initNonuniformCatmullRom(i.x, t.x, e.x, a.x, r, o, s),
                wh.initNonuniformCatmullRom(i.y, t.y, e.y, a.y, r, o, s),
                Th.initNonuniformCatmullRom(i.z, t.z, e.z, a.z, r, o, s))
              : "catmullrom" === this.curveType &&
                (bh.initCatmullRom(i.x, t.x, e.x, a.x, this.tension),
                wh.initCatmullRom(i.y, t.y, e.y, a.y, this.tension),
                Th.initCatmullRom(i.z, t.z, e.z, a.z, this.tension)),
            n.set(bh.calc(l), wh.calc(l), Th.calc(l)),
            n
          );
        }),
        (Sh.prototype.copy = function (e) {
          El.prototype.copy.call(this, e), (this.points = []);
          for (var t = 0, i = e.points.length; t < i; t++) {
            var n = e.points[t];
            this.points.push(n.clone());
          }
          return (
            (this.closed = e.closed),
            (this.curveType = e.curveType),
            (this.tension = e.tension),
            this
          );
        }),
        (((Mh.prototype = Object.create(El.prototype)).constructor =
          Mh).prototype.isCubicBezierCurve3 = !0),
        (Mh.prototype.getPoint = function (e, t) {
          var i = t || new Ct(),
            n = this.v0,
            r = this.v1,
            o = this.v2,
            t = this.v3;
          return (
            i.set(
              Ml(e, n.x, r.x, o.x, t.x),
              Ml(e, n.y, r.y, o.y, t.y),
              Ml(e, n.z, r.z, o.z, t.z)
            ),
            i
          );
        }),
        (Mh.prototype.copy = function (e) {
          return (
            El.prototype.copy.call(this, e),
            this.v0.copy(e.v0),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this.v3.copy(e.v3),
            this
          );
        }),
        (((Eh.prototype = Object.create(El.prototype)).constructor =
          Eh).prototype.isQuadraticBezierCurve3 = !0),
        (Eh.prototype.getPoint = function (e, t) {
          var i = t || new Ct(),
            n = this.v0,
            r = this.v1,
            t = this.v2;
          return (
            i.set(
              Sl(e, n.x, r.x, t.x),
              Sl(e, n.y, r.y, t.y),
              Sl(e, n.z, r.z, t.z)
            ),
            i
          );
        }),
        (Eh.prototype.copy = function (e) {
          return (
            El.prototype.copy.call(this, e),
            this.v0.copy(e.v0),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this
          );
        }),
        (((Ah.prototype = Object.create(El.prototype)).constructor =
          Ah).prototype.isLineCurve3 = !0),
        (Ah.prototype.getPoint = function (e, t) {
          t = t || new Ct();
          return (
            1 === e
              ? t.copy(this.v2)
              : (t.copy(this.v2).sub(this.v1),
                t.multiplyScalar(e).add(this.v1)),
            t
          );
        }),
        (Ah.prototype.getPointAt = function (e, t) {
          return this.getPoint(e, t);
        }),
        (Ah.prototype.copy = function (e) {
          return (
            El.prototype.copy.call(this, e),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this
          );
        }),
        (((Lh.prototype = Object.create(Cl.prototype)).constructor =
          Lh).prototype.isArcCurve = !0);
      var Ch = {
        createMultiMaterialObject: function (e, t) {
          for (var i = new La(), n = 0, r = t.length; n < r; n++)
            i.add(new fo(e, t[n]));
          return i;
        },
        detach: function (e, t, i) {
          e.applyMatrix(t.matrixWorld), t.remove(e), i.add(e);
        },
        attach: function (e, t, i) {
          e.applyMatrix(new At().getInverse(i.matrixWorld)),
            t.remove(e),
            i.add(e);
        },
      };
      var Ph;
      function Rh(e) {
        console.warn(
          "THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."
        ),
          Sh.call(this, e),
          (this.type = "catmullrom"),
          (this.closed = !0);
      }
      function Oh(e) {
        console.warn(
          "THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."
        ),
          Sh.call(this, e),
          (this.type = "catmullrom");
      }
      function Ih(e) {
        console.warn(
          "THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."
        ),
          Sh.call(this, e),
          (this.type = "catmullrom");
      }
      (El.create = function (e, t) {
        return (
          console.log("THREE.Curve.create() has been deprecated"),
          (e.prototype = Object.create(El.prototype)),
          ((e.prototype.constructor = e).prototype.getPoint = t),
          e
        );
      }),
        Object.assign(Ll.prototype, {
          createPointsGeometry: function (e) {
            console.warn(
              "THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead."
            );
            e = this.getPoints(e);
            return this.createGeometry(e);
          },
          createSpacedPointsGeometry: function (e) {
            console.warn(
              "THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead."
            );
            e = this.getSpacedPoints(e);
            return this.createGeometry(e);
          },
          createGeometry: function (e) {
            console.warn(
              "THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead."
            );
            for (var t = new Qn(), i = 0, n = e.length; i < n; i++) {
              var r = e[i];
              t.vertices.push(new Ct(r.x, r.y, r.z || 0));
            }
            return t;
          },
        }),
        Object.assign(Nl.prototype, {
          fromPoints: function (e) {
            console.warn(
              "THREE.Path: .fromPoints() has been renamed to .setFromPoints()."
            ),
              this.setFromPoints(e);
          },
        }),
        (Rh.prototype = Object.create(Sh.prototype)),
        (Oh.prototype = Object.create(Sh.prototype)),
        (Ih.prototype = Object.create(Sh.prototype)),
        Object.assign(Ih.prototype, {
          initFromArray: function () {
            console.error("THREE.Spline: .initFromArray() has been removed.");
          },
          getControlPointsArray: function () {
            console.error(
              "THREE.Spline: .getControlPointsArray() has been removed."
            );
          },
          reparametrizeByArcLength: function () {
            console.error(
              "THREE.Spline: .reparametrizeByArcLength() has been removed."
            );
          },
        }),
        (lh.prototype.setColors = function () {
          console.error(
            "THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead."
          );
        }),
        (rh.prototype.update = function () {
          console.error(
            "THREE.SkeletonHelper: update() no longer needs to be called."
          );
        }),
        Object.assign(Ii.prototype, {
          center: function (e) {
            return (
              console.warn(
                "THREE.Box2: .center() has been renamed to .getCenter()."
              ),
              this.getCenter(e)
            );
          },
          empty: function () {
            return (
              console.warn(
                "THREE.Box2: .empty() has been renamed to .isEmpty()."
              ),
              this.isEmpty()
            );
          },
          isIntersectionBox: function (e) {
            return (
              console.warn(
                "THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."
              ),
              this.intersectsBox(e)
            );
          },
          size: function (e) {
            return (
              console.warn(
                "THREE.Box2: .size() has been renamed to .getSize()."
              ),
              this.getSize(e)
            );
          },
        }),
        Object.assign(cn.prototype, {
          center: function (e) {
            return (
              console.warn(
                "THREE.Box3: .center() has been renamed to .getCenter()."
              ),
              this.getCenter(e)
            );
          },
          empty: function () {
            return (
              console.warn(
                "THREE.Box3: .empty() has been renamed to .isEmpty()."
              ),
              this.isEmpty()
            );
          },
          isIntersectionBox: function (e) {
            return (
              console.warn(
                "THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."
              ),
              this.intersectsBox(e)
            );
          },
          isIntersectionSphere: function (e) {
            return (
              console.warn(
                "THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."
              ),
              this.intersectsSphere(e)
            );
          },
          size: function (e) {
            return (
              console.warn(
                "THREE.Box3: .size() has been renamed to .getSize()."
              ),
              this.getSize(e)
            );
          },
        }),
        (uo.prototype.center = function (e) {
          return (
            console.warn(
              "THREE.Line3: .center() has been renamed to .getCenter()."
            ),
            this.getCenter(e)
          );
        }),
        Object.assign(Mt, {
          random16: function () {
            return (
              console.warn(
                "THREE.Math: .random16() has been deprecated. Use Math.random() instead."
              ),
              Math.random()
            );
          },
          nearestPowerOfTwo: function (e) {
            return (
              console.warn(
                "THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."
              ),
              Mt.floorPowerOfTwo(e)
            );
          },
          nextPowerOfTwo: function (e) {
            return (
              console.warn(
                "THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."
              ),
              Mt.ceilPowerOfTwo(e)
            );
          },
        }),
        Object.assign(Pt.prototype, {
          flattenToArrayOffset: function (e, t) {
            return (
              console.warn(
                "THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."
              ),
              this.toArray(e, t)
            );
          },
          multiplyVector3: function (e) {
            return (
              console.warn(
                "THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."
              ),
              e.applyMatrix3(this)
            );
          },
          multiplyVector3Array: function () {
            console.error(
              "THREE.Matrix3: .multiplyVector3Array() has been removed."
            );
          },
          applyToBuffer: function (e) {
            return (
              console.warn(
                "THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."
              ),
              this.applyToBufferAttribute(e)
            );
          },
          applyToVector3Array: function () {
            console.error(
              "THREE.Matrix3: .applyToVector3Array() has been removed."
            );
          },
        }),
        Object.assign(At.prototype, {
          extractPosition: function (e) {
            return (
              console.warn(
                "THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."
              ),
              this.copyPosition(e)
            );
          },
          flattenToArrayOffset: function (e, t) {
            return (
              console.warn(
                "THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."
              ),
              this.toArray(e, t)
            );
          },
          getPosition: function () {
            return (
              void 0 === Ph && (Ph = new Ct()),
              console.warn(
                "THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."
              ),
              Ph.setFromMatrixColumn(this, 3)
            );
          },
          setRotationFromQuaternion: function (e) {
            return (
              console.warn(
                "THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."
              ),
              this.makeRotationFromQuaternion(e)
            );
          },
          multiplyToArray: function () {
            console.warn("THREE.Matrix4: .multiplyToArray() has been removed.");
          },
          multiplyVector3: function (e) {
            return (
              console.warn(
                "THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."
              ),
              e.applyMatrix4(this)
            );
          },
          multiplyVector4: function (e) {
            return (
              console.warn(
                "THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."
              ),
              e.applyMatrix4(this)
            );
          },
          multiplyVector3Array: function () {
            console.error(
              "THREE.Matrix4: .multiplyVector3Array() has been removed."
            );
          },
          rotateAxis: function (e) {
            console.warn(
              "THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."
            ),
              e.transformDirection(this);
          },
          crossVector: function (e) {
            return (
              console.warn(
                "THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."
              ),
              e.applyMatrix4(this)
            );
          },
          translate: function () {
            console.error("THREE.Matrix4: .translate() has been removed.");
          },
          rotateX: function () {
            console.error("THREE.Matrix4: .rotateX() has been removed.");
          },
          rotateY: function () {
            console.error("THREE.Matrix4: .rotateY() has been removed.");
          },
          rotateZ: function () {
            console.error("THREE.Matrix4: .rotateZ() has been removed.");
          },
          rotateByAxis: function () {
            console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
          },
          applyToBuffer: function (e) {
            return (
              console.warn(
                "THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."
              ),
              this.applyToBufferAttribute(e)
            );
          },
          applyToVector3Array: function () {
            console.error(
              "THREE.Matrix4: .applyToVector3Array() has been removed."
            );
          },
          makeFrustum: function (e, t, i, n, r, o) {
            return (
              console.warn(
                "THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."
              ),
              this.makePerspective(e, t, n, i, r, o)
            );
          },
        }),
        (dn.prototype.isIntersectionLine = function (e) {
          return (
            console.warn(
              "THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."
            ),
            this.intersectsLine(e)
          );
        }),
        (Lt.prototype.multiplyVector3 = function (e) {
          return (
            console.warn(
              "THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."
            ),
            e.applyQuaternion(this)
          );
        }),
        Object.assign(ho.prototype, {
          isIntersectionBox: function (e) {
            return (
              console.warn(
                "THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."
              ),
              this.intersectsBox(e)
            );
          },
          isIntersectionPlane: function (e) {
            return (
              console.warn(
                "THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."
              ),
              this.intersectsPlane(e)
            );
          },
          isIntersectionSphere: function (e) {
            return (
              console.warn(
                "THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."
              ),
              this.intersectsSphere(e)
            );
          },
        }),
        Object.assign(Fl.prototype, {
          extractAllPoints: function (e) {
            return (
              console.warn(
                "THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."
              ),
              this.extractPoints(e)
            );
          },
          extrude: function (e) {
            return (
              console.warn(
                "THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."
              ),
              new $a(this, e)
            );
          },
          makeGeometry: function (e) {
            return (
              console.warn(
                "THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."
              ),
              new ls(this, e)
            );
          },
        }),
        Object.assign(Et.prototype, {
          fromAttribute: function (e, t, i) {
            return (
              console.warn(
                "THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."
              ),
              this.fromBufferAttribute(e, t, i)
            );
          },
          distanceToManhattan: function (e) {
            return (
              console.warn(
                "THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."
              ),
              this.manhattanDistanceTo(e)
            );
          },
          lengthManhattan: function () {
            return (
              console.warn(
                "THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."
              ),
              this.manhattanLength()
            );
          },
        }),
        Object.assign(Ct.prototype, {
          setEulerFromRotationMatrix: function () {
            console.error(
              "THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead."
            );
          },
          setEulerFromQuaternion: function () {
            console.error(
              "THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead."
            );
          },
          getPositionFromMatrix: function (e) {
            return (
              console.warn(
                "THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."
              ),
              this.setFromMatrixPosition(e)
            );
          },
          getScaleFromMatrix: function (e) {
            return (
              console.warn(
                "THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."
              ),
              this.setFromMatrixScale(e)
            );
          },
          getColumnFromMatrix: function (e, t) {
            return (
              console.warn(
                "THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."
              ),
              this.setFromMatrixColumn(t, e)
            );
          },
          applyProjection: function (e) {
            return (
              console.warn(
                "THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."
              ),
              this.applyMatrix4(e)
            );
          },
          fromAttribute: function (e, t, i) {
            return (
              console.warn(
                "THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."
              ),
              this.fromBufferAttribute(e, t, i)
            );
          },
          distanceToManhattan: function (e) {
            return (
              console.warn(
                "THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."
              ),
              this.manhattanDistanceTo(e)
            );
          },
          lengthManhattan: function () {
            return (
              console.warn(
                "THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."
              ),
              this.manhattanLength()
            );
          },
        }),
        Object.assign(Nt.prototype, {
          fromAttribute: function (e, t, i) {
            return (
              console.warn(
                "THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."
              ),
              this.fromBufferAttribute(e, t, i)
            );
          },
          lengthManhattan: function () {
            return (
              console.warn(
                "THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."
              ),
              this.manhattanLength()
            );
          },
        }),
        (Qn.prototype.computeTangents = function () {
          console.warn("THREE.Geometry: .computeTangents() has been removed.");
        }),
        Object.assign(Un.prototype, {
          getChildByName: function (e) {
            return (
              console.warn(
                "THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."
              ),
              this.getObjectByName(e)
            );
          },
          renderDepth: function () {
            console.warn(
              "THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead."
            );
          },
          translate: function (e, t) {
            return (
              console.warn(
                "THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."
              ),
              this.translateOnAxis(t, e)
            );
          },
        }),
        Object.defineProperties(Un.prototype, {
          eulerOrder: {
            get: function () {
              return (
                console.warn(
                  "THREE.Object3D: .eulerOrder is now .rotation.order."
                ),
                this.rotation.order
              );
            },
            set: function (e) {
              console.warn(
                "THREE.Object3D: .eulerOrder is now .rotation.order."
              ),
                (this.rotation.order = e);
            },
          },
          useQuaternion: {
            get: function () {
              console.warn(
                "THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default."
              );
            },
            set: function () {
              console.warn(
                "THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default."
              );
            },
          },
        }),
        Object.defineProperties(ya.prototype, {
          objects: {
            get: function () {
              return (
                console.warn(
                  "THREE.LOD: .objects has been renamed to .levels."
                ),
                this.levels
              );
            },
          },
        }),
        Object.defineProperty(_a.prototype, "useVertexTexture", {
          get: function () {
            console.warn("THREE.Skeleton: useVertexTexture has been removed.");
          },
          set: function () {
            console.warn("THREE.Skeleton: useVertexTexture has been removed.");
          },
        }),
        Object.defineProperty(El.prototype, "__arcLengthDivisions", {
          get: function () {
            return (
              console.warn(
                "THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."
              ),
              this.arcLengthDivisions
            );
          },
          set: function (e) {
            console.warn(
              "THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."
            ),
              (this.arcLengthDivisions = e);
          },
        }),
        (oa.prototype.setLens = function (e, t) {
          console.warn(
            "THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."
          ),
            void 0 !== t && (this.filmGauge = t),
            this.setFocalLength(e);
        }),
        Object.defineProperties(Us.prototype, {
          onlyShadow: {
            set: function () {
              console.warn("THREE.Light: .onlyShadow has been removed.");
            },
          },
          shadowCameraFov: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowCameraFov is now .shadow.camera.fov."
              ),
                (this.shadow.camera.fov = e);
            },
          },
          shadowCameraLeft: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowCameraLeft is now .shadow.camera.left."
              ),
                (this.shadow.camera.left = e);
            },
          },
          shadowCameraRight: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowCameraRight is now .shadow.camera.right."
              ),
                (this.shadow.camera.right = e);
            },
          },
          shadowCameraTop: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowCameraTop is now .shadow.camera.top."
              ),
                (this.shadow.camera.top = e);
            },
          },
          shadowCameraBottom: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."
              ),
                (this.shadow.camera.bottom = e);
            },
          },
          shadowCameraNear: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowCameraNear is now .shadow.camera.near."
              ),
                (this.shadow.camera.near = e);
            },
          },
          shadowCameraFar: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowCameraFar is now .shadow.camera.far."
              ),
                (this.shadow.camera.far = e);
            },
          },
          shadowCameraVisible: {
            set: function () {
              console.warn(
                "THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead."
              );
            },
          },
          shadowBias: {
            set: function (e) {
              console.warn("THREE.Light: .shadowBias is now .shadow.bias."),
                (this.shadow.bias = e);
            },
          },
          shadowDarkness: {
            set: function () {
              console.warn("THREE.Light: .shadowDarkness has been removed.");
            },
          },
          shadowMapWidth: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."
              ),
                (this.shadow.mapSize.width = e);
            },
          },
          shadowMapHeight: {
            set: function (e) {
              console.warn(
                "THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."
              ),
                (this.shadow.mapSize.height = e);
            },
          },
        }),
        Object.defineProperties(Zn.prototype, {
          length: {
            get: function () {
              return (
                console.warn(
                  "THREE.BufferAttribute: .length has been deprecated. Use .count instead."
                ),
                this.array.length
              );
            },
          },
        }),
        Object.assign(no.prototype, {
          addIndex: function (e) {
            console.warn(
              "THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."
            ),
              this.setIndex(e);
          },
          addDrawCall: function (e, t, i) {
            void 0 !== i &&
              console.warn(
                "THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."
              ),
              console.warn(
                "THREE.BufferGeometry: .addDrawCall() is now .addGroup()."
              ),
              this.addGroup(e, t);
          },
          clearDrawCalls: function () {
            console.warn(
              "THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."
            ),
              this.clearGroups();
          },
          computeTangents: function () {
            console.warn(
              "THREE.BufferGeometry: .computeTangents() has been removed."
            );
          },
          computeOffsets: function () {
            console.warn(
              "THREE.BufferGeometry: .computeOffsets() has been removed."
            );
          },
        }),
        Object.defineProperties(no.prototype, {
          drawcalls: {
            get: function () {
              return (
                console.error(
                  "THREE.BufferGeometry: .drawcalls has been renamed to .groups."
                ),
                this.groups
              );
            },
          },
          offsets: {
            get: function () {
              return (
                console.warn(
                  "THREE.BufferGeometry: .offsets has been renamed to .groups."
                ),
                this.groups
              );
            },
          },
        }),
        Object.defineProperties(Gc.prototype, {
          dynamic: {
            set: function () {
              console.warn(
                "THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead."
              );
            },
          },
          onUpdate: {
            value: function () {
              return (
                console.warn(
                  "THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."
                ),
                this
              );
            },
          },
        }),
        Object.defineProperties(an.prototype, {
          wrapAround: {
            get: function () {
              console.warn("THREE.Material: .wrapAround has been removed.");
            },
            set: function () {
              console.warn("THREE.Material: .wrapAround has been removed.");
            },
          },
          wrapRGB: {
            get: function () {
              return (
                console.warn("THREE.Material: .wrapRGB has been removed."),
                new Mi()
              );
            },
          },
          shading: {
            get: function () {
              console.error(
                "THREE." +
                  this.type +
                  ": .shading has been removed. Use the boolean .flatShading instead."
              );
            },
            set: function (e) {
              console.warn(
                "THREE." +
                  this.type +
                  ": .shading has been removed. Use the boolean .flatShading instead."
              ),
                (this.flatShading = 1 === e);
            },
          },
        }),
        Object.defineProperties(ws.prototype, {
          metal: {
            get: function () {
              return (
                console.warn(
                  "THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."
                ),
                !1
              );
            },
            set: function () {
              console.warn(
                "THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead"
              );
            },
          },
        }),
        Object.defineProperties(co.prototype, {
          derivatives: {
            get: function () {
              return (
                console.warn(
                  "THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."
                ),
                this.extensions.derivatives
              );
            },
            set: function (e) {
              console.warn(
                "THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."
              ),
                (this.extensions.derivatives = e);
            },
          },
        }),
        Object.assign(ua.prototype, {
          getCurrentRenderTarget: function () {
            return (
              console.warn(
                "THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."
              ),
              this.getRenderTarget()
            );
          },
          getMaxAnisotropy: function () {
            return (
              console.warn(
                "THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."
              ),
              this.capabilities.getMaxAnisotropy()
            );
          },
          getPrecision: function () {
            return (
              console.warn(
                "THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."
              ),
              this.capabilities.precision
            );
          },
          resetGLState: function () {
            return (
              console.warn(
                "THREE.WebGLRenderer: .resetGLState() is now .state.reset()."
              ),
              this.state.reset()
            );
          },
          supportsFloatTextures: function () {
            return (
              console.warn(
                "THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."
              ),
              this.extensions.get("OES_texture_float")
            );
          },
          supportsHalfFloatTextures: function () {
            return (
              console.warn(
                "THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."
              ),
              this.extensions.get("OES_texture_half_float")
            );
          },
          supportsStandardDerivatives: function () {
            return (
              console.warn(
                "THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."
              ),
              this.extensions.get("OES_standard_derivatives")
            );
          },
          supportsCompressedTextureS3TC: function () {
            return (
              console.warn(
                "THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."
              ),
              this.extensions.get("WEBGL_compressed_texture_s3tc")
            );
          },
          supportsCompressedTexturePVRTC: function () {
            return (
              console.warn(
                "THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."
              ),
              this.extensions.get("WEBGL_compressed_texture_pvrtc")
            );
          },
          supportsBlendMinMax: function () {
            return (
              console.warn(
                "THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."
              ),
              this.extensions.get("EXT_blend_minmax")
            );
          },
          supportsVertexTextures: function () {
            return (
              console.warn(
                "THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."
              ),
              this.capabilities.vertexTextures
            );
          },
          supportsInstancedArrays: function () {
            return (
              console.warn(
                "THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."
              ),
              this.extensions.get("ANGLE_instanced_arrays")
            );
          },
          enableScissorTest: function (e) {
            console.warn(
              "THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."
            ),
              this.setScissorTest(e);
          },
          initMaterial: function () {
            console.warn(
              "THREE.WebGLRenderer: .initMaterial() has been removed."
            );
          },
          addPrePlugin: function () {
            console.warn(
              "THREE.WebGLRenderer: .addPrePlugin() has been removed."
            );
          },
          addPostPlugin: function () {
            console.warn(
              "THREE.WebGLRenderer: .addPostPlugin() has been removed."
            );
          },
          updateShadowMap: function () {
            console.warn(
              "THREE.WebGLRenderer: .updateShadowMap() has been removed."
            );
          },
        }),
        Object.defineProperties(ua.prototype, {
          shadowMapEnabled: {
            get: function () {
              return this.shadowMap.enabled;
            },
            set: function (e) {
              console.warn(
                "THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."
              ),
                (this.shadowMap.enabled = e);
            },
          },
          shadowMapType: {
            get: function () {
              return this.shadowMap.type;
            },
            set: function (e) {
              console.warn(
                "THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."
              ),
                (this.shadowMap.type = e);
            },
          },
          shadowMapCullFace: {
            get: function () {
              return this.shadowMap.cullFace;
            },
            set: function (e) {
              console.warn(
                "THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."
              ),
                (this.shadowMap.cullFace = e);
            },
          },
        }),
        Object.defineProperties(fn.prototype, {
          cullFace: {
            get: function () {
              return this.renderReverseSided ? G : H;
            },
            set: function (e) {
              e = e !== H;
              console.warn(
                "WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to " +
                  e +
                  "."
              ),
                (this.renderReverseSided = e);
            },
          },
        }),
        Object.defineProperties(Ft.prototype, {
          wrapS: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."
                ),
                this.texture.wrapS
              );
            },
            set: function (e) {
              console.warn(
                "THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."
              ),
                (this.texture.wrapS = e);
            },
          },
          wrapT: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."
                ),
                this.texture.wrapT
              );
            },
            set: function (e) {
              console.warn(
                "THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."
              ),
                (this.texture.wrapT = e);
            },
          },
          magFilter: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."
                ),
                this.texture.magFilter
              );
            },
            set: function (e) {
              console.warn(
                "THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."
              ),
                (this.texture.magFilter = e);
            },
          },
          minFilter: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."
                ),
                this.texture.minFilter
              );
            },
            set: function (e) {
              console.warn(
                "THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."
              ),
                (this.texture.minFilter = e);
            },
          },
          anisotropy: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."
                ),
                this.texture.anisotropy
              );
            },
            set: function (e) {
              console.warn(
                "THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."
              ),
                (this.texture.anisotropy = e);
            },
          },
          offset: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLRenderTarget: .offset is now .texture.offset."
                ),
                this.texture.offset
              );
            },
            set: function (e) {
              console.warn(
                "THREE.WebGLRenderTarget: .offset is now .texture.offset."
              ),
                (this.texture.offset = e);
            },
          },
          repeat: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLRenderTarget: .repeat is now .texture.repeat."
                ),
                this.texture.repeat
              );
            },
            set: function (e) {
              console.warn(
                "THREE.WebGLRenderTarget: .repeat is now .texture.repeat."
              ),
                (this.texture.repeat = e);
            },
          },
          format: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLRenderTarget: .format is now .texture.format."
                ),
                this.texture.format
              );
            },
            set: function (e) {
              console.warn(
                "THREE.WebGLRenderTarget: .format is now .texture.format."
              ),
                (this.texture.format = e);
            },
          },
          type: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLRenderTarget: .type is now .texture.type."
                ),
                this.texture.type
              );
            },
            set: function (e) {
              console.warn(
                "THREE.WebGLRenderTarget: .type is now .texture.type."
              ),
                (this.texture.type = e);
            },
          },
          generateMipmaps: {
            get: function () {
              return (
                console.warn(
                  "THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."
                ),
                this.texture.generateMipmaps
              );
            },
            set: function (e) {
              console.warn(
                "THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."
              ),
                (this.texture.generateMipmaps = e);
            },
          },
        }),
        (Dc.prototype.load = function (e) {
          console.warn(
            "THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead."
          );
          var t = this;
          return (
            new Pc().load(e, function (e) {
              t.setBuffer(e);
            }),
            this
          );
        }),
        (Fc.prototype.getData = function () {
          return (
            console.warn(
              "THREE.AudioAnalyser: .getData() is now .getFrequencyData()."
            ),
            this.getFrequencyData()
          );
        }),
        (Oc.prototype.updateCubeMap = function (e, t) {
          return (
            console.warn(
              "THREE.CubeCamera: .updateCubeMap() is now .update()."
            ),
            this.update(e, t)
          );
        });
      var Dh = {
          merge: function (e, t, i) {
            var n;
            console.warn(
              "THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."
            ),
              t.isMesh &&
                (t.matrixAutoUpdate && t.updateMatrix(),
                (n = t.matrix),
                (t = t.geometry)),
              e.merge(t, n, i);
          },
          center: function (e) {
            return (
              console.warn(
                "THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."
              ),
              e.center()
            );
          },
        },
        Dl = {
          crossOrigin: void 0,
          loadTexture: function (e, t, i, n) {
            console.warn(
              "THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead."
            );
            var r = new ks();
            r.setCrossOrigin(this.crossOrigin);
            n = r.load(e, i, void 0, n);
            return t && (n.mapping = t), n;
          },
          loadTextureCube: function (e, t, i, n) {
            console.warn(
              "THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead."
            );
            var r = new Fs();
            r.setCrossOrigin(this.crossOrigin);
            n = r.load(e, i, void 0, n);
            return t && (n.mapping = t), n;
          },
          loadCompressedTexture: function () {
            console.error(
              "THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead."
            );
          },
          loadCompressedTextureCube: function () {
            console.error(
              "THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead."
            );
          },
        };
      (e.WebGLRenderTargetCube = kt),
        (e.WebGLRenderTarget = Ft),
        (e.WebGLRenderer = ua),
        (e.ShaderLib = Oi),
        (e.UniformsLib = Ci),
        (e.UniformsUtils = Pi),
        (e.ShaderChunk = Ri),
        (e.FogExp2 = da),
        (e.Fog = pa),
        (e.Scene = fa),
        (e.LensFlare = ma),
        (e.Sprite = va),
        (e.LOD = ya),
        (e.SkinnedMesh = ba),
        (e.Skeleton = _a),
        (e.Bone = xa),
        (e.Mesh = fo),
        (e.LineSegments = Sa),
        (e.LineLoop = Ma),
        (e.Line = Ta),
        (e.Points = Aa),
        (e.Group = La),
        (e.VideoTexture = Ca),
        (e.DataTexture = Ut),
        (e.CompressedTexture = Pa),
        (e.CubeTexture = Bt),
        (e.CanvasTexture = Ni),
        (e.DepthTexture = Ra),
        (e.Texture = Dt),
        (e.CompressedTextureLoader = Is),
        (e.DataTextureLoader = Ds),
        (e.CubeTextureLoader = Fs),
        (e.TextureLoader = ks),
        (e.ObjectLoader = _l),
        (e.MaterialLoader = cl),
        (e.BufferGeometryLoader = hl),
        (e.DefaultLoadingManager = Ps),
        (e.LoadingManager = Cs),
        (e.JSONLoader = yl),
        (e.ImageLoader = Ns),
        (e.FontLoader = Bl),
        (e.FileLoader = Os),
        (e.Loader = vl),
        (e.Cache = Ls),
        (e.AudioLoader = Pc),
        (e.SpotLightShadow = js),
        (e.SpotLight = Hs),
        (e.PointLight = Gs),
        (e.RectAreaLight = qs),
        (e.HemisphereLight = Bs),
        (e.DirectionalLightShadow = Vs),
        (e.DirectionalLight = Ws),
        (e.AmbientLight = Xs),
        (e.LightShadow = zs),
        (e.Light = Us),
        (e.StereoCamera = Rc),
        (e.PerspectiveCamera = oa),
        (e.OrthographicCamera = zn),
        (e.CubeCamera = Oc),
        (e.ArrayCamera = aa),
        (e.Camera = Bn),
        (e.AudioListener = Ic),
        (e.PositionalAudio = Nc),
        (e.AudioContext = Cc),
        (e.AudioAnalyser = Fc),
        (e.Audio = Dc),
        (e.VectorKeyframeTrack = el),
        (e.StringKeyframeTrack = rl),
        (e.QuaternionKeyframeTrack = il),
        (e.NumberKeyframeTrack = nl),
        (e.ColorKeyframeTrack = al),
        (e.BooleanKeyframeTrack = ol),
        (e.PropertyMixer = kc),
        (e.PropertyBinding = Bc),
        (e.KeyframeTrack = sl),
        (e.AnimationUtils = Ys),
        (e.AnimationObjectGroup = zc),
        (e.AnimationMixer = Hc),
        (e.AnimationClip = ll),
        (e.Uniform = Gc),
        (e.InstancedBufferGeometry = Vc),
        (e.BufferGeometry = no),
        (e.Geometry = Qn),
        (e.InterleavedBufferAttribute = Wc),
        (e.InstancedInterleavedBuffer = qc),
        (e.InterleavedBuffer = Xc),
        (e.InstancedBufferAttribute = Yc),
        (e.Face3 = jn),
        (e.Object3D = Un),
        (e.Raycaster = Qc),
        (e.Layers = vn),
        (e.EventDispatcher = t),
        (e.Clock = $c),
        (e.QuaternionLinearInterpolant = tl),
        (e.LinearInterpolant = Js),
        (e.DiscreteInterpolant = $s),
        (e.CubicInterpolant = Zs),
        (e.Interpolant = Qs),
        (e.Triangle = po),
        (e.Math = Mt),
        (e.Spherical = Kc),
        (e.Cylindrical = eh),
        (e.Plane = dn),
        (e.Frustum = pn),
        (e.Sphere = un),
        (e.Ray = ho),
        (e.Matrix4 = At),
        (e.Matrix3 = Pt),
        (e.Box3 = cn),
        (e.Box2 = Ii),
        (e.Line3 = uo),
        (e.Euler = gn),
        (e.Vector4 = Nt),
        (e.Vector3 = Ct),
        (e.Vector2 = Et),
        (e.Quaternion = Lt),
        (e.Color = Mi),
        (e.ImmediateRenderObject = th),
        (e.VertexNormalsHelper = ih),
        (e.SpotLightHelper = nh),
        (e.SkeletonHelper = rh),
        (e.PointLightHelper = oh),
        (e.RectAreaLightHelper = ah),
        (e.HemisphereLightHelper = sh),
        (e.GridHelper = lh),
        (e.PolarGridHelper = ch),
        (e.FaceNormalsHelper = hh),
        (e.DirectionalLightHelper = uh),
        (e.CameraHelper = dh),
        (e.BoxHelper = fh),
        (e.Box3Helper = mh),
        (e.PlaneHelper = gh),
        (e.ArrowHelper = vh),
        (e.AxesHelper = yh),
        (e.CatmullRomCurve3 = Sh),
        (e.CubicBezierCurve3 = Mh),
        (e.QuadraticBezierCurve3 = Eh),
        (e.LineCurve3 = Ah),
        (e.ArcCurve = Lh),
        (e.EllipseCurve = Cl),
        (e.SplineCurve = Pl),
        (e.CubicBezierCurve = Rl),
        (e.QuadraticBezierCurve = Ol),
        (e.LineCurve = Al),
        (e.Shape = Fl),
        (e.Path = Nl),
        (e.ShapePath = kl),
        (e.Font = Ul),
        (e.CurvePath = Ll),
        (e.Curve = El),
        (e.ShapeUtils = Ja),
        (e.SceneUtils = Ch),
        (e.WebGLUtils = ha),
        (e.WireframeGeometry = Oa),
        (e.ParametricGeometry = Ia),
        (e.ParametricBufferGeometry = Da),
        (e.TetrahedronGeometry = ka),
        (e.TetrahedronBufferGeometry = Ua),
        (e.OctahedronGeometry = Ba),
        (e.OctahedronBufferGeometry = za),
        (e.IcosahedronGeometry = ja),
        (e.IcosahedronBufferGeometry = Ha),
        (e.DodecahedronGeometry = Ga),
        (e.DodecahedronBufferGeometry = Va),
        (e.PolyhedronGeometry = Na),
        (e.PolyhedronBufferGeometry = Fa),
        (e.TubeGeometry = Wa),
        (e.TubeBufferGeometry = Xa),
        (e.TorusKnotGeometry = qa),
        (e.TorusKnotBufferGeometry = Ya),
        (e.TorusGeometry = Qa),
        (e.TorusBufferGeometry = Za),
        (e.TextGeometry = es),
        (e.TextBufferGeometry = ts),
        (e.SphereGeometry = is),
        (e.SphereBufferGeometry = ns),
        (e.RingGeometry = rs),
        (e.RingBufferGeometry = os),
        (e.PlaneGeometry = ao),
        (e.PlaneBufferGeometry = so),
        (e.LatheGeometry = as),
        (e.LatheBufferGeometry = ss),
        (e.ShapeGeometry = ls),
        (e.ShapeBufferGeometry = cs),
        (e.ExtrudeGeometry = $a),
        (e.ExtrudeBufferGeometry = Ka),
        (e.EdgesGeometry = hs),
        (e.ConeGeometry = ps),
        (e.ConeBufferGeometry = fs),
        (e.CylinderGeometry = us),
        (e.CylinderBufferGeometry = ds),
        (e.CircleGeometry = ms),
        (e.CircleBufferGeometry = gs),
        (e.BoxGeometry = ro),
        (e.BoxBufferGeometry = oo),
        (e.ShadowMaterial = ys),
        (e.SpriteMaterial = ga),
        (e.RawShaderMaterial = _s),
        (e.ShaderMaterial = co),
        (e.PointsMaterial = Ea),
        (e.MeshPhysicalMaterial = bs),
        (e.MeshStandardMaterial = xs),
        (e.MeshPhongMaterial = ws),
        (e.MeshToonMaterial = Ts),
        (e.MeshNormalMaterial = Ss),
        (e.MeshLambertMaterial = Ms),
        (e.MeshDepthMaterial = sn),
        (e.MeshDistanceMaterial = ln),
        (e.MeshBasicMaterial = lo),
        (e.LineDashedMaterial = Es),
        (e.LineBasicMaterial = wa),
        (e.Material = an),
        (e.Float64BufferAttribute = or),
        (e.Float32BufferAttribute = rr),
        (e.Uint32BufferAttribute = nr),
        (e.Int32BufferAttribute = ir),
        (e.Uint16BufferAttribute = tr),
        (e.Int16BufferAttribute = er),
        (e.Uint8ClampedBufferAttribute = Kn),
        (e.Uint8BufferAttribute = $n),
        (e.Int8BufferAttribute = Jn),
        (e.BufferAttribute = Zn),
        (e.REVISION = "88"),
        (e.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 }),
        (e.CullFaceNone = j),
        (e.CullFaceBack = H),
        (e.CullFaceFront = G),
        (e.CullFaceFrontBack = 3),
        (e.FrontFaceDirectionCW = 0),
        (e.FrontFaceDirectionCCW = 1),
        (e.BasicShadowMap = 0),
        (e.PCFShadowMap = P),
        (e.PCFSoftShadowMap = M),
        (e.FrontSide = R),
        (e.BackSide = V),
        (e.DoubleSide = W),
        (e.FlatShading = 1),
        (e.SmoothShading = 2),
        (e.NoColors = Ae),
        (e.FaceColors = 1),
        (e.VertexColors = E),
        (e.NoBlending = X),
        (e.NormalBlending = q),
        (e.AdditiveBlending = Y),
        (e.SubtractiveBlending = Q),
        (e.MultiplyBlending = Z),
        (e.CustomBlending = J),
        (e.AddEquation = A),
        (e.SubtractEquation = L),
        (e.ReverseSubtractEquation = C),
        (e.MinEquation = O),
        (e.MaxEquation = I),
        (e.ZeroFactor = D),
        (e.OneFactor = N),
        (e.SrcColorFactor = F),
        (e.OneMinusSrcColorFactor = k),
        (e.SrcAlphaFactor = U),
        (e.OneMinusSrcAlphaFactor = B),
        (e.DstAlphaFactor = z),
        (e.OneMinusDstAlphaFactor = $),
        (e.DstColorFactor = K),
        (e.OneMinusDstColorFactor = ee),
        (e.SrcAlphaSaturateFactor = te),
        (e.NeverDepth = ie),
        (e.AlwaysDepth = ne),
        (e.LessDepth = re),
        (e.LessEqualDepth = oe),
        (e.EqualDepth = ae),
        (e.GreaterEqualDepth = se),
        (e.GreaterDepth = le),
        (e.NotEqualDepth = ce),
        (e.MultiplyOperation = he),
        (e.MixOperation = ue),
        (e.AddOperation = de),
        (e.NoToneMapping = pe),
        (e.LinearToneMapping = Le),
        (e.ReinhardToneMapping = fe),
        (e.Uncharted2ToneMapping = me),
        (e.CineonToneMapping = ge),
        (e.UVMapping = 300),
        (e.CubeReflectionMapping = ve),
        (e.CubeRefractionMapping = ye),
        (e.EquirectangularReflectionMapping = _e),
        (e.EquirectangularRefractionMapping = xe),
        (e.SphericalReflectionMapping = be),
        (e.CubeUVReflectionMapping = we),
        (e.CubeUVRefractionMapping = Te),
        (e.RepeatWrapping = Se),
        (e.ClampToEdgeWrapping = Me),
        (e.MirroredRepeatWrapping = Ee),
        (e.NearestFilter = Ce),
        (e.NearestMipMapNearestFilter = Pe),
        (e.NearestMipMapLinearFilter = Re),
        (e.LinearFilter = Oe),
        (e.LinearMipMapNearestFilter = Ie),
        (e.LinearMipMapLinearFilter = De),
        (e.UnsignedByteType = Ne),
        (e.ByteType = Fe),
        (e.ShortType = ke),
        (e.UnsignedShortType = Ue),
        (e.IntType = Be),
        (e.UnsignedIntType = ze),
        (e.FloatType = je),
        (e.HalfFloatType = He),
        (e.UnsignedShort4444Type = Ge),
        (e.UnsignedShort5551Type = Ve),
        (e.UnsignedShort565Type = We),
        (e.UnsignedInt248Type = Xe),
        (e.AlphaFormat = qe),
        (e.RGBFormat = Ye),
        (e.RGBAFormat = Qe),
        (e.LuminanceFormat = Ze),
        (e.LuminanceAlphaFormat = Je),
        (e.RGBEFormat = $e),
        (e.DepthFormat = Ke),
        (e.DepthStencilFormat = et),
        (e.RGB_S3TC_DXT1_Format = tt),
        (e.RGBA_S3TC_DXT1_Format = it),
        (e.RGBA_S3TC_DXT3_Format = nt),
        (e.RGBA_S3TC_DXT5_Format = rt),
        (e.RGB_PVRTC_4BPPV1_Format = ot),
        (e.RGB_PVRTC_2BPPV1_Format = at),
        (e.RGBA_PVRTC_4BPPV1_Format = st),
        (e.RGBA_PVRTC_2BPPV1_Format = lt),
        (e.RGB_ETC1_Format = ct),
        (e.LoopOnce = 2200),
        (e.LoopRepeat = 2201),
        (e.LoopPingPong = 2202),
        (e.InterpolateDiscrete = ht),
        (e.InterpolateLinear = ut),
        (e.InterpolateSmooth = 2302),
        (e.ZeroCurvatureEnding = dt),
        (e.ZeroSlopeEnding = pt),
        (e.WrapAroundEnding = ft),
        (e.TrianglesDrawMode = mt),
        (e.TriangleStripDrawMode = 1),
        (e.TriangleFanDrawMode = 2),
        (e.LinearEncoding = gt),
        (e.sRGBEncoding = vt),
        (e.GammaEncoding = yt),
        (e.RGBEEncoding = _t),
        (e.LogLuvEncoding = 3003),
        (e.RGBM7Encoding = xt),
        (e.RGBM16Encoding = bt),
        (e.RGBDEncoding = wt),
        (e.BasicDepthPacking = Tt),
        (e.RGBADepthPacking = St),
        (e.CubeGeometry = ro),
        (e.Face4 = function (e, t, i, n, r, o, a) {
          return (
            console.warn(
              "THREE.Face4 has been removed. A THREE.Face3 will be created instead."
            ),
            new jn(e, t, i, r, o, a)
          );
        }),
        (e.LineStrip = 0),
        (e.LinePieces = 1),
        (e.MeshFaceMaterial = function (e) {
          return (
            console.warn(
              "THREE.MeshFaceMaterial has been removed. Use an Array instead."
            ),
            e
          );
        }),
        (e.MultiMaterial = function (e) {
          return (
            void 0 === e && (e = []),
            console.warn(
              "THREE.MultiMaterial has been removed. Use an Array instead."
            ),
            (e.isMultiMaterial = !0),
            ((e.materials = e).clone = function () {
              return e.slice();
            }),
            e
          );
        }),
        (e.PointCloud = function (e, t) {
          return (
            console.warn("THREE.PointCloud has been renamed to THREE.Points."),
            new Aa(e, t)
          );
        }),
        (e.Particle = function (e) {
          return (
            console.warn("THREE.Particle has been renamed to THREE.Sprite."),
            new va(e)
          );
        }),
        (e.ParticleSystem = function (e, t) {
          return (
            console.warn(
              "THREE.ParticleSystem has been renamed to THREE.Points."
            ),
            new Aa(e, t)
          );
        }),
        (e.PointCloudMaterial = function (e) {
          return (
            console.warn(
              "THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."
            ),
            new Ea(e)
          );
        }),
        (e.ParticleBasicMaterial = function (e) {
          return (
            console.warn(
              "THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."
            ),
            new Ea(e)
          );
        }),
        (e.ParticleSystemMaterial = function (e) {
          return (
            console.warn(
              "THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."
            ),
            new Ea(e)
          );
        }),
        (e.Vertex = function (e, t, i) {
          return (
            console.warn(
              "THREE.Vertex has been removed. Use THREE.Vector3 instead."
            ),
            new Ct(e, t, i)
          );
        }),
        (e.DynamicBufferAttribute = function (e, t) {
          return (
            console.warn(
              "THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."
            ),
            new Zn(e, t).setDynamic(!0)
          );
        }),
        (e.Int8Attribute = function (e, t) {
          return (
            console.warn(
              "THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."
            ),
            new Jn(e, t)
          );
        }),
        (e.Uint8Attribute = function (e, t) {
          return (
            console.warn(
              "THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."
            ),
            new $n(e, t)
          );
        }),
        (e.Uint8ClampedAttribute = function (e, t) {
          return (
            console.warn(
              "THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."
            ),
            new Kn(e, t)
          );
        }),
        (e.Int16Attribute = function (e, t) {
          return (
            console.warn(
              "THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."
            ),
            new er(e, t)
          );
        }),
        (e.Uint16Attribute = function (e, t) {
          return (
            console.warn(
              "THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."
            ),
            new tr(e, t)
          );
        }),
        (e.Int32Attribute = function (e, t) {
          return (
            console.warn(
              "THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."
            ),
            new ir(e, t)
          );
        }),
        (e.Uint32Attribute = function (e, t) {
          return (
            console.warn(
              "THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."
            ),
            new nr(e, t)
          );
        }),
        (e.Float32Attribute = function (e, t) {
          return (
            console.warn(
              "THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."
            ),
            new rr(e, t)
          );
        }),
        (e.Float64Attribute = function (e, t) {
          return (
            console.warn(
              "THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."
            ),
            new or(e, t)
          );
        }),
        (e.ClosedSplineCurve3 = Rh),
        (e.SplineCurve3 = Oh),
        (e.Spline = Ih),
        (e.AxisHelper = function (e) {
          return (
            console.warn(
              "THREE.AxisHelper has been renamed to THREE.AxesHelper."
            ),
            new yh(e)
          );
        }),
        (e.BoundingBoxHelper = function (e, t) {
          return (
            console.warn(
              "THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."
            ),
            new fh(e, t)
          );
        }),
        (e.EdgesHelper = function (e, t) {
          return (
            console.warn(
              "THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."
            ),
            new Sa(
              new hs(e.geometry),
              new wa({ color: void 0 !== t ? t : 16777215 })
            )
          );
        }),
        (e.WireframeHelper = function (e, t) {
          return (
            console.warn(
              "THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."
            ),
            new Sa(
              new Oa(e.geometry),
              new wa({ color: void 0 !== t ? t : 16777215 })
            )
          );
        }),
        (e.XHRLoader = function (e) {
          return (
            console.warn(
              "THREE.XHRLoader has been renamed to THREE.FileLoader."
            ),
            new Os(e)
          );
        }),
        (e.BinaryTextureLoader = function (e) {
          return (
            console.warn(
              "THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."
            ),
            new Ds(e)
          );
        }),
        (e.GeometryUtils = Dh),
        (e.ImageUtils = Dl),
        (e.Projector = function () {
          console.error(
            "THREE.Projector has been moved to /examples/js/renderers/Projector.js."
          ),
            (this.projectVector = function (e, t) {
              console.warn(
                "THREE.Projector: .projectVector() is now vector.project()."
              ),
                e.project(t);
            }),
            (this.unprojectVector = function (e, t) {
              console.warn(
                "THREE.Projector: .unprojectVector() is now vector.unproject()."
              ),
                e.unproject(t);
            }),
            (this.pickingRay = function () {
              console.error(
                "THREE.Projector: .pickingRay() is now raycaster.setFromCamera()."
              );
            });
        }),
        (e.CanvasRenderer = function () {
          console.error(
            "THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"
          ),
            (this.domElement = document.createElementNS(
              "http://www.w3.org/1999/xhtml",
              "canvas"
            )),
            (this.clear = function () {}),
            (this.render = function () {}),
            (this.setClearColor = function () {}),
            (this.setSize = function () {});
        }),
        Object.defineProperty(e, "__esModule", { value: !0 });
    })(t);
  },
  function (ne, re, oe) {
    var ae;
    (function (e) {
      var $e = void 0 !== ne && ne.exports && void 0 !== e ? e : this || window;
      ($e._gsQueue || ($e._gsQueue = [])).push(function () {
        "use strict";
        function y(e, t, i, n) {
          i === n && (i = n - (n - t) / 1e6),
            e === t && (t = e + (i - e) / 1e6),
            (this.a = e),
            (this.b = t),
            (this.c = i),
            (this.d = n),
            (this.da = n - e),
            (this.ca = i - e),
            (this.ba = t - e);
        }
        function _(e, t, i, n) {
          var r = { a: e },
            o = {},
            a = {},
            s = { c: n },
            l = (e + t) / 2,
            c = (i + n) / 2,
            h = ((i = ((h = (t + i) / 2) + c) / 2) - (t = (l + h) / 2)) / 8;
          return (
            (r.b = l + (e - l) / 4),
            (o.b = t + h),
            (r.c = o.a = (r.b + o.b) / 2),
            (o.c = a.a = (t + i) / 2),
            (a.b = i - h),
            (s.b = c + (n - c) / 4),
            (a.c = s.a = (a.b + s.b) / 2),
            [r, o, a, s]
          );
        }
        function d(e, t, i, n, r, o) {
          var a,
            s,
            l,
            c,
            h,
            u,
            d,
            p,
            f = {},
            m = [],
            g = o || e[0];
          for (s in ((r =
            "string" == typeof r
              ? "," + r + ","
              : ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,"),
          null == t && (t = 1),
          e[0]))
            m.push(s);
          if (1 < e.length) {
            for (p = e[e.length - 1], d = !0, a = m.length; -1 < --a; )
              if (((s = m[a]), 0.05 < Math.abs(g[s] - p[s]))) {
                d = !1;
                break;
              }
            d &&
              ((e = e.concat()),
              o && e.unshift(o),
              e.push(e[1]),
              (o = e[e.length - 3]));
          }
          for (x.length = b.length = w.length = 0, a = m.length; -1 < --a; )
            (s = m[a]),
              (v[s] = -1 !== r.indexOf("," + s + ",")),
              (f[s] = (function (e, t, i, n) {
                var r,
                  o,
                  a,
                  s,
                  l,
                  c,
                  h = [];
                if (n)
                  for (o = (e = [n].concat(e)).length; -1 < --o; )
                    "string" == typeof (c = e[o][t]) &&
                      "=" === c.charAt(1) &&
                      (e[o][t] = n[t] + Number(c.charAt(0) + c.substr(2)));
                if ((r = e.length - 2) < 0)
                  return (h[0] = new y(e[0][t], 0, 0, e[r < -1 ? 0 : 1][t])), h;
                for (o = 0; o < r; o++)
                  (a = e[o][t]),
                    (s = e[o + 1][t]),
                    (h[o] = new y(a, 0, 0, s)),
                    i &&
                      ((l = e[o + 2][t]),
                      (x[o] = (x[o] || 0) + (s - a) * (s - a)),
                      (b[o] = (b[o] || 0) + (l - s) * (l - s)));
                return (h[o] = new y(e[o][t], 0, 0, e[o + 1][t])), h;
              })(e, s, v[s], o));
          for (a = x.length; -1 < --a; )
            (x[a] = Math.sqrt(x[a])), (b[a] = Math.sqrt(b[a]));
          if (!n) {
            for (a = m.length; -1 < --a; )
              if (v[s])
                for (u = (l = f[m[a]]).length - 1, c = 0; c < u; c++)
                  (h = l[c + 1].da / b[c] + l[c].da / x[c] || 0),
                    (w[c] = (w[c] || 0) + h * h);
            for (a = w.length; -1 < --a; ) w[a] = Math.sqrt(w[a]);
          }
          for (a = m.length, c = i ? 4 : 1; -1 < --a; )
            (function (e, t, i, n, r) {
              for (
                var o,
                  a,
                  s,
                  l,
                  c,
                  h,
                  u,
                  d,
                  p,
                  f = e.length - 1,
                  m = 0,
                  g = e[0].a,
                  v = 0;
                v < f;
                v++
              )
                (o = (s = e[m]).a),
                  (a = s.d),
                  (c = e[m + 1].d),
                  (c = r
                    ? ((u = x[v]),
                      (p =
                        (((d = b[v]) + u) * t * 0.25) / ((!n && w[v]) || 0.5)),
                      a -
                        ((l =
                          a - (a - o) * (n ? 0.5 * t : 0 !== u ? p / u : 0)) +
                          ((((p =
                            a + (c - a) * (n ? 0.5 * t : 0 !== d ? p / d : 0)) -
                            l) *
                            ((3 * u) / (u + d) + 0.5)) /
                            4 || 0)))
                    : a -
                      ((l = a - (a - o) * t * 0.5) +
                        (p = a + (c - a) * t * 0.5)) /
                        2),
                  (l += c),
                  (p += c),
                  (s.c = c = l),
                  (s.b = 0 !== v ? g : (g = s.a + 0.6 * (s.c - s.a))),
                  (s.da = a - o),
                  (s.ca = c - o),
                  (s.ba = g - o),
                  i
                    ? ((h = _(o, g, c, a)),
                      e.splice(m, 1, h[0], h[1], h[2], h[3]),
                      (m += 4))
                    : m++,
                  (g = p);
              ((s = e[m]).b = g),
                (s.c = g + 0.4 * (s.d - g)),
                (s.da = s.d - s.a),
                (s.ca = s.c - s.a),
                (s.ba = g - s.a),
                i &&
                  ((h = _(s.a, g, s.c, s.d)),
                  e.splice(m, 1, h[0], h[1], h[2], h[3]));
            })((l = f[(s = m[a])]), t, i, n, v[s]),
              d && (l.splice(0, c), l.splice(l.length - c, c));
          return f;
        }
        function p(e, t) {
          var i,
            n,
            r,
            o,
            a = [],
            s = [],
            l = 0,
            c = 0,
            h = (t = t >> 0 || 6) - 1,
            u = [],
            d = [];
          for (i in e)
            !(function (e, t, i) {
              for (
                var n, r, o, a, s, l, c, h, u, d = 1 / i, p = e.length;
                -1 < --p;

              )
                for (
                  r = (h = e[p]).a,
                    o = h.d - r,
                    a = h.c - r,
                    s = h.b - r,
                    n = 0,
                    l = 1;
                  l <= i;
                  l++
                )
                  (c =
                    n -
                    (n =
                      ((u = d * l) * u * o +
                        3 * (c = 1 - u) * (u * a + c * s)) *
                      u)),
                    (t[(u = p * i + l - 1)] = (t[u] || 0) + c * c);
            })(e[i], a, t);
          for (r = a.length, n = 0; n < r; n++)
            (l += Math.sqrt(a[n])),
              (d[(o = n % t)] = l),
              o == h &&
                ((c += l),
                (u[(o = (n / t) >> 0)] = d),
                (s[o] = c),
                (l = 0),
                (d = []));
          return { length: c, lengths: s, segments: u };
        }
        var T, x, b, w, v, t, g, e;
        $e._gsDefine(
          "TweenMax",
          ["core.Animation", "core.SimpleTimeline", "TweenLite"],
          function (n, h, g) {
            function v(e) {
              for (var t = [], i = e.length, n = 0; n !== i; t.push(e[n++]));
              return t;
            }
            function y(e, t, i) {
              var n,
                r,
                o = e.cycle;
              for (n in o)
                (r = o[n]),
                  (e[n] =
                    "function" == typeof r ? r(i, t[i]) : r[i % r.length]);
              delete e.cycle;
            }
            var _ = function (e, t, i) {
                g.call(this, e, t, i),
                  (this._cycle = 0),
                  (this._yoyo = !0 === this.vars.yoyo),
                  (this._repeat = this.vars.repeat || 0),
                  (this._repeatDelay = this.vars.repeatDelay || 0),
                  (this._dirty = !0),
                  (this.render = _.prototype.render);
              },
              m = 1e-10,
              x = g._internals,
              b = x.isSelector,
              w = x.isArray,
              e = (_.prototype = g.to({}, 0.1, {})),
              T = [];
            (_.version = "1.19.1"),
              (e.constructor = _),
              (e.kill()._gc = !1),
              (_.killTweensOf = _.killDelayedCallsTo = g.killTweensOf),
              (_.getTweensOf = g.getTweensOf),
              (_.lagSmoothing = g.lagSmoothing),
              (_.ticker = g.ticker),
              (_.render = g.render),
              (e.invalidate = function () {
                return (
                  (this._yoyo = !0 === this.vars.yoyo),
                  (this._repeat = this.vars.repeat || 0),
                  (this._repeatDelay = this.vars.repeatDelay || 0),
                  this._uncache(!0),
                  g.prototype.invalidate.call(this)
                );
              }),
              (e.updateTo = function (e, t) {
                var i,
                  n = this.ratio,
                  r = this.vars.immediateRender || e.immediateRender;
                for (i in (t &&
                  this._startTime < this._timeline._time &&
                  ((this._startTime = this._timeline._time),
                  this._uncache(!1),
                  this._gc
                    ? this._enabled(!0, !1)
                    : this._timeline.insert(
                        this,
                        this._startTime - this._delay
                      )),
                e))
                  this.vars[i] = e[i];
                if (this._initted || r)
                  if (t) (this._initted = !1), r && this.render(0, !0, !0);
                  else if (
                    (this._gc && this._enabled(!0, !1),
                    this._notifyPluginsOfEnabled &&
                      this._firstPT &&
                      g._onPluginEvent("_onDisable", this),
                    0.998 < this._time / this._duration)
                  ) {
                    t = this._totalTime;
                    this.render(0, !0, !1),
                      (this._initted = !1),
                      this.render(t, !0, !1);
                  } else if (
                    ((this._initted = !1), this._init(), 0 < this._time || r)
                  )
                    for (var o, a = 1 / (1 - n), s = this._firstPT; s; )
                      (o = s.s + s.c),
                        (s.c *= a),
                        (s.s = o - s.c),
                        (s = s._next);
                return this;
              }),
              (e.render = function (e, t, i) {
                this._initted ||
                  (0 === this._duration &&
                    this.vars.repeat &&
                    this.invalidate());
                var n,
                  r,
                  o,
                  a,
                  s,
                  l,
                  c = this._dirty ? this.totalDuration() : this._totalDuration,
                  h = this._time,
                  u = this._totalTime,
                  d = this._cycle,
                  p = this._duration,
                  f = this._rawPrevTime;
                if (
                  (c - 1e-7 <= e && 0 <= e
                    ? ((this._totalTime = c),
                      (this._cycle = this._repeat),
                      this._yoyo && 0 != (1 & this._cycle)
                        ? ((this._time = 0),
                          (this.ratio = this._ease._calcEnd
                            ? this._ease.getRatio(0)
                            : 0))
                        : ((this._time = p),
                          (this.ratio = this._ease._calcEnd
                            ? this._ease.getRatio(1)
                            : 1)),
                      this._reversed ||
                        ((n = !0),
                        (r = "onComplete"),
                        (i = i || this._timeline.autoRemoveChildren)),
                      0 === p &&
                        ((!this._initted && this.vars.lazy && !i) ||
                          (this._startTime === this._timeline._duration &&
                            (e = 0),
                          (f < 0 ||
                            (e <= 0 && -1e-7 <= e) ||
                            (f === m && "isPause" !== this.data)) &&
                            f !== e &&
                            ((i = !0), m < f && (r = "onReverseComplete")),
                          (this._rawPrevTime = l =
                            !t || e || f === e ? e : m))))
                    : e < 1e-7
                    ? ((this._totalTime = this._time = this._cycle = 0),
                      (this.ratio = this._ease._calcEnd
                        ? this._ease.getRatio(0)
                        : 0),
                      (0 !== u || (0 === p && 0 < f)) &&
                        ((r = "onReverseComplete"), (n = this._reversed)),
                      e < 0 &&
                        ((this._active = !1),
                        0 === p &&
                          ((!this._initted && this.vars.lazy && !i) ||
                            (0 <= f && (i = !0),
                            (this._rawPrevTime = l =
                              !t || e || f === e ? e : m)))),
                      this._initted || (i = !0))
                    : ((this._totalTime = this._time = e),
                      0 !== this._repeat &&
                        ((s = p + this._repeatDelay),
                        (this._cycle = (this._totalTime / s) >> 0),
                        0 !== this._cycle &&
                          this._cycle === this._totalTime / s &&
                          u <= e &&
                          this._cycle--,
                        (this._time = this._totalTime - this._cycle * s),
                        this._yoyo &&
                          0 != (1 & this._cycle) &&
                          (this._time = p - this._time),
                        this._time > p
                          ? (this._time = p)
                          : this._time < 0 && (this._time = 0)),
                      this._easeType
                        ? ((a = this._time / p),
                          (1 === (c = this._easeType) ||
                            (3 === c && 0.5 <= a)) &&
                            (a = 1 - a),
                          3 === c && (a *= 2),
                          1 === (s = this._easePower)
                            ? (a *= a)
                            : 2 === s
                            ? (a *= a * a)
                            : 3 === s
                            ? (a *= a * a * a)
                            : 4 === s && (a *= a * a * a * a),
                          1 === c
                            ? (this.ratio = 1 - a)
                            : 2 === c
                            ? (this.ratio = a)
                            : this._time / p < 0.5
                            ? (this.ratio = a / 2)
                            : (this.ratio = 1 - a / 2))
                        : (this.ratio = this._ease.getRatio(this._time / p))),
                  h !== this._time || i || d !== this._cycle)
                ) {
                  if (!this._initted) {
                    if ((this._init(), !this._initted || this._gc)) return;
                    if (
                      !i &&
                      this._firstPT &&
                      ((!1 !== this.vars.lazy && this._duration) ||
                        (this.vars.lazy && !this._duration))
                    )
                      return (
                        (this._time = h),
                        (this._totalTime = u),
                        (this._rawPrevTime = f),
                        (this._cycle = d),
                        x.lazyTweens.push(this),
                        void (this._lazy = [e, t])
                      );
                    this._time && !n
                      ? (this.ratio = this._ease.getRatio(this._time / p))
                      : n &&
                        this._ease._calcEnd &&
                        (this.ratio = this._ease.getRatio(
                          0 === this._time ? 0 : 1
                        ));
                  }
                  for (
                    !1 !== this._lazy && (this._lazy = !1),
                      this._active ||
                        (!this._paused &&
                          this._time !== h &&
                          0 <= e &&
                          (this._active = !0)),
                      0 === u &&
                        (2 === this._initted && 0 < e && this._init(),
                        this._startAt &&
                          (0 <= e
                            ? this._startAt.render(e, t, i)
                            : (r = r || "_dummyGS")),
                        this.vars.onStart &&
                          ((0 === this._totalTime && 0 !== p) ||
                            t ||
                            this._callback("onStart"))),
                      o = this._firstPT;
                    o;

                  )
                    o.f
                      ? o.t[o.p](o.c * this.ratio + o.s)
                      : (o.t[o.p] = o.c * this.ratio + o.s),
                      (o = o._next);
                  this._onUpdate &&
                    (e < 0 &&
                      this._startAt &&
                      this._startTime &&
                      this._startAt.render(e, t, i),
                    t ||
                      (this._totalTime === u && !r) ||
                      this._callback("onUpdate")),
                    this._cycle !== d &&
                      (t ||
                        this._gc ||
                        (this.vars.onRepeat && this._callback("onRepeat"))),
                    r &&
                      ((this._gc && !i) ||
                        (e < 0 &&
                          this._startAt &&
                          !this._onUpdate &&
                          this._startTime &&
                          this._startAt.render(e, t, i),
                        n &&
                          (this._timeline.autoRemoveChildren &&
                            this._enabled(!1, !1),
                          (this._active = !1)),
                        !t && this.vars[r] && this._callback(r),
                        0 === p &&
                          this._rawPrevTime === m &&
                          l !== m &&
                          (this._rawPrevTime = 0)));
                } else
                  u !== this._totalTime &&
                    this._onUpdate &&
                    (t || this._callback("onUpdate"));
              }),
              (_.to = function (e, t, i) {
                return new _(e, t, i);
              }),
              (_.from = function (e, t, i) {
                return (
                  (i.runBackwards = !0),
                  (i.immediateRender = 0 != i.immediateRender),
                  new _(e, t, i)
                );
              }),
              (_.fromTo = function (e, t, i, n) {
                return (
                  (n.startAt = i),
                  (n.immediateRender =
                    0 != n.immediateRender && 0 != i.immediateRender),
                  new _(e, t, n)
                );
              }),
              (_.staggerTo = _.allTo =
                function (e, t, i, n, r, o, a) {
                  n = n || 0;
                  function s() {
                    i.onComplete &&
                      i.onComplete.apply(i.onCompleteScope || this, arguments),
                      r.apply(a || i.callbackScope || this, o || T);
                  }
                  var l,
                    c,
                    h,
                    u,
                    d = 0,
                    p = [],
                    f = i.cycle,
                    m = i.startAt && i.startAt.cycle;
                  for (
                    w(e) ||
                      ("string" == typeof e && (e = g.selector(e) || e),
                      b(e) && (e = v(e))),
                      e = e || [],
                      n < 0 && ((e = v(e)).reverse(), (n *= -1)),
                      l = e.length - 1,
                      h = 0;
                    h <= l;
                    h++
                  ) {
                    for (u in ((c = {}), i)) c[u] = i[u];
                    if (
                      (f &&
                        (y(c, e, h),
                        null != c.duration &&
                          ((t = c.duration), delete c.duration)),
                      m)
                    ) {
                      for (u in ((m = c.startAt = {}), i.startAt))
                        m[u] = i.startAt[u];
                      y(c.startAt, e, h);
                    }
                    (c.delay = d + (c.delay || 0)),
                      h === l && r && (c.onComplete = s),
                      (p[h] = new _(e[h], t, c)),
                      (d += n);
                  }
                  return p;
                }),
              (_.staggerFrom = _.allFrom =
                function (e, t, i, n, r, o, a) {
                  return (
                    (i.runBackwards = !0),
                    (i.immediateRender = 0 != i.immediateRender),
                    _.staggerTo(e, t, i, n, r, o, a)
                  );
                }),
              (_.staggerFromTo = _.allFromTo =
                function (e, t, i, n, r, o, a, s) {
                  return (
                    (n.startAt = i),
                    (n.immediateRender =
                      0 != n.immediateRender && 0 != i.immediateRender),
                    _.staggerTo(e, t, n, r, o, a, s)
                  );
                }),
              (_.delayedCall = function (e, t, i, n, r) {
                return new _(t, 0, {
                  delay: e,
                  onComplete: t,
                  onCompleteParams: i,
                  callbackScope: n,
                  onReverseComplete: t,
                  onReverseCompleteParams: i,
                  immediateRender: !1,
                  useFrames: r,
                  overwrite: 0,
                });
              }),
              (_.set = function (e, t) {
                return new _(e, 0, t);
              }),
              (_.isTweening = function (e) {
                return 0 < g.getTweensOf(e, !0).length;
              });
            var o = function (e, t) {
                for (var i = [], n = 0, r = e._first; r; )
                  r instanceof g
                    ? (i[n++] = r)
                    : (t && (i[n++] = r), (n = (i = i.concat(o(r, t))).length)),
                    (r = r._next);
                return i;
              },
              u = (_.getAllTweens = function (e) {
                return o(n._rootTimeline, e).concat(
                  o(n._rootFramesTimeline, e)
                );
              });
            (_.killAll = function (e, t, i, n) {
              null == t && (t = !0), null == i && (i = !0);
              for (
                var r, o, a = u(0 != n), s = a.length, l = t && i && n, c = 0;
                c < s;
                c++
              )
                (o = a[c]),
                  (l ||
                    o instanceof h ||
                    ((r = o.target === o.vars.onComplete) && i) ||
                    (t && !r)) &&
                    (e
                      ? o.totalTime(o._reversed ? 0 : o.totalDuration())
                      : o._enabled(!1, !1));
            }),
              (_.killChildTweensOf = function (e, t) {
                if (null != e) {
                  var i,
                    n,
                    r,
                    o,
                    a,
                    s = x.tweenLookup;
                  if (
                    ("string" == typeof e && (e = g.selector(e) || e),
                    b(e) && (e = v(e)),
                    w(e))
                  )
                    for (o = e.length; -1 < --o; ) _.killChildTweensOf(e[o], t);
                  else {
                    for (r in ((i = []), s))
                      for (n = s[r].target.parentNode; n; )
                        n === e && (i = i.concat(s[r].tweens)),
                          (n = n.parentNode);
                    for (a = i.length, o = 0; o < a; o++)
                      t && i[o].totalTime(i[o].totalDuration()),
                        i[o]._enabled(!1, !1);
                  }
                }
              });
            function r(e, t, i, n) {
              (t = !1 !== t), (i = !1 !== i);
              for (
                var r, o, a = u((n = !1 !== n)), s = t && i && n, l = a.length;
                -1 < --l;

              )
                (o = a[l]),
                  (s ||
                    o instanceof h ||
                    ((r = o.target === o.vars.onComplete) && i) ||
                    (t && !r)) &&
                    o.paused(e);
            }
            return (
              (_.pauseAll = function (e, t, i) {
                r(!0, e, t, i);
              }),
              (_.resumeAll = function (e, t, i) {
                r(!1, e, t, i);
              }),
              (_.globalTimeScale = function (e) {
                var t = n._rootTimeline,
                  i = g.ticker.time;
                return arguments.length
                  ? ((e = e || m),
                    (t._startTime =
                      i - ((i - t._startTime) * t._timeScale) / e),
                    (t = n._rootFramesTimeline),
                    (i = g.ticker.frame),
                    (t._startTime =
                      i - ((i - t._startTime) * t._timeScale) / e),
                    (t._timeScale = n._rootTimeline._timeScale = e))
                  : t._timeScale;
              }),
              (e.progress = function (e, t) {
                return arguments.length
                  ? this.totalTime(
                      this.duration() *
                        (this._yoyo && 0 != (1 & this._cycle) ? 1 - e : e) +
                        this._cycle * (this._duration + this._repeatDelay),
                      t
                    )
                  : this._time / this.duration();
              }),
              (e.totalProgress = function (e, t) {
                return arguments.length
                  ? this.totalTime(this.totalDuration() * e, t)
                  : this._totalTime / this.totalDuration();
              }),
              (e.time = function (e, t) {
                return arguments.length
                  ? (this._dirty && this.totalDuration(),
                    e > this._duration && (e = this._duration),
                    this._yoyo && 0 != (1 & this._cycle)
                      ? (e =
                          this._duration -
                          e +
                          this._cycle * (this._duration + this._repeatDelay))
                      : 0 !== this._repeat &&
                        (e +=
                          this._cycle * (this._duration + this._repeatDelay)),
                    this.totalTime(e, t))
                  : this._time;
              }),
              (e.duration = function (e) {
                return arguments.length
                  ? n.prototype.duration.call(this, e)
                  : this._duration;
              }),
              (e.totalDuration = function (e) {
                return arguments.length
                  ? -1 === this._repeat
                    ? this
                    : this.duration(
                        (e - this._repeat * this._repeatDelay) /
                          (this._repeat + 1)
                      )
                  : (this._dirty &&
                      ((this._totalDuration =
                        -1 === this._repeat
                          ? 999999999999
                          : this._duration * (this._repeat + 1) +
                            this._repeatDelay * this._repeat),
                      (this._dirty = !1)),
                    this._totalDuration);
              }),
              (e.repeat = function (e) {
                return arguments.length
                  ? ((this._repeat = e), this._uncache(!0))
                  : this._repeat;
              }),
              (e.repeatDelay = function (e) {
                return arguments.length
                  ? ((this._repeatDelay = e), this._uncache(!0))
                  : this._repeatDelay;
              }),
              (e.yoyo = function (e) {
                return arguments.length ? ((this._yoyo = e), this) : this._yoyo;
              }),
              _
            );
          },
          !0
        ),
          $e._gsDefine(
            "TimelineLite",
            ["core.Animation", "core.SimpleTimeline", "TweenLite"],
            function (h, u, d) {
              function p(e) {
                u.call(this, e),
                  (this._labels = {}),
                  (this.autoRemoveChildren =
                    !0 === this.vars.autoRemoveChildren),
                  (this.smoothChildTiming = !0 === this.vars.smoothChildTiming),
                  (this._sortChildren = !0),
                  (this._onUpdate = this.vars.onUpdate);
                var t,
                  i,
                  n = this.vars;
                for (i in n)
                  (t = n[i]),
                    y(t) &&
                      -1 !== t.join("").indexOf("{self}") &&
                      (n[i] = this._swapSelfInParams(t));
                y(n.tweens) && this.add(n.tweens, 0, n.align, n.stagger);
              }
              function f(e) {
                var t,
                  i = {};
                for (t in e) i[t] = e[t];
                return i;
              }
              function m(e, t, i) {
                var n,
                  r,
                  o = e.cycle;
                for (n in o)
                  (r = o[n]),
                    (e[n] =
                      "function" == typeof r ? r(i, t[i]) : r[i % r.length]);
                delete e.cycle;
              }
              function g(e) {
                for (var t = [], i = e.length, n = 0; n !== i; t.push(e[n++]));
                return t;
              }
              var e = d._internals,
                t = (p._internals = {}),
                v = e.isSelector,
                y = e.isArray,
                _ = e.lazyTweens,
                x = e.lazyRender,
                a = $e._gsDefine.globals,
                r = (t.pauseCallback = function () {}),
                t = (p.prototype = new u());
              return (
                (p.version = "1.19.1"),
                (t.constructor = p),
                (t.kill()._gc = t._forcingPlayhead = t._hasPause = !1),
                (t.to = function (e, t, i, n) {
                  var r = (i.repeat && a.TweenMax) || d;
                  return t ? this.add(new r(e, t, i), n) : this.set(e, i, n);
                }),
                (t.from = function (e, t, i, n) {
                  return this.add(
                    ((i.repeat && a.TweenMax) || d).from(e, t, i),
                    n
                  );
                }),
                (t.fromTo = function (e, t, i, n, r) {
                  var o = (n.repeat && a.TweenMax) || d;
                  return t
                    ? this.add(o.fromTo(e, t, i, n), r)
                    : this.set(e, n, r);
                }),
                (t.staggerTo = function (e, t, i, n, r, o, a, s) {
                  var l,
                    c,
                    h = new p({
                      onComplete: o,
                      onCompleteParams: a,
                      callbackScope: s,
                      smoothChildTiming: this.smoothChildTiming,
                    }),
                    u = i.cycle;
                  for (
                    "string" == typeof e && (e = d.selector(e) || e),
                      v((e = e || [])) && (e = g(e)),
                      (n = n || 0) < 0 && ((e = g(e)).reverse(), (n *= -1)),
                      c = 0;
                    c < e.length;
                    c++
                  )
                    (l = f(i)).startAt &&
                      ((l.startAt = f(l.startAt)),
                      l.startAt.cycle && m(l.startAt, e, c)),
                      u &&
                        (m(l, e, c),
                        null != l.duration &&
                          ((t = l.duration), delete l.duration)),
                      h.to(e[c], t, l, c * n);
                  return this.add(h, r);
                }),
                (t.staggerFrom = function (e, t, i, n, r, o, a, s) {
                  return (
                    (i.immediateRender = 0 != i.immediateRender),
                    (i.runBackwards = !0),
                    this.staggerTo(e, t, i, n, r, o, a, s)
                  );
                }),
                (t.staggerFromTo = function (e, t, i, n, r, o, a, s, l) {
                  return (
                    (n.startAt = i),
                    (n.immediateRender =
                      0 != n.immediateRender && 0 != i.immediateRender),
                    this.staggerTo(e, t, n, r, o, a, s, l)
                  );
                }),
                (t.call = function (e, t, i, n) {
                  return this.add(d.delayedCall(0, e, t, i), n);
                }),
                (t.set = function (e, t, i) {
                  return (
                    (i = this._parseTimeOrLabel(i, 0, !0)),
                    null == t.immediateRender &&
                      (t.immediateRender = i === this._time && !this._paused),
                    this.add(new d(e, 0, t), i)
                  );
                }),
                (p.exportRoot = function (e, t) {
                  null == (e = e || {}).smoothChildTiming &&
                    (e.smoothChildTiming = !0);
                  var i,
                    n,
                    r = new p(e),
                    e = r._timeline;
                  for (
                    null == t && (t = !0),
                      e._remove(r, !0),
                      r._startTime = 0,
                      r._rawPrevTime = r._time = r._totalTime = e._time,
                      i = e._first;
                    i;

                  )
                    (n = i._next),
                      (t && i instanceof d && i.target === i.vars.onComplete) ||
                        r.add(i, i._startTime - i._delay),
                      (i = n);
                  return e.add(r, 0), r;
                }),
                (t.add = function (e, t, i, n) {
                  var r, o, a, s, l, c;
                  if (
                    ("number" != typeof t &&
                      (t = this._parseTimeOrLabel(t, 0, !0, e)),
                    !(e instanceof h))
                  ) {
                    if (e instanceof Array || (e && e.push && y(e))) {
                      for (
                        i = i || "normal",
                          n = n || 0,
                          r = t,
                          o = e.length,
                          a = 0;
                        a < o;
                        a++
                      )
                        y((s = e[a])) && (s = new p({ tweens: s })),
                          this.add(s, r),
                          "string" != typeof s &&
                            "function" != typeof s &&
                            ("sequence" === i
                              ? (r =
                                  s._startTime +
                                  s.totalDuration() / s._timeScale)
                              : "start" === i && (s._startTime -= s.delay())),
                          (r += n);
                      return this._uncache(!0);
                    }
                    if ("string" == typeof e) return this.addLabel(e, t);
                    if ("function" != typeof e)
                      throw (
                        "Cannot add " +
                        e +
                        " into the timeline; it is not a tween, timeline, function, or string."
                      );
                    e = d.delayedCall(0, e);
                  }
                  if (
                    (u.prototype.add.call(this, e, t),
                    (this._gc || this._time === this._duration) &&
                      !this._paused &&
                      this._duration < this.duration())
                  )
                    for (c = (l = this).rawTime() > e._startTime; l._timeline; )
                      c && l._timeline.smoothChildTiming
                        ? l.totalTime(l._totalTime, !0)
                        : l._gc && l._enabled(!0, !1),
                        (l = l._timeline);
                  return this;
                }),
                (t.remove = function (e) {
                  if (e instanceof h) {
                    this._remove(e, !1);
                    var t = (e._timeline = e.vars.useFrames
                      ? h._rootFramesTimeline
                      : h._rootTimeline);
                    return (
                      (e._startTime =
                        (e._paused ? e._pauseTime : t._time) -
                        (e._reversed
                          ? e.totalDuration() - e._totalTime
                          : e._totalTime) /
                          e._timeScale),
                      this
                    );
                  }
                  if (e instanceof Array || (e && e.push && y(e))) {
                    for (var i = e.length; -1 < --i; ) this.remove(e[i]);
                    return this;
                  }
                  return "string" == typeof e
                    ? this.removeLabel(e)
                    : this.kill(null, e);
                }),
                (t._remove = function (e, t) {
                  return (
                    u.prototype._remove.call(this, e, t),
                    this._last
                      ? this._time > this.duration() &&
                        ((this._time = this._duration),
                        (this._totalTime = this._totalDuration))
                      : (this._time =
                          this._totalTime =
                          this._duration =
                          this._totalDuration =
                            0),
                    this
                  );
                }),
                (t.append = function (e, t) {
                  return this.add(e, this._parseTimeOrLabel(null, t, !0, e));
                }),
                (t.insert = t.insertMultiple =
                  function (e, t, i, n) {
                    return this.add(e, t || 0, i, n);
                  }),
                (t.appendMultiple = function (e, t, i, n) {
                  return this.add(
                    e,
                    this._parseTimeOrLabel(null, t, !0, e),
                    i,
                    n
                  );
                }),
                (t.addLabel = function (e, t) {
                  return (this._labels[e] = this._parseTimeOrLabel(t)), this;
                }),
                (t.addPause = function (e, t, i, n) {
                  n = d.delayedCall(0, r, i, n || this);
                  return (
                    (n.vars.onComplete = n.vars.onReverseComplete = t),
                    (n.data = "isPause"),
                    (this._hasPause = !0),
                    this.add(n, e)
                  );
                }),
                (t.removeLabel = function (e) {
                  return delete this._labels[e], this;
                }),
                (t.getLabelTime = function (e) {
                  return null != this._labels[e] ? this._labels[e] : -1;
                }),
                (t._parseTimeOrLabel = function (e, t, i, n) {
                  var r;
                  if (n instanceof h && n.timeline === this) this.remove(n);
                  else if (n && (n instanceof Array || (n.push && y(n))))
                    for (r = n.length; -1 < --r; )
                      n[r] instanceof h &&
                        n[r].timeline === this &&
                        this.remove(n[r]);
                  if ("string" == typeof t)
                    return this._parseTimeOrLabel(
                      t,
                      i && "number" == typeof e && null == this._labels[t]
                        ? e - this.duration()
                        : 0,
                      i
                    );
                  if (
                    ((t = t || 0),
                    "string" != typeof e ||
                      (!isNaN(e) && null == this._labels[e]))
                  )
                    null == e && (e = this.duration());
                  else {
                    if (-1 === (r = e.indexOf("=")))
                      return null == this._labels[e]
                        ? i
                          ? (this._labels[e] = this.duration() + t)
                          : t
                        : this._labels[e] + t;
                    (t =
                      parseInt(e.charAt(r - 1) + "1", 10) *
                      Number(e.substr(r + 1))),
                      (e =
                        1 < r
                          ? this._parseTimeOrLabel(e.substr(0, r - 1), 0, i)
                          : this.duration());
                  }
                  return Number(e) + t;
                }),
                (t.seek = function (e, t) {
                  return this.totalTime(
                    "number" == typeof e ? e : this._parseTimeOrLabel(e),
                    !1 !== t
                  );
                }),
                (t.stop = function () {
                  return this.paused(!0);
                }),
                (t.gotoAndPlay = function (e, t) {
                  return this.play(e, t);
                }),
                (t.gotoAndStop = function (e, t) {
                  return this.pause(e, t);
                }),
                (t.render = function (e, t, i) {
                  this._gc && this._enabled(!0, !1);
                  var n,
                    r,
                    o,
                    a,
                    s,
                    l,
                    c,
                    h = this._dirty
                      ? this.totalDuration()
                      : this._totalDuration,
                    u = this._time,
                    d = this._startTime,
                    p = this._timeScale,
                    f = this._paused;
                  if (h - 1e-7 <= e && 0 <= e)
                    (this._totalTime = this._time = h),
                      this._reversed ||
                        this._hasPausedChild() ||
                        ((r = !0),
                        (a = "onComplete"),
                        (s = !!this._timeline.autoRemoveChildren),
                        0 === this._duration &&
                          ((e <= 0 && -1e-7 <= e) ||
                            this._rawPrevTime < 0 ||
                            1e-10 === this._rawPrevTime) &&
                          this._rawPrevTime !== e &&
                          this._first &&
                          ((s = !0),
                          1e-10 < this._rawPrevTime &&
                            (a = "onReverseComplete"))),
                      (this._rawPrevTime =
                        this._duration || !t || e || this._rawPrevTime === e
                          ? e
                          : 1e-10),
                      (e = h + 1e-4);
                  else if (e < 1e-7)
                    if (
                      (((this._totalTime = this._time = 0) !== u ||
                        (0 === this._duration &&
                          1e-10 !== this._rawPrevTime &&
                          (0 < this._rawPrevTime ||
                            (e < 0 && 0 <= this._rawPrevTime)))) &&
                        ((a = "onReverseComplete"), (r = this._reversed)),
                      e < 0)
                    )
                      (this._active = !1),
                        this._timeline.autoRemoveChildren && this._reversed
                          ? ((s = r = !0), (a = "onReverseComplete"))
                          : 0 <= this._rawPrevTime && this._first && (s = !0),
                        (this._rawPrevTime = e);
                    else {
                      if (
                        ((this._rawPrevTime =
                          this._duration || !t || e || this._rawPrevTime === e
                            ? e
                            : 1e-10),
                        0 === e && r)
                      )
                        for (n = this._first; n && 0 === n._startTime; )
                          n._duration || (r = !1), (n = n._next);
                      (e = 0), this._initted || (s = !0);
                    }
                  else {
                    if (this._hasPause && !this._forcingPlayhead && !t) {
                      if (u <= e)
                        for (n = this._first; n && n._startTime <= e && !l; )
                          n._duration ||
                            "isPause" !== n.data ||
                            n.ratio ||
                            (0 === n._startTime && 0 === this._rawPrevTime) ||
                            (l = n),
                            (n = n._next);
                      else
                        for (n = this._last; n && n._startTime >= e && !l; )
                          n._duration ||
                            ("isPause" === n.data &&
                              0 < n._rawPrevTime &&
                              (l = n)),
                            (n = n._prev);
                      l &&
                        ((this._time = e = l._startTime),
                        (this._totalTime =
                          e +
                          this._cycle *
                            (this._totalDuration + this._repeatDelay)));
                    }
                    this._totalTime = this._time = this._rawPrevTime = e;
                  }
                  if ((this._time !== u && this._first) || i || s || l) {
                    if (
                      (this._initted || (this._initted = !0),
                      this._active ||
                        (!this._paused &&
                          this._time !== u &&
                          0 < e &&
                          (this._active = !0)),
                      0 === u &&
                        this.vars.onStart &&
                        ((0 === this._time && this._duration) ||
                          t ||
                          this._callback("onStart")),
                      u <= (c = this._time))
                    )
                      for (
                        n = this._first;
                        n &&
                        ((o = n._next),
                        c === this._time && (!this._paused || f));

                      )
                        (n._active ||
                          (n._startTime <= c && !n._paused && !n._gc)) &&
                          (l === n && this.pause(),
                          n._reversed
                            ? n.render(
                                (n._dirty
                                  ? n.totalDuration()
                                  : n._totalDuration) -
                                  (e - n._startTime) * n._timeScale,
                                t,
                                i
                              )
                            : n.render(
                                (e - n._startTime) * n._timeScale,
                                t,
                                i
                              )),
                          (n = o);
                    else
                      for (
                        n = this._last;
                        n &&
                        ((o = n._prev),
                        c === this._time && (!this._paused || f));

                      ) {
                        if (
                          n._active ||
                          (n._startTime <= u && !n._paused && !n._gc)
                        ) {
                          if (l === n) {
                            for (l = n._prev; l && l.endTime() > this._time; )
                              l.render(
                                l._reversed
                                  ? l.totalDuration() -
                                      (e - l._startTime) * l._timeScale
                                  : (e - l._startTime) * l._timeScale,
                                t,
                                i
                              ),
                                (l = l._prev);
                            (l = null), this.pause();
                          }
                          n._reversed
                            ? n.render(
                                (n._dirty
                                  ? n.totalDuration()
                                  : n._totalDuration) -
                                  (e - n._startTime) * n._timeScale,
                                t,
                                i
                              )
                            : n.render((e - n._startTime) * n._timeScale, t, i);
                        }
                        n = o;
                      }
                    this._onUpdate &&
                      (t || (_.length && x(), this._callback("onUpdate"))),
                      a &&
                        (this._gc ||
                          (d !== this._startTime && p === this._timeScale) ||
                          ((0 === this._time || h >= this.totalDuration()) &&
                            (r &&
                              (_.length && x(),
                              this._timeline.autoRemoveChildren &&
                                this._enabled(!1, !1),
                              (this._active = !1)),
                            !t && this.vars[a] && this._callback(a))));
                  }
                }),
                (t._hasPausedChild = function () {
                  for (var e = this._first; e; ) {
                    if (e._paused || (e instanceof p && e._hasPausedChild()))
                      return !0;
                    e = e._next;
                  }
                  return !1;
                }),
                (t.getChildren = function (e, t, i, n) {
                  n = n || -9999999999;
                  for (var r = [], o = this._first, a = 0; o; )
                    o._startTime < n ||
                      (o instanceof d
                        ? !1 !== t && (r[a++] = o)
                        : (!1 !== i && (r[a++] = o),
                          !1 !== e &&
                            (a = (r = r.concat(o.getChildren(!0, t, i)))
                              .length))),
                      (o = o._next);
                  return r;
                }),
                (t.getTweensOf = function (e, t) {
                  var i,
                    n,
                    r = this._gc,
                    o = [],
                    a = 0;
                  for (
                    r && this._enabled(!0, !0),
                      n = (i = d.getTweensOf(e)).length;
                    -1 < --n;

                  )
                    (i[n].timeline === this || (t && this._contains(i[n]))) &&
                      (o[a++] = i[n]);
                  return r && this._enabled(!1, !0), o;
                }),
                (t.recent = function () {
                  return this._recent;
                }),
                (t._contains = function (e) {
                  for (var t = e.timeline; t; ) {
                    if (t === this) return !0;
                    t = t.timeline;
                  }
                  return !1;
                }),
                (t.shiftChildren = function (e, t, i) {
                  i = i || 0;
                  for (var n, r = this._first, o = this._labels; r; )
                    r._startTime >= i && (r._startTime += e), (r = r._next);
                  if (t) for (n in o) o[n] >= i && (o[n] += e);
                  return this._uncache(!0);
                }),
                (t._kill = function (e, t) {
                  if (!e && !t) return this._enabled(!1, !1);
                  for (
                    var i = t
                        ? this.getTweensOf(t)
                        : this.getChildren(!0, !0, !1),
                      n = i.length,
                      r = !1;
                    -1 < --n;

                  )
                    i[n]._kill(e, t) && (r = !0);
                  return r;
                }),
                (t.clear = function (e) {
                  var t = this.getChildren(!1, !0, !0),
                    i = t.length;
                  for (this._time = this._totalTime = 0; -1 < --i; )
                    t[i]._enabled(!1, !1);
                  return !1 !== e && (this._labels = {}), this._uncache(!0);
                }),
                (t.invalidate = function () {
                  for (var e = this._first; e; ) e.invalidate(), (e = e._next);
                  return h.prototype.invalidate.call(this);
                }),
                (t._enabled = function (e, t) {
                  if (e === this._gc)
                    for (var i = this._first; i; )
                      i._enabled(e, !0), (i = i._next);
                  return u.prototype._enabled.call(this, e, t);
                }),
                (t.totalTime = function (e, t, i) {
                  this._forcingPlayhead = !0;
                  var n = h.prototype.totalTime.apply(this, arguments);
                  return (this._forcingPlayhead = !1), n;
                }),
                (t.duration = function (e) {
                  return arguments.length
                    ? (0 !== this.duration() &&
                        0 !== e &&
                        this.timeScale(this._duration / e),
                      this)
                    : (this._dirty && this.totalDuration(), this._duration);
                }),
                (t.totalDuration = function (e) {
                  if (arguments.length)
                    return e && this.totalDuration()
                      ? this.timeScale(this._totalDuration / e)
                      : this;
                  if (this._dirty) {
                    for (var t, i, n = 0, r = this._last, o = 999999999999; r; )
                      (t = r._prev),
                        r._dirty && r.totalDuration(),
                        r._startTime > o && this._sortChildren && !r._paused
                          ? this.add(r, r._startTime - r._delay)
                          : (o = r._startTime),
                        r._startTime < 0 &&
                          !r._paused &&
                          ((n -= r._startTime),
                          this._timeline.smoothChildTiming &&
                            (this._startTime += r._startTime / this._timeScale),
                          this.shiftChildren(-r._startTime, !1, -9999999999),
                          (o = 0)),
                        n <
                          (i =
                            r._startTime + r._totalDuration / r._timeScale) &&
                          (n = i),
                        (r = t);
                    (this._duration = this._totalDuration = n),
                      (this._dirty = !1);
                  }
                  return this._totalDuration;
                }),
                (t.paused = function (e) {
                  if (!e)
                    for (var t = this._first, i = this._time; t; )
                      t._startTime === i &&
                        "isPause" === t.data &&
                        (t._rawPrevTime = 0),
                        (t = t._next);
                  return h.prototype.paused.apply(this, arguments);
                }),
                (t.usesFrames = function () {
                  for (var e = this._timeline; e._timeline; ) e = e._timeline;
                  return e === h._rootFramesTimeline;
                }),
                (t.rawTime = function (e) {
                  return e &&
                    (this._paused ||
                      (this._repeat &&
                        0 < this.time() &&
                        this.totalProgress() < 1))
                    ? this._totalTime % (this._duration + this._repeatDelay)
                    : this._paused
                    ? this._totalTime
                    : (this._timeline.rawTime(e) - this._startTime) *
                      this._timeScale;
                }),
                p
              );
            },
            !0
          ),
          $e._gsDefine(
            "TimelineMax",
            ["TimelineLite", "TweenLite", "easing.Ease"],
            function (t, s, e) {
              function i(e) {
                t.call(this, e),
                  (this._repeat = this.vars.repeat || 0),
                  (this._repeatDelay = this.vars.repeatDelay || 0),
                  (this._cycle = 0),
                  (this._yoyo = !0 === this.vars.yoyo),
                  (this._dirty = !0);
              }
              var n = s._internals,
                M = n.lazyTweens,
                E = n.lazyRender,
                l = $e._gsDefine.globals,
                c = new e(null, null, 1, 0),
                e = (i.prototype = new t());
              return (
                (e.constructor = i),
                (e.kill()._gc = !1),
                (i.version = "1.19.1"),
                (e.invalidate = function () {
                  return (
                    (this._yoyo = !0 === this.vars.yoyo),
                    (this._repeat = this.vars.repeat || 0),
                    (this._repeatDelay = this.vars.repeatDelay || 0),
                    this._uncache(!0),
                    t.prototype.invalidate.call(this)
                  );
                }),
                (e.addCallback = function (e, t, i, n) {
                  return this.add(s.delayedCall(0, e, i, n), t);
                }),
                (e.removeCallback = function (e, t) {
                  if (e)
                    if (null == t) this._kill(null, e);
                    else
                      for (
                        var i = this.getTweensOf(e, !1),
                          n = i.length,
                          r = this._parseTimeOrLabel(t);
                        -1 < --n;

                      )
                        i[n]._startTime === r && i[n]._enabled(!1, !1);
                  return this;
                }),
                (e.removePause = function (e) {
                  return this.removeCallback(t._internals.pauseCallback, e);
                }),
                (e.tweenTo = function (e, t) {
                  t = t || {};
                  var i,
                    n,
                    r,
                    o = {
                      ease: c,
                      useFrames: this.usesFrames(),
                      immediateRender: !1,
                    },
                    a = (t.repeat && l.TweenMax) || s;
                  for (n in t) o[n] = t[n];
                  return (
                    (o.time = this._parseTimeOrLabel(e)),
                    (i =
                      Math.abs(Number(o.time) - this._time) / this._timeScale ||
                      0.001),
                    (r = new a(this, i, o)),
                    (o.onStart = function () {
                      r.target.paused(!0),
                        r.vars.time !== r.target.time() &&
                          i === r.duration() &&
                          r.duration(
                            Math.abs(r.vars.time - r.target.time()) /
                              r.target._timeScale
                          ),
                        t.onStart &&
                          t.onStart.apply(
                            t.onStartScope || t.callbackScope || r,
                            t.onStartParams || []
                          );
                    }),
                    r
                  );
                }),
                (e.tweenFromTo = function (e, t, i) {
                  (i = i || {}),
                    (e = this._parseTimeOrLabel(e)),
                    (i.startAt = {
                      onComplete: this.seek,
                      onCompleteParams: [e],
                      callbackScope: this,
                    }),
                    (i.immediateRender = !1 !== i.immediateRender);
                  i = this.tweenTo(t, i);
                  return i.duration(
                    Math.abs(i.vars.time - e) / this._timeScale || 0.001
                  );
                }),
                (e.render = function (e, t, i) {
                  this._gc && this._enabled(!0, !1);
                  var n,
                    r,
                    o,
                    a,
                    s,
                    l,
                    c,
                    h = this._dirty
                      ? this.totalDuration()
                      : this._totalDuration,
                    u = this._duration,
                    d = this._time,
                    p = this._totalTime,
                    f = this._startTime,
                    m = this._timeScale,
                    g = this._rawPrevTime,
                    v = this._paused,
                    y = this._cycle;
                  if (h - 1e-7 <= e && 0 <= e)
                    this._locked ||
                      ((this._totalTime = h), (this._cycle = this._repeat)),
                      this._reversed ||
                        this._hasPausedChild() ||
                        ((r = !0),
                        (a = "onComplete"),
                        (s = !!this._timeline.autoRemoveChildren),
                        0 === this._duration &&
                          ((e <= 0 && -1e-7 <= e) || g < 0 || 1e-10 === g) &&
                          g !== e &&
                          this._first &&
                          ((s = !0), 1e-10 < g && (a = "onReverseComplete"))),
                      (this._rawPrevTime =
                        this._duration || !t || e || this._rawPrevTime === e
                          ? e
                          : 1e-10),
                      this._yoyo && 0 != (1 & this._cycle)
                        ? (this._time = e = 0)
                        : (e = (this._time = u) + 1e-4);
                  else if (e < 1e-7)
                    if (
                      (this._locked || (this._totalTime = this._cycle = 0),
                      ((this._time = 0) !== d ||
                        (0 === u &&
                          1e-10 !== g &&
                          (0 < g || (e < 0 && 0 <= g)) &&
                          !this._locked)) &&
                        ((a = "onReverseComplete"), (r = this._reversed)),
                      e < 0)
                    )
                      (this._active = !1),
                        this._timeline.autoRemoveChildren && this._reversed
                          ? ((s = r = !0), (a = "onReverseComplete"))
                          : 0 <= g && this._first && (s = !0),
                        (this._rawPrevTime = e);
                    else {
                      if (
                        ((this._rawPrevTime =
                          u || !t || e || this._rawPrevTime === e ? e : 1e-10),
                        0 === e && r)
                      )
                        for (n = this._first; n && 0 === n._startTime; )
                          n._duration || (r = !1), (n = n._next);
                      (e = 0), this._initted || (s = !0);
                    }
                  else if (
                    (0 === u && g < 0 && (s = !0),
                    (this._time = this._rawPrevTime = e),
                    this._locked ||
                      ((this._totalTime = e),
                      0 !== this._repeat &&
                        ((S = u + this._repeatDelay),
                        (this._cycle = (this._totalTime / S) >> 0),
                        0 !== this._cycle &&
                          this._cycle === this._totalTime / S &&
                          p <= e &&
                          this._cycle--,
                        (this._time = this._totalTime - this._cycle * S),
                        this._yoyo &&
                          0 != (1 & this._cycle) &&
                          (this._time = u - this._time),
                        this._time > u
                          ? (e = (this._time = u) + 1e-4)
                          : this._time < 0
                          ? (this._time = e = 0)
                          : (e = this._time))),
                    this._hasPause && !this._forcingPlayhead && !t && e < u)
                  ) {
                    if (
                      d <= (e = this._time) ||
                      (this._repeat && y !== this._cycle)
                    )
                      for (n = this._first; n && n._startTime <= e && !l; )
                        n._duration ||
                          "isPause" !== n.data ||
                          n.ratio ||
                          (0 === n._startTime && 0 === this._rawPrevTime) ||
                          (l = n),
                          (n = n._next);
                    else
                      for (n = this._last; n && n._startTime >= e && !l; )
                        n._duration ||
                          ("isPause" === n.data &&
                            0 < n._rawPrevTime &&
                            (l = n)),
                          (n = n._prev);
                    l &&
                      ((this._time = e = l._startTime),
                      (this._totalTime =
                        e +
                        this._cycle *
                          (this._totalDuration + this._repeatDelay)));
                  }
                  if (this._cycle !== y && !this._locked) {
                    var _ = this._yoyo && 0 != (1 & y),
                      x = _ === (this._yoyo && 0 != (1 & this._cycle)),
                      b = this._totalTime,
                      w = this._cycle,
                      T = this._rawPrevTime,
                      S = this._time;
                    if (
                      ((this._totalTime = y * u),
                      this._cycle < y ? (_ = !_) : (this._totalTime += u),
                      (this._time = d),
                      (this._rawPrevTime = 0 === u ? g - 1e-4 : g),
                      (this._cycle = y),
                      (this._locked = !0),
                      (d = _ ? 0 : u),
                      this.render(d, t, 0 === u),
                      t ||
                        this._gc ||
                        (this.vars.onRepeat &&
                          ((this._cycle = w),
                          (this._locked = !1),
                          this._callback("onRepeat"))),
                      d !== this._time)
                    )
                      return;
                    if (
                      (x &&
                        ((this._cycle = y),
                        (this._locked = !0),
                        (d = _ ? u + 1e-4 : -1e-4),
                        this.render(d, !0, !1)),
                      (this._locked = !1),
                      this._paused && !v)
                    )
                      return;
                    (this._time = S),
                      (this._totalTime = b),
                      (this._cycle = w),
                      (this._rawPrevTime = T);
                  }
                  if ((this._time !== d && this._first) || i || s || l) {
                    if (
                      (this._initted || (this._initted = !0),
                      this._active ||
                        (!this._paused &&
                          this._totalTime !== p &&
                          0 < e &&
                          (this._active = !0)),
                      0 === p &&
                        this.vars.onStart &&
                        ((0 === this._totalTime && this._totalDuration) ||
                          t ||
                          this._callback("onStart")),
                      d <= (c = this._time))
                    )
                      for (
                        n = this._first;
                        n &&
                        ((o = n._next),
                        c === this._time && (!this._paused || v));

                      )
                        (n._active ||
                          (n._startTime <= this._time &&
                            !n._paused &&
                            !n._gc)) &&
                          (l === n && this.pause(),
                          n._reversed
                            ? n.render(
                                (n._dirty
                                  ? n.totalDuration()
                                  : n._totalDuration) -
                                  (e - n._startTime) * n._timeScale,
                                t,
                                i
                              )
                            : n.render(
                                (e - n._startTime) * n._timeScale,
                                t,
                                i
                              )),
                          (n = o);
                    else
                      for (
                        n = this._last;
                        n &&
                        ((o = n._prev),
                        c === this._time && (!this._paused || v));

                      ) {
                        if (
                          n._active ||
                          (n._startTime <= d && !n._paused && !n._gc)
                        ) {
                          if (l === n) {
                            for (l = n._prev; l && l.endTime() > this._time; )
                              l.render(
                                l._reversed
                                  ? l.totalDuration() -
                                      (e - l._startTime) * l._timeScale
                                  : (e - l._startTime) * l._timeScale,
                                t,
                                i
                              ),
                                (l = l._prev);
                            (l = null), this.pause();
                          }
                          n._reversed
                            ? n.render(
                                (n._dirty
                                  ? n.totalDuration()
                                  : n._totalDuration) -
                                  (e - n._startTime) * n._timeScale,
                                t,
                                i
                              )
                            : n.render((e - n._startTime) * n._timeScale, t, i);
                        }
                        n = o;
                      }
                    this._onUpdate &&
                      (t || (M.length && E(), this._callback("onUpdate"))),
                      a &&
                        (this._locked ||
                          this._gc ||
                          (f !== this._startTime && m === this._timeScale) ||
                          ((0 === this._time || h >= this.totalDuration()) &&
                            (r &&
                              (M.length && E(),
                              this._timeline.autoRemoveChildren &&
                                this._enabled(!1, !1),
                              (this._active = !1)),
                            !t && this.vars[a] && this._callback(a))));
                  } else
                    p !== this._totalTime &&
                      this._onUpdate &&
                      (t || this._callback("onUpdate"));
                }),
                (e.getActive = function (e, t, i) {
                  null == e && (e = !0),
                    null == t && (t = !0),
                    null == i && (i = !1);
                  for (
                    var n,
                      r = [],
                      o = this.getChildren(e, t, i),
                      a = 0,
                      s = o.length,
                      l = 0;
                    l < s;
                    l++
                  )
                    (n = o[l]).isActive() && (r[a++] = n);
                  return r;
                }),
                (e.getLabelAfter = function (e) {
                  e || (0 !== e && (e = this._time));
                  for (
                    var t = this.getLabelsArray(), i = t.length, n = 0;
                    n < i;
                    n++
                  )
                    if (t[n].time > e) return t[n].name;
                  return null;
                }),
                (e.getLabelBefore = function (e) {
                  null == e && (e = this._time);
                  for (var t = this.getLabelsArray(), i = t.length; -1 < --i; )
                    if (t[i].time < e) return t[i].name;
                  return null;
                }),
                (e.getLabelsArray = function () {
                  var e,
                    t = [],
                    i = 0;
                  for (e in this._labels)
                    t[i++] = { time: this._labels[e], name: e };
                  return (
                    t.sort(function (e, t) {
                      return e.time - t.time;
                    }),
                    t
                  );
                }),
                (e.invalidate = function () {
                  return (this._locked = !1), t.prototype.invalidate.call(this);
                }),
                (e.progress = function (e, t) {
                  return arguments.length
                    ? this.totalTime(
                        this.duration() *
                          (this._yoyo && 0 != (1 & this._cycle) ? 1 - e : e) +
                          this._cycle * (this._duration + this._repeatDelay),
                        t
                      )
                    : this._time / this.duration();
                }),
                (e.totalProgress = function (e, t) {
                  return arguments.length
                    ? this.totalTime(this.totalDuration() * e, t)
                    : this._totalTime / this.totalDuration();
                }),
                (e.totalDuration = function (e) {
                  return arguments.length
                    ? -1 !== this._repeat && e
                      ? this.timeScale(this.totalDuration() / e)
                      : this
                    : (this._dirty &&
                        (t.prototype.totalDuration.call(this),
                        (this._totalDuration =
                          -1 === this._repeat
                            ? 999999999999
                            : this._duration * (this._repeat + 1) +
                              this._repeatDelay * this._repeat)),
                      this._totalDuration);
                }),
                (e.time = function (e, t) {
                  return arguments.length
                    ? (this._dirty && this.totalDuration(),
                      e > this._duration && (e = this._duration),
                      this._yoyo && 0 != (1 & this._cycle)
                        ? (e =
                            this._duration -
                            e +
                            this._cycle * (this._duration + this._repeatDelay))
                        : 0 !== this._repeat &&
                          (e +=
                            this._cycle * (this._duration + this._repeatDelay)),
                      this.totalTime(e, t))
                    : this._time;
                }),
                (e.repeat = function (e) {
                  return arguments.length
                    ? ((this._repeat = e), this._uncache(!0))
                    : this._repeat;
                }),
                (e.repeatDelay = function (e) {
                  return arguments.length
                    ? ((this._repeatDelay = e), this._uncache(!0))
                    : this._repeatDelay;
                }),
                (e.yoyo = function (e) {
                  return arguments.length
                    ? ((this._yoyo = e), this)
                    : this._yoyo;
                }),
                (e.currentLabel = function (e) {
                  return arguments.length
                    ? this.seek(e, !0)
                    : this.getLabelBefore(this._time + 1e-8);
                }),
                i
              );
            },
            !0
          ),
          (T = 180 / Math.PI),
          (x = []),
          (b = []),
          (w = []),
          (v = {}),
          (t = $e._gsDefine.globals),
          (g = $e._gsDefine.plugin({
            propName: "bezier",
            priority: -1,
            version: "1.3.7",
            API: 2,
            global: !0,
            init: function (e, t, i) {
              (this._target = e),
                t instanceof Array && (t = { values: t }),
                (this._func = {}),
                (this._mod = {}),
                (this._props = []),
                (this._timeRes =
                  null == t.timeResolution
                    ? 6
                    : parseInt(t.timeResolution, 10));
              var n,
                r,
                o,
                a,
                s,
                l = t.values || [],
                c = {},
                h = l[0],
                u = t.autoRotate || i.vars.orientToBezier;
              for (n in ((this._autoRotate = u
                ? u instanceof Array
                  ? u
                  : [["x", "y", "rotation", (!0 !== u && Number(u)) || 0]]
                : null),
              h))
                this._props.push(n);
              for (o = this._props.length; -1 < --o; )
                (n = this._props[o]),
                  this._overwriteProps.push(n),
                  (r = this._func[n] = "function" == typeof e[n]),
                  (c[n] = r
                    ? e[
                        n.indexOf("set") ||
                        "function" != typeof e["get" + n.substr(3)]
                          ? n
                          : "get" + n.substr(3)
                      ]()
                    : parseFloat(e[n])),
                  s || (c[n] !== l[0][n] && (s = c));
              if (
                ((this._beziers =
                  "cubic" !== t.type &&
                  "quadratic" !== t.type &&
                  "soft" !== t.type
                    ? d(
                        l,
                        isNaN(t.curviness) ? 1 : t.curviness,
                        !1,
                        "thruBasic" === t.type,
                        t.correlate,
                        s
                      )
                    : (function (e, t, i) {
                        var n,
                          r,
                          o,
                          a,
                          s,
                          l,
                          c,
                          h,
                          u,
                          d,
                          p,
                          f = {},
                          m = "cubic" === (t = t || "soft") ? 3 : 2,
                          g = "soft" === t,
                          v = [];
                        if (
                          (g && i && (e = [i].concat(e)),
                          null == e || e.length < 1 + m)
                        )
                          throw "invalid Bezier data";
                        for (u in e[0]) v.push(u);
                        for (l = v.length; -1 < --l; ) {
                          for (
                            f[(u = v[l])] = s = [], d = 0, h = e.length, c = 0;
                            c < h;
                            c++
                          )
                            (n =
                              null == i
                                ? e[c][u]
                                : "string" == typeof (p = e[c][u]) &&
                                  "=" === p.charAt(1)
                                ? i[u] + Number(p.charAt(0) + p.substr(2))
                                : Number(p)),
                              g &&
                                1 < c &&
                                c < h - 1 &&
                                (s[d++] = (n + s[d - 2]) / 2),
                              (s[d++] = n);
                          for (h = d - m + 1, c = d = 0; c < h; c += m)
                            (n = s[c]),
                              (r = s[c + 1]),
                              (o = s[c + 2]),
                              (a = 2 == m ? 0 : s[c + 3]),
                              (s[d++] = p =
                                3 == m
                                  ? new y(n, r, o, a)
                                  : new y(
                                      n,
                                      (2 * r + n) / 3,
                                      (2 * r + o) / 3,
                                      o
                                    ));
                          s.length = d;
                        }
                        return f;
                      })(l, t.type, c)),
                (this._segCount = this._beziers[n].length),
                this._timeRes &&
                  ((t = p(this._beziers, this._timeRes)),
                  (this._length = t.length),
                  (this._lengths = t.lengths),
                  (this._segments = t.segments),
                  (this._l1 = this._li = this._s1 = this._si = 0),
                  (this._l2 = this._lengths[0]),
                  (this._curSeg = this._segments[0]),
                  (this._s2 = this._curSeg[0]),
                  (this._prec = 1 / this._curSeg.length)),
                (u = this._autoRotate))
              )
                for (
                  this._initialRotations = [],
                    u[0] instanceof Array || (this._autoRotate = u = [u]),
                    o = u.length;
                  -1 < --o;

                ) {
                  for (a = 0; a < 3; a++)
                    (n = u[o][a]),
                      (this._func[n] =
                        "function" == typeof e[n] &&
                        e[
                          n.indexOf("set") ||
                          "function" != typeof e["get" + n.substr(3)]
                            ? n
                            : "get" + n.substr(3)
                        ]);
                  (n = u[o][2]),
                    (this._initialRotations[o] =
                      (this._func[n]
                        ? this._func[n].call(this._target)
                        : this._target[n]) || 0),
                    this._overwriteProps.push(n);
                }
              return (this._startRatio = i.vars.runBackwards ? 1 : 0), !0;
            },
            set: function (e) {
              var t,
                i,
                n,
                r,
                o,
                a,
                s,
                l,
                c,
                h = this._segCount,
                u = this._func,
                d = this._target,
                p = e !== this._startRatio;
              if (this._timeRes) {
                if (
                  ((l = this._lengths),
                  (c = this._curSeg),
                  (e *= this._length),
                  (w = this._li),
                  e > this._l2 && w < h - 1)
                ) {
                  for (s = h - 1; w < s && (this._l2 = l[++w]) <= e; );
                  (this._l1 = l[w - 1]),
                    (this._li = w),
                    (this._curSeg = c = this._segments[w]),
                    (this._s2 = c[(this._s1 = this._si = 0)]);
                } else if (e < this._l1 && 0 < w) {
                  for (; 0 < w && (this._l1 = l[--w]) >= e; );
                  0 === w && e < this._l1 ? (this._l1 = 0) : w++,
                    (this._l2 = l[w]),
                    (this._li = w),
                    (this._curSeg = c = this._segments[w]),
                    (this._s1 = c[(this._si = c.length - 1) - 1] || 0),
                    (this._s2 = c[this._si]);
                }
                if (
                  ((t = w),
                  (e -= this._l1),
                  (w = this._si),
                  e > this._s2 && w < c.length - 1)
                ) {
                  for (s = c.length - 1; w < s && (this._s2 = c[++w]) <= e; );
                  (this._s1 = c[w - 1]), (this._si = w);
                } else if (e < this._s1 && 0 < w) {
                  for (; 0 < w && (this._s1 = c[--w]) >= e; );
                  0 === w && e < this._s1 ? (this._s1 = 0) : w++,
                    (this._s2 = c[w]),
                    (this._si = w);
                }
                o =
                  (w + (e - this._s1) / (this._s2 - this._s1)) * this._prec ||
                  0;
              } else
                o =
                  (e -
                    (t = e < 0 ? 0 : 1 <= e ? h - 1 : (h * e) >> 0) * (1 / h)) *
                  h;
              for (i = 1 - o, w = this._props.length; -1 < --w; )
                (n = this._props[w]),
                  (a =
                    (o * o * (r = this._beziers[n][t]).da +
                      3 * i * (o * r.ca + i * r.ba)) *
                      o +
                    r.a),
                  this._mod[n] && (a = this._mod[n](a, d)),
                  u[n] ? d[n](a) : (d[n] = a);
              if (this._autoRotate)
                for (
                  var f, m, g, v, y, _, x, b = this._autoRotate, w = b.length;
                  -1 < --w;

                )
                  (n = b[w][2]),
                    (_ = b[w][3] || 0),
                    (x = !0 === b[w][4] ? 1 : T),
                    (r = this._beziers[b[w][0]]),
                    (f = this._beziers[b[w][1]]),
                    r &&
                      f &&
                      ((r = r[t]),
                      (f = f[t]),
                      (m = r.a + (r.b - r.a) * o),
                      (m += ((v = r.b + (r.c - r.b) * o) - m) * o),
                      (v += (r.c + (r.d - r.c) * o - v) * o),
                      (g = f.a + (f.b - f.a) * o),
                      (g += ((y = f.b + (f.c - f.b) * o) - g) * o),
                      (y += (f.c + (f.d - f.c) * o - y) * o),
                      (a = p
                        ? Math.atan2(y - g, v - m) * x + _
                        : this._initialRotations[w]),
                      this._mod[n] && (a = this._mod[n](a, d)),
                      u[n] ? d[n](a) : (d[n] = a));
            },
          })),
          (e = g.prototype),
          (g.bezierThrough = d),
          (g.cubicToQuadratic = _),
          (g._autoCSS = !0),
          (g.quadraticToCubic = function (e, t, i) {
            return new y(e, (2 * t + e) / 3, (2 * t + i) / 3, i);
          }),
          (g._cssRegister = function () {
            var p,
              f,
              m,
              e = t.CSSPlugin;
            e &&
              ((e = e._internals),
              (p = e._parseToProxy),
              (f = e._setPluginRatio),
              (m = e.CSSPropTween),
              e._registerComplexSpecialProp("bezier", {
                parser: function (e, t, i, n, r, o) {
                  t instanceof Array && (t = { values: t }), (o = new g());
                  var a,
                    s,
                    l,
                    c = t.values,
                    h = c.length - 1,
                    u = [],
                    d = {};
                  if (h < 0) return r;
                  for (a = 0; a <= h; a++)
                    (l = p(e, c[a], n, r, o, h !== a)), (u[a] = l.end);
                  for (s in t) d[s] = t[s];
                  return (
                    (d.values = u),
                    ((r = new m(e, "bezier", 0, 0, l.pt, 2)).data = l),
                    (r.plugin = o),
                    (r.setRatio = f),
                    0 === d.autoRotate && (d.autoRotate = !0),
                    !d.autoRotate ||
                      d.autoRotate instanceof Array ||
                      ((a = !0 === d.autoRotate ? 0 : Number(d.autoRotate)),
                      (d.autoRotate =
                        null != l.end.left
                          ? [["left", "top", "rotation", a, !1]]
                          : null != l.end.x && [
                              ["x", "y", "rotation", a, !1],
                            ])),
                    d.autoRotate &&
                      (n._transform || n._enableTransforms(!1),
                      (l.autoRotate = n._target._gsTransform),
                      (l.proxy.rotation = l.autoRotate.rotation || 0),
                      n._overwriteProps.push("rotation")),
                    o._onInitTween(l.proxy, d, n._tween),
                    r
                  );
                },
              }));
          }),
          (e._mod = function (e) {
            for (var t, i = this._overwriteProps, n = i.length; -1 < --n; )
              (t = e[i[n]]) && "function" == typeof t && (this._mod[i[n]] = t);
          }),
          (e._kill = function (e) {
            var t,
              i,
              n = this._props;
            for (t in this._beziers)
              if (t in e)
                for (
                  delete this._beziers[t], delete this._func[t], i = n.length;
                  -1 < --i;

                )
                  n[i] === t && n.splice(i, 1);
            if ((n = this._autoRotate))
              for (i = n.length; -1 < --i; ) e[n[i][2]] && n.splice(i, 1);
            return this._super._kill.call(this, e);
          }),
          $e._gsDefine(
            "plugins.CSSPlugin",
            ["plugins.TweenPlugin", "TweenLite"],
            function (o, P) {
              var d,
                w,
                S,
                u,
                R = function () {
                  o.call(this, "css"),
                    (this._overwriteProps.length = 0),
                    (this.setRatio = R.prototype.setRatio);
                },
                c = $e._gsDefine.globals,
                p = {},
                e = (R.prototype = new o("css"));
              ((e.constructor = R).version = "1.19.1"),
                (R.API = 2),
                (R.defaultTransformPerspective = 0),
                (R.defaultSkewType = "compensated"),
                (R.defaultSmoothOrigin = !0),
                (e = "px"),
                (R.suffixMap = {
                  top: e,
                  right: e,
                  bottom: e,
                  left: e,
                  width: e,
                  height: e,
                  fontSize: e,
                  padding: e,
                  margin: e,
                  perspective: e,
                  lineHeight: "",
                });
              function a(e, t) {
                return t.toUpperCase();
              }
              function s(e, t) {
                return $.createElementNS
                  ? $.createElementNS(t || "http://www.w3.org/1999/xhtml", e)
                  : $.createElement(e);
              }
              function l(e) {
                return U.test(
                  "string" == typeof e
                    ? e
                    : (e.currentStyle || e.style).filter || ""
                )
                  ? parseFloat(RegExp.$1) / 100
                  : 1;
              }
              function f(e) {
                $e.console && console.log(e);
              }
              function T(e, t) {
                var i,
                  n,
                  r = (t = t || K).style;
                if (void 0 !== r[e]) return e;
                for (
                  e = e.charAt(0).toUpperCase() + e.substr(1),
                    i = ["O", "Moz", "ms", "Ms", "Webkit"],
                    n = 5;
                  -1 < --n && void 0 === r[i[n] + e];

                );
                return 0 <= n
                  ? ((ne =
                      "-" + (re = 3 === n ? "ms" : i[n]).toLowerCase() + "-"),
                    re + e)
                  : null;
              }
              function m(e, t) {
                var i,
                  n,
                  r = {};
                if ((t = t || oe(e, null)))
                  if ((i = t.length))
                    for (; -1 < --i; )
                      (-1 !== (n = t[i]).indexOf("-transform") && Oe !== n) ||
                        (r[n.replace(H, a)] = t.getPropertyValue(n));
                  else
                    for (i in t)
                      (-1 !== i.indexOf("Transform") && Re !== i) ||
                        (r[i] = t[i]);
                else if ((t = e.currentStyle || e.style))
                  for (i in t)
                    "string" == typeof i &&
                      void 0 === r[i] &&
                      (r[i.replace(H, a)] = t[i]);
                return (
                  ie || (r.opacity = l(e)),
                  (e = Ve(e, t, !1)),
                  (r.rotation = e.rotation),
                  (r.skewX = e.skewX),
                  (r.scaleX = e.scaleX),
                  (r.scaleY = e.scaleY),
                  (r.x = e.x),
                  (r.y = e.y),
                  De &&
                    ((r.z = e.z),
                    (r.rotationX = e.rotationX),
                    (r.rotationY = e.rotationY),
                    (r.scaleZ = e.scaleZ)),
                  r.filters && delete r.filters,
                  r
                );
              }
              function g(e, t, i, n, r) {
                var o,
                  a,
                  s,
                  l = {},
                  c = e.style;
                for (a in i)
                  "cssText" !== a &&
                    "length" !== a &&
                    isNaN(a) &&
                    (t[a] !== (o = i[a]) || (r && r[a])) &&
                    -1 === a.indexOf("Origin") &&
                    (("number" != typeof o && "string" != typeof o) ||
                      ((l[a] =
                        "auto" !== o || ("left" !== a && "top" !== a)
                          ? ("" !== o && "auto" !== o && "none" !== o) ||
                            "string" != typeof t[a] ||
                            "" === t[a].replace(F, "")
                            ? o
                            : 0
                          : le(e, a)),
                      void 0 !== c[a] && (s = new ye(c, a, c[a], s))));
                if (n) for (a in n) "className" !== a && (l[a] = n[a]);
                return { difs: l, firstMPT: s };
              }
              function E(e, t) {
                return (
                  "function" == typeof e && (e = e(I, C)),
                  "string" == typeof e && "=" === e.charAt(1)
                    ? parseInt(e.charAt(0) + "1", 10) * parseFloat(e.substr(2))
                    : parseFloat(e) - parseFloat(t) || 0
                );
              }
              function M(e, t) {
                return (
                  "function" == typeof e && (e = e(I, C)),
                  null == e
                    ? t
                    : "string" == typeof e && "=" === e.charAt(1)
                    ? parseInt(e.charAt(0) + "1", 10) *
                        parseFloat(e.substr(2)) +
                      t
                    : parseFloat(e) || 0
                );
              }
              function A(e, t, i, n) {
                var r, o;
                return (
                  "function" == typeof e && (e = e(I, C)),
                  (o =
                    null == e
                      ? t
                      : "number" == typeof e
                      ? e
                      : ((r = e.split("_")),
                        (o =
                          ((o = "=" === e.charAt(1))
                            ? parseInt(e.charAt(0) + "1", 10) *
                              parseFloat(r[0].substr(2))
                            : parseFloat(r[0])) *
                            (-1 === e.indexOf("rad") ? 1 : Z) -
                          (o ? 0 : t)),
                        r.length &&
                          (n && (n[i] = t + o),
                          -1 !== e.indexOf("short") &&
                            (o %= 360) !== o % 180 &&
                            (o = o < 0 ? o + 360 : o - 360),
                          -1 !== e.indexOf("_cw") && o < 0
                            ? (o =
                                ((o + 3599999999640) % 360) -
                                360 * ((o / 360) | 0))
                            : -1 !== e.indexOf("ccw") &&
                              0 < o &&
                              (o =
                                ((o - 3599999999640) % 360) -
                                360 * ((o / 360) | 0))),
                        t + o)) < 1e-6 &&
                    -1e-6 < o &&
                    (o = 0),
                  o
                );
              }
              function h(e, t, i) {
                return (
                  (255 *
                    (6 * (e = e < 0 ? e + 1 : 1 < e ? e - 1 : e) < 1
                      ? t + (i - t) * e * 6
                      : e < 0.5
                      ? i
                      : 3 * e < 2
                      ? t + (i - t) * (2 / 3 - e) * 6
                      : t) +
                    0.5) |
                  0
                );
              }
              function i(e, t) {
                for (
                  var i,
                    n,
                    r = e.match(fe) || [],
                    o = 0,
                    a = r.length ? "" : e,
                    s = 0;
                  s < r.length;
                  s++
                )
                  (i = r[s]),
                    (o +=
                      (n = e.substr(o, e.indexOf(i, o) - o)).length + i.length),
                    3 === (i = pe(i, t)).length && i.push(1),
                    (a +=
                      n +
                      (t
                        ? "hsla(" +
                          i[0] +
                          "," +
                          i[1] +
                          "%," +
                          i[2] +
                          "%," +
                          i[3]
                        : "rgba(" + i.join(",")) +
                      ")");
                return a + e.substr(o);
              }
              var L,
                v,
                y,
                O,
                _,
                b,
                C,
                I,
                D = /(?:\-|\.|\b)(\d|\.|e\-)+/g,
                N = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,
                x = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,
                F = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g,
                k = /(?:\d|\-|\+|=|#|\.)*/g,
                U = /opacity *= *([^)]*)/i,
                B = /opacity:([^;]*)/i,
                r = /alpha\(opacity *=.+?\)/i,
                z = /^(rgb|hsl)/,
                j = /([A-Z])/g,
                H = /-([a-z])/gi,
                G = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,
                V = /(?:Left|Right|Width)/i,
                W = /(M11|M12|M21|M22)=[\d\-\.e]+/gi,
                X = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,
                q = /,(?=[^\)]*(?:\(|$))/gi,
                Y = /[\s,\(]/i,
                Q = Math.PI / 180,
                Z = 180 / Math.PI,
                J = {},
                t = { style: {} },
                $ = $e.document || {
                  createElement: function () {
                    return t;
                  },
                },
                K = s("div"),
                ee = s("img"),
                n = (R._internals = { _specialProps: p }),
                te = ($e.navigator || {}).userAgent || "",
                ie =
                  ((Ce = te.indexOf("Android")),
                  (Le = s("a")),
                  (y =
                    -1 !== te.indexOf("Safari") &&
                    -1 === te.indexOf("Chrome") &&
                    (-1 === Ce || 3 < parseFloat(te.substr(Ce + 8, 2)))),
                  (_ =
                    y &&
                    parseFloat(te.substr(te.indexOf("Version/") + 8, 2)) < 6),
                  (O = -1 !== te.indexOf("Firefox")),
                  (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(te) ||
                    /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(te)) &&
                    (b = parseFloat(RegExp.$1)),
                  !!Le &&
                    ((Le.style.cssText = "top:1px;opacity:.55;"),
                    /^0.55/.test(Le.style.opacity))),
                ne = "",
                re = "",
                oe = $.defaultView
                  ? $.defaultView.getComputedStyle
                  : function () {},
                ae = (R.getStyle = function (e, t, i, n, r) {
                  var o;
                  return ie || "opacity" !== t
                    ? (!n && e.style[t]
                        ? (o = e.style[t])
                        : (i = i || oe(e))
                        ? (o =
                            i[t] ||
                            i.getPropertyValue(t) ||
                            i.getPropertyValue(
                              t.replace(j, "-$1").toLowerCase()
                            ))
                        : e.currentStyle && (o = e.currentStyle[t]),
                      null == r ||
                      (o && "none" !== o && "auto" !== o && "auto auto" !== o)
                        ? o
                        : r)
                    : l(e);
                }),
                se = (n.convertToPixels = function (e, t, i, n, r) {
                  if ("px" === n || !n) return i;
                  if ("auto" === n || !i) return 0;
                  var o,
                    a,
                    s,
                    l = V.test(t),
                    c = e,
                    h = K.style,
                    u = i < 0,
                    d = 1 === i;
                  if (
                    (u && (i = -i),
                    d && (i *= 100),
                    "%" === n && -1 !== t.indexOf("border"))
                  )
                    o = (i / 100) * (l ? e.clientWidth : e.clientHeight);
                  else {
                    if (
                      ((h.cssText =
                        "border:0 solid red;position:" +
                        ae(e, "position") +
                        ";line-height:0;"),
                      "%" !== n &&
                        c.appendChild &&
                        "v" !== n.charAt(0) &&
                        "rem" !== n)
                    )
                      h[l ? "borderLeftWidth" : "borderTopWidth"] = i + n;
                    else {
                      if (
                        ((a = (c = e.parentNode || $.body)._gsCache),
                        (s = P.ticker.frame),
                        a && l && a.time === s)
                      )
                        return (a.width * i) / 100;
                      h[l ? "width" : "height"] = i + n;
                    }
                    c.appendChild(K),
                      (o = parseFloat(K[l ? "offsetWidth" : "offsetHeight"])),
                      c.removeChild(K),
                      l &&
                        "%" === n &&
                        !1 !== R.cacheWidths &&
                        (((a = c._gsCache = c._gsCache || {}).time = s),
                        (a.width = (o / i) * 100)),
                      0 !== o || r || (o = se(e, t, i, n, !0));
                  }
                  return d && (o /= 100), u ? -o : o;
                }),
                le = (n.calculateOffset = function (e, t, i) {
                  if ("absolute" !== ae(e, "position", i)) return 0;
                  var n = "left" === t ? "Left" : "Top",
                    i = ae(e, "margin" + n, i);
                  return (
                    e["offset" + n] -
                    (se(e, t, parseFloat(i), i.replace(k, "")) || 0)
                  );
                }),
                ce = { width: ["Left", "Right"], height: ["Top", "Bottom"] },
                he = ["marginLeft", "marginRight", "marginTop", "marginBottom"],
                ue = function (e, t) {
                  if ("contain" === e || "auto" === e || "auto auto" === e)
                    return e + " ";
                  (null != e && "" !== e) || (e = "0 0");
                  var i,
                    n = e.split(" "),
                    r =
                      -1 !== e.indexOf("left")
                        ? "0%"
                        : -1 !== e.indexOf("right")
                        ? "100%"
                        : n[0],
                    o =
                      -1 !== e.indexOf("top")
                        ? "0%"
                        : -1 !== e.indexOf("bottom")
                        ? "100%"
                        : n[1];
                  if (3 < n.length && !t) {
                    for (
                      n = e.split(", ").join(",").split(","), e = [], i = 0;
                      i < n.length;
                      i++
                    )
                      e.push(ue(n[i]));
                    return e.join(",");
                  }
                  return (
                    null == o
                      ? (o = "center" === r ? "50%" : "0")
                      : "center" === o && (o = "50%"),
                    ("center" === r ||
                      (isNaN(parseFloat(r)) && -1 === (r + "").indexOf("="))) &&
                      (r = "50%"),
                    (e = r + " " + o + (2 < n.length ? " " + n[2] : "")),
                    t &&
                      ((t.oxp = -1 !== r.indexOf("%")),
                      (t.oyp = -1 !== o.indexOf("%")),
                      (t.oxr = "=" === r.charAt(1)),
                      (t.oyr = "=" === o.charAt(1)),
                      (t.ox = parseFloat(r.replace(F, ""))),
                      (t.oy = parseFloat(o.replace(F, ""))),
                      (t.v = e)),
                    t || e
                  );
                },
                de = {
                  aqua: [0, 255, 255],
                  lime: [0, 255, 0],
                  silver: [192, 192, 192],
                  black: [0, 0, 0],
                  maroon: [128, 0, 0],
                  teal: [0, 128, 128],
                  blue: [0, 0, 255],
                  navy: [0, 0, 128],
                  white: [255, 255, 255],
                  fuchsia: [255, 0, 255],
                  olive: [128, 128, 0],
                  yellow: [255, 255, 0],
                  orange: [255, 165, 0],
                  gray: [128, 128, 128],
                  purple: [128, 0, 128],
                  green: [0, 128, 0],
                  red: [255, 0, 0],
                  pink: [255, 192, 203],
                  cyan: [0, 255, 255],
                  transparent: [255, 255, 255, 0],
                },
                pe = (R.parseColor = function (e, t) {
                  var i, n, r, o, a, s, l, c;
                  if (e)
                    if ("number" == typeof e)
                      i = [e >> 16, (e >> 8) & 255, 255 & e];
                    else {
                      if (
                        ("," === e.charAt(e.length - 1) &&
                          (e = e.substr(0, e.length - 1)),
                        de[e])
                      )
                        i = de[e];
                      else if ("#" === e.charAt(0))
                        4 === e.length &&
                          (e =
                            "#" +
                            (n = e.charAt(1)) +
                            n +
                            (r = e.charAt(2)) +
                            r +
                            (o = e.charAt(3)) +
                            o),
                          (i = [
                            (e = parseInt(e.substr(1), 16)) >> 16,
                            (e >> 8) & 255,
                            255 & e,
                          ]);
                      else if ("hsl" === e.substr(0, 3))
                        if (((i = c = e.match(D)), t)) {
                          if (-1 !== e.indexOf("=")) return e.match(N);
                        } else
                          (a = (Number(i[0]) % 360) / 360),
                            (s = Number(i[1]) / 100),
                            (n =
                              2 * (l = Number(i[2]) / 100) -
                              (r = l <= 0.5 ? l * (s + 1) : l + s - l * s)),
                            3 < i.length && (i[3] = Number(e[3])),
                            (i[0] = h(a + 1 / 3, n, r)),
                            (i[1] = h(a, n, r)),
                            (i[2] = h(a - 1 / 3, n, r));
                      else i = e.match(D) || de.transparent;
                      (i[0] = Number(i[0])),
                        (i[1] = Number(i[1])),
                        (i[2] = Number(i[2])),
                        3 < i.length && (i[3] = Number(i[3]));
                    }
                  else i = de.black;
                  return (
                    t &&
                      !c &&
                      ((n = i[0] / 255),
                      (r = i[1] / 255),
                      (o = i[2] / 255),
                      (l =
                        ((e = Math.max(n, r, o)) + (t = Math.min(n, r, o))) /
                        2),
                      e === t
                        ? (a = s = 0)
                        : ((c = e - t),
                          (s = 0.5 < l ? c / (2 - e - t) : c / (e + t)),
                          (a =
                            e === n
                              ? (r - o) / c + (r < o ? 6 : 0)
                              : e === r
                              ? (o - n) / c + 2
                              : (n - r) / c + 4),
                          (a *= 60)),
                      (i[0] = (a + 0.5) | 0),
                      (i[1] = (100 * s + 0.5) | 0),
                      (i[2] = (100 * l + 0.5) | 0)),
                    i
                  );
                }),
                fe =
                  "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
              for (e in de) fe += "|" + e + "\\b";
              (fe = new RegExp(fe + ")", "gi")),
                (R.colorStringFilter = function (e) {
                  var t = e[0] + e[1];
                  fe.test(t) &&
                    ((t =
                      -1 !== t.indexOf("hsl(") || -1 !== t.indexOf("hsla(")),
                    (e[0] = i(e[0], t)),
                    (e[1] = i(e[1], t))),
                    (fe.lastIndex = 0);
                }),
                P.defaultStringFilter ||
                  (P.defaultStringFilter = R.colorStringFilter);
              function me(e, t, o, a) {
                if (null == e)
                  return function (e) {
                    return e;
                  };
                var s,
                  l = t ? (e.match(fe) || [""])[0] : "",
                  c = e.split(l).join("").match(x) || [],
                  h = e.substr(0, e.indexOf(c[0])),
                  u = ")" === e.charAt(e.length - 1) ? ")" : "",
                  d = -1 !== e.indexOf(" ") ? " " : ",",
                  p = c.length,
                  f = 0 < p ? c[0].replace(D, "") : "";
                return p
                  ? (s = t
                      ? function (e) {
                          var t, i, n, r;
                          if ("number" == typeof e) e += f;
                          else if (a && q.test(e)) {
                            for (
                              r = e.replace(q, "|").split("|"), n = 0;
                              n < r.length;
                              n++
                            )
                              r[n] = s(r[n]);
                            return r.join(",");
                          }
                          if (
                            ((t = (e.match(fe) || [l])[0]),
                            (n = (i = e.split(t).join("").match(x) || [])
                              .length),
                            p > n--)
                          )
                            for (; ++n < p; )
                              i[n] = o ? i[((n - 1) / 2) | 0] : c[n];
                          return (
                            h +
                            i.join(d) +
                            d +
                            t +
                            u +
                            (-1 !== e.indexOf("inset") ? " inset" : "")
                          );
                        }
                      : function (e) {
                          var t, i, n;
                          if ("number" == typeof e) e += f;
                          else if (a && q.test(e)) {
                            for (
                              i = e.replace(q, "|").split("|"), n = 0;
                              n < i.length;
                              n++
                            )
                              i[n] = s(i[n]);
                            return i.join(",");
                          }
                          if (((n = (t = e.match(x) || []).length), p > n--))
                            for (; ++n < p; )
                              t[n] = o ? t[((n - 1) / 2) | 0] : c[n];
                          return h + t.join(d) + u;
                        })
                  : function (e) {
                      return e;
                    };
              }
              function ge(c) {
                return (
                  (c = c.split(",")),
                  function (e, t, i, n, r, o, a) {
                    var s,
                      l = (t + "").split(" ");
                    for (a = {}, s = 0; s < 4; s++)
                      a[c[s]] = l[s] = l[s] || l[((s - 1) / 2) >> 0];
                    return n.parse(e, a, r, o);
                  }
                );
              }
              n._setPluginRatio = function (e) {
                this.plugin.setRatio(e);
                for (
                  var t, i, n, r, o, a = this.data, s = a.proxy, l = a.firstMPT;
                  l;

                )
                  (t = s[l.v]),
                    l.r
                      ? (t = Math.round(t))
                      : t < 1e-6 && -1e-6 < t && (t = 0),
                    (l.t[l.p] = t),
                    (l = l._next);
                if (
                  (a.autoRotate &&
                    (a.autoRotate.rotation = a.mod
                      ? a.mod(s.rotation, this.t)
                      : s.rotation),
                  1 === e || 0 === e)
                )
                  for (l = a.firstMPT, o = 1 === e ? "e" : "b"; l; ) {
                    if ((i = l.t).type) {
                      if (1 === i.type) {
                        for (r = i.xs0 + i.s + i.xs1, n = 1; n < i.l; n++)
                          r += i["xn" + n] + i["xs" + (n + 1)];
                        i[o] = r;
                      }
                    } else i[o] = i.s + i.xs0;
                    l = l._next;
                  }
              };
              function ve(e, t, i, n, r, o) {
                return (
                  ((o = new _e(e, t, i, n - i, r, -1, o)).b = i),
                  (o.e = o.xs0 = n),
                  o
                );
              }
              var ye = function (e, t, i, n, r) {
                  (this.t = e),
                    (this.p = t),
                    (this.v = i),
                    (this.r = r),
                    n && ((n._prev = this)._next = n);
                },
                _e =
                  ((n._parseToProxy = function (e, t, i, n, r, o) {
                    var a,
                      s,
                      l,
                      c,
                      h = n,
                      u = {},
                      d = {},
                      p = i._transform,
                      f = J;
                    for (
                      i._transform = null,
                        J = t,
                        n = r = i.parse(e, t, n, r),
                        J = f,
                        o &&
                          ((i._transform = p),
                          h &&
                            ((h._prev = null),
                            h._prev && (h._prev._next = null)));
                      n && n !== h;

                    ) {
                      if (
                        n.type <= 1 &&
                        ((d[(s = n.p)] = n.s + n.c),
                        (u[s] = n.s),
                        o || ((c = new ye(n, "s", s, c, n.r)), (n.c = 0)),
                        1 === n.type)
                      )
                        for (a = n.l; 0 < --a; )
                          (l = "xn" + a),
                            (d[(s = n.p + "_" + l)] = n.data[l]),
                            (u[s] = n[l]),
                            o || (c = new ye(n, l, s, c, n.rxp[l]));
                      n = n._next;
                    }
                    return { proxy: u, end: d, firstMPT: c, pt: r };
                  }),
                  (n.CSSPropTween = function (e, t, i, n, r, o, a, s, l, c, h) {
                    (this.t = e),
                      (this.p = t),
                      (this.s = i),
                      (this.c = n),
                      (this.n = a || t),
                      e instanceof _e || u.push(this.n),
                      (this.r = s),
                      (this.type = o || 0),
                      l && ((this.pr = l), (d = !0)),
                      (this.b = void 0 === c ? i : c),
                      (this.e = void 0 === h ? i + n : h),
                      r && ((this._next = r)._prev = this);
                  })),
                xe = (R.parseComplex = function (e, t, i, n, r, o, a, s, l, c) {
                  (i = i || o || ""),
                    "function" == typeof n && (n = n(I, C)),
                    (a = new _e(e, t, 0, 0, a, c ? 2 : 1, null, !1, s, i, n)),
                    (n += ""),
                    r &&
                      fe.test(n + i) &&
                      ((n = [i, n]),
                      R.colorStringFilter(n),
                      (i = n[0]),
                      (n = n[1]));
                  var h,
                    u,
                    d,
                    p,
                    f,
                    m,
                    g,
                    v,
                    y,
                    _,
                    x,
                    b,
                    w = i.split(", ").join(",").split(" "),
                    T = n.split(", ").join(",").split(" "),
                    S = w.length,
                    M = !1 !== L;
                  for (
                    (-1 === n.indexOf(",") && -1 === i.indexOf(",")) ||
                      ((w = w.join(" ").replace(q, ", ").split(" ")),
                      (T = T.join(" ").replace(q, ", ").split(" ")),
                      (S = w.length)),
                      S !== T.length && (S = (w = (o || "").split(" ")).length),
                      a.plugin = l,
                      a.setRatio = c,
                      h = fe.lastIndex = 0;
                    h < S;
                    h++
                  )
                    if (
                      ((p = w[h]), (f = T[h]), (v = parseFloat(p)) || 0 === v)
                    )
                      a.appendXtra(
                        "",
                        v,
                        E(f, v),
                        f.replace(N, ""),
                        M && -1 !== f.indexOf("px"),
                        !0
                      );
                    else if (r && fe.test(p))
                      (x = ")" + ((x = f.indexOf(")") + 1) ? f.substr(x) : "")),
                        (b = -1 !== f.indexOf("hsl") && ie),
                        (p = pe(p, b)),
                        (f = pe(f, b)),
                        (v = 6 < p.length + f.length) && !ie && 0 === f[3]
                          ? ((a["xs" + a.l] += a.l
                              ? " transparent"
                              : "transparent"),
                            (a.e = a.e.split(T[h]).join("transparent")))
                          : (ie || (v = !1),
                            b
                              ? a
                                  .appendXtra(
                                    v ? "hsla(" : "hsl(",
                                    p[0],
                                    E(f[0], p[0]),
                                    ",",
                                    !1,
                                    !0
                                  )
                                  .appendXtra("", p[1], E(f[1], p[1]), "%,", !1)
                                  .appendXtra(
                                    "",
                                    p[2],
                                    E(f[2], p[2]),
                                    v ? "%," : "%" + x,
                                    !1
                                  )
                              : a
                                  .appendXtra(
                                    v ? "rgba(" : "rgb(",
                                    p[0],
                                    f[0] - p[0],
                                    ",",
                                    !0,
                                    !0
                                  )
                                  .appendXtra("", p[1], f[1] - p[1], ",", !0)
                                  .appendXtra(
                                    "",
                                    p[2],
                                    f[2] - p[2],
                                    v ? "," : x,
                                    !0
                                  ),
                            v &&
                              ((p = p.length < 4 ? 1 : p[3]),
                              a.appendXtra(
                                "",
                                p,
                                (f.length < 4 ? 1 : f[3]) - p,
                                x,
                                !1
                              ))),
                        (fe.lastIndex = 0);
                    else if ((m = p.match(D))) {
                      if (!(g = f.match(N)) || g.length !== m.length) return a;
                      for (u = d = 0; u < m.length; u++)
                        (_ = m[u]),
                          (y = p.indexOf(_, d)),
                          a.appendXtra(
                            p.substr(d, y - d),
                            Number(_),
                            E(g[u], _),
                            "",
                            M && "px" === p.substr(y + _.length, 2),
                            0 === u
                          ),
                          (d = y + _.length);
                      a["xs" + a.l] += p.substr(d);
                    } else a["xs" + a.l] += a.l || a["xs" + a.l] ? " " + f : f;
                  if (-1 !== n.indexOf("=") && a.data) {
                    for (x = a.xs0 + a.data.s, h = 1; h < a.l; h++)
                      x += a["xs" + h] + a.data["xn" + h];
                    a.e = x + a["xs" + h];
                  }
                  return a.l || ((a.type = -1), (a.xs0 = a.e)), a.xfirst || a;
                }),
                be = 9;
              for ((e = _e.prototype).l = e.pr = 0; 0 < --be; )
                (e["xn" + be] = 0), (e["xs" + be] = "");
              (e.xs0 = ""),
                (e._next =
                  e._prev =
                  e.xfirst =
                  e.data =
                  e.plugin =
                  e.setRatio =
                  e.rxp =
                    null),
                (e.appendXtra = function (e, t, i, n, r, o) {
                  var a = this,
                    s = a.l;
                  return (
                    (a["xs" + s] +=
                      o && (s || a["xs" + s]) ? " " + e : e || ""),
                    i || 0 === s || a.plugin
                      ? (a.l++,
                        (a.type = a.setRatio ? 2 : 1),
                        (a["xs" + a.l] = n || ""),
                        0 < s
                          ? ((a.data["xn" + s] = t + i),
                            (a.rxp["xn" + s] = r),
                            (a["xn" + s] = t),
                            a.plugin ||
                              ((a.xfirst = new _e(
                                a,
                                "xn" + s,
                                t,
                                i,
                                a.xfirst || a,
                                0,
                                a.n,
                                r,
                                a.pr
                              )),
                              (a.xfirst.xs0 = 0)))
                          : ((a.data = { s: t + i }),
                            (a.rxp = {}),
                            (a.s = t),
                            (a.c = i),
                            (a.r = r)),
                        a)
                      : ((a["xs" + s] += t + (n || "")), a)
                  );
                });
              function we(e, t) {
                (t = t || {}),
                  (this.p = (t.prefix && T(e)) || e),
                  ((p[e] = p[this.p] = this).format =
                    t.formatter ||
                    me(t.defaultValue, t.color, t.collapsible, t.multi)),
                  t.parser && (this.parse = t.parser),
                  (this.clrs = t.color),
                  (this.multi = t.multi),
                  (this.keyword = t.keyword),
                  (this.dflt = t.defaultValue),
                  (this.pr = t.priority || 0);
              }
              var Te = (n._registerComplexSpecialProp = function (e, t, i) {
                  "object" != typeof t && (t = { parser: i });
                  var n,
                    r = e.split(","),
                    o = t.defaultValue;
                  for (i = i || [o], n = 0; n < r.length; n++)
                    (t.prefix = 0 === n && t.prefix),
                      (t.defaultValue = i[n] || o),
                      new we(r[n], t);
                }),
                Se = (n._registerPluginProp = function (e) {
                  var l;
                  p[e] ||
                    ((l = e.charAt(0).toUpperCase() + e.substr(1) + "Plugin"),
                    Te(e, {
                      parser: function (e, t, i, n, r, o, a) {
                        var s = c.com.greensock.plugins[l];
                        return s
                          ? (s._cssRegister(), p[i].parse(e, t, i, n, r, o, a))
                          : (f("Error: " + l + " js file not loaded."), r);
                      },
                    }));
                });
              ((e = we.prototype).parseComplex = function (e, t, i, n, r, o) {
                var a,
                  s,
                  l,
                  c,
                  h,
                  u,
                  d = this.keyword;
                if (
                  (this.multi &&
                    (q.test(i) || q.test(t)
                      ? ((s = t.replace(q, "|").split("|")),
                        (l = i.replace(q, "|").split("|")))
                      : d && ((s = [t]), (l = [i]))),
                  l)
                ) {
                  for (
                    c = (l.length > s.length ? l : s).length, a = 0;
                    a < c;
                    a++
                  )
                    (t = s[a] = s[a] || this.dflt),
                      (i = l[a] = l[a] || this.dflt),
                      d &&
                        (h = t.indexOf(d)) !== (u = i.indexOf(d)) &&
                        (-1 === u
                          ? (s[a] = s[a].split(d).join(""))
                          : -1 === h && (s[a] += " " + d));
                  (t = s.join(", ")), (i = l.join(", "));
                }
                return xe(
                  e,
                  this.p,
                  t,
                  i,
                  this.clrs,
                  this.dflt,
                  n,
                  this.pr,
                  r,
                  o
                );
              }),
                (e.parse = function (e, t, i, n, r, o, a) {
                  return this.parseComplex(
                    e.style,
                    this.format(ae(e, this.p, S, !1, this.dflt)),
                    this.format(t),
                    r,
                    o
                  );
                }),
                (R.registerSpecialProp = function (e, s, l) {
                  Te(e, {
                    parser: function (e, t, i, n, r, o, a) {
                      r = new _e(e, i, 0, 0, r, 2, i, !1, l);
                      return (
                        (r.plugin = o), (r.setRatio = s(e, t, n._tween, i)), r
                      );
                    },
                    priority: l,
                  });
                }),
                (R.useSVGTransformAttr = !0);
              function Me(e, t, i, n, r, o) {
                var a,
                  s,
                  l,
                  c,
                  h,
                  u,
                  d,
                  p,
                  f,
                  m,
                  g,
                  v,
                  y = e._gsTransform,
                  _ = Ge(e, !0);
                y && ((g = y.xOrigin), (v = y.yOrigin)),
                  (!n || (a = n.split(" ")).length < 2) &&
                    (0 === (d = e.getBBox()).x &&
                      0 === d.y &&
                      d.width + d.height === 0 &&
                      (d = {
                        x:
                          parseFloat(
                            e.hasAttribute("x")
                              ? e.getAttribute("x")
                              : e.hasAttribute("cx")
                              ? e.getAttribute("cx")
                              : 0
                          ) || 0,
                        y:
                          parseFloat(
                            e.hasAttribute("y")
                              ? e.getAttribute("y")
                              : e.hasAttribute("cy")
                              ? e.getAttribute("cy")
                              : 0
                          ) || 0,
                        width: 0,
                        height: 0,
                      }),
                    (a = [
                      (-1 !== (t = ue(t).split(" "))[0].indexOf("%")
                        ? (parseFloat(t[0]) / 100) * d.width
                        : parseFloat(t[0])) + d.x,
                      (-1 !== t[1].indexOf("%")
                        ? (parseFloat(t[1]) / 100) * d.height
                        : parseFloat(t[1])) + d.y,
                    ])),
                  (i.xOrigin = c = parseFloat(a[0])),
                  (i.yOrigin = h = parseFloat(a[1])),
                  n &&
                    _ !== He &&
                    ((u = _[0]),
                    (d = _[1]),
                    (p = _[2]),
                    (f = _[3]),
                    (m = _[4]),
                    (t = _[5]),
                    (n = u * f - d * p) &&
                      ((s = c * (f / n) + h * (-p / n) + (p * t - f * m) / n),
                      (l = c * (-d / n) + h * (u / n) - (u * t - d * m) / n),
                      (c = i.xOrigin = a[0] = s),
                      (h = i.yOrigin = a[1] = l))),
                  y &&
                    (o &&
                      ((i.xOffset = y.xOffset),
                      (i.yOffset = y.yOffset),
                      (y = i)),
                    r || (!1 !== r && !1 !== R.defaultSmoothOrigin)
                      ? ((s = c - g),
                        (l = h - v),
                        (y.xOffset += s * _[0] + l * _[2] - s),
                        (y.yOffset += s * _[1] + l * _[3] - l))
                      : (y.xOffset = y.yOffset = 0)),
                  o || e.setAttribute("data-svg-origin", a.join(" "));
              }
              function Ee(e) {
                var t,
                  i,
                  n = this.data,
                  r = (m = -n.rotation * Q) + n.skewX * Q,
                  o = ((Math.cos(m) * n.scaleX * 1e5) | 0) / 1e5,
                  a = ((Math.sin(m) * n.scaleX * 1e5) | 0) / 1e5,
                  s = ((Math.sin(r) * -n.scaleY * 1e5) | 0) / 1e5,
                  l = ((Math.cos(r) * n.scaleY * 1e5) | 0) / 1e5,
                  c = this.t.style,
                  h = this.t.currentStyle;
                if (h) {
                  (i = a), (a = -s), (s = -i), (t = h.filter), (c.filter = "");
                  var u = this.t.offsetWidth,
                    d = this.t.offsetHeight,
                    p = "absolute" !== h.position,
                    f =
                      "progid:DXImageTransform.Microsoft.Matrix(M11=" +
                      o +
                      ", M12=" +
                      a +
                      ", M21=" +
                      s +
                      ", M22=" +
                      l,
                    m = n.x + (u * n.xPercent) / 100,
                    r = n.y + (d * n.yPercent) / 100;
                  if (
                    (null != n.ox &&
                      ((m +=
                        (_ = (n.oxp ? u * n.ox * 0.01 : n.ox) - u / 2) -
                        (_ * o +
                          (x = (n.oyp ? d * n.oy * 0.01 : n.oy) - d / 2) * a)),
                      (r += x - (_ * s + x * l))),
                    (f += p
                      ? ", Dx=" +
                        ((_ = u / 2) - (_ * o + (x = d / 2) * a) + m) +
                        ", Dy=" +
                        (x - (_ * s + x * l) + r) +
                        ")"
                      : ", sizingMethod='auto expand')"),
                    -1 !== t.indexOf("DXImageTransform.Microsoft.Matrix(")
                      ? (c.filter = t.replace(X, f))
                      : (c.filter = f + " " + t),
                    (0 !== e && 1 !== e) ||
                      (1 == o &&
                        0 == a &&
                        0 == s &&
                        1 == l &&
                        ((p && -1 === f.indexOf("Dx=0, Dy=0")) ||
                          (U.test(t) && 100 !== parseFloat(RegExp.$1)) ||
                          (-1 === t.indexOf(t.indexOf("Alpha")) &&
                            c.removeAttribute("filter")))),
                    !p)
                  ) {
                    var g,
                      v,
                      y = b < 8 ? 1 : -1,
                      _ = n.ieOffsetX || 0,
                      x = n.ieOffsetY || 0;
                    for (
                      n.ieOffsetX = Math.round(
                        (u - ((o < 0 ? -o : o) * u + (a < 0 ? -a : a) * d)) /
                          2 +
                          m
                      ),
                        n.ieOffsetY = Math.round(
                          (d - ((l < 0 ? -l : l) * d + (s < 0 ? -s : s) * u)) /
                            2 +
                            r
                        ),
                        be = 0;
                      be < 4;
                      be++
                    )
                      (v =
                        (i =
                          -1 !== (v = h[(g = he[be])]).indexOf("px")
                            ? parseFloat(v)
                            : se(this.t, g, parseFloat(v), v.replace(k, "")) ||
                              0) !== n[g]
                          ? be < 2
                            ? -n.ieOffsetX
                            : -n.ieOffsetY
                          : be < 2
                          ? _ - n.ieOffsetX
                          : x - n.ieOffsetY),
                        (c[g] =
                          (n[g] = Math.round(
                            i - v * (0 === be || 2 === be ? 1 : y)
                          )) + "px");
                  }
                }
              }
              var Ae,
                Le,
                Ce,
                Pe =
                  "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(
                    ","
                  ),
                Re = T("transform"),
                Oe = ne + "transform",
                Ie = T("transformOrigin"),
                De = null !== T("perspective"),
                Ne = (n.Transform = function () {
                  (this.perspective =
                    parseFloat(R.defaultTransformPerspective) || 0),
                    (this.force3D =
                      !(!1 === R.defaultForce3D || !De) &&
                      (R.defaultForce3D || "auto"));
                }),
                Fe = $e.SVGElement,
                ke = function (e, t, i) {
                  var n,
                    r = $.createElementNS("http://www.w3.org/2000/svg", e),
                    o = /([a-z])([A-Z])/g;
                  for (n in i)
                    r.setAttributeNS(
                      null,
                      n.replace(o, "$1-$2").toLowerCase(),
                      i[n]
                    );
                  return t.appendChild(r), r;
                },
                Ue = $.documentElement || {},
                Be =
                  ((Ce = b || (/Android/i.test(te) && !$e.chrome)),
                  $.createElementNS &&
                    !Ce &&
                    ((Le = ke("svg", Ue)),
                    (ke = (te = ke("rect", Le, {
                      width: 100,
                      height: 50,
                      x: 100,
                    })).getBoundingClientRect().width),
                    (te.style[Ie] = "50% 50%"),
                    (te.style[Re] = "scaleX(0.5)"),
                    (Ce =
                      ke === te.getBoundingClientRect().width && !(O && De)),
                    Ue.removeChild(Le)),
                  Ce),
                ze = function (e) {
                  var t,
                    i = s(
                      "svg",
                      this.ownerSVGElement.getAttribute("xmlns") ||
                        "http://www.w3.org/2000/svg"
                    ),
                    n = this.parentNode,
                    r = this.nextSibling,
                    o = this.style.cssText;
                  if (
                    (Ue.appendChild(i),
                    i.appendChild(this),
                    (this.style.display = "block"),
                    e)
                  )
                    try {
                      (t = this.getBBox()),
                        (this._originalGetBBox = this.getBBox),
                        (this.getBBox = ze);
                    } catch (e) {}
                  else this._originalGetBBox && (t = this._originalGetBBox());
                  return (
                    r ? n.insertBefore(this, r) : n.appendChild(this),
                    Ue.removeChild(i),
                    (this.style.cssText = o),
                    t
                  );
                },
                je = function (e) {
                  return !(
                    !(
                      Fe &&
                      e.getCTM &&
                      (function (t) {
                        try {
                          return t.getBBox();
                        } catch (e) {
                          return ze.call(t, !0);
                        }
                      })(e)
                    ) ||
                    (e.parentNode && !e.ownerSVGElement)
                  );
                },
                He = [1, 0, 0, 1, 0, 0],
                Ge = function (e, t) {
                  var i,
                    n,
                    r,
                    o,
                    a,
                    s,
                    l = e._gsTransform || new Ne(),
                    c = e.style;
                  if (
                    (Re
                      ? (n = ae(e, Oe, null, !0))
                      : e.currentStyle &&
                        (n =
                          (n = e.currentStyle.filter.match(W)) && 4 === n.length
                            ? [
                                n[0].substr(4),
                                Number(n[2].substr(4)),
                                Number(n[1].substr(4)),
                                n[3].substr(4),
                                l.x || 0,
                                l.y || 0,
                              ].join(",")
                            : ""),
                    (i =
                      !n || "none" === n || "matrix(1, 0, 0, 1, 0, 0)" === n) &&
                      Re &&
                      ((s = "none" === oe(e).display) || !e.parentNode) &&
                      (s && ((o = c.display), (c.display = "block")),
                      e.parentNode || ((a = 1), Ue.appendChild(e)),
                      (i =
                        !(n = ae(e, Oe, null, !0)) ||
                        "none" === n ||
                        "matrix(1, 0, 0, 1, 0, 0)" === n),
                      o ? (c.display = o) : s && Ye(c, "display"),
                      a && Ue.removeChild(e)),
                    (l.svg || (e.getCTM && je(e))) &&
                      (i &&
                        -1 !== (c[Re] + "").indexOf("matrix") &&
                        ((n = c[Re]), (i = 0)),
                      (r = e.getAttribute("transform")),
                      i &&
                        r &&
                        (-1 !== r.indexOf("matrix")
                          ? ((n = r), (i = 0))
                          : -1 !== r.indexOf("translate") &&
                            ((n =
                              "matrix(1,0,0,1," +
                              r.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",") +
                              ")"),
                            (i = 0)))),
                    i)
                  )
                    return He;
                  for (r = (n || "").match(D) || [], be = r.length; -1 < --be; )
                    (o = Number(r[be])),
                      (r[be] = (a = o - (o |= 0))
                        ? ((1e5 * a + (a < 0 ? -0.5 : 0.5)) | 0) / 1e5 + o
                        : o);
                  return t && 6 < r.length
                    ? [r[0], r[1], r[4], r[5], r[12], r[13]]
                    : r;
                },
                Ve = (n.getTransform = function (e, t, i, n) {
                  if (e._gsTransform && i && !n) return e._gsTransform;
                  var r,
                    o,
                    a,
                    s,
                    l,
                    c,
                    h,
                    u,
                    d,
                    p,
                    f,
                    m,
                    g,
                    v,
                    y,
                    _,
                    x,
                    b,
                    w,
                    T,
                    S,
                    M,
                    E = (i && e._gsTransform) || new Ne(),
                    A = E.scaleX < 0,
                    L =
                      (De &&
                        (parseFloat(ae(e, Ie, t, !1, "0 0 0").split(" ")[2]) ||
                          E.zOrigin)) ||
                      0,
                    C = parseFloat(R.defaultTransformPerspective) || 0;
                  if (
                    ((E.svg = !(!e.getCTM || !je(e))),
                    E.svg &&
                      (Me(
                        e,
                        ae(e, Ie, t, !1, "50% 50%") + "",
                        E,
                        e.getAttribute("data-svg-origin")
                      ),
                      (Ae = R.useSVGTransformAttr || Be)),
                    (o = Ge(e)),
                    o !== He)
                  )
                    for (r in (16 === o.length
                      ? ((T = o[0]),
                        (M = o[1]),
                        (a = o[2]),
                        (s = o[3]),
                        (S = o[4]),
                        (l = o[5]),
                        (c = o[6]),
                        (h = o[7]),
                        (u = o[8]),
                        (d = o[9]),
                        (p = o[10]),
                        (f = o[12]),
                        (b = o[13]),
                        (w = o[14]),
                        (m = o[11]),
                        (t = Math.atan2(c, p)),
                        E.zOrigin &&
                          ((f = u * (w = -E.zOrigin) - o[12]),
                          (b = d * w - o[13]),
                          (w = p * w + E.zOrigin - o[14])),
                        (E.rotationX = t * Z),
                        t &&
                          ((g =
                            S * (_ = Math.cos(-t)) + u * (x = Math.sin(-t))),
                          (v = l * _ + d * x),
                          (y = c * _ + p * x),
                          (u = S * -x + u * _),
                          (d = l * -x + d * _),
                          (p = c * -x + p * _),
                          (m = h * -x + m * _),
                          (S = g),
                          (l = v),
                          (c = y)),
                        (t = Math.atan2(-a, p)),
                        (E.rotationY = t * Z),
                        t &&
                          ((v =
                            M * (_ = Math.cos(-t)) - d * (x = Math.sin(-t))),
                          (y = a * _ - p * x),
                          (d = M * x + d * _),
                          (p = a * x + p * _),
                          (m = s * x + m * _),
                          (T = g = T * _ - u * x),
                          (M = v),
                          (a = y)),
                        (t = Math.atan2(M, T)),
                        (E.rotation = t * Z),
                        t &&
                          ((T =
                            T * (_ = Math.cos(-t)) + S * (x = Math.sin(-t))),
                          (v = M * _ + l * x),
                          (l = M * -x + l * _),
                          (c = a * -x + c * _),
                          (M = v)),
                        E.rotationX &&
                          359.9 <
                            Math.abs(E.rotationX) + Math.abs(E.rotation) &&
                          ((E.rotationX = E.rotation = 0),
                          (E.rotationY = 180 - E.rotationY)),
                        (E.scaleX =
                          ((1e5 * Math.sqrt(T * T + M * M) + 0.5) | 0) / 1e5),
                        (E.scaleY =
                          ((1e5 * Math.sqrt(l * l + d * d) + 0.5) | 0) / 1e5),
                        (E.scaleZ =
                          ((1e5 * Math.sqrt(c * c + p * p) + 0.5) | 0) / 1e5),
                        E.rotationX || E.rotationY
                          ? (E.skewX = 0)
                          : ((E.skewX =
                              S || l
                                ? Math.atan2(S, l) * Z + E.rotation
                                : E.skewX || 0),
                            90 < Math.abs(E.skewX) &&
                              Math.abs(E.skewX) < 270 &&
                              (A
                                ? ((E.scaleX *= -1),
                                  (E.skewX += E.rotation <= 0 ? 180 : -180),
                                  (E.rotation += E.rotation <= 0 ? 180 : -180))
                                : ((E.scaleY *= -1),
                                  (E.skewX += E.skewX <= 0 ? 180 : -180)))),
                        (E.perspective = m ? 1 / (m < 0 ? -m : m) : 0),
                        (E.x = f),
                        (E.y = b),
                        (E.z = w),
                        E.svg &&
                          ((E.x -= E.xOrigin - (E.xOrigin * T - E.yOrigin * S)),
                          (E.y -= E.yOrigin - (E.yOrigin * M - E.xOrigin * l))))
                      : (De &&
                          !n &&
                          o.length &&
                          E.x === o[4] &&
                          E.y === o[5] &&
                          (E.rotationX || E.rotationY)) ||
                        ((w = (b = 6 <= o.length) ? o[0] : 1),
                        (T = o[1] || 0),
                        (S = o[2] || 0),
                        (M = b ? o[3] : 1),
                        (E.x = o[4] || 0),
                        (E.y = o[5] || 0),
                        (l = Math.sqrt(w * w + T * T)),
                        (n = Math.sqrt(M * M + S * S)),
                        (b = w || T ? Math.atan2(T, w) * Z : E.rotation || 0),
                        (o = S || M ? Math.atan2(S, M) * Z + b : E.skewX || 0),
                        90 < Math.abs(o) &&
                          Math.abs(o) < 270 &&
                          (A
                            ? ((l *= -1),
                              (o += b <= 0 ? 180 : -180),
                              (b += b <= 0 ? 180 : -180))
                            : ((n *= -1), (o += o <= 0 ? 180 : -180))),
                        (E.scaleX = l),
                        (E.scaleY = n),
                        (E.rotation = b),
                        (E.skewX = o),
                        De &&
                          ((E.rotationX = E.rotationY = E.z = 0),
                          (E.perspective = C),
                          (E.scaleZ = 1)),
                        E.svg &&
                          ((E.x -= E.xOrigin - (E.xOrigin * w + E.yOrigin * S)),
                          (E.y -=
                            E.yOrigin - (E.xOrigin * T + E.yOrigin * M)))),
                    (E.zOrigin = L),
                    E))
                      E[r] < 2e-5 && -2e-5 < E[r] && (E[r] = 0);
                  return (
                    i &&
                      (e._gsTransform = E).svg &&
                      (Ae && e.style[Re]
                        ? P.delayedCall(0.001, function () {
                            Ye(e.style, Re);
                          })
                        : !Ae &&
                          e.getAttribute("transform") &&
                          P.delayedCall(0.001, function () {
                            e.removeAttribute("transform");
                          })),
                    E
                  );
                }),
                We =
                  (n.set3DTransformRatio =
                  n.setTransformRatio =
                    function (e) {
                      var t,
                        i,
                        n,
                        r,
                        o,
                        a,
                        s,
                        l,
                        c,
                        h,
                        u,
                        d,
                        p,
                        f,
                        m = this.data,
                        g = this.t.style,
                        v = m.rotation,
                        y = m.rotationX,
                        _ = m.rotationY,
                        x = m.scaleX,
                        b = m.scaleY,
                        w = m.scaleZ,
                        T = m.x,
                        S = m.y,
                        M = m.z,
                        E = m.svg,
                        A = m.perspective,
                        L = m.force3D,
                        C = m.skewY,
                        P = m.skewX;
                      if (
                        (C && ((P += C), (v += C)),
                        !(
                          (((1 !== e && 0 !== e) ||
                            "auto" !== L ||
                            (this.tween._totalTime !==
                              this.tween._totalDuration &&
                              this.tween._totalTime)) &&
                            L) ||
                          M ||
                          A ||
                          _ ||
                          y ||
                          1 !== w
                        ) ||
                          (Ae && E) ||
                          !De)
                      )
                        v || P || E
                          ? ((v *= Q),
                            (f = P * Q),
                            (i = Math.cos(v) * x),
                            (r = Math.sin(v) * x),
                            (n = Math.sin(v - f) * -b),
                            (o = Math.cos(v - f) * b),
                            f &&
                              "simple" === m.skewType &&
                              ((t = Math.tan(f - C * Q)),
                              (n *= t = Math.sqrt(1 + t * t)),
                              (o *= t),
                              C &&
                                ((t = Math.tan(C * Q)),
                                (i *= t = Math.sqrt(1 + t * t)),
                                (r *= t))),
                            E &&
                              ((T +=
                                m.xOrigin -
                                (m.xOrigin * i + m.yOrigin * n) +
                                m.xOffset),
                              (S +=
                                m.yOrigin -
                                (m.xOrigin * r + m.yOrigin * o) +
                                m.yOffset),
                              Ae &&
                                (m.xPercent || m.yPercent) &&
                                ((h = this.t.getBBox()),
                                (T += 0.01 * m.xPercent * h.width),
                                (S += 0.01 * m.yPercent * h.height)),
                              T < (h = 1e-6) && -h < T && (T = 0),
                              S < h && -h < S && (S = 0)),
                            (p =
                              ((1e5 * i) | 0) / 1e5 +
                              "," +
                              ((1e5 * r) | 0) / 1e5 +
                              "," +
                              ((1e5 * n) | 0) / 1e5 +
                              "," +
                              ((1e5 * o) | 0) / 1e5 +
                              "," +
                              T +
                              "," +
                              S +
                              ")"),
                            E && Ae
                              ? this.t.setAttribute("transform", "matrix(" + p)
                              : (g[Re] =
                                  (m.xPercent || m.yPercent
                                    ? "translate(" +
                                      m.xPercent +
                                      "%," +
                                      m.yPercent +
                                      "%) matrix("
                                    : "matrix(") + p))
                          : (g[Re] =
                              (m.xPercent || m.yPercent
                                ? "translate(" +
                                  m.xPercent +
                                  "%," +
                                  m.yPercent +
                                  "%) matrix("
                                : "matrix(") +
                              x +
                              ",0,0," +
                              b +
                              "," +
                              T +
                              "," +
                              S +
                              ")");
                      else {
                        if (
                          (O &&
                            (x < (h = 1e-4) && -h < x && (x = w = 2e-5),
                            b < h && -h < b && (b = w = 2e-5),
                            !A || m.z || m.rotationX || m.rotationY || (A = 0)),
                          v || P)
                        )
                          (v *= Q),
                            (u = i = Math.cos(v)),
                            (d = r = Math.sin(v)),
                            P &&
                              ((v -= P * Q),
                              (u = Math.cos(v)),
                              (d = Math.sin(v)),
                              "simple" === m.skewType &&
                                ((t = Math.tan((P - C) * Q)),
                                (u *= t = Math.sqrt(1 + t * t)),
                                (d *= t),
                                m.skewY &&
                                  ((t = Math.tan(C * Q)),
                                  (i *= t = Math.sqrt(1 + t * t)),
                                  (r *= t)))),
                            (n = -d),
                            (o = u);
                        else {
                          if (!(_ || y || 1 !== w || A || E))
                            return void (g[Re] =
                              (m.xPercent || m.yPercent
                                ? "translate(" +
                                  m.xPercent +
                                  "%," +
                                  m.yPercent +
                                  "%) translate3d("
                                : "translate3d(") +
                              T +
                              "px," +
                              S +
                              "px," +
                              M +
                              "px)" +
                              (1 !== x || 1 !== b
                                ? " scale(" + x + "," + b + ")"
                                : ""));
                          (i = o = 1), (n = r = 0);
                        }
                        (s = 1),
                          (f = L = e = a = l = c = 0),
                          (P = A ? -1 / A : 0),
                          (C = m.zOrigin),
                          (h = 1e-6),
                          (v = _ * Q) &&
                            ((u = Math.cos(v)),
                            (l = P * (e = -(d = Math.sin(v)))),
                            (f = i * d),
                            (L = r * d),
                            (P *= s = u),
                            (i *= u),
                            (r *= u)),
                          (v = y * Q) &&
                            ((t =
                              n * (u = Math.cos(v)) + f * (d = Math.sin(v))),
                            (v = o * u + L * d),
                            (a = s * d),
                            (c = P * d),
                            (f = n * -d + f * u),
                            (L = o * -d + L * u),
                            (s *= u),
                            (P *= u),
                            (n = t),
                            (o = v)),
                          1 !== w && ((f *= w), (L *= w), (s *= w), (P *= w)),
                          1 !== b && ((n *= b), (o *= b), (a *= b), (c *= b)),
                          1 !== x && ((i *= x), (r *= x), (e *= x), (l *= x)),
                          (C || E) &&
                            (C &&
                              ((T += f * -C), (S += L * -C), (M += s * -C + C)),
                            E &&
                              ((T +=
                                m.xOrigin -
                                (m.xOrigin * i + m.yOrigin * n) +
                                m.xOffset),
                              (S +=
                                m.yOrigin -
                                (m.xOrigin * r + m.yOrigin * o) +
                                m.yOffset)),
                            T < h && -h < T && (T = "0"),
                            S < h && -h < S && (S = "0"),
                            M < h && -h < M && (M = 0)),
                          (p =
                            m.xPercent || m.yPercent
                              ? "translate(" +
                                m.xPercent +
                                "%," +
                                m.yPercent +
                                "%) matrix3d("
                              : "matrix3d("),
                          (p +=
                            (i < h && -h < i ? "0" : i) +
                            "," +
                            (r < h && -h < r ? "0" : r) +
                            "," +
                            (e < h && -h < e ? "0" : e)),
                          (p +=
                            "," +
                            (l < h && -h < l ? "0" : l) +
                            "," +
                            (n < h && -h < n ? "0" : n) +
                            "," +
                            (o < h && -h < o ? "0" : o)),
                          y || _ || 1 !== w
                            ? ((p +=
                                "," +
                                (a < h && -h < a ? "0" : a) +
                                "," +
                                (c < h && -h < c ? "0" : c) +
                                "," +
                                (f < h && -h < f ? "0" : f)),
                              (p +=
                                "," +
                                (L < h && -h < L ? "0" : L) +
                                "," +
                                (s < h && -h < s ? "0" : s) +
                                "," +
                                (P < h && -h < P ? "0" : P) +
                                ","))
                            : (p += ",0,0,0,0,1,0,"),
                          (p +=
                            T +
                            "," +
                            S +
                            "," +
                            M +
                            "," +
                            (A ? 1 + -M / A : 1) +
                            ")"),
                          (g[Re] = p);
                      }
                    });
              ((e = Ne.prototype).x =
                e.y =
                e.z =
                e.skewX =
                e.skewY =
                e.rotation =
                e.rotationX =
                e.rotationY =
                e.zOrigin =
                e.xPercent =
                e.yPercent =
                e.xOffset =
                e.yOffset =
                  0),
                (e.scaleX = e.scaleY = e.scaleZ = 1),
                Te(
                  "transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin",
                  {
                    parser: function (e, t, i, n, r, o, a) {
                      if (n._lastParsedTransform === a) return r;
                      var s,
                        l =
                          (n._lastParsedTransform = a).scale &&
                          "function" == typeof a.scale
                            ? a.scale
                            : 0;
                      "function" == typeof a[i] && ((s = a[i]), (a[i] = t)),
                        l && (a.scale = l(I, e));
                      var c,
                        h,
                        u,
                        d,
                        p,
                        f,
                        m,
                        g,
                        v = e._gsTransform,
                        y = e.style,
                        _ = Pe.length,
                        x = a,
                        b = {},
                        t = "transformOrigin",
                        w = Ve(e, S, !0, x.parseTransform),
                        T =
                          x.transform &&
                          ("function" == typeof x.transform
                            ? x.transform(I, C)
                            : x.transform);
                      if (((n._transform = w), T && "string" == typeof T && Re))
                        ((h = K.style)[Re] = T),
                          (h.display = "block"),
                          (h.position = "absolute"),
                          $.body.appendChild(K),
                          (c = Ve(K, null, !1)),
                          w.svg &&
                            ((p = w.xOrigin),
                            (f = w.yOrigin),
                            (c.x -= w.xOffset),
                            (c.y -= w.yOffset),
                            (x.transformOrigin || x.svgOrigin) &&
                              ((T = {}),
                              Me(
                                e,
                                ue(x.transformOrigin),
                                T,
                                x.svgOrigin,
                                x.smoothOrigin,
                                !0
                              ),
                              (p = T.xOrigin),
                              (f = T.yOrigin),
                              (c.x -= T.xOffset - w.xOffset),
                              (c.y -= T.yOffset - w.yOffset)),
                            (p || f) &&
                              ((m = Ge(K, !0)),
                              (c.x -= p - (p * m[0] + f * m[2])),
                              (c.y -= f - (p * m[1] + f * m[3])))),
                          $.body.removeChild(K),
                          c.perspective || (c.perspective = w.perspective),
                          null != x.xPercent &&
                            (c.xPercent = M(x.xPercent, w.xPercent)),
                          null != x.yPercent &&
                            (c.yPercent = M(x.yPercent, w.yPercent));
                      else if ("object" == typeof x) {
                        if (
                          ((c = {
                            scaleX: M(
                              null != x.scaleX ? x.scaleX : x.scale,
                              w.scaleX
                            ),
                            scaleY: M(
                              null != x.scaleY ? x.scaleY : x.scale,
                              w.scaleY
                            ),
                            scaleZ: M(x.scaleZ, w.scaleZ),
                            x: M(x.x, w.x),
                            y: M(x.y, w.y),
                            z: M(x.z, w.z),
                            xPercent: M(x.xPercent, w.xPercent),
                            yPercent: M(x.yPercent, w.yPercent),
                            perspective: M(
                              x.transformPerspective,
                              w.perspective
                            ),
                          }),
                          null != (d = x.directionalRotation))
                        )
                          if ("object" == typeof d) for (h in d) x[h] = d[h];
                          else x.rotation = d;
                        "string" == typeof x.x &&
                          -1 !== x.x.indexOf("%") &&
                          ((c.x = 0), (c.xPercent = M(x.x, w.xPercent))),
                          "string" == typeof x.y &&
                            -1 !== x.y.indexOf("%") &&
                            ((c.y = 0), (c.yPercent = M(x.y, w.yPercent))),
                          (c.rotation = A(
                            "rotation" in x
                              ? x.rotation
                              : "shortRotation" in x
                              ? x.shortRotation + "_short"
                              : "rotationZ" in x
                              ? x.rotationZ
                              : w.rotation,
                            w.rotation,
                            "rotation",
                            b
                          )),
                          De &&
                            ((c.rotationX = A(
                              "rotationX" in x
                                ? x.rotationX
                                : "shortRotationX" in x
                                ? x.shortRotationX + "_short"
                                : w.rotationX || 0,
                              w.rotationX,
                              "rotationX",
                              b
                            )),
                            (c.rotationY = A(
                              "rotationY" in x
                                ? x.rotationY
                                : "shortRotationY" in x
                                ? x.shortRotationY + "_short"
                                : w.rotationY || 0,
                              w.rotationY,
                              "rotationY",
                              b
                            ))),
                          (c.skewX = A(x.skewX, w.skewX)),
                          (c.skewY = A(x.skewY, w.skewY));
                      }
                      for (
                        De &&
                          null != x.force3D &&
                          ((w.force3D = x.force3D), (u = !0)),
                          w.skewType =
                            x.skewType || w.skewType || R.defaultSkewType,
                          (m =
                            w.force3D ||
                            w.z ||
                            w.rotationX ||
                            w.rotationY ||
                            c.z ||
                            c.rotationX ||
                            c.rotationY ||
                            c.perspective) ||
                            null == x.scale ||
                            (c.scaleZ = 1);
                        -1 < --_;

                      )
                        (1e-6 < (T = c[(g = Pe[_])] - w[g]) ||
                          T < -1e-6 ||
                          null != x[g] ||
                          null != J[g]) &&
                          ((u = !0),
                          (r = new _e(w, g, w[g], T, r)),
                          g in b && (r.e = b[g]),
                          (r.xs0 = 0),
                          (r.plugin = o),
                          n._overwriteProps.push(r.n));
                      return (
                        (T = x.transformOrigin),
                        w.svg &&
                          (T || x.svgOrigin) &&
                          ((p = w.xOffset),
                          (f = w.yOffset),
                          Me(e, ue(T), c, x.svgOrigin, x.smoothOrigin),
                          (r = ve(
                            w,
                            "xOrigin",
                            (v ? w : c).xOrigin,
                            c.xOrigin,
                            r,
                            t
                          )),
                          (r = ve(
                            w,
                            "yOrigin",
                            (v ? w : c).yOrigin,
                            c.yOrigin,
                            r,
                            t
                          )),
                          (p === w.xOffset && f === w.yOffset) ||
                            ((r = ve(
                              w,
                              "xOffset",
                              v ? p : w.xOffset,
                              w.xOffset,
                              r,
                              t
                            )),
                            (r = ve(
                              w,
                              "yOffset",
                              v ? f : w.yOffset,
                              w.yOffset,
                              r,
                              t
                            ))),
                          (T = "0px 0px")),
                        (T || (De && m && w.zOrigin)) &&
                          (Re
                            ? ((u = !0),
                              (g = Ie),
                              (T = (T || ae(e, g, S, !1, "50% 50%")) + ""),
                              ((r = new _e(y, g, 0, 0, r, -1, t)).b = y[g]),
                              (r.plugin = o),
                              De
                                ? ((h = w.zOrigin),
                                  (T = T.split(" ")),
                                  (w.zOrigin =
                                    (2 < T.length && (0 === h || "0px" !== T[2])
                                      ? parseFloat(T[2])
                                      : h) || 0),
                                  (r.xs0 = r.e =
                                    T[0] + " " + (T[1] || "50%") + " 0px"),
                                  ((r = new _e(
                                    w,
                                    "zOrigin",
                                    0,
                                    0,
                                    r,
                                    -1,
                                    r.n
                                  )).b = h),
                                  (r.xs0 = r.e = w.zOrigin))
                                : (r.xs0 = r.e = T))
                            : ue(T + "", w)),
                        u &&
                          (n._transformType =
                            (w.svg && Ae) || (!m && 3 !== this._transformType)
                              ? 2
                              : 3),
                        s && (a[i] = s),
                        l && (a.scale = l),
                        r
                      );
                    },
                    prefix: !0,
                  }
                ),
                Te("boxShadow", {
                  defaultValue: "0px 0px 0px 0px #999",
                  prefix: !0,
                  color: !0,
                  multi: !0,
                  keyword: "inset",
                }),
                Te("borderRadius", {
                  defaultValue: "0px",
                  parser: function (e, t, i, n, r, o) {
                    t = this.format(t);
                    for (
                      var a,
                        s,
                        l,
                        c,
                        h,
                        u,
                        d,
                        p,
                        f,
                        m,
                        g = [
                          "borderTopLeftRadius",
                          "borderTopRightRadius",
                          "borderBottomRightRadius",
                          "borderBottomLeftRadius",
                        ],
                        v = e.style,
                        y = parseFloat(e.offsetWidth),
                        _ = parseFloat(e.offsetHeight),
                        x = t.split(" "),
                        b = 0;
                      b < g.length;
                      b++
                    )
                      this.p.indexOf("border") && (g[b] = T(g[b])),
                        -1 !==
                          (l = s = ae(e, g[b], S, !1, "0px")).indexOf(" ") &&
                          ((l = (s = l.split(" "))[0]), (s = s[1])),
                        (c = a = x[b]),
                        (f = parseFloat(l)),
                        (m = l.substr((f + "").length)),
                        "" ===
                          (u = (d = "=" === c.charAt(1))
                            ? ((h = parseInt(c.charAt(0) + "1", 10)),
                              (c = c.substr(2)),
                              (h *= parseFloat(c)),
                              c.substr((h + "").length - (h < 0 ? 1 : 0)) || "")
                            : ((h = parseFloat(c)),
                              c.substr((h + "").length))) && (u = w[i] || m),
                        u !== m &&
                          ((p = se(e, "borderLeft", f, m)),
                          (f = se(e, "borderTop", f, m)),
                          (s =
                            "%" === u
                              ? ((l = (p / y) * 100 + "%"), (f / _) * 100 + "%")
                              : "em" === u
                              ? ((l =
                                  p / (m = se(e, "borderLeft", 1, "em")) +
                                  "em"),
                                f / m + "em")
                              : ((l = p + "px"), f + "px")),
                          d &&
                            ((c = parseFloat(l) + h + u),
                            (a = parseFloat(s) + h + u))),
                        (r = xe(
                          v,
                          g[b],
                          l + " " + s,
                          c + " " + a,
                          !1,
                          "0px",
                          r
                        ));
                    return r;
                  },
                  prefix: !0,
                  formatter: me("0px 0px 0px 0px", !1, !0),
                }),
                Te(
                  "borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius",
                  {
                    defaultValue: "0px",
                    parser: function (e, t, i, n, r, o) {
                      return xe(
                        e.style,
                        i,
                        this.format(ae(e, i, S, !1, "0px 0px")),
                        this.format(t),
                        !1,
                        "0px",
                        r
                      );
                    },
                    prefix: !0,
                    formatter: me("0px 0px", !1, !0),
                  }
                ),
                Te("backgroundPosition", {
                  defaultValue: "0 0",
                  parser: function (e, t, i, n, r, o) {
                    var a,
                      s,
                      l,
                      c,
                      h,
                      u,
                      d = "background-position",
                      p = S || oe(e, null),
                      f = this.format(
                        (p
                          ? b
                            ? p.getPropertyValue(d + "-x") +
                              " " +
                              p.getPropertyValue(d + "-y")
                            : p.getPropertyValue(d)
                          : e.currentStyle.backgroundPositionX +
                            " " +
                            e.currentStyle.backgroundPositionY) || "0 0"
                      ),
                      t = this.format(t);
                    if (
                      (-1 !== f.indexOf("%")) != (-1 !== t.indexOf("%")) &&
                      t.split(",").length < 2 &&
                      (u = ae(e, "backgroundImage").replace(G, "")) &&
                      "none" !== u
                    ) {
                      for (
                        a = f.split(" "),
                          s = t.split(" "),
                          ee.setAttribute("src", u),
                          l = 2;
                        -1 < --l;

                      )
                        (c = -1 !== (f = a[l]).indexOf("%")) !=
                          (-1 !== s[l].indexOf("%")) &&
                          ((h =
                            0 === l
                              ? e.offsetWidth - ee.width
                              : e.offsetHeight - ee.height),
                          (a[l] = c
                            ? (parseFloat(f) / 100) * h + "px"
                            : (parseFloat(f) / h) * 100 + "%"));
                      f = a.join(" ");
                    }
                    return this.parseComplex(e.style, f, t, r, o);
                  },
                  formatter: ue,
                }),
                Te("backgroundSize", {
                  defaultValue: "0 0",
                  formatter: function (e) {
                    return ue(-1 === (e += "").indexOf(" ") ? e + " " + e : e);
                  },
                }),
                Te("perspective", { defaultValue: "0px", prefix: !0 }),
                Te("perspectiveOrigin", {
                  defaultValue: "50% 50%",
                  prefix: !0,
                }),
                Te("transformStyle", { prefix: !0 }),
                Te("backfaceVisibility", { prefix: !0 }),
                Te("userSelect", { prefix: !0 }),
                Te("margin", {
                  parser: ge("marginTop,marginRight,marginBottom,marginLeft"),
                }),
                Te("padding", {
                  parser: ge(
                    "paddingTop,paddingRight,paddingBottom,paddingLeft"
                  ),
                }),
                Te("clip", {
                  defaultValue: "rect(0px,0px,0px,0px)",
                  parser: function (e, t, i, n, r, o) {
                    var a, s;
                    return (
                      (t =
                        b < 9
                          ? ((a = e.currentStyle),
                            (s = b < 8 ? " " : ","),
                            (a =
                              "rect(" +
                              a.clipTop +
                              s +
                              a.clipRight +
                              s +
                              a.clipBottom +
                              s +
                              a.clipLeft +
                              ")"),
                            this.format(t).split(",").join(s))
                          : ((a = this.format(ae(e, this.p, S, !1, this.dflt))),
                            this.format(t))),
                      this.parseComplex(e.style, a, t, r, o)
                    );
                  },
                }),
                Te("textShadow", {
                  defaultValue: "0px 0px 0px #999",
                  color: !0,
                  multi: !0,
                }),
                Te("autoRound,strictUnits", {
                  parser: function (e, t, i, n, r) {
                    return r;
                  },
                }),
                Te("border", {
                  defaultValue: "0px solid #000",
                  parser: function (e, t, i, n, r, o) {
                    var a = ae(e, "borderTopWidth", S, !1, "0px"),
                      s = this.format(t).split(" "),
                      t = s[0].replace(k, "");
                    return (
                      "px" !== t &&
                        (a = parseFloat(a) / se(e, "borderTopWidth", 1, t) + t),
                      this.parseComplex(
                        e.style,
                        this.format(
                          a +
                            " " +
                            ae(e, "borderTopStyle", S, !1, "solid") +
                            " " +
                            ae(e, "borderTopColor", S, !1, "#000")
                        ),
                        s.join(" "),
                        r,
                        o
                      )
                    );
                  },
                  color: !0,
                  formatter: function (e) {
                    var t = e.split(" ");
                    return (
                      t[0] +
                      " " +
                      (t[1] || "solid") +
                      " " +
                      (e.match(fe) || ["#000"])[0]
                    );
                  },
                }),
                Te("borderWidth", {
                  parser: ge(
                    "borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth"
                  ),
                }),
                Te("float,cssFloat,styleFloat", {
                  parser: function (e, t, i, n, r, o) {
                    var a = e.style,
                      e = "cssFloat" in a ? "cssFloat" : "styleFloat";
                    return new _e(a, e, 0, 0, r, -1, i, !1, 0, a[e], t);
                  },
                });
              function Xe(e) {
                var t,
                  i = this.t,
                  n = i.filter || ae(this.data, "filter") || "";
                100 == (e = (this.s + this.c * e) | 0) &&
                  (t =
                    -1 === n.indexOf("atrix(") &&
                    -1 === n.indexOf("radient(") &&
                    -1 === n.indexOf("oader(")
                      ? (i.removeAttribute("filter"), !ae(this.data, "filter"))
                      : ((i.filter = n.replace(r, "")), !0)),
                  t ||
                    (this.xn1 &&
                      (i.filter = n = n || "alpha(opacity=" + e + ")"),
                    -1 === n.indexOf("pacity")
                      ? (0 == e && this.xn1) ||
                        (i.filter = n + " alpha(opacity=" + e + ")")
                      : (i.filter = n.replace(U, "opacity=" + e)));
              }
              Te("opacity,alpha,autoAlpha", {
                defaultValue: "1",
                parser: function (e, t, i, n, r, o) {
                  var a = parseFloat(ae(e, "opacity", S, !1, "1")),
                    s = e.style,
                    l = "autoAlpha" === i;
                  return (
                    "string" == typeof t &&
                      "=" === t.charAt(1) &&
                      (t =
                        ("-" === t.charAt(0) ? -1 : 1) *
                          parseFloat(t.substr(2)) +
                        a),
                    l &&
                      1 === a &&
                      "hidden" === ae(e, "visibility", S) &&
                      0 !== t &&
                      (a = 0),
                    ie
                      ? (r = new _e(s, "opacity", a, t - a, r))
                      : (((r = new _e(
                          s,
                          "opacity",
                          100 * a,
                          100 * (t - a),
                          r
                        )).xn1 = l ? 1 : 0),
                        (s.zoom = 1),
                        (r.type = 2),
                        (r.b = "alpha(opacity=" + r.s + ")"),
                        (r.e = "alpha(opacity=" + (r.s + r.c) + ")"),
                        (r.data = e),
                        (r.plugin = o),
                        (r.setRatio = Xe)),
                    l &&
                      (((r = new _e(
                        s,
                        "visibility",
                        0,
                        0,
                        r,
                        -1,
                        null,
                        !1,
                        0,
                        0 !== a ? "inherit" : "hidden",
                        0 === t ? "hidden" : "inherit"
                      )).xs0 = "inherit"),
                      n._overwriteProps.push(r.n),
                      n._overwriteProps.push(i)),
                    r
                  );
                },
              });
              function qe(e) {
                if (((this.t._gsClassPT = this), 1 === e || 0 === e)) {
                  this.t.setAttribute("class", 0 === e ? this.b : this.e);
                  for (var t = this.data, i = this.t.style; t; )
                    t.v ? (i[t.p] = t.v) : Ye(i, t.p), (t = t._next);
                  1 === e &&
                    this.t._gsClassPT === this &&
                    (this.t._gsClassPT = null);
                } else
                  this.t.getAttribute("class") !== this.e &&
                    this.t.setAttribute("class", this.e);
              }
              var Ye = function (e, t) {
                t &&
                  (e.removeProperty
                    ? (("ms" !== t.substr(0, 2) &&
                        "webkit" !== t.substr(0, 6)) ||
                        (t = "-" + t),
                      e.removeProperty(t.replace(j, "-$1").toLowerCase()))
                    : e.removeAttribute(t));
              };
              Te("className", {
                parser: function (e, t, i, n, r, o, a) {
                  var s,
                    l,
                    c,
                    h = e.getAttribute("class") || "",
                    u = e.style.cssText;
                  if (
                    (((r = n._classNamePT = new _e(e, i, 0, 0, r, 2)).setRatio =
                      qe),
                    (r.pr = -11),
                    (d = !0),
                    (r.b = h),
                    (s = m(e, S)),
                    (i = e._gsClassPT))
                  ) {
                    for (l = {}, c = i.data; c; ) (l[c.p] = 1), (c = c._next);
                    i.setRatio(1);
                  }
                  return (
                    ((e._gsClassPT = r).e =
                      "=" !== t.charAt(1)
                        ? t
                        : h.replace(
                            new RegExp(
                              "(?:\\s|^)" + t.substr(2) + "(?![\\w-])"
                            ),
                            ""
                          ) + ("+" === t.charAt(0) ? " " + t.substr(2) : "")),
                    e.setAttribute("class", r.e),
                    (a = g(e, s, m(e), a, l)),
                    e.setAttribute("class", h),
                    (r.data = a.firstMPT),
                    (e.style.cssText = u),
                    (r = r.xfirst = n.parse(e, a.difs, r, o))
                  );
                },
              });
              function Qe(e) {
                if (
                  (1 === e || 0 === e) &&
                  this.data._totalTime === this.data._totalDuration &&
                  "isFromStart" !== this.data.data
                ) {
                  var t,
                    i,
                    n,
                    r,
                    o = this.t.style,
                    a = p.transform.parse;
                  if ("all" === this.e) r = !(o.cssText = "");
                  else
                    for (
                      n = (t = this.e.split(" ").join("").split(",")).length;
                      -1 < --n;

                    )
                      (i = t[n]),
                        p[i] &&
                          (p[i].parse === a
                            ? (r = !0)
                            : (i = "transformOrigin" === i ? Ie : p[i].p)),
                        Ye(o, i);
                  r &&
                    (Ye(o, Re),
                    (e = this.t._gsTransform) &&
                      (e.svg &&
                        (this.t.removeAttribute("data-svg-origin"),
                        this.t.removeAttribute("transform")),
                      delete this.t._gsTransform));
                }
              }
              for (
                Te("clearProps", {
                  parser: function (e, t, i, n, r) {
                    return (
                      ((r = new _e(e, i, 0, 0, r, 2)).setRatio = Qe),
                      (r.e = t),
                      (r.pr = -10),
                      (r.data = n._tween),
                      (d = !0),
                      r
                    );
                  },
                }),
                  e = "bezier,throwProps,physicsProps,physics2D".split(","),
                  be = e.length;
                be--;

              )
                Se(e[be]);
              ((e = R.prototype)._firstPT =
                e._lastParsedTransform =
                e._transform =
                  null),
                (e._onInitTween = function (e, t, i, n) {
                  if (!e.nodeType) return !1;
                  (this._target = C = e),
                    (this._tween = i),
                    (this._vars = t),
                    (I = n),
                    (L = t.autoRound),
                    (d = !1),
                    (w = t.suffixMap || R.suffixMap),
                    (S = oe(e, "")),
                    (u = this._overwriteProps);
                  var r,
                    o,
                    a,
                    s,
                    l,
                    c,
                    n = e.style;
                  if (
                    (v &&
                      "" === n.zIndex &&
                      (("auto" !== (c = ae(e, "zIndex", S)) && "" !== c) ||
                        this._addLazySet(n, "zIndex", 0)),
                    "string" == typeof t &&
                      ((a = n.cssText),
                      (c = m(e, S)),
                      (n.cssText = a + ";" + t),
                      (c = g(e, c, m(e)).difs),
                      !ie && B.test(t) && (c.opacity = parseFloat(RegExp.$1)),
                      (t = c),
                      (n.cssText = a)),
                    t.className
                      ? (this._firstPT = r =
                          p.className.parse(
                            e,
                            t.className,
                            "className",
                            this,
                            null,
                            null,
                            t
                          ))
                      : (this._firstPT = r = this.parse(e, t, null)),
                    this._transformType)
                  ) {
                    for (
                      c = 3 === this._transformType,
                        Re
                          ? y &&
                            ((v = !0),
                            "" === n.zIndex &&
                              (("auto" !== (t = ae(e, "zIndex", S)) &&
                                "" !== t) ||
                                this._addLazySet(n, "zIndex", 0)),
                            _ &&
                              this._addLazySet(
                                n,
                                "WebkitBackfaceVisibility",
                                this._vars.WebkitBackfaceVisibility ||
                                  (c ? "visible" : "hidden")
                              ))
                          : (n.zoom = 1),
                        o = r;
                      o && o._next;

                    )
                      o = o._next;
                    (n = new _e(e, "transform", 0, 0, null, 2)),
                      this._linkCSSP(n, null, o),
                      (n.setRatio = Re ? We : Ee),
                      (n.data = this._transform || Ve(e, S, !0)),
                      (n.tween = i),
                      (n.pr = -1),
                      u.pop();
                  }
                  if (d) {
                    for (; r; ) {
                      for (l = r._next, o = a; o && o.pr > r.pr; ) o = o._next;
                      (r._prev = o ? o._prev : s)
                        ? (r._prev._next = r)
                        : (a = r),
                        (r._next = o) ? (o._prev = r) : (s = r),
                        (r = l);
                    }
                    this._firstPT = a;
                  }
                  return !0;
                }),
                (e.parse = function (e, t, i, n) {
                  var r,
                    o,
                    a,
                    s,
                    l,
                    c,
                    h,
                    u,
                    d = e.style;
                  for (r in t)
                    "function" == typeof (l = t[r]) && (l = l(I, C)),
                      (u = p[r])
                        ? (i = u.parse(e, l, r, this, i, n, t))
                        : ((s = ae(e, r, S) + ""),
                          (h = "string" == typeof l),
                          "color" === r ||
                          "fill" === r ||
                          "stroke" === r ||
                          -1 !== r.indexOf("Color") ||
                          (h && z.test(l))
                            ? (h ||
                                (l =
                                  (3 < (l = pe(l)).length ? "rgba(" : "rgb(") +
                                  l.join(",") +
                                  ")"),
                              (i = xe(d, r, s, l, !0, "transparent", i, 0, n)))
                            : h && Y.test(l)
                            ? (i = xe(d, r, s, l, !0, null, i, 0, n))
                            : ((c =
                                (o = parseFloat(s)) || 0 === o
                                  ? s.substr((o + "").length)
                                  : ""),
                              ("" !== s && "auto" !== s) ||
                                (c =
                                  "width" === r || "height" === r
                                    ? ((o = (function (e, t, i) {
                                        if (
                                          "svg" ===
                                          (e.nodeName + "").toLowerCase()
                                        )
                                          return (i || oe(e))[t] || 0;
                                        if (e.getCTM && je(e))
                                          return e.getBBox()[t] || 0;
                                        var n = parseFloat(
                                            "width" === t
                                              ? e.offsetWidth
                                              : e.offsetHeight
                                          ),
                                          r = ce[t],
                                          o = r.length;
                                        for (i = i || oe(e, null); -1 < --o; )
                                          (n -=
                                            parseFloat(
                                              ae(e, "padding" + r[o], i, !0)
                                            ) || 0),
                                            (n -=
                                              parseFloat(
                                                ae(
                                                  e,
                                                  "border" + r[o] + "Width",
                                                  i,
                                                  !0
                                                )
                                              ) || 0);
                                        return n;
                                      })(e, r, S)),
                                      "px")
                                    : "left" === r || "top" === r
                                    ? ((o = le(e, r, S)), "px")
                                    : ((o = "opacity" !== r ? 0 : 1), "")),
                              "" ===
                                (h = (u = h && "=" === l.charAt(1))
                                  ? ((a = parseInt(l.charAt(0) + "1", 10)),
                                    (l = l.substr(2)),
                                    (a *= parseFloat(l)),
                                    l.replace(k, ""))
                                  : ((a = parseFloat(l)),
                                    h ? l.replace(k, "") : "")) &&
                                (h = r in w ? w[r] : c),
                              (l = a || 0 === a ? (u ? a + o : a) + h : t[r]),
                              c !== h &&
                                "" !== h &&
                                (a || 0 === a) &&
                                o &&
                                ((o = se(e, r, o, c)),
                                "%" === h
                                  ? ((o /= se(e, r, 100, "%") / 100),
                                    !0 !== t.strictUnits && (s = o + "%"))
                                  : "em" === h ||
                                    "rem" === h ||
                                    "vw" === h ||
                                    "vh" === h
                                  ? (o /= se(e, r, 1, h))
                                  : "px" !== h &&
                                    ((a = se(e, r, a, h)), (h = "px")),
                                u && ((!a && 0 !== a) || (l = a + o + h))),
                              u && (a += o),
                              (!o && 0 !== o) || (!a && 0 !== a)
                                ? void 0 !== d[r] &&
                                  (l || (l + "" != "NaN" && null != l))
                                  ? ((i = new _e(
                                      d,
                                      r,
                                      a || o || 0,
                                      0,
                                      i,
                                      -1,
                                      r,
                                      !1,
                                      0,
                                      s,
                                      l
                                    )).xs0 =
                                      "none" !== l ||
                                      ("display" !== r &&
                                        -1 === r.indexOf("Style"))
                                        ? l
                                        : s)
                                  : f("invalid " + r + " tween value: " + t[r])
                                : ((i = new _e(
                                    d,
                                    r,
                                    o,
                                    a - o,
                                    i,
                                    0,
                                    r,
                                    !1 !== L && ("px" === h || "zIndex" === r),
                                    0,
                                    s,
                                    l
                                  )).xs0 = h))),
                      n && i && !i.plugin && (i.plugin = n);
                  return i;
                }),
                (e.setRatio = function (e) {
                  var t,
                    i,
                    n,
                    r = this._firstPT;
                  if (
                    1 !== e ||
                    (this._tween._time !== this._tween._duration &&
                      0 !== this._tween._time)
                  )
                    if (
                      e ||
                      (this._tween._time !== this._tween._duration &&
                        0 !== this._tween._time) ||
                      -1e-6 === this._tween._rawPrevTime
                    )
                      for (; r; ) {
                        if (
                          ((t = r.c * e + r.s),
                          r.r
                            ? (t = Math.round(t))
                            : t < 1e-6 && -1e-6 < t && (t = 0),
                          r.type)
                        )
                          if (1 === r.type)
                            if (2 === (n = r.l))
                              r.t[r.p] = r.xs0 + t + r.xs1 + r.xn1 + r.xs2;
                            else if (3 === n)
                              r.t[r.p] =
                                r.xs0 +
                                t +
                                r.xs1 +
                                r.xn1 +
                                r.xs2 +
                                r.xn2 +
                                r.xs3;
                            else if (4 === n)
                              r.t[r.p] =
                                r.xs0 +
                                t +
                                r.xs1 +
                                r.xn1 +
                                r.xs2 +
                                r.xn2 +
                                r.xs3 +
                                r.xn3 +
                                r.xs4;
                            else if (5 === n)
                              r.t[r.p] =
                                r.xs0 +
                                t +
                                r.xs1 +
                                r.xn1 +
                                r.xs2 +
                                r.xn2 +
                                r.xs3 +
                                r.xn3 +
                                r.xs4 +
                                r.xn4 +
                                r.xs5;
                            else {
                              for (i = r.xs0 + t + r.xs1, n = 1; n < r.l; n++)
                                i += r["xn" + n] + r["xs" + (n + 1)];
                              r.t[r.p] = i;
                            }
                          else
                            -1 === r.type
                              ? (r.t[r.p] = r.xs0)
                              : r.setRatio && r.setRatio(e);
                        else r.t[r.p] = t + r.xs0;
                        r = r._next;
                      }
                    else
                      for (; r; )
                        2 !== r.type ? (r.t[r.p] = r.b) : r.setRatio(e),
                          (r = r._next);
                  else
                    for (; r; ) {
                      if (2 !== r.type)
                        if (r.r && -1 !== r.type)
                          if (((t = Math.round(r.s + r.c)), r.type)) {
                            if (1 === r.type) {
                              for (
                                n = r.l, i = r.xs0 + t + r.xs1, n = 1;
                                n < r.l;
                                n++
                              )
                                i += r["xn" + n] + r["xs" + (n + 1)];
                              r.t[r.p] = i;
                            }
                          } else r.t[r.p] = t + r.xs0;
                        else r.t[r.p] = r.e;
                      else r.setRatio(e);
                      r = r._next;
                    }
                }),
                (e._enableTransforms = function (e) {
                  (this._transform =
                    this._transform || Ve(this._target, S, !0)),
                    (this._transformType =
                      (this._transform.svg && Ae) ||
                      (!e && 3 !== this._transformType)
                        ? 2
                        : 3);
                });
              function Ze(e) {
                (this.t[this.p] = this.e),
                  this.data._linkCSSP(this, this._next, null, !0);
              }
              (e._addLazySet = function (e, t, i) {
                t = this._firstPT = new _e(e, t, 0, 0, this._firstPT, 2);
                (t.e = i), (t.setRatio = Ze), (t.data = this);
              }),
                (e._linkCSSP = function (e, t, i, n) {
                  return (
                    e &&
                      (t && (t._prev = e),
                      e._next && (e._next._prev = e._prev),
                      e._prev
                        ? (e._prev._next = e._next)
                        : this._firstPT === e &&
                          ((this._firstPT = e._next), (n = !0)),
                      i
                        ? (i._next = e)
                        : n || null !== this._firstPT || (this._firstPT = e),
                      (e._next = t),
                      (e._prev = i)),
                    e
                  );
                }),
                (e._mod = function (e) {
                  for (var t = this._firstPT; t; )
                    "function" == typeof e[t.p] &&
                      e[t.p] === Math.round &&
                      (t.r = 1),
                      (t = t._next);
                }),
                (e._kill = function (e) {
                  var t,
                    i,
                    n,
                    r = e;
                  if (e.autoAlpha || e.alpha) {
                    for (i in ((r = {}), e)) r[i] = e[i];
                    (r.opacity = 1), r.autoAlpha && (r.visibility = 1);
                  }
                  for (
                    e.className &&
                      (t = this._classNamePT) &&
                      ((n = t.xfirst) && n._prev
                        ? this._linkCSSP(n._prev, t._next, n._prev._prev)
                        : n === this._firstPT && (this._firstPT = t._next),
                      t._next &&
                        this._linkCSSP(t._next, t._next._next, n._prev),
                      (this._classNamePT = null)),
                      t = this._firstPT;
                    t;

                  )
                    t.plugin &&
                      t.plugin !== i &&
                      t.plugin._kill &&
                      (t.plugin._kill(e), (i = t.plugin)),
                      (t = t._next);
                  return o.prototype._kill.call(this, r);
                });
              var Je = function (e, t, i) {
                var n, r, o, a;
                if (e.slice) for (r = e.length; -1 < --r; ) Je(e[r], t, i);
                else
                  for (r = (n = e.childNodes).length; -1 < --r; )
                    (a = (o = n[r]).type),
                      o.style && (t.push(m(o)), i && i.push(o)),
                      (1 !== a && 9 !== a && 11 !== a) ||
                        !o.childNodes.length ||
                        Je(o, t, i);
              };
              return (
                (R.cascadeTo = function (e, t, i) {
                  var n,
                    r,
                    o,
                    a,
                    s = P.to(e, t, i),
                    l = [s],
                    c = [],
                    h = [],
                    u = [],
                    d = P._internals.reservedProps;
                  for (
                    e = s._targets || s.target,
                      Je(e, c, u),
                      s.render(t, !0, !0),
                      Je(e, h),
                      s.render(0, !0, !0),
                      s._enabled(!0),
                      n = u.length;
                    -1 < --n;

                  )
                    if ((r = g(u[n], c[n], h[n])).firstMPT) {
                      for (o in ((r = r.difs), i)) d[o] && (r[o] = i[o]);
                      for (o in ((a = {}), r)) a[o] = c[n][o];
                      l.push(P.fromTo(u[n], t, a, r));
                    }
                  return l;
                }),
                o.activate([R]),
                R
              );
            },
            !0
          ),
          ((e = (e = $e._gsDefine.plugin({
            propName: "roundProps",
            version: "1.6.0",
            priority: -1,
            API: 2,
            init: function (e, t, i) {
              return (this._tween = i), !0;
            },
          })).prototype)._onInitAllProps = function () {
            for (
              var e,
                t,
                i,
                n = this._tween,
                r = n.vars.roundProps.join
                  ? n.vars.roundProps
                  : n.vars.roundProps.split(","),
                o = r.length,
                a = {},
                s = n._propLookup.roundProps;
              -1 < --o;

            )
              a[r[o]] = Math.round;
            for (o = r.length; -1 < --o; )
              for (e = r[o], t = n._firstPT; t; )
                (i = t._next),
                  t.pg
                    ? t.t._mod(a)
                    : t.n === e &&
                      (2 === t.f && t.t
                        ? (function (e) {
                            for (; e; )
                              e.f || e.blob || (e.m = Math.round),
                                (e = e._next);
                          })(t.t._firstPT)
                        : (this._add(t.t, e, t.s, t.c),
                          i && (i._prev = t._prev),
                          t._prev
                            ? (t._prev._next = i)
                            : n._firstPT === t && (n._firstPT = i),
                          (t._next = t._prev = null),
                          (n._propLookup[e] = s))),
                  (t = i);
            return !1;
          }),
          (e._add = function (e, t, i, n) {
            this._addTween(e, t, i, i + n, t, Math.round),
              this._overwriteProps.push(t);
          }),
          $e._gsDefine.plugin({
            propName: "attr",
            API: 2,
            version: "0.6.0",
            init: function (e, t, i, n) {
              var r, o;
              if ("function" != typeof e.setAttribute) return !1;
              for (r in t)
                "function" == typeof (o = t[r]) && (o = o(n, e)),
                  this._addTween(
                    e,
                    "setAttribute",
                    e.getAttribute(r) + "",
                    o + "",
                    r,
                    !1,
                    r
                  ),
                  this._overwriteProps.push(r);
              return !0;
            },
          }),
          ($e._gsDefine.plugin({
            propName: "directionalRotation",
            version: "0.3.0",
            API: 2,
            init: function (e, t, i, n) {
              "object" != typeof t && (t = { rotation: t }), (this.finals = {});
              var r,
                o,
                a,
                s,
                l,
                c = !0 === t.useRadians ? 2 * Math.PI : 360;
              for (r in t)
                "useRadians" !== r &&
                  ("function" == typeof (s = t[r]) && (s = s(n, e)),
                  (o = (l = (s + "").split("_"))[0]),
                  (a = parseFloat(
                    "function" != typeof e[r]
                      ? e[r]
                      : e[
                          r.indexOf("set") ||
                          "function" != typeof e["get" + r.substr(3)]
                            ? r
                            : "get" + r.substr(3)
                        ]()
                  )),
                  (s =
                    (s = this.finals[r] =
                      "string" == typeof o && "=" === o.charAt(1)
                        ? a +
                          parseInt(o.charAt(0) + "1", 10) * Number(o.substr(2))
                        : Number(o) || 0) - a),
                  l.length &&
                    (-1 !== (o = l.join("_")).indexOf("short") &&
                      (s %= c) !== s % (c / 2) &&
                      (s = s < 0 ? s + c : s - c),
                    -1 !== o.indexOf("_cw") && s < 0
                      ? (s = ((s + 9999999999 * c) % c) - ((s / c) | 0) * c)
                      : -1 !== o.indexOf("ccw") &&
                        0 < s &&
                        (s = ((s - 9999999999 * c) % c) - ((s / c) | 0) * c)),
                  (1e-6 < s || s < -1e-6) &&
                    (this._addTween(e, r, a, a + s, r),
                    this._overwriteProps.push(r)));
              return !0;
            },
            set: function (e) {
              var t;
              if (1 !== e) this._super.setRatio.call(this, e);
              else
                for (t = this._firstPT; t; )
                  t.f
                    ? t.t[t.p](this.finals[t.p])
                    : (t.t[t.p] = this.finals[t.p]),
                    (t = t._next);
            },
          })._autoCSS = !0),
          $e._gsDefine(
            "easing.Back",
            ["easing.Ease"],
            function (g) {
              function e(e, t) {
                var i = l("easing." + e, function () {}, !0);
                return (
                  ((e = i.prototype = new g()).constructor = i),
                  (e.getRatio = t),
                  i
                );
              }
              function t(e, t, i, n, r) {
                return (
                  (n = l(
                    "easing." + e,
                    { easeOut: new t(), easeIn: new i(), easeInOut: new n() },
                    !0
                  )),
                  c(n, e),
                  n
                );
              }
              function v(e, t, i) {
                (this.t = e),
                  (this.v = t),
                  i &&
                    ((((this.next = i).prev = this).c = i.v - t),
                    (this.gap = i.t - e));
              }
              var i,
                n,
                r = $e.GreenSockGlobals || $e,
                o = r.com.greensock,
                a = 2 * Math.PI,
                s = Math.PI / 2,
                l = o._class,
                c = g.register || function () {},
                h = function (e, t) {
                  var i = l(
                      "easing." + e,
                      function (e) {
                        (this._p1 = e || 0 === e ? e : 1.70158),
                          (this._p2 = 1.525 * this._p1);
                      },
                      !0
                    ),
                    e = (i.prototype = new g());
                  return (
                    (e.constructor = i),
                    (e.getRatio = t),
                    (e.config = function (e) {
                      return new i(e);
                    }),
                    i
                  );
                },
                o = t(
                  "Back",
                  h("BackOut", function (e) {
                    return --e * e * ((this._p1 + 1) * e + this._p1) + 1;
                  }),
                  h("BackIn", function (e) {
                    return e * e * ((this._p1 + 1) * e - this._p1);
                  }),
                  h("BackInOut", function (e) {
                    return (e *= 2) < 1
                      ? 0.5 * e * e * ((this._p2 + 1) * e - this._p2)
                      : 0.5 *
                          ((e -= 2) * e * ((this._p2 + 1) * e + this._p2) + 2);
                  })
                ),
                u = l(
                  "easing.SlowMo",
                  function (e, t, i) {
                    (t = t || 0 === t ? t : 0.7),
                      null == e ? (e = 0.7) : 1 < e && (e = 1),
                      (this._p = 1 !== e ? t : 0),
                      (this._p1 = (1 - e) / 2),
                      (this._p2 = e),
                      (this._p3 = this._p1 + this._p2),
                      (this._calcEnd = !0 === i);
                  },
                  !0
                ),
                h = (u.prototype = new g());
              return (
                (h.constructor = u),
                (h.getRatio = function (e) {
                  var t = e + (0.5 - e) * this._p;
                  return e < this._p1
                    ? this._calcEnd
                      ? 1 - (e = 1 - e / this._p1) * e
                      : t - (e = 1 - e / this._p1) * e * e * e * t
                    : e > this._p3
                    ? this._calcEnd
                      ? 1 - (e = (e - this._p3) / this._p1) * e
                      : t +
                        (e - t) * (e = (e - this._p3) / this._p1) * e * e * e
                    : this._calcEnd
                    ? 1
                    : t;
                }),
                (u.ease = new u(0.7, 0.7)),
                (h.config = u.config =
                  function (e, t, i) {
                    return new u(e, t, i);
                  }),
                ((h = (i = l(
                  "easing.SteppedEase",
                  function (e) {
                    (e = e || 1), (this._p1 = 1 / e), (this._p2 = e + 1);
                  },
                  !0
                )).prototype =
                  new g()).constructor = i),
                (h.getRatio = function (e) {
                  return (
                    e < 0 ? (e = 0) : 1 <= e && (e = 0.999999999),
                    ((this._p2 * e) >> 0) * this._p1
                  );
                }),
                (h.config = i.config =
                  function (e) {
                    return new i(e);
                  }),
                ((h = (n = l(
                  "easing.RoughEase",
                  function (e) {
                    for (
                      var t,
                        i,
                        n,
                        r,
                        o,
                        a,
                        s = (e = e || {}).taper || "none",
                        l = [],
                        c = 0,
                        h = 0 | (e.points || 20),
                        u = h,
                        d = !1 !== e.randomize,
                        p = !0 === e.clamp,
                        f = e.template instanceof g ? e.template : null,
                        m =
                          "number" == typeof e.strength
                            ? 0.4 * e.strength
                            : 0.4;
                      -1 < --u;

                    )
                      (t = d ? Math.random() : (1 / h) * u),
                        (i = f ? f.getRatio(t) : t),
                        (n =
                          "none" === s
                            ? m
                            : "out" === s
                            ? (r = 1 - t) * r * m
                            : "in" === s
                            ? t * t * m
                            : t < 0.5
                            ? (r = 2 * t) * r * 0.5 * m
                            : (r = 2 * (1 - t)) * r * 0.5 * m),
                        d
                          ? (i += Math.random() * n - 0.5 * n)
                          : u % 2
                          ? (i += 0.5 * n)
                          : (i -= 0.5 * n),
                        p && (1 < i ? (i = 1) : i < 0 && (i = 0)),
                        (l[c++] = { x: t, y: i });
                    for (
                      l.sort(function (e, t) {
                        return e.x - t.x;
                      }),
                        a = new v(1, 1, null),
                        u = h;
                      -1 < --u;

                    )
                      (o = l[u]), (a = new v(o.x, o.y, a));
                    this._prev = new v(0, 0, 0 !== a.t ? a : a.next);
                  },
                  !0
                )).prototype =
                  new g()).constructor = n),
                (h.getRatio = function (e) {
                  var t = this._prev;
                  if (e > t.t) {
                    for (; t.next && e >= t.t; ) t = t.next;
                    t = t.prev;
                  } else for (; t.prev && e <= t.t; ) t = t.prev;
                  return (this._prev = t).v + ((e - t.t) / t.gap) * t.c;
                }),
                (h.config = function (e) {
                  return new n(e);
                }),
                (n.ease = new n()),
                t(
                  "Bounce",
                  e("BounceOut", function (e) {
                    return e < 1 / 2.75
                      ? 7.5625 * e * e
                      : e < 2 / 2.75
                      ? 7.5625 * (e -= 1.5 / 2.75) * e + 0.75
                      : e < 2.5 / 2.75
                      ? 7.5625 * (e -= 2.25 / 2.75) * e + 0.9375
                      : 7.5625 * (e -= 2.625 / 2.75) * e + 0.984375;
                  }),
                  e("BounceIn", function (e) {
                    return (e = 1 - e) < 1 / 2.75
                      ? 1 - 7.5625 * e * e
                      : e < 2 / 2.75
                      ? 1 - (7.5625 * (e -= 1.5 / 2.75) * e + 0.75)
                      : e < 2.5 / 2.75
                      ? 1 - (7.5625 * (e -= 2.25 / 2.75) * e + 0.9375)
                      : 1 - (7.5625 * (e -= 2.625 / 2.75) * e + 0.984375);
                  }),
                  e("BounceInOut", function (e) {
                    var t = e < 0.5;
                    return (
                      (e = t ? 1 - 2 * e : 2 * e - 1) < 1 / 2.75
                        ? (e *= 7.5625 * e)
                        : (e =
                            e < 2 / 2.75
                              ? 7.5625 * (e -= 1.5 / 2.75) * e + 0.75
                              : e < 2.5 / 2.75
                              ? 7.5625 * (e -= 2.25 / 2.75) * e + 0.9375
                              : 7.5625 * (e -= 2.625 / 2.75) * e + 0.984375),
                      t ? 0.5 * (1 - e) : 0.5 * e + 0.5
                    );
                  })
                ),
                t(
                  "Circ",
                  e("CircOut", function (e) {
                    return Math.sqrt(1 - --e * e);
                  }),
                  e("CircIn", function (e) {
                    return -(Math.sqrt(1 - e * e) - 1);
                  }),
                  e("CircInOut", function (e) {
                    return (e *= 2) < 1
                      ? -0.5 * (Math.sqrt(1 - e * e) - 1)
                      : 0.5 * (Math.sqrt(1 - (e -= 2) * e) + 1);
                  })
                ),
                t(
                  "Elastic",
                  (h = function (e, t, i) {
                    var n = l(
                        "easing." + e,
                        function (e, t) {
                          (this._p1 = 1 <= e ? e : 1),
                            (this._p2 = (t || i) / (e < 1 ? e : 1)),
                            (this._p3 =
                              (this._p2 / a) * (Math.asin(1 / this._p1) || 0)),
                            (this._p2 = a / this._p2);
                        },
                        !0
                      ),
                      e = (n.prototype = new g());
                    return (
                      (e.constructor = n),
                      (e.getRatio = t),
                      (e.config = function (e, t) {
                        return new n(e, t);
                      }),
                      n
                    );
                  })(
                    "ElasticOut",
                    function (e) {
                      return (
                        this._p1 *
                          Math.pow(2, -10 * e) *
                          Math.sin((e - this._p3) * this._p2) +
                        1
                      );
                    },
                    0.3
                  ),
                  h(
                    "ElasticIn",
                    function (e) {
                      return -(
                        this._p1 *
                        Math.pow(2, 10 * --e) *
                        Math.sin((e - this._p3) * this._p2)
                      );
                    },
                    0.3
                  ),
                  h(
                    "ElasticInOut",
                    function (e) {
                      return (e *= 2) < 1
                        ? this._p1 *
                            Math.pow(2, 10 * --e) *
                            Math.sin((e - this._p3) * this._p2) *
                            -0.5
                        : this._p1 *
                            Math.pow(2, -10 * --e) *
                            Math.sin((e - this._p3) * this._p2) *
                            0.5 +
                            1;
                    },
                    0.45
                  )
                ),
                t(
                  "Expo",
                  e("ExpoOut", function (e) {
                    return 1 - Math.pow(2, -10 * e);
                  }),
                  e("ExpoIn", function (e) {
                    return Math.pow(2, 10 * (e - 1)) - 0.001;
                  }),
                  e("ExpoInOut", function (e) {
                    return (e *= 2) < 1
                      ? 0.5 * Math.pow(2, 10 * (e - 1))
                      : 0.5 * (2 - Math.pow(2, -10 * (e - 1)));
                  })
                ),
                t(
                  "Sine",
                  e("SineOut", function (e) {
                    return Math.sin(e * s);
                  }),
                  e("SineIn", function (e) {
                    return 1 - Math.cos(e * s);
                  }),
                  e("SineInOut", function (e) {
                    return -0.5 * (Math.cos(Math.PI * e) - 1);
                  })
                ),
                l(
                  "easing.EaseLookup",
                  {
                    find: function (e) {
                      return g.map[e];
                    },
                  },
                  !0
                ),
                c(r.SlowMo, "SlowMo", "ease,"),
                c(n, "RoughEase", "ease,"),
                c(i, "SteppedEase", "ease,"),
                o
              );
            },
            !0
          );
      }),
        $e._gsDefine && $e._gsQueue.pop()(),
        (function (u, d) {
          "use strict";
          var p = {},
            f = u.document,
            m = (u.GreenSockGlobals = u.GreenSockGlobals || u);
          if (!m.TweenLite) {
            var g,
              t,
              i,
              v = function (e) {
                for (var t = e.split("."), i = m, n = 0; n < t.length; n++)
                  i[t[n]] = i = i[t[n]] || {};
                return i;
              },
              y = v("com.greensock"),
              _ = 1e-10,
              s = function (e) {
                for (var t = [], i = e.length, n = 0; n !== i; t.push(e[n++]));
                return t;
              },
              x = function () {},
              b =
                ((t = Object.prototype.toString),
                (i = t.call([])),
                function (e) {
                  return (
                    null != e &&
                    (e instanceof Array ||
                      ("object" == typeof e && !!e.push && t.call(e) === i))
                  );
                }),
              w = {},
              T = function (s, l, c, h) {
                (this.sc = w[s] ? w[s].sc : []),
                  ((w[s] = this).gsClass = null),
                  (this.func = c);
                var u = [];
                (this.check = function (e) {
                  for (var t, i, n, r, o = l.length, a = o; -1 < --o; )
                    (t = w[l[o]] || new T(l[o], [])).gsClass
                      ? ((u[o] = t.gsClass), a--)
                      : e && t.sc.push(this);
                  if (0 === a && c) {
                    if (
                      ((i = (r = ("com.greensock." + s).split(".")).pop()),
                      (n = v(r.join("."))[i] = this.gsClass = c.apply(c, u)),
                      h)
                    )
                      if (
                        ((m[i] = p[i] = n),
                        !(r = void 0 !== ne && ne.exports) && oe(5))
                      )
                        void 0 ===
                          (ae = function () {
                            return n;
                          }.apply(re, [])) || (ne.exports = ae);
                      else if (r)
                        if (s === d)
                          for (o in ((ne.exports = p[d] = n), p)) n[o] = p[o];
                        else p[d] && (p[d][i] = n);
                    for (o = 0; o < this.sc.length; o++) this.sc[o].check();
                  }
                }),
                  this.check(!0);
              },
              n = (u._gsDefine = function (e, t, i, n) {
                return new T(e, t, i, n);
              }),
              S = (y._class = function (e, t, i) {
                return (
                  (t = t || function () {}),
                  n(
                    e,
                    [],
                    function () {
                      return t;
                    },
                    i
                  ),
                  t
                );
              });
            n.globals = m;
            var e,
              r = [0, 0, 1, 1],
              M = S(
                "easing.Ease",
                function (e, t, i, n) {
                  (this._func = e),
                    (this._type = i || 0),
                    (this._power = n || 0),
                    (this._params = t ? r.concat(t) : r);
                },
                !0
              ),
              E = (M.map = {}),
              o = (M.register = function (e, t, i, n) {
                for (
                  var r,
                    o,
                    a,
                    s,
                    l = t.split(","),
                    c = l.length,
                    h = (i || "easeIn,easeOut,easeInOut").split(",");
                  -1 < --c;

                )
                  for (
                    o = l[c],
                      r = n ? S("easing." + o, null, !0) : y.easing[o] || {},
                      a = h.length;
                    -1 < --a;

                  )
                    (s = h[a]),
                      (E[o + "." + s] =
                        E[s + o] =
                        r[s] =
                          e.getRatio ? e : e[s] || new e());
              });
            for (
              (e = M.prototype)._calcEnd = !1,
                e.getRatio = function (e) {
                  if (this._func)
                    return (
                      (this._params[0] = e),
                      this._func.apply(null, this._params)
                    );
                  var t = this._type,
                    i = this._power,
                    n =
                      1 === t
                        ? 1 - e
                        : 2 === t
                        ? e
                        : e < 0.5
                        ? 2 * e
                        : 2 * (1 - e);
                  return (
                    1 === i
                      ? (n *= n)
                      : 2 === i
                      ? (n *= n * n)
                      : 3 === i
                      ? (n *= n * n * n)
                      : 4 === i && (n *= n * n * n * n),
                    1 === t ? 1 - n : 2 === t ? n : e < 0.5 ? n / 2 : 1 - n / 2
                  );
                },
                l = (a = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"])
                  .length;
              -1 < --l;

            )
              (e = a[l] + ",Power" + l),
                o(new M(null, null, 1, l), e, "easeOut", !0),
                o(
                  new M(null, null, 2, l),
                  e,
                  "easeIn" + (0 === l ? ",easeNone" : "")
                ),
                o(new M(null, null, 3, l), e, "easeInOut");
            (E.linear = y.easing.Linear.easeIn),
              (E.swing = y.easing.Quad.easeInOut);
            var A = S("events.EventDispatcher", function (e) {
              (this._listeners = {}), (this._eventTarget = e || this);
            });
            ((e = A.prototype).addEventListener = function (e, t, i, n, r) {
              r = r || 0;
              var o,
                a,
                s = this._listeners[e],
                l = 0;
              for (
                this !== O || g || O.wake(),
                  null == s && (this._listeners[e] = s = []),
                  a = s.length;
                -1 < --a;

              )
                (o = s[a]).c === t && o.s === i
                  ? s.splice(a, 1)
                  : 0 === l && o.pr < r && (l = a + 1);
              s.splice(l, 0, { c: t, s: i, up: n, pr: r });
            }),
              (e.removeEventListener = function (e, t) {
                var i,
                  n = this._listeners[e];
                if (n)
                  for (i = n.length; -1 < --i; )
                    if (n[i].c === t) return void n.splice(i, 1);
              }),
              (e.dispatchEvent = function (e) {
                var t,
                  i,
                  n,
                  r = this._listeners[e];
                if (r)
                  for (
                    1 < (t = r.length) && (r = r.slice(0)),
                      i = this._eventTarget;
                    -1 < --t;

                  )
                    (n = r[t]) &&
                      (n.up
                        ? n.c.call(n.s || i, { type: e, target: i })
                        : n.c.call(n.s || i));
              });
            for (
              var a,
                L = u.requestAnimationFrame,
                C = u.cancelAnimationFrame,
                P =
                  Date.now ||
                  function () {
                    return new Date().getTime();
                  },
                R = P(),
                l = (a = ["ms", "moz", "webkit", "o"]).length;
              -1 < --l && !L;

            )
              (L = u[a[l] + "RequestAnimationFrame"]),
                (C =
                  u[a[l] + "CancelAnimationFrame"] ||
                  u[a[l] + "CancelRequestAnimationFrame"]);
            S("Ticker", function (e, t) {
              var n,
                r,
                o,
                a,
                s,
                l = this,
                c = P(),
                i = !(!1 === t || !L) && "auto",
                h = 500,
                u = 33,
                d = function (e) {
                  var t,
                    i = P() - R;
                  h < i && (c += i - u),
                    (R += i),
                    (l.time = (R - c) / 1e3),
                    (i = l.time - s),
                    (!n || 0 < i || !0 === e) &&
                      (l.frame++,
                      (s += i + (a <= i ? 0.004 : a - i)),
                      (t = !0)),
                    !0 !== e && (o = r(d)),
                    t && l.dispatchEvent("tick");
                };
              A.call(l),
                (l.time = l.frame = 0),
                (l.tick = function () {
                  d(!0);
                }),
                (l.lagSmoothing = function (e, t) {
                  (h = e || 1e10), (u = Math.min(t, h, 0));
                }),
                (l.sleep = function () {
                  null != o &&
                    ((i && C ? C : clearTimeout)(o),
                    (r = x),
                    (o = null),
                    l === O && (g = !1));
                }),
                (l.wake = function (e) {
                  null !== o
                    ? l.sleep()
                    : e
                    ? (c += -R + (R = P()))
                    : 10 < l.frame && (R = P() - h + 5),
                    (r =
                      0 === n
                        ? x
                        : i && L
                        ? L
                        : function (e) {
                            return setTimeout(e, (1e3 * (s - l.time) + 1) | 0);
                          }),
                    l === O && (g = !0),
                    d(2);
                }),
                (l.fps = function (e) {
                  if (!arguments.length) return n;
                  (a = 1 / ((n = e) || 60)), (s = this.time + a), l.wake();
                }),
                (l.useRAF = function (e) {
                  if (!arguments.length) return i;
                  l.sleep(), (i = e), l.fps(n);
                }),
                l.fps(e),
                setTimeout(function () {
                  "auto" === i &&
                    l.frame < 5 &&
                    "hidden" !== f.visibilityState &&
                    l.useRAF(!1);
                }, 1500);
            }),
              ((e = y.Ticker.prototype =
                new y.events.EventDispatcher()).constructor = y.Ticker);
            var c = S("core.Animation", function (e, t) {
                (this.vars = t = t || {}),
                  (this._duration = this._totalDuration = e || 0),
                  (this._delay = Number(t.delay) || 0),
                  (this._timeScale = 1),
                  (this._active = !0 === t.immediateRender),
                  (this.data = t.data),
                  (this._reversed = !0 === t.reversed),
                  Q &&
                    (g || O.wake(),
                    (t = this.vars.useFrames ? Y : Q).add(this, t._time),
                    this.vars.paused && this.paused(!0));
              }),
              O = (c.ticker = new y.Ticker());
            ((e = c.prototype)._dirty = e._gc = e._initted = e._paused = !1),
              (e._totalTime = e._time = 0),
              (e._rawPrevTime = -1),
              (e._next =
                e._last =
                e._onUpdate =
                e._timeline =
                e.timeline =
                  null),
              (e._paused = !1);
            var h = function () {
              g && 2e3 < P() - R && O.wake(), setTimeout(h, 2e3);
            };
            h(),
              (e.play = function (e, t) {
                return (
                  null != e && this.seek(e, t), this.reversed(!1).paused(!1)
                );
              }),
              (e.pause = function (e, t) {
                return null != e && this.seek(e, t), this.paused(!0);
              }),
              (e.resume = function (e, t) {
                return null != e && this.seek(e, t), this.paused(!1);
              }),
              (e.seek = function (e, t) {
                return this.totalTime(Number(e), !1 !== t);
              }),
              (e.restart = function (e, t) {
                return this.reversed(!1)
                  .paused(!1)
                  .totalTime(e ? -this._delay : 0, !1 !== t, !0);
              }),
              (e.reverse = function (e, t) {
                return (
                  null != e && this.seek(e || this.totalDuration(), t),
                  this.reversed(!0).paused(!1)
                );
              }),
              (e.render = function (e, t, i) {}),
              (e.invalidate = function () {
                return (
                  (this._time = this._totalTime = 0),
                  (this._initted = this._gc = !1),
                  (this._rawPrevTime = -1),
                  (!this._gc && this.timeline) || this._enabled(!0),
                  this
                );
              }),
              (e.isActive = function () {
                var e,
                  t = this._timeline,
                  i = this._startTime;
                return (
                  !t ||
                  (!this._gc &&
                    !this._paused &&
                    t.isActive() &&
                    (e = t.rawTime(!0)) >= i &&
                    e < i + this.totalDuration() / this._timeScale)
                );
              }),
              (e._enabled = function (e, t) {
                return (
                  g || O.wake(),
                  (this._gc = !e),
                  (this._active = this.isActive()),
                  !0 !== t &&
                    (e && !this.timeline
                      ? this._timeline.add(this, this._startTime - this._delay)
                      : !e &&
                        this.timeline &&
                        this._timeline._remove(this, !0)),
                  !1
                );
              }),
              (e._kill = function (e, t) {
                return this._enabled(!1, !1);
              }),
              (e.kill = function (e, t) {
                return this._kill(e, t), this;
              }),
              (e._uncache = function (e) {
                for (var t = e ? this : this.timeline; t; )
                  (t._dirty = !0), (t = t.timeline);
                return this;
              }),
              (e._swapSelfInParams = function (e) {
                for (var t = e.length, i = e.concat(); -1 < --t; )
                  "{self}" === e[t] && (i[t] = this);
                return i;
              }),
              (e._callback = function (e) {
                var t = this.vars,
                  i = t[e],
                  n = t[e + "Params"],
                  r = t[e + "Scope"] || t.callbackScope || this;
                switch (n ? n.length : 0) {
                  case 0:
                    i.call(r);
                    break;
                  case 1:
                    i.call(r, n[0]);
                    break;
                  case 2:
                    i.call(r, n[0], n[1]);
                    break;
                  default:
                    i.apply(r, n);
                }
              }),
              (e.eventCallback = function (e, t, i, n) {
                if ("on" === (e || "").substr(0, 2)) {
                  var r = this.vars;
                  if (1 === arguments.length) return r[e];
                  null == t
                    ? delete r[e]
                    : ((r[e] = t),
                      (r[e + "Params"] =
                        b(i) && -1 !== i.join("").indexOf("{self}")
                          ? this._swapSelfInParams(i)
                          : i),
                      (r[e + "Scope"] = n)),
                    "onUpdate" === e && (this._onUpdate = t);
                }
                return this;
              }),
              (e.delay = function (e) {
                return arguments.length
                  ? (this._timeline.smoothChildTiming &&
                      this.startTime(this._startTime + e - this._delay),
                    (this._delay = e),
                    this)
                  : this._delay;
              }),
              (e.duration = function (e) {
                return arguments.length
                  ? ((this._duration = this._totalDuration = e),
                    this._uncache(!0),
                    this._timeline.smoothChildTiming &&
                      0 < this._time &&
                      this._time < this._duration &&
                      0 !== e &&
                      this.totalTime(
                        this._totalTime * (e / this._duration),
                        !0
                      ),
                    this)
                  : ((this._dirty = !1), this._duration);
              }),
              (e.totalDuration = function (e) {
                return (
                  (this._dirty = !1),
                  arguments.length ? this.duration(e) : this._totalDuration
                );
              }),
              (e.time = function (e, t) {
                return arguments.length
                  ? (this._dirty && this.totalDuration(),
                    this.totalTime(e > this._duration ? this._duration : e, t))
                  : this._time;
              }),
              (e.totalTime = function (e, t, i) {
                if ((g || O.wake(), !arguments.length)) return this._totalTime;
                if (this._timeline) {
                  if (
                    (e < 0 && !i && (e += this.totalDuration()),
                    this._timeline.smoothChildTiming)
                  ) {
                    this._dirty && this.totalDuration();
                    var n = this._totalDuration,
                      r = this._timeline;
                    if (
                      (n < e && !i && (e = n),
                      (this._startTime =
                        (this._paused ? this._pauseTime : r._time) -
                        (this._reversed ? n - e : e) / this._timeScale),
                      r._dirty || this._uncache(!1),
                      r._timeline)
                    )
                      for (; r._timeline; )
                        r._timeline._time !==
                          (r._startTime + r._totalTime) / r._timeScale &&
                          r.totalTime(r._totalTime, !0),
                          (r = r._timeline);
                  }
                  this._gc && this._enabled(!0, !1),
                    (this._totalTime === e && 0 !== this._duration) ||
                      (F.length && J(), this.render(e, t, !1), F.length && J());
                }
                return this;
              }),
              (e.progress = e.totalProgress =
                function (e, t) {
                  var i = this.duration();
                  return arguments.length
                    ? this.totalTime(i * e, t)
                    : i
                    ? this._time / i
                    : this.ratio;
                }),
              (e.startTime = function (e) {
                return arguments.length
                  ? (e !== this._startTime &&
                      ((this._startTime = e),
                      this.timeline &&
                        this.timeline._sortChildren &&
                        this.timeline.add(this, e - this._delay)),
                    this)
                  : this._startTime;
              }),
              (e.endTime = function (e) {
                return (
                  this._startTime +
                  (0 != e ? this.totalDuration() : this.duration()) /
                    this._timeScale
                );
              }),
              (e.timeScale = function (e) {
                return arguments.length
                  ? ((e = e || _),
                    this._timeline &&
                      this._timeline.smoothChildTiming &&
                      ((t =
                        (t = this._pauseTime) || 0 === t
                          ? t
                          : this._timeline.totalTime()),
                      (this._startTime =
                        t - ((t - this._startTime) * this._timeScale) / e)),
                    (this._timeScale = e),
                    this._uncache(!1))
                  : this._timeScale;
                var t;
              }),
              (e.reversed = function (e) {
                return arguments.length
                  ? (e != this._reversed &&
                      ((this._reversed = e),
                      this.totalTime(
                        this._timeline && !this._timeline.smoothChildTiming
                          ? this.totalDuration() - this._totalTime
                          : this._totalTime,
                        !0
                      )),
                    this)
                  : this._reversed;
              }),
              (e.paused = function (e) {
                if (!arguments.length) return this._paused;
                var t,
                  i,
                  n = this._timeline;
                return (
                  e != this._paused &&
                    n &&
                    (g || e || O.wake(),
                    (i = (t = n.rawTime()) - this._pauseTime),
                    !e &&
                      n.smoothChildTiming &&
                      ((this._startTime += i), this._uncache(!1)),
                    (this._pauseTime = e ? t : null),
                    (this._paused = e),
                    (this._active = this.isActive()),
                    !e &&
                      0 != i &&
                      this._initted &&
                      this.duration() &&
                      ((t = n.smoothChildTiming
                        ? this._totalTime
                        : (t - this._startTime) / this._timeScale),
                      this.render(t, t === this._totalTime, !0))),
                  this._gc && !e && this._enabled(!0, !1),
                  this
                );
              });
            var I = S("core.SimpleTimeline", function (e) {
              c.call(this, 0, e),
                (this.autoRemoveChildren = this.smoothChildTiming = !0);
            });
            ((e = I.prototype = new c()).constructor = I),
              (e.kill()._gc = !1),
              (e._first = e._last = e._recent = null),
              (e._sortChildren = !1),
              (e.add = e.insert =
                function (e, t, i, n) {
                  var r, o;
                  if (
                    ((e._startTime = Number(t || 0) + e._delay),
                    e._paused &&
                      this !== e._timeline &&
                      (e._pauseTime =
                        e._startTime +
                        (this.rawTime() - e._startTime) / e._timeScale),
                    e.timeline && e.timeline._remove(e, !0),
                    (e.timeline = e._timeline = this),
                    e._gc && e._enabled(!0, !0),
                    (r = this._last),
                    this._sortChildren)
                  )
                    for (o = e._startTime; r && r._startTime > o; ) r = r._prev;
                  return (
                    r
                      ? ((e._next = r._next), (r._next = e))
                      : ((e._next = this._first), (this._first = e)),
                    e._next ? (e._next._prev = e) : (this._last = e),
                    (e._prev = r),
                    (this._recent = e),
                    this._timeline && this._uncache(!0),
                    this
                  );
                }),
              (e._remove = function (e, t) {
                return (
                  e.timeline === this &&
                    (t || e._enabled(!1, !0),
                    e._prev
                      ? (e._prev._next = e._next)
                      : this._first === e && (this._first = e._next),
                    e._next
                      ? (e._next._prev = e._prev)
                      : this._last === e && (this._last = e._prev),
                    (e._next = e._prev = e.timeline = null),
                    e === this._recent && (this._recent = this._last),
                    this._timeline && this._uncache(!0)),
                  this
                );
              }),
              (e.render = function (e, t, i) {
                var n,
                  r = this._first;
                for (this._totalTime = this._time = this._rawPrevTime = e; r; )
                  (n = r._next),
                    (r._active || (e >= r._startTime && !r._paused)) &&
                      (r._reversed
                        ? r.render(
                            (r._dirty ? r.totalDuration() : r._totalDuration) -
                              (e - r._startTime) * r._timeScale,
                            t,
                            i
                          )
                        : r.render((e - r._startTime) * r._timeScale, t, i)),
                    (r = n);
              }),
              (e.rawTime = function () {
                return g || O.wake(), this._totalTime;
              });
            var D = S(
                "TweenLite",
                function (e, t, i) {
                  if (
                    (c.call(this, t, i),
                    (this.render = D.prototype.render),
                    null == e)
                  )
                    throw "Cannot tween a null target.";
                  this.target = e =
                    ("string" == typeof e && D.selector(e)) || e;
                  var n,
                    r,
                    o,
                    i =
                      e.jquery ||
                      (e.length &&
                        e !== u &&
                        e[0] &&
                        (e[0] === u ||
                          (e[0].nodeType && e[0].style && !e.nodeType))),
                    a = this.vars.overwrite;
                  if (
                    ((this._overwrite = a =
                      null == a
                        ? q[D.defaultOverwrite]
                        : "number" == typeof a
                        ? a >> 0
                        : q[a]),
                    (i || e instanceof Array || (e.push && b(e))) &&
                      "number" != typeof e[0])
                  )
                    for (
                      this._targets = o = s(e),
                        this._propLookup = [],
                        this._siblings = [],
                        n = 0;
                      n < o.length;
                      n++
                    )
                      (r = o[n])
                        ? "string" != typeof r
                          ? r.length &&
                            r !== u &&
                            r[0] &&
                            (r[0] === u ||
                              (r[0].nodeType && r[0].style && !r.nodeType))
                            ? (o.splice(n--, 1),
                              (this._targets = o = o.concat(s(r))))
                            : ((this._siblings[n] = $(r, this, !1)),
                              1 === a &&
                                1 < this._siblings[n].length &&
                                ee(r, this, null, 1, this._siblings[n]))
                          : "string" == typeof (r = o[n--] = D.selector(r)) &&
                            o.splice(n + 1, 1)
                        : o.splice(n--, 1);
                  else
                    (this._propLookup = {}),
                      (this._siblings = $(e, this, !1)),
                      1 === a &&
                        1 < this._siblings.length &&
                        ee(e, this, null, 1, this._siblings);
                  (this.vars.immediateRender ||
                    (0 === t &&
                      0 === this._delay &&
                      !1 !== this.vars.immediateRender)) &&
                    ((this._time = -_), this.render(Math.min(0, -this._delay)));
                },
                !0
              ),
              N = function (e) {
                return (
                  e &&
                  e.length &&
                  e !== u &&
                  e[0] &&
                  (e[0] === u || (e[0].nodeType && e[0].style && !e.nodeType))
                );
              };
            ((e = D.prototype = new c()).constructor = D),
              (e.kill()._gc = !1),
              (e.ratio = 0),
              (e._firstPT =
                e._targets =
                e._overwrittenProps =
                e._startAt =
                  null),
              (e._notifyPluginsOfEnabled = e._lazy = !1),
              (D.version = "1.19.1"),
              (D.defaultEase = e._ease = new M(null, null, 1, 1)),
              (D.defaultOverwrite = "auto"),
              (D.ticker = O),
              (D.autoSleep = 120),
              (D.lagSmoothing = function (e, t) {
                O.lagSmoothing(e, t);
              }),
              (D.selector =
                u.$ ||
                u.jQuery ||
                function (e) {
                  var t = u.$ || u.jQuery;
                  return t
                    ? (D.selector = t)(e)
                    : void 0 === f
                    ? e
                    : f.querySelectorAll
                    ? f.querySelectorAll(e)
                    : f.getElementById("#" === e.charAt(0) ? e.substr(1) : e);
                });
            var F = [],
              k = {},
              U = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,
              B = function (e) {
                for (var t, i = this._firstPT; i; )
                  (t = i.blob
                    ? 1 === e
                      ? this.end
                      : e
                      ? this.join("")
                      : this.start
                    : i.c * e + i.s),
                    i.m
                      ? (t = i.m(t, this._target || i.t))
                      : t < 1e-6 && -1e-6 < t && !i.blob && (t = 0),
                    i.f
                      ? i.fp
                        ? i.t[i.p](i.fp, t)
                        : i.t[i.p](t)
                      : (i.t[i.p] = t),
                    (i = i._next);
              },
              z = function (e, t, i, n) {
                var r,
                  o,
                  a,
                  s,
                  l,
                  c,
                  h = [],
                  u = 0,
                  d = "",
                  p = 0;
                for (
                  h.start = e,
                    h.end = t,
                    e = h[0] = e + "",
                    t = h[1] = t + "",
                    i && (i(h), (e = h[0]), (t = h[1])),
                    h.length = 0,
                    r = e.match(U) || [],
                    o = t.match(U) || [],
                    n &&
                      ((n._next = null),
                      (n.blob = 1),
                      (h._firstPT = h._applyPT = n)),
                    s = o.length,
                    a = 0;
                  a < s;
                  a++
                )
                  (c = o[a]),
                    (d +=
                      (l = t.substr(u, t.indexOf(c, u) - u)) || !a ? l : ","),
                    (u += l.length),
                    p ? (p = (p + 1) % 5) : "rgba(" === l.substr(-5) && (p = 1),
                    c === r[a] || r.length <= a
                      ? (d += c)
                      : (d && (h.push(d), (d = "")),
                        (l = parseFloat(r[a])),
                        h.push(l),
                        (h._firstPT = {
                          _next: h._firstPT,
                          t: h,
                          p: h.length - 1,
                          s: l,
                          c:
                            ("=" === c.charAt(1)
                              ? parseInt(c.charAt(0) + "1", 10) *
                                parseFloat(c.substr(2))
                              : parseFloat(c) - l) || 0,
                          f: 0,
                          m: p && p < 4 ? Math.round : 0,
                        })),
                    (u += c.length);
                return (d += t.substr(u)) && h.push(d), (h.setRatio = B), h;
              },
              j = function (e, t, i, n, r, o, a, s, l) {
                "function" == typeof n && (n = n(l || 0, e));
                var c = typeof e[t],
                  l =
                    "function" != c
                      ? ""
                      : t.indexOf("set") ||
                        "function" != typeof e["get" + t.substr(3)]
                      ? t
                      : "get" + t.substr(3),
                  i = "get" !== i ? i : l ? (a ? e[l](a) : e[l]()) : e[t],
                  l = "string" == typeof n && "=" === n.charAt(1),
                  o = {
                    t: e,
                    p: t,
                    s: i,
                    f: "function" == c,
                    pg: 0,
                    n: r || t,
                    m: o ? ("function" == typeof o ? o : Math.round) : 0,
                    pr: 0,
                    c: l
                      ? parseInt(n.charAt(0) + "1", 10) *
                        parseFloat(n.substr(2))
                      : parseFloat(n) - i || 0,
                  };
                if (
                  (("number" == typeof i && ("number" == typeof n || l)) ||
                    (a ||
                    isNaN(i) ||
                    (!l && isNaN(n)) ||
                    "boolean" == typeof i ||
                    "boolean" == typeof n
                      ? ((o.fp = a),
                        (o = {
                          t: z(
                            i,
                            l ? o.s + o.c : n,
                            s || D.defaultStringFilter,
                            o
                          ),
                          p: "setRatio",
                          s: 0,
                          c: 1,
                          f: 2,
                          pg: 0,
                          n: r || t,
                          pr: 0,
                          m: 0,
                        }))
                      : ((o.s = parseFloat(i)),
                        l || (o.c = parseFloat(n) - o.s || 0))),
                  o.c)
                )
                  return (
                    (o._next = this._firstPT) && (o._next._prev = o),
                    (this._firstPT = o)
                  );
              },
              H = (D._internals = {
                isArray: b,
                isSelector: N,
                lazyTweens: F,
                blobDif: z,
              }),
              G = (D._plugins = {}),
              V = (H.tweenLookup = {}),
              W = 0,
              X = (H.reservedProps = {
                ease: 1,
                delay: 1,
                overwrite: 1,
                onComplete: 1,
                onCompleteParams: 1,
                onCompleteScope: 1,
                useFrames: 1,
                runBackwards: 1,
                startAt: 1,
                onUpdate: 1,
                onUpdateParams: 1,
                onUpdateScope: 1,
                onStart: 1,
                onStartParams: 1,
                onStartScope: 1,
                onReverseComplete: 1,
                onReverseCompleteParams: 1,
                onReverseCompleteScope: 1,
                onRepeat: 1,
                onRepeatParams: 1,
                onRepeatScope: 1,
                easeParams: 1,
                yoyo: 1,
                immediateRender: 1,
                repeat: 1,
                repeatDelay: 1,
                data: 1,
                paused: 1,
                reversed: 1,
                autoCSS: 1,
                lazy: 1,
                onOverwrite: 1,
                callbackScope: 1,
                stringFilter: 1,
                id: 1,
              }),
              q = {
                none: 0,
                all: 1,
                auto: 2,
                concurrent: 3,
                allOnStart: 4,
                preexisting: 5,
                true: 1,
                false: 0,
              },
              Y = (c._rootFramesTimeline = new I()),
              Q = (c._rootTimeline = new I()),
              Z = 30,
              J = (H.lazyRender = function () {
                var e,
                  t = F.length;
                for (k = {}; -1 < --t; )
                  (e = F[t]) &&
                    !1 !== e._lazy &&
                    (e.render(e._lazy[0], e._lazy[1], !0), (e._lazy = !1));
                F.length = 0;
              });
            (Q._startTime = O.time),
              (Y._startTime = O.frame),
              (Q._active = Y._active = !0),
              setTimeout(J, 1),
              (c._updateRoot = D.render =
                function () {
                  var e, t, i;
                  if (
                    (F.length && J(),
                    Q.render((O.time - Q._startTime) * Q._timeScale, !1, !1),
                    Y.render((O.frame - Y._startTime) * Y._timeScale, !1, !1),
                    F.length && J(),
                    O.frame >= Z)
                  ) {
                    for (i in ((Z =
                      O.frame + (parseInt(D.autoSleep, 10) || 120)),
                    V)) {
                      for (e = (t = V[i].tweens).length; -1 < --e; )
                        t[e]._gc && t.splice(e, 1);
                      0 === t.length && delete V[i];
                    }
                    if (
                      ((i = Q._first),
                      (!i || i._paused) &&
                        D.autoSleep &&
                        !Y._first &&
                        1 === O._listeners.tick.length)
                    ) {
                      for (; i && i._paused; ) i = i._next;
                      i || O.sleep();
                    }
                  }
                }),
              O.addEventListener("tick", c._updateRoot);
            var $ = function (e, t, i) {
                var n,
                  r,
                  o = e._gsTweenID;
                if (
                  (V[o || (e._gsTweenID = o = "t" + W++)] ||
                    (V[o] = { target: e, tweens: [] }),
                  t && (((n = V[o].tweens)[(r = n.length)] = t), i))
                )
                  for (; -1 < --r; ) n[r] === t && n.splice(r, 1);
                return V[o].tweens;
              },
              K = function (e, t, i, n) {
                var r,
                  o,
                  a = e.vars.onOverwrite;
                return (
                  a && (r = a(e, t, i, n)),
                  (a = D.onOverwrite) && (o = a(e, t, i, n)),
                  !1 !== r && !1 !== o
                );
              },
              ee = function (e, t, i, n, r) {
                var o, a, s;
                if (1 === n || 4 <= n) {
                  for (s = r.length, p = 0; p < s; p++)
                    if ((a = r[p]) !== t)
                      a._gc || (a._kill(null, e, t) && (o = !0));
                    else if (5 === n) break;
                  return o;
                }
                for (
                  var l,
                    c = t._startTime + _,
                    h = [],
                    u = 0,
                    d = 0 === t._duration,
                    p = r.length;
                  -1 < --p;

                )
                  (a = r[p]) === t ||
                    a._gc ||
                    a._paused ||
                    (a._timeline !== t._timeline
                      ? ((l = l || te(t, 0, d)),
                        0 === te(a, l, d) && (h[u++] = a))
                      : a._startTime <= c &&
                        a._startTime + a.totalDuration() / a._timeScale > c &&
                        (((d || !a._initted) && c - a._startTime <= 2e-10) ||
                          (h[u++] = a)));
                for (p = u; -1 < --p; )
                  (a = h[p]),
                    2 === n && a._kill(i, e, t) && (o = !0),
                    (2 !== n || (!a._firstPT && a._initted)) &&
                      (2 === n || K(a, t)) &&
                      a._enabled(!1, !1) &&
                      (o = !0);
                return o;
              },
              te = function (e, t, i) {
                for (
                  var n = e._timeline, r = n._timeScale, o = e._startTime;
                  n._timeline;

                ) {
                  if (((o += n._startTime), (r *= n._timeScale), n._paused))
                    return -100;
                  n = n._timeline;
                }
                return t < (o /= r)
                  ? o - t
                  : (i && o === t) || (!e._initted && o - t < 2e-10)
                  ? _
                  : (o += e.totalDuration() / e._timeScale / r) > t + _
                  ? 0
                  : o - t - _;
              };
            (e._init = function () {
              var e,
                t,
                i,
                n,
                r,
                o,
                a = this.vars,
                s = this._overwrittenProps,
                l = this._duration,
                c = !!a.immediateRender,
                h = a.ease;
              if (a.startAt) {
                for (n in (this._startAt &&
                  (this._startAt.render(-1, !0), this._startAt.kill()),
                (r = {}),
                a.startAt))
                  r[n] = a.startAt[n];
                if (
                  ((r.overwrite = !1),
                  (r.immediateRender = !0),
                  (r.lazy = c && !1 !== a.lazy),
                  (r.startAt = r.delay = null),
                  (this._startAt = D.to(this.target, 0, r)),
                  c)
                )
                  if (0 < this._time) this._startAt = null;
                  else if (0 !== l) return;
              } else if (a.runBackwards && 0 !== l)
                if (this._startAt)
                  this._startAt.render(-1, !0),
                    this._startAt.kill(),
                    (this._startAt = null);
                else {
                  for (n in (0 !== this._time && (c = !1), (i = {}), a))
                    (X[n] && "autoCSS" !== n) || (i[n] = a[n]);
                  if (
                    ((i.overwrite = 0),
                    (i.data = "isFromStart"),
                    (i.lazy = c && !1 !== a.lazy),
                    (i.immediateRender = c),
                    (this._startAt = D.to(this.target, 0, i)),
                    c)
                  ) {
                    if (0 === this._time) return;
                  } else
                    this._startAt._init(),
                      this._startAt._enabled(!1),
                      this.vars.immediateRender && (this._startAt = null);
                }
              if (
                ((this._ease = h =
                  h
                    ? h instanceof M
                      ? h
                      : "function" == typeof h
                      ? new M(h, a.easeParams)
                      : E[h] || D.defaultEase
                    : D.defaultEase),
                a.easeParams instanceof Array &&
                  h.config &&
                  (this._ease = h.config.apply(h, a.easeParams)),
                (this._easeType = this._ease._type),
                (this._easePower = this._ease._power),
                (this._firstPT = null),
                this._targets)
              )
                for (o = this._targets.length, e = 0; e < o; e++)
                  this._initProps(
                    this._targets[e],
                    (this._propLookup[e] = {}),
                    this._siblings[e],
                    s ? s[e] : null,
                    e
                  ) && (t = !0);
              else
                t = this._initProps(
                  this.target,
                  this._propLookup,
                  this._siblings,
                  s,
                  0
                );
              if (
                (t && D._onPluginEvent("_onInitAllProps", this),
                s &&
                  (this._firstPT ||
                    ("function" != typeof this.target &&
                      this._enabled(!1, !1))),
                a.runBackwards)
              )
                for (i = this._firstPT; i; )
                  (i.s += i.c), (i.c = -i.c), (i = i._next);
              (this._onUpdate = a.onUpdate), (this._initted = !0);
            }),
              (e._initProps = function (e, t, i, n, r) {
                var o, a, s, l, c, h;
                if (null == e) return !1;
                for (o in (k[e._gsTweenID] && J(),
                this.vars.css ||
                  (e.style &&
                    e !== u &&
                    e.nodeType &&
                    G.css &&
                    !1 !== this.vars.autoCSS &&
                    (function (e, t) {
                      var i,
                        n = {};
                      for (i in e)
                        X[i] ||
                          (i in t &&
                            "transform" !== i &&
                            "x" !== i &&
                            "y" !== i &&
                            "width" !== i &&
                            "height" !== i &&
                            "className" !== i &&
                            "border" !== i) ||
                          !(!G[i] || (G[i] && G[i]._autoCSS)) ||
                          ((n[i] = e[i]), delete e[i]);
                      e.css = n;
                    })(this.vars, e)),
                this.vars))
                  if (((h = this.vars[o]), X[o]))
                    h &&
                      (h instanceof Array || (h.push && b(h))) &&
                      -1 !== h.join("").indexOf("{self}") &&
                      (this.vars[o] = h = this._swapSelfInParams(h, this));
                  else if (
                    G[o] &&
                    (l = new G[o]())._onInitTween(e, this.vars[o], this, r)
                  ) {
                    for (
                      this._firstPT = c =
                        {
                          _next: this._firstPT,
                          t: l,
                          p: "setRatio",
                          s: 0,
                          c: 1,
                          f: 1,
                          n: o,
                          pg: 1,
                          pr: l._priority,
                          m: 0,
                        },
                        a = l._overwriteProps.length;
                      -1 < --a;

                    )
                      t[l._overwriteProps[a]] = this._firstPT;
                    (l._priority || l._onInitAllProps) && (s = !0),
                      (l._onDisable || l._onEnable) &&
                        (this._notifyPluginsOfEnabled = !0),
                      c._next && (c._next._prev = c);
                  } else
                    t[o] = j.call(
                      this,
                      e,
                      o,
                      "get",
                      h,
                      o,
                      0,
                      null,
                      this.vars.stringFilter,
                      r
                    );
                return n && this._kill(n, e)
                  ? this._initProps(e, t, i, n, r)
                  : 1 < this._overwrite &&
                    this._firstPT &&
                    1 < i.length &&
                    ee(e, this, t, this._overwrite, i)
                  ? (this._kill(t, e), this._initProps(e, t, i, n, r))
                  : (this._firstPT &&
                      ((!1 !== this.vars.lazy && this._duration) ||
                        (this.vars.lazy && !this._duration)) &&
                      (k[e._gsTweenID] = !0),
                    s);
              }),
              (e.render = function (e, t, i) {
                var n,
                  r,
                  o,
                  a,
                  s,
                  l,
                  c,
                  h = this._time,
                  u = this._duration,
                  d = this._rawPrevTime;
                if (
                  (u - 1e-7 <= e && 0 <= e
                    ? ((this._totalTime = this._time = u),
                      (this.ratio = this._ease._calcEnd
                        ? this._ease.getRatio(1)
                        : 1),
                      this._reversed ||
                        ((n = !0),
                        (r = "onComplete"),
                        (i = i || this._timeline.autoRemoveChildren)),
                      0 === u &&
                        ((!this._initted && this.vars.lazy && !i) ||
                          (this._startTime === this._timeline._duration &&
                            (e = 0),
                          (d < 0 ||
                            (e <= 0 && -1e-7 <= e) ||
                            (d === _ && "isPause" !== this.data)) &&
                            d !== e &&
                            ((i = !0), _ < d && (r = "onReverseComplete")),
                          (this._rawPrevTime = a =
                            !t || e || d === e ? e : _))))
                    : e < 1e-7
                    ? ((this._totalTime = this._time = 0),
                      (this.ratio = this._ease._calcEnd
                        ? this._ease.getRatio(0)
                        : 0),
                      (0 !== h || (0 === u && 0 < d)) &&
                        ((r = "onReverseComplete"), (n = this._reversed)),
                      e < 0 &&
                        ((this._active = !1),
                        0 === u &&
                          ((!this._initted && this.vars.lazy && !i) ||
                            (0 <= d &&
                              (d !== _ || "isPause" !== this.data) &&
                              (i = !0),
                            (this._rawPrevTime = a =
                              !t || e || d === e ? e : _)))),
                      this._initted || (i = !0))
                    : ((this._totalTime = this._time = e),
                      this._easeType
                        ? ((s = e / u),
                          (1 === (l = this._easeType) ||
                            (3 === l && 0.5 <= s)) &&
                            (s = 1 - s),
                          3 === l && (s *= 2),
                          1 === (c = this._easePower)
                            ? (s *= s)
                            : 2 === c
                            ? (s *= s * s)
                            : 3 === c
                            ? (s *= s * s * s)
                            : 4 === c && (s *= s * s * s * s),
                          (this.ratio =
                            1 === l
                              ? 1 - s
                              : 2 === l
                              ? s
                              : e / u < 0.5
                              ? s / 2
                              : 1 - s / 2))
                        : (this.ratio = this._ease.getRatio(e / u))),
                  this._time !== h || i)
                ) {
                  if (!this._initted) {
                    if ((this._init(), !this._initted || this._gc)) return;
                    if (
                      !i &&
                      this._firstPT &&
                      ((!1 !== this.vars.lazy && this._duration) ||
                        (this.vars.lazy && !this._duration))
                    )
                      return (
                        (this._time = this._totalTime = h),
                        (this._rawPrevTime = d),
                        F.push(this),
                        void (this._lazy = [e, t])
                      );
                    this._time && !n
                      ? (this.ratio = this._ease.getRatio(this._time / u))
                      : n &&
                        this._ease._calcEnd &&
                        (this.ratio = this._ease.getRatio(
                          0 === this._time ? 0 : 1
                        ));
                  }
                  for (
                    !1 !== this._lazy && (this._lazy = !1),
                      this._active ||
                        (!this._paused &&
                          this._time !== h &&
                          0 <= e &&
                          (this._active = !0)),
                      0 === h &&
                        (this._startAt &&
                          (0 <= e
                            ? this._startAt.render(e, t, i)
                            : (r = r || "_dummyGS")),
                        this.vars.onStart &&
                          ((0 === this._time && 0 !== u) ||
                            t ||
                            this._callback("onStart"))),
                      o = this._firstPT;
                    o;

                  )
                    o.f
                      ? o.t[o.p](o.c * this.ratio + o.s)
                      : (o.t[o.p] = o.c * this.ratio + o.s),
                      (o = o._next);
                  this._onUpdate &&
                    (e < 0 &&
                      this._startAt &&
                      -1e-4 !== e &&
                      this._startAt.render(e, t, i),
                    t ||
                      ((this._time !== h || n || i) &&
                        this._callback("onUpdate"))),
                    r &&
                      ((this._gc && !i) ||
                        (e < 0 &&
                          this._startAt &&
                          !this._onUpdate &&
                          -1e-4 !== e &&
                          this._startAt.render(e, t, i),
                        n &&
                          (this._timeline.autoRemoveChildren &&
                            this._enabled(!1, !1),
                          (this._active = !1)),
                        !t && this.vars[r] && this._callback(r),
                        0 === u &&
                          this._rawPrevTime === _ &&
                          a !== _ &&
                          (this._rawPrevTime = 0)));
                }
              }),
              (e._kill = function (e, t, i) {
                if (
                  ("all" === e && (e = null),
                  null == e && (null == t || t === this.target))
                )
                  return (this._lazy = !1), this._enabled(!1, !1);
                t =
                  "string" != typeof t
                    ? t || this._targets || this.target
                    : D.selector(t) || t;
                var n,
                  r,
                  o,
                  a,
                  s,
                  l,
                  c,
                  h,
                  u,
                  d =
                    i &&
                    this._time &&
                    i._startTime === this._startTime &&
                    this._timeline === i._timeline;
                if ((b(t) || N(t)) && "number" != typeof t[0])
                  for (n = t.length; -1 < --n; )
                    this._kill(e, t[n], i) && (l = !0);
                else {
                  if (this._targets) {
                    for (n = this._targets.length; -1 < --n; )
                      if (t === this._targets[n]) {
                        (s = this._propLookup[n] || {}),
                          (this._overwrittenProps =
                            this._overwrittenProps || []),
                          (r = this._overwrittenProps[n] =
                            e ? this._overwrittenProps[n] || {} : "all");
                        break;
                      }
                  } else {
                    if (t !== this.target) return !1;
                    (s = this._propLookup),
                      (r = this._overwrittenProps =
                        e ? this._overwrittenProps || {} : "all");
                  }
                  if (s) {
                    if (
                      ((c = e || s),
                      (h =
                        e !== r &&
                        "all" !== r &&
                        e !== s &&
                        ("object" != typeof e || !e._tempKill)),
                      i && (D.onOverwrite || this.vars.onOverwrite))
                    ) {
                      for (o in c) s[o] && (u = u || []).push(o);
                      if ((u || !e) && !K(this, i, t, u)) return !1;
                    }
                    for (o in c)
                      (a = s[o]) &&
                        (d &&
                          (a.f ? a.t[a.p](a.s) : (a.t[a.p] = a.s), (l = !0)),
                        a.pg && a.t._kill(c) && (l = !0),
                        (a.pg && 0 !== a.t._overwriteProps.length) ||
                          (a._prev
                            ? (a._prev._next = a._next)
                            : a === this._firstPT && (this._firstPT = a._next),
                          a._next && (a._next._prev = a._prev),
                          (a._next = a._prev = null)),
                        delete s[o]),
                        h && (r[o] = 1);
                    !this._firstPT && this._initted && this._enabled(!1, !1);
                  }
                }
                return l;
              }),
              (e.invalidate = function () {
                return (
                  this._notifyPluginsOfEnabled &&
                    D._onPluginEvent("_onDisable", this),
                  (this._firstPT =
                    this._overwrittenProps =
                    this._startAt =
                    this._onUpdate =
                      null),
                  (this._notifyPluginsOfEnabled =
                    this._active =
                    this._lazy =
                      !1),
                  (this._propLookup = this._targets ? {} : []),
                  c.prototype.invalidate.call(this),
                  this.vars.immediateRender &&
                    ((this._time = -_), this.render(Math.min(0, -this._delay))),
                  this
                );
              }),
              (e._enabled = function (e, t) {
                if ((g || O.wake(), e && this._gc)) {
                  var i,
                    n = this._targets;
                  if (n)
                    for (i = n.length; -1 < --i; )
                      this._siblings[i] = $(n[i], this, !0);
                  else this._siblings = $(this.target, this, !0);
                }
                return (
                  c.prototype._enabled.call(this, e, t),
                  !(!this._notifyPluginsOfEnabled || !this._firstPT) &&
                    D._onPluginEvent(e ? "_onEnable" : "_onDisable", this)
                );
              }),
              (D.to = function (e, t, i) {
                return new D(e, t, i);
              }),
              (D.from = function (e, t, i) {
                return (
                  (i.runBackwards = !0),
                  (i.immediateRender = 0 != i.immediateRender),
                  new D(e, t, i)
                );
              }),
              (D.fromTo = function (e, t, i, n) {
                return (
                  (n.startAt = i),
                  (n.immediateRender =
                    0 != n.immediateRender && 0 != i.immediateRender),
                  new D(e, t, n)
                );
              }),
              (D.delayedCall = function (e, t, i, n, r) {
                return new D(t, 0, {
                  delay: e,
                  onComplete: t,
                  onCompleteParams: i,
                  callbackScope: n,
                  onReverseComplete: t,
                  onReverseCompleteParams: i,
                  immediateRender: !1,
                  lazy: !1,
                  useFrames: r,
                  overwrite: 0,
                });
              }),
              (D.set = function (e, t) {
                return new D(e, 0, t);
              }),
              (D.getTweensOf = function (e, t) {
                if (null == e) return [];
                var i, n, r, o;
                if (
                  ((e = ("string" == typeof e && D.selector(e)) || e),
                  (b(e) || N(e)) && "number" != typeof e[0])
                ) {
                  for (i = e.length, n = []; -1 < --i; )
                    n = n.concat(D.getTweensOf(e[i], t));
                  for (i = n.length; -1 < --i; )
                    for (o = n[i], r = i; -1 < --r; )
                      o === n[r] && n.splice(i, 1);
                } else
                  for (i = (n = $(e).concat()).length; -1 < --i; )
                    (n[i]._gc || (t && !n[i].isActive())) && n.splice(i, 1);
                return n;
              }),
              (D.killTweensOf = D.killDelayedCallsTo =
                function (e, t, i) {
                  "object" == typeof t && ((i = t), (t = !1));
                  for (var n = D.getTweensOf(e, t), r = n.length; -1 < --r; )
                    n[r]._kill(i, e);
                });
            var ie = S(
              "plugins.TweenPlugin",
              function (e, t) {
                (this._overwriteProps = (e || "").split(",")),
                  (this._propName = this._overwriteProps[0]),
                  (this._priority = t || 0),
                  (this._super = ie.prototype);
              },
              !0
            );
            if (
              ((e = ie.prototype),
              (ie.version = "1.19.0"),
              (ie.API = 2),
              (e._firstPT = null),
              (e._addTween = j),
              (e.setRatio = B),
              (e._kill = function (e) {
                var t,
                  i = this._overwriteProps,
                  n = this._firstPT;
                if (null != e[this._propName]) this._overwriteProps = [];
                else
                  for (t = i.length; -1 < --t; )
                    null != e[i[t]] && i.splice(t, 1);
                for (; n; )
                  null != e[n.n] &&
                    (n._next && (n._next._prev = n._prev),
                    n._prev
                      ? ((n._prev._next = n._next), (n._prev = null))
                      : this._firstPT === n && (this._firstPT = n._next)),
                    (n = n._next);
                return !1;
              }),
              (e._mod = e._roundProps =
                function (e) {
                  for (var t, i = this._firstPT; i; )
                    (t =
                      e[this._propName] ||
                      (null != i.n &&
                        e[i.n.split(this._propName + "_").join("")])) &&
                      "function" == typeof t &&
                      (2 === i.f ? (i.t._applyPT.m = t) : (i.m = t)),
                      (i = i._next);
                }),
              (D._onPluginEvent = function (e, t) {
                var i,
                  n,
                  r,
                  o,
                  a,
                  s = t._firstPT;
                if ("_onInitAllProps" === e) {
                  for (; s; ) {
                    for (a = s._next, n = r; n && n.pr > s.pr; ) n = n._next;
                    (s._prev = n ? n._prev : o) ? (s._prev._next = s) : (r = s),
                      (s._next = n) ? (n._prev = s) : (o = s),
                      (s = a);
                  }
                  s = t._firstPT = r;
                }
                for (; s; )
                  s.pg && "function" == typeof s.t[e] && s.t[e]() && (i = !0),
                    (s = s._next);
                return i;
              }),
              (ie.activate = function (e) {
                for (var t = e.length; -1 < --t; )
                  e[t].API === ie.API && (G[new e[t]()._propName] = e[t]);
                return !0;
              }),
              (n.plugin = function (e) {
                if (!(e && e.propName && e.init && e.API))
                  throw "illegal plugin definition.";
                var t,
                  i = e.propName,
                  n = e.priority || 0,
                  r = e.overwriteProps,
                  o = {
                    init: "_onInitTween",
                    set: "setRatio",
                    kill: "_kill",
                    round: "_mod",
                    mod: "_mod",
                    initAll: "_onInitAllProps",
                  },
                  a = S(
                    "plugins." +
                      i.charAt(0).toUpperCase() +
                      i.substr(1) +
                      "Plugin",
                    function () {
                      ie.call(this, i, n), (this._overwriteProps = r || []);
                    },
                    !0 === e.global
                  ),
                  s = (a.prototype = new ie(i));
                for (t in (((s.constructor = a).API = e.API), o))
                  "function" == typeof e[t] && (s[o[t]] = e[t]);
                return (a.version = e.version), ie.activate([a]), a;
              }),
              (a = u._gsQueue))
            ) {
              for (l = 0; l < a.length; l++) a[l]();
              for (e in w)
                w[e].func ||
                  u.console.log("GSAP encountered missing dependency: " + e);
            }
            g = !1;
          }
        })(
          void 0 !== ne && ne.exports && void 0 !== e ? e : this || window,
          "TweenMax"
        );
    }).call(
      re,
      (function () {
        return this;
      })()
    );
  },
  function (t, e) {
    (function (e) {
      t.exports = e;
    }).call(e, {});
  },
  function (e, t) {
    "use strict";
    var E =
      "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              "function" == typeof Symbol &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          };
    !(function (o, h, d) {
      function p(e, t) {
        return (void 0 === e ? "undefined" : E(e)) === t;
      }
      function f(e) {
        return "function" != typeof h.createElement
          ? h.createElement(e)
          : v
          ? h.createElementNS.call(h, "http://www.w3.org/2000/svg", e)
          : h.createElement.apply(h, arguments);
      }
      function s(e, t, i) {
        var n, r;
        for (r in e)
          if (e[r] in t)
            return !1 === i
              ? e[r]
              : p((n = t[e[r]]), "function")
              ? (function (e, t) {
                  return function () {
                    return e.apply(t, arguments);
                  };
                })(n, i || t)
              : n;
        return !1;
      }
      function r(e) {
        return e
          .replace(/([A-Z])/g, function (e, t) {
            return "-" + t.toLowerCase();
          })
          .replace(/^ms-/, "-ms-");
      }
      function a(e, t, i, n) {
        var r,
          o,
          a,
          s = "modernizr",
          l = f("div"),
          c = ((a = h.body) || ((a = f(v ? "svg" : "body")).fake = !0), a);
        if (parseInt(i, 10))
          for (; i--; )
            ((r = f("div")).id = n ? n[i] : s + (i + 1)), l.appendChild(r);
        return (
          ((a = f("style")).type = "text/css"),
          (a.id = "s" + s),
          (c.fake ? c : l).appendChild(a),
          c.appendChild(l),
          a.styleSheet
            ? (a.styleSheet.cssText = e)
            : a.appendChild(h.createTextNode(e)),
          (l.id = s),
          c.fake &&
            ((c.style.background = ""),
            (c.style.overflow = "hidden"),
            (o = g.style.overflow),
            (g.style.overflow = "hidden"),
            g.appendChild(c)),
          (e = t(l, e)),
          c.fake
            ? (c.parentNode.removeChild(c),
              (g.style.overflow = o),
              g.offsetHeight)
            : l.parentNode.removeChild(l),
          !!e
        );
      }
      function m(e, t) {
        var i = e.length;
        if ("CSS" in o && "supports" in o.CSS) {
          for (; i--; ) if (o.CSS.supports(r(e[i]), t)) return !0;
          return !1;
        }
        if ("CSSSupportsRule" in o) {
          for (var n = []; i--; ) n.push("(" + r(e[i]) + ":" + t + ")");
          return a(
            "@supports (" +
              (n = n.join(" or ")) +
              ") { #modernizr { position: absolute; } }",
            function (e) {
              return (
                "absolute" ==
                ((t = e),
                (i = null),
                (n = "position"),
                "getComputedStyle" in o
                  ? ((r = getComputedStyle.call(o, t, i)),
                    (e = o.console),
                    null !== r
                      ? n && (r = r.getPropertyValue(n))
                      : e &&
                        e[e.error ? "error" : "log"].call(
                          e,
                          "getComputedStyle returning null, its possible modernizr test results are inaccurate"
                        ))
                  : (r = !i && t.currentStyle && t.currentStyle[n]),
                r)
              );
              var t, i, n, r;
            }
          );
        }
        return d;
      }
      function n(e, t, i, n, r) {
        var o = e.charAt(0).toUpperCase() + e.slice(1),
          a = (e + " " + y.join(o + " ") + o).split(" ");
        return p(t, "string") || p(t, "undefined")
          ? (function (e, t, i, n) {
              function r() {
                a && (delete S.style, delete S.modElem);
              }
              if (((n = !p(n, "undefined") && n), !p(i, "undefined"))) {
                var o = m(e, i);
                if (!p(o, "undefined")) return o;
              }
              for (
                var a, s, l, c, h, u = ["modernizr", "tspan", "samp"];
                !S.style && u.length;

              )
                (a = !0),
                  (S.modElem = f(u.shift())),
                  (S.style = S.modElem.style);
              for (l = e.length, s = 0; s < l; s++)
                if (
                  ((c = e[s]),
                  (h = S.style[c]),
                  ~("" + c).indexOf("-") &&
                    (c = c
                      .replace(/([a-z])-([a-z])/g, function (e, t, i) {
                        return t + i.toUpperCase();
                      })
                      .replace(/^-/, "")),
                  S.style[c] !== d)
                ) {
                  if (n || p(i, "undefined")) return r(), "pfx" != t || c;
                  try {
                    S.style[c] = i;
                  } catch (e) {}
                  if (S.style[c] != h) return r(), "pfx" != t || c;
                }
              return r(), !1;
            })(a, t, n, r)
          : s((a = (e + " " + _.join(o + " ") + o).split(" ")), t, i);
      }
      function e(e, t, i) {
        return n(e, d, d, t, i);
      }
      var l = [],
        c = [],
        t = {
          _version: "3.5.0",
          _config: {
            classPrefix: "",
            enableClasses: !0,
            enableJSClass: !0,
            usePrefixes: !0,
          },
          _q: [],
          on: function (e, t) {
            var i = this;
            setTimeout(function () {
              t(i[e]);
            }, 0);
          },
          addTest: function (e, t, i) {
            c.push({ name: e, fn: t, options: i });
          },
          addAsyncTest: function (e) {
            c.push({ name: null, fn: e });
          },
        },
        u = function () {};
      (u.prototype = t),
        (u = new u()).addTest("passiveeventlisteners", function () {
          var e = !1;
          try {
            var t = Object.defineProperty({}, "passive", {
              get: function () {
                e = !0;
              },
            });
            o.addEventListener("test", null, t);
          } catch (e) {}
          return e;
        });
      var g = h.documentElement,
        v = "svg" === g.nodeName.toLowerCase();
      u.addTest("webgl", function () {
        var e = f("canvas"),
          t =
            "probablySupportsContext" in e
              ? "probablySupportsContext"
              : "supportsContext";
        return t in e
          ? e[t]("webgl") || e[t]("experimental-webgl")
          : "WebGLRenderingContext" in o;
      });
      var i = "Moz O ms Webkit",
        y = t._config.usePrefixes ? i.split(" ") : [];
      t._cssomPrefixes = y;
      var _ = t._config.usePrefixes ? i.toLowerCase().split(" ") : [];
      t._domPrefixes = _;
      var x = { elem: f("modernizr") };
      u._q.push(function () {
        delete x.elem;
      });
      var b,
        w,
        T,
        S = { style: x.elem.style };
      u._q.unshift(function () {
        delete S.style;
      }),
        (t.testAllProps = n),
        (t.testAllProps = e),
        u.addTest("csstransitions", e("transition", "all", !0)),
        (function () {
          var e, t, i, n, r, o, a;
          for (a in c)
            if (c.hasOwnProperty(a)) {
              if (
                ((e = []),
                (t = c[a]).name &&
                  (e.push(t.name.toLowerCase()),
                  t.options && t.options.aliases && t.options.aliases.length))
              )
                for (i = 0; i < t.options.aliases.length; i++)
                  e.push(t.options.aliases[i].toLowerCase());
              for (
                n = p(t.fn, "function") ? t.fn() : t.fn, r = 0;
                r < e.length;
                r++
              )
                1 === (o = e[r].split(".")).length
                  ? (u[o[0]] = n)
                  : (!u[o[0]] ||
                      u[o[0]] instanceof Boolean ||
                      (u[o[0]] = new Boolean(u[o[0]])),
                    (u[o[0]][o[1]] = n)),
                  l.push((n ? "" : "no-") + o.join("-"));
            }
        })(),
        (b = l),
        (w = g.className),
        (T = u._config.classPrefix || ""),
        v && (w = w.baseVal),
        u._config.enableJSClass &&
          ((i = new RegExp("(^|\\s)" + T + "no-js(\\s|$)")),
          (w = w.replace(i, "$1" + T + "js$2"))),
        u._config.enableClasses &&
          ((w += " " + T + b.join(" " + T)),
          v ? (g.className.baseVal = w) : (g.className = w)),
        delete t.addTest,
        delete t.addAsyncTest;
      for (var M = 0; M < u._q.length; M++) u._q[M]();
      o.Modernizr = u;
    })(window, document);
  },
  function (e, t, i) {
    "use strict";
    var n = function (e, t, i) {
      return t && r(e.prototype, t), i && r(e, i), e;
    };
    function r(e, t) {
      for (var i = 0; i < t.length; i++) {
        var n = t[i];
        (n.enumerable = n.enumerable || !1),
          (n.configurable = !0),
          "value" in n && (n.writable = !0),
          Object.defineProperty(e, n.key, n);
      }
    }
    var o = i(3),
      n =
        (i(4),
        n(a, [
          {
            key: "setScene",
            value: function (e) {
              this.scene = e;
            },
          },
          {
            key: "setCamera",
            value: function (e) {
              (this.camera = e),
                (this.camera.aspect = this.width / this.height),
                this.camera.updateProjectionMatrix();
            },
          },
          {
            key: "setSize",
            value: function (e, t) {
              (this.width = e),
                (this.height = t),
                this.camera &&
                  ((this.camera.aspect = this.width / this.height),
                  this.camera.updateProjectionMatrix()),
                this.renderer && this.renderer.setSize(e, t),
                window.matchMedia("(orientation: portrait)").matches &&
                  (window.innerWidth <= 1024 && (this.campos.z1 = 700),
                  window.innerWidth <= 580 && (this.targetpos.x1plus = 100));
            },
          },
          {
            key: "recalculatePosition",
            value: function () {
              this.setSize(this.width, this.height);
            },
          },
          {
            key: "appendTo",
            value: function (e) {
              e.appendChild(this.renderer.domElement);
            },
          },
          {
            key: "dispatch",
            value: function (e) {
              var t = this;
              this.events[e] &&
                this.events[e].forEach(function (e) {
                  return e(t);
                });
            },
          },
          {
            key: "render",
            value: function (e) {
              this.animation.timeDelta =
                this.animation.time - this.animation.timeLast;
              try {
                this.dispatch("update");
              } catch (e) {
                console.error(e);
              }
              this.renderer.clear(),
                this.renderer.render(this.scene, this.camera),
                (this.animation.timeLast = this.animation.time);
            },
          },
          {
            key: "start",
            value: function () {
              this.dispatch("start"),
                (this.animation.time = performance.now()),
                (this.animation.timeLast = this.animation.time),
                (this.animation.timeDelta = 0),
                (this.animation.loop = requestAnimationFrame(
                  this.animation.call
                ));
            },
          },
          {
            key: "stop",
            value: function () {
              this.dispatch("stop"), cancelAnimationFrame(this.animation.loop);
            },
          },
          {
            key: "dispose",
            value: function () {
              this.renderer.dispose();
            },
          },
        ]),
        a);
    function a(e, t) {
      var i = this;
      !(function (e) {
        if (!(e instanceof a))
          throw new TypeError("Cannot call a class as a function");
      })(this),
        (this.controller = e),
        (this.objectLoader = new o.ObjectLoader()),
        (this.renderer = null),
        (this.controls = null),
        (this.camera = null),
        (this.scene = null),
        (this.events = {}),
        (this.width = 500),
        (this.height = 500),
        (this.cameraVR = null),
        (this.isVR = null),
        (this.animation = {
          loop: null,
          call: function () {
            i.render(),
              (i.animation.loop = requestAnimationFrame(i.animation.call));
          },
          timeLast: performance.now(),
          timeDelta: 0,
        }),
        (this.objects = {}),
        (this.campos = {}),
        (this.targetpos = {}),
        (this.renderer = new o.WebGLRenderer({ antialias: !0, alpha: !0 })),
        this.renderer.setClearColor(0, 0),
        this.renderer.setPixelRatio(window.devicePixelRatio),
        (this.renderer.autoClear = !1),
        (this.renderer.sortObjects = !1),
        (this.renderer.gammaInput = !!t.project.gammaInput),
        (this.renderer.gammaOutput = !!t.project.gammaOutput),
        (this.renderer.shadowMap.enabled = !!t.project.shadows),
        this.setScene(this.objectLoader.parse(t.scene)),
        this.setCamera(this.objectLoader.parse(t.camera)),
        (this.objects.particle = new o.Object3D()),
        this.scene.add(this.objects.particle),
        this.objects.particle.rotation.set(6.3, 0, 0),
        (this.objects.perspectiveCamera = this.scene.getObjectByName(
          "PerspectiveCamera 1",
          !0
        )),
        (this.objects.cam = this.scene.getObjectByName("cam", !0)),
        (this.objects.main = this.scene.getObjectByName("main-obj", !0)),
        (this.objects.target = this.scene.getObjectByName("CenterPoint", !0)),
        (this.objects.stone1 = this.scene.getObjectByName("stone-1", !0)),
        (this.objects.stone2 = this.scene.getObjectByName("stone-2", !0)),
        (this.objects.stone3 = this.scene.getObjectByName("stone-3-lg", !0)),
        (this.objects.stone4 = this.scene.getObjectByName("stone-4-lg", !0)),
        (this.objects.dot1 = this.scene.getObjectByName("dot-1", !0)),
        (this.objects.dot2 = this.scene.getObjectByName("dot-2", !0)),
        (this.objects.dot3 = this.scene.getObjectByName("top-dot", !0)),
        (this.campos = {
          x: this.objects.cam.position.x,
          y: this.objects.cam.position.y,
          z: this.objects.cam.position.z,
          x1: 70,
          y1: 40,
          z1: 470.24,
        }),
        (this.targetpos = {
          x: this.objects.target.position.x,
          y: this.objects.target.position.y,
          z: this.objects.target.position.z,
          x1: 0,
          y1: this.objects.target.position.y,
          z1: 0.3,
          x1plus: 450,
        }),
        (this.objects.target.startPositionX = this.objects.target.position.x),
        this.recalculatePosition(),
        this.setCamera(this.objects.perspectiveCamera),
        (this.events = {
          init: [],
          start: [],
          stop: [],
          keydown: [],
          keyup: [],
          mousedown: [],
          mouseup: [],
          mousemove: [],
          touchstart: [],
          touchend: [],
          touchmove: [],
          update: [],
        });
    }
    e.exports = n;
  },
  function (Gt, Vt, e) {
    var Wt;
    !(function (e, t) {
      "use strict";
      "object" == typeof Gt && "object" == typeof Gt.exports
        ? (Gt.exports = e.document
            ? t(e, !0)
            : function (e) {
                if (!e.document)
                  throw new Error("jQuery requires a window with a document");
                return t(e);
              })
        : t(e);
    })("undefined" != typeof window ? window : this, function (w, e) {
      "use strict";
      var t = [],
        T = w.document,
        i = Object.getPrototypeOf,
        s = t.slice,
        m = t.concat,
        l = t.push,
        r = t.indexOf,
        n = {},
        o = n.toString,
        f = n.hasOwnProperty,
        a = f.toString,
        c = a.call(Object),
        g = {};
      function v(e, t) {
        var i = (t = t || T).createElement("script");
        (i.text = e), t.head.appendChild(i).parentNode.removeChild(i);
      }
      function h(e, t) {
        return t.toUpperCase();
      }
      var S = function (e, t) {
          return new S.fn.init(e, t);
        },
        u = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
        d = /^-ms-/,
        p = /-([a-z])/g;
      function y(e) {
        var t = !!e && "length" in e && e.length,
          i = S.type(e);
        return (
          "function" !== i &&
          !S.isWindow(e) &&
          ("array" === i ||
            0 === t ||
            ("number" == typeof t && 0 < t && t - 1 in e))
        );
      }
      (S.fn = S.prototype =
        {
          jquery: "3.2.1",
          constructor: S,
          length: 0,
          toArray: function () {
            return s.call(this);
          },
          get: function (e) {
            return null == e
              ? s.call(this)
              : e < 0
              ? this[e + this.length]
              : this[e];
          },
          pushStack: function (e) {
            e = S.merge(this.constructor(), e);
            return (e.prevObject = this), e;
          },
          each: function (e) {
            return S.each(this, e);
          },
          map: function (i) {
            return this.pushStack(
              S.map(this, function (e, t) {
                return i.call(e, t, e);
              })
            );
          },
          slice: function () {
            return this.pushStack(s.apply(this, arguments));
          },
          first: function () {
            return this.eq(0);
          },
          last: function () {
            return this.eq(-1);
          },
          eq: function (e) {
            var t = this.length,
              e = +e + (e < 0 ? t : 0);
            return this.pushStack(0 <= e && e < t ? [this[e]] : []);
          },
          end: function () {
            return this.prevObject || this.constructor();
          },
          push: l,
          sort: t.sort,
          splice: t.splice,
        }),
        (S.extend = S.fn.extend =
          function () {
            var e,
              t,
              i,
              n,
              r,
              o = arguments[0] || {},
              a = 1,
              s = arguments.length,
              l = !1;
            for (
              "boolean" == typeof o && ((l = o), (o = arguments[a] || {}), a++),
                "object" == typeof o || S.isFunction(o) || (o = {}),
                a === s && ((o = this), a--);
              a < s;
              a++
            )
              if (null != (e = arguments[a]))
                for (t in e)
                  (r = o[t]),
                    o !== (i = e[t]) &&
                      (l && i && (S.isPlainObject(i) || (n = Array.isArray(i)))
                        ? ((r = n
                            ? ((n = !1), r && Array.isArray(r) ? r : [])
                            : r && S.isPlainObject(r)
                            ? r
                            : {}),
                          (o[t] = S.extend(l, r, i)))
                        : void 0 !== i && (o[t] = i));
            return o;
          }),
        S.extend({
          expando: "jQuery" + ("3.2.1" + Math.random()).replace(/\D/g, ""),
          isReady: !0,
          error: function (e) {
            throw new Error(e);
          },
          noop: function () {},
          isFunction: function (e) {
            return "function" === S.type(e);
          },
          isWindow: function (e) {
            return null != e && e === e.window;
          },
          isNumeric: function (e) {
            var t = S.type(e);
            return (
              ("number" === t || "string" === t) && !isNaN(e - parseFloat(e))
            );
          },
          isPlainObject: function (e) {
            return (
              !(!e || "[object Object]" !== o.call(e)) &&
              (!(e = i(e)) ||
                ("function" ==
                  typeof (e = f.call(e, "constructor") && e.constructor) &&
                  a.call(e) === c))
            );
          },
          isEmptyObject: function (e) {
            for (var t in e) return !1;
            return !0;
          },
          type: function (e) {
            return null == e
              ? e + ""
              : "object" == typeof e || "function" == typeof e
              ? n[o.call(e)] || "object"
              : typeof e;
          },
          globalEval: function (e) {
            v(e);
          },
          camelCase: function (e) {
            return e.replace(d, "ms-").replace(p, h);
          },
          each: function (e, t) {
            var i,
              n = 0;
            if (y(e))
              for (i = e.length; n < i && !1 !== t.call(e[n], n, e[n]); n++);
            else for (n in e) if (!1 === t.call(e[n], n, e[n])) break;
            return e;
          },
          trim: function (e) {
            return null == e ? "" : (e + "").replace(u, "");
          },
          makeArray: function (e, t) {
            t = t || [];
            return (
              null != e &&
                (y(Object(e))
                  ? S.merge(t, "string" == typeof e ? [e] : e)
                  : l.call(t, e)),
              t
            );
          },
          inArray: function (e, t, i) {
            return null == t ? -1 : r.call(t, e, i);
          },
          merge: function (e, t) {
            for (var i = +t.length, n = 0, r = e.length; n < i; n++)
              e[r++] = t[n];
            return (e.length = r), e;
          },
          grep: function (e, t, i) {
            for (var n = [], r = 0, o = e.length, a = !i; r < o; r++)
              !t(e[r], r) != a && n.push(e[r]);
            return n;
          },
          map: function (e, t, i) {
            var n,
              r,
              o = 0,
              a = [];
            if (y(e))
              for (n = e.length; o < n; o++)
                null != (r = t(e[o], o, i)) && a.push(r);
            else for (o in e) null != (r = t(e[o], o, i)) && a.push(r);
            return m.apply([], a);
          },
          guid: 1,
          proxy: function (e, t) {
            var i, n;
            if (
              ("string" == typeof t && ((n = e[t]), (t = e), (e = n)),
              S.isFunction(e))
            )
              return (
                (i = s.call(arguments, 2)),
                ((n = function () {
                  return e.apply(t || this, i.concat(s.call(arguments)));
                }).guid = e.guid =
                  e.guid || S.guid++),
                n
              );
          },
          now: Date.now,
          support: g,
        }),
        "function" == typeof Symbol &&
          (S.fn[Symbol.iterator] = t[Symbol.iterator]),
        S.each(
          "Boolean Number String Function Array Date RegExp Object Error Symbol".split(
            " "
          ),
          function (e, t) {
            n["[object " + t + "]"] = t.toLowerCase();
          }
        );
      var _ = (function (i) {
        function u(e, t, i) {
          var n = "0x" + t - 65536;
          return n != n || i
            ? t
            : n < 0
            ? String.fromCharCode(65536 + n)
            : String.fromCharCode((n >> 10) | 55296, (1023 & n) | 56320);
        }
        function n() {
          w();
        }
        var e,
          p,
          x,
          o,
          r,
          f,
          d,
          m,
          b,
          l,
          c,
          w,
          T,
          a,
          S,
          g,
          s,
          h,
          v,
          M = "sizzle" + +new Date(),
          y = i.document,
          E = 0,
          _ = 0,
          A = ae(),
          L = ae(),
          C = ae(),
          P = function (e, t) {
            return e === t && (c = !0), 0;
          },
          R = {}.hasOwnProperty,
          t = [],
          O = t.pop,
          I = t.push,
          D = t.push,
          N = t.slice,
          F = function (e, t) {
            for (var i = 0, n = e.length; i < n; i++) if (e[i] === t) return i;
            return -1;
          },
          k =
            "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
          U = "[\\x20\\t\\r\\n\\f]",
          B = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",
          z =
            "\\[" +
            U +
            "*(" +
            B +
            ")(?:" +
            U +
            "*([*^$|!~]?=)" +
            U +
            "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" +
            B +
            "))|)" +
            U +
            "*\\]",
          j =
            ":(" +
            B +
            ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" +
            z +
            ")*)|.*)\\)|)",
          H = new RegExp(U + "+", "g"),
          G = new RegExp(
            "^" + U + "+|((?:^|[^\\\\])(?:\\\\.)*)" + U + "+$",
            "g"
          ),
          V = new RegExp("^" + U + "*," + U + "*"),
          W = new RegExp("^" + U + "*([>+~]|" + U + ")" + U + "*"),
          X = new RegExp("=" + U + "*([^\\]'\"]*?)" + U + "*\\]", "g"),
          q = new RegExp(j),
          Y = new RegExp("^" + B + "$"),
          Q = {
            ID: new RegExp("^#(" + B + ")"),
            CLASS: new RegExp("^\\.(" + B + ")"),
            TAG: new RegExp("^(" + B + "|[*])"),
            ATTR: new RegExp("^" + z),
            PSEUDO: new RegExp("^" + j),
            CHILD: new RegExp(
              "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
                U +
                "*(even|odd|(([+-]|)(\\d*)n|)" +
                U +
                "*(?:([+-]|)" +
                U +
                "*(\\d+)|))" +
                U +
                "*\\)|)",
              "i"
            ),
            bool: new RegExp("^(?:" + k + ")$", "i"),
            needsContext: new RegExp(
              "^" +
                U +
                "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
                U +
                "*((?:-\\d)?\\d*)" +
                U +
                "*\\)|)(?=[^-]|$)",
              "i"
            ),
          },
          Z = /^(?:input|select|textarea|button)$/i,
          J = /^h\d$/i,
          $ = /^[^{]+\{\s*\[native \w/,
          K = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
          ee = /[+~]/,
          te = new RegExp("\\\\([\\da-f]{1,6}" + U + "?|(" + U + ")|.)", "ig"),
          ie = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
          ne = function (e, t) {
            return t
              ? "\0" === e
                ? "�"
                : e.slice(0, -1) +
                  "\\" +
                  e.charCodeAt(e.length - 1).toString(16) +
                  " "
              : "\\" + e;
          },
          re = ge(
            function (e) {
              return !0 === e.disabled && ("form" in e || "label" in e);
            },
            { dir: "parentNode", next: "legend" }
          );
        try {
          D.apply((t = N.call(y.childNodes)), y.childNodes),
            t[y.childNodes.length].nodeType;
        } catch (e) {
          D = {
            apply: t.length
              ? function (e, t) {
                  I.apply(e, N.call(t));
                }
              : function (e, t) {
                  for (var i = e.length, n = 0; (e[i++] = t[n++]); );
                  e.length = i - 1;
                },
          };
        }
        function oe(e, t, i, n) {
          var r,
            o,
            a,
            s,
            l,
            c,
            h,
            u = t && t.ownerDocument,
            d = t ? t.nodeType : 9;
          if (
            ((i = i || []),
            "string" != typeof e || !e || (1 !== d && 9 !== d && 11 !== d))
          )
            return i;
          if (
            !n &&
            ((t ? t.ownerDocument || t : y) !== T && w(t), (t = t || T), S)
          ) {
            if (11 !== d && (l = K.exec(e)))
              if ((r = l[1])) {
                if (9 === d) {
                  if (!(a = t.getElementById(r))) return i;
                  if (a.id === r) return i.push(a), i;
                } else if (
                  u &&
                  (a = u.getElementById(r)) &&
                  v(t, a) &&
                  a.id === r
                )
                  return i.push(a), i;
              } else {
                if (l[2]) return D.apply(i, t.getElementsByTagName(e)), i;
                if (
                  (r = l[3]) &&
                  p.getElementsByClassName &&
                  t.getElementsByClassName
                )
                  return D.apply(i, t.getElementsByClassName(r)), i;
              }
            if (p.qsa && !C[e + " "] && (!g || !g.test(e))) {
              if (1 !== d) (u = t), (h = e);
              else if ("object" !== t.nodeName.toLowerCase()) {
                for (
                  (s = t.getAttribute("id"))
                    ? (s = s.replace(ie, ne))
                    : t.setAttribute("id", (s = M)),
                    o = (c = f(e)).length;
                  o--;

                )
                  c[o] = "#" + s + " " + me(c[o]);
                (h = c.join(",")), (u = (ee.test(e) && pe(t.parentNode)) || t);
              }
              if (h)
                try {
                  return D.apply(i, u.querySelectorAll(h)), i;
                } catch (e) {
                } finally {
                  s === M && t.removeAttribute("id");
                }
            }
          }
          return m(e.replace(G, "$1"), t, i, n);
        }
        function ae() {
          var i = [];
          function n(e, t) {
            return (
              i.push(e + " ") > x.cacheLength && delete n[i.shift()],
              (n[e + " "] = t)
            );
          }
          return n;
        }
        function se(e) {
          return (e[M] = !0), e;
        }
        function le(e) {
          var t = T.createElement("fieldset");
          try {
            return !!e(t);
          } catch (e) {
            return !1;
          } finally {
            t.parentNode && t.parentNode.removeChild(t), (t = null);
          }
        }
        function ce(e, t) {
          for (var i = e.split("|"), n = i.length; n--; )
            x.attrHandle[i[n]] = t;
        }
        function he(e, t) {
          var i = t && e,
            n =
              i &&
              1 === e.nodeType &&
              1 === t.nodeType &&
              e.sourceIndex - t.sourceIndex;
          if (n) return n;
          if (i) for (; (i = i.nextSibling); ) if (i === t) return -1;
          return e ? 1 : -1;
        }
        function ue(t) {
          return function (e) {
            return "form" in e
              ? e.parentNode && !1 === e.disabled
                ? "label" in e
                  ? "label" in e.parentNode
                    ? e.parentNode.disabled === t
                    : e.disabled === t
                  : e.isDisabled === t || (e.isDisabled !== !t && re(e) === t)
                : e.disabled === t
              : "label" in e && e.disabled === t;
          };
        }
        function de(a) {
          return se(function (o) {
            return (
              (o = +o),
              se(function (e, t) {
                for (var i, n = a([], e.length, o), r = n.length; r--; )
                  e[(i = n[r])] && (e[i] = !(t[i] = e[i]));
              })
            );
          });
        }
        function pe(e) {
          return e && void 0 !== e.getElementsByTagName && e;
        }
        for (e in ((p = oe.support = {}),
        (r = oe.isXML =
          function (e) {
            e = e && (e.ownerDocument || e).documentElement;
            return !!e && "HTML" !== e.nodeName;
          }),
        (w = oe.setDocument =
          function (e) {
            var t,
              e = e ? e.ownerDocument || e : y;
            return (
              e !== T &&
                9 === e.nodeType &&
                e.documentElement &&
                ((a = (T = e).documentElement),
                (S = !r(T)),
                y !== T &&
                  (t = T.defaultView) &&
                  t.top !== t &&
                  (t.addEventListener
                    ? t.addEventListener("unload", n, !1)
                    : t.attachEvent && t.attachEvent("onunload", n)),
                (p.attributes = le(function (e) {
                  return (e.className = "i"), !e.getAttribute("className");
                })),
                (p.getElementsByTagName = le(function (e) {
                  return (
                    e.appendChild(T.createComment("")),
                    !e.getElementsByTagName("*").length
                  );
                })),
                (p.getElementsByClassName = $.test(T.getElementsByClassName)),
                (p.getById = le(function (e) {
                  return (
                    (a.appendChild(e).id = M),
                    !T.getElementsByName || !T.getElementsByName(M).length
                  );
                })),
                p.getById
                  ? ((x.filter.ID = function (e) {
                      var t = e.replace(te, u);
                      return function (e) {
                        return e.getAttribute("id") === t;
                      };
                    }),
                    (x.find.ID = function (e, t) {
                      if (void 0 !== t.getElementById && S) {
                        e = t.getElementById(e);
                        return e ? [e] : [];
                      }
                    }))
                  : ((x.filter.ID = function (e) {
                      var t = e.replace(te, u);
                      return function (e) {
                        e =
                          void 0 !== e.getAttributeNode &&
                          e.getAttributeNode("id");
                        return e && e.value === t;
                      };
                    }),
                    (x.find.ID = function (e, t) {
                      if (void 0 !== t.getElementById && S) {
                        var i,
                          n,
                          r,
                          o = t.getElementById(e);
                        if (o) {
                          if ((i = o.getAttributeNode("id")) && i.value === e)
                            return [o];
                          for (
                            r = t.getElementsByName(e), n = 0;
                            (o = r[n++]);

                          )
                            if ((i = o.getAttributeNode("id")) && i.value === e)
                              return [o];
                        }
                        return [];
                      }
                    })),
                (x.find.TAG = p.getElementsByTagName
                  ? function (e, t) {
                      return void 0 !== t.getElementsByTagName
                        ? t.getElementsByTagName(e)
                        : p.qsa
                        ? t.querySelectorAll(e)
                        : void 0;
                    }
                  : function (e, t) {
                      var i,
                        n = [],
                        r = 0,
                        o = t.getElementsByTagName(e);
                      if ("*" !== e) return o;
                      for (; (i = o[r++]); ) 1 === i.nodeType && n.push(i);
                      return n;
                    }),
                (x.find.CLASS =
                  p.getElementsByClassName &&
                  function (e, t) {
                    if (void 0 !== t.getElementsByClassName && S)
                      return t.getElementsByClassName(e);
                  }),
                (s = []),
                (g = []),
                (p.qsa = $.test(T.querySelectorAll)) &&
                  (le(function (e) {
                    (a.appendChild(e).innerHTML =
                      "<a id='" +
                      M +
                      "'></a><select id='" +
                      M +
                      "-\r\\' msallowcapture=''><option selected=''></option></select>"),
                      e.querySelectorAll("[msallowcapture^='']").length &&
                        g.push("[*^$]=" + U + "*(?:''|\"\")"),
                      e.querySelectorAll("[selected]").length ||
                        g.push("\\[" + U + "*(?:value|" + k + ")"),
                      e.querySelectorAll("[id~=" + M + "-]").length ||
                        g.push("~="),
                      e.querySelectorAll(":checked").length ||
                        g.push(":checked"),
                      e.querySelectorAll("a#" + M + "+*").length ||
                        g.push(".#.+[+~]");
                  }),
                  le(function (e) {
                    e.innerHTML =
                      "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                    var t = T.createElement("input");
                    t.setAttribute("type", "hidden"),
                      e.appendChild(t).setAttribute("name", "D"),
                      e.querySelectorAll("[name=d]").length &&
                        g.push("name" + U + "*[*^$|!~]?="),
                      2 !== e.querySelectorAll(":enabled").length &&
                        g.push(":enabled", ":disabled"),
                      (a.appendChild(e).disabled = !0),
                      2 !== e.querySelectorAll(":disabled").length &&
                        g.push(":enabled", ":disabled"),
                      e.querySelectorAll("*,:x"),
                      g.push(",.*:");
                  })),
                (p.matchesSelector = $.test(
                  (h =
                    a.matches ||
                    a.webkitMatchesSelector ||
                    a.mozMatchesSelector ||
                    a.oMatchesSelector ||
                    a.msMatchesSelector)
                )) &&
                  le(function (e) {
                    (p.disconnectedMatch = h.call(e, "*")),
                      h.call(e, "[s!='']:x"),
                      s.push("!=", j);
                  }),
                (g = g.length && new RegExp(g.join("|"))),
                (s = s.length && new RegExp(s.join("|"))),
                (t = $.test(a.compareDocumentPosition)),
                (v =
                  t || $.test(a.contains)
                    ? function (e, t) {
                        var i = 9 === e.nodeType ? e.documentElement : e,
                          t = t && t.parentNode;
                        return (
                          e === t ||
                          !(
                            !t ||
                            1 !== t.nodeType ||
                            !(i.contains
                              ? i.contains(t)
                              : e.compareDocumentPosition &&
                                16 & e.compareDocumentPosition(t))
                          )
                        );
                      }
                    : function (e, t) {
                        if (t)
                          for (; (t = t.parentNode); ) if (t === e) return !0;
                        return !1;
                      }),
                (P = t
                  ? function (e, t) {
                      if (e === t) return (c = !0), 0;
                      var i =
                        !e.compareDocumentPosition - !t.compareDocumentPosition;
                      return (
                        i ||
                        (1 &
                          (i =
                            (e.ownerDocument || e) === (t.ownerDocument || t)
                              ? e.compareDocumentPosition(t)
                              : 1) ||
                        (!p.sortDetached && t.compareDocumentPosition(e) === i)
                          ? e === T || (e.ownerDocument === y && v(y, e))
                            ? -1
                            : t === T || (t.ownerDocument === y && v(y, t))
                            ? 1
                            : l
                            ? F(l, e) - F(l, t)
                            : 0
                          : 4 & i
                          ? -1
                          : 1)
                      );
                    }
                  : function (e, t) {
                      if (e === t) return (c = !0), 0;
                      var i,
                        n = 0,
                        r = e.parentNode,
                        o = t.parentNode,
                        a = [e],
                        s = [t];
                      if (!r || !o)
                        return e === T
                          ? -1
                          : t === T
                          ? 1
                          : r
                          ? -1
                          : o
                          ? 1
                          : l
                          ? F(l, e) - F(l, t)
                          : 0;
                      if (r === o) return he(e, t);
                      for (i = e; (i = i.parentNode); ) a.unshift(i);
                      for (i = t; (i = i.parentNode); ) s.unshift(i);
                      for (; a[n] === s[n]; ) n++;
                      return n
                        ? he(a[n], s[n])
                        : a[n] === y
                        ? -1
                        : s[n] === y
                        ? 1
                        : 0;
                    })),
              T
            );
          }),
        (oe.matches = function (e, t) {
          return oe(e, null, null, t);
        }),
        (oe.matchesSelector = function (e, t) {
          if (
            ((e.ownerDocument || e) !== T && w(e),
            (t = t.replace(X, "='$1']")),
            p.matchesSelector &&
              S &&
              !C[t + " "] &&
              (!s || !s.test(t)) &&
              (!g || !g.test(t)))
          )
            try {
              var i = h.call(e, t);
              if (
                i ||
                p.disconnectedMatch ||
                (e.document && 11 !== e.document.nodeType)
              )
                return i;
            } catch (e) {}
          return 0 < oe(t, T, null, [e]).length;
        }),
        (oe.contains = function (e, t) {
          return (e.ownerDocument || e) !== T && w(e), v(e, t);
        }),
        (oe.attr = function (e, t) {
          (e.ownerDocument || e) !== T && w(e);
          var i = x.attrHandle[t.toLowerCase()],
            i =
              i && R.call(x.attrHandle, t.toLowerCase()) ? i(e, t, !S) : void 0;
          return void 0 !== i
            ? i
            : p.attributes || !S
            ? e.getAttribute(t)
            : (i = e.getAttributeNode(t)) && i.specified
            ? i.value
            : null;
        }),
        (oe.escape = function (e) {
          return (e + "").replace(ie, ne);
        }),
        (oe.error = function (e) {
          throw new Error("Syntax error, unrecognized expression: " + e);
        }),
        (oe.uniqueSort = function (e) {
          var t,
            i = [],
            n = 0,
            r = 0;
          if (
            ((c = !p.detectDuplicates),
            (l = !p.sortStable && e.slice(0)),
            e.sort(P),
            c)
          ) {
            for (; (t = e[r++]); ) t === e[r] && (n = i.push(r));
            for (; n--; ) e.splice(i[n], 1);
          }
          return (l = null), e;
        }),
        (o = oe.getText =
          function (e) {
            var t,
              i = "",
              n = 0,
              r = e.nodeType;
            if (r) {
              if (1 === r || 9 === r || 11 === r) {
                if ("string" == typeof e.textContent) return e.textContent;
                for (e = e.firstChild; e; e = e.nextSibling) i += o(e);
              } else if (3 === r || 4 === r) return e.nodeValue;
            } else for (; (t = e[n++]); ) i += o(t);
            return i;
          }),
        ((x = oe.selectors =
          {
            cacheLength: 50,
            createPseudo: se,
            match: Q,
            attrHandle: {},
            find: {},
            relative: {
              ">": { dir: "parentNode", first: !0 },
              " ": { dir: "parentNode" },
              "+": { dir: "previousSibling", first: !0 },
              "~": { dir: "previousSibling" },
            },
            preFilter: {
              ATTR: function (e) {
                return (
                  (e[1] = e[1].replace(te, u)),
                  (e[3] = (e[3] || e[4] || e[5] || "").replace(te, u)),
                  "~=" === e[2] && (e[3] = " " + e[3] + " "),
                  e.slice(0, 4)
                );
              },
              CHILD: function (e) {
                return (
                  (e[1] = e[1].toLowerCase()),
                  "nth" === e[1].slice(0, 3)
                    ? (e[3] || oe.error(e[0]),
                      (e[4] = +(e[4]
                        ? e[5] + (e[6] || 1)
                        : 2 * ("even" === e[3] || "odd" === e[3]))),
                      (e[5] = +(e[7] + e[8] || "odd" === e[3])))
                    : e[3] && oe.error(e[0]),
                  e
                );
              },
              PSEUDO: function (e) {
                var t,
                  i = !e[6] && e[2];
                return Q.CHILD.test(e[0])
                  ? null
                  : (e[3]
                      ? (e[2] = e[4] || e[5] || "")
                      : i &&
                        q.test(i) &&
                        (t = f(i, !0)) &&
                        (t = i.indexOf(")", i.length - t) - i.length) &&
                        ((e[0] = e[0].slice(0, t)), (e[2] = i.slice(0, t))),
                    e.slice(0, 3));
              },
            },
            filter: {
              TAG: function (e) {
                var t = e.replace(te, u).toLowerCase();
                return "*" === e
                  ? function () {
                      return !0;
                    }
                  : function (e) {
                      return e.nodeName && e.nodeName.toLowerCase() === t;
                    };
              },
              CLASS: function (e) {
                var t = A[e + " "];
                return (
                  t ||
                  ((t = new RegExp("(^|" + U + ")" + e + "(" + U + "|$)")) &&
                    A(e, function (e) {
                      return t.test(
                        ("string" == typeof e.className && e.className) ||
                          (void 0 !== e.getAttribute &&
                            e.getAttribute("class")) ||
                          ""
                      );
                    }))
                );
              },
              ATTR: function (t, i, n) {
                return function (e) {
                  e = oe.attr(e, t);
                  return null == e
                    ? "!=" === i
                    : !i ||
                        ((e += ""),
                        "=" === i
                          ? e === n
                          : "!=" === i
                          ? e !== n
                          : "^=" === i
                          ? n && 0 === e.indexOf(n)
                          : "*=" === i
                          ? n && -1 < e.indexOf(n)
                          : "$=" === i
                          ? n && e.slice(-n.length) === n
                          : "~=" === i
                          ? -1 < (" " + e.replace(H, " ") + " ").indexOf(n)
                          : "|=" === i &&
                            (e === n || e.slice(0, n.length + 1) === n + "-"));
                };
              },
              CHILD: function (f, e, t, m, g) {
                var v = "nth" !== f.slice(0, 3),
                  y = "last" !== f.slice(-4),
                  _ = "of-type" === e;
                return 1 === m && 0 === g
                  ? function (e) {
                      return !!e.parentNode;
                    }
                  : function (e, t, i) {
                      var n,
                        r,
                        o,
                        a,
                        s,
                        l,
                        c = v != y ? "nextSibling" : "previousSibling",
                        h = e.parentNode,
                        u = _ && e.nodeName.toLowerCase(),
                        d = !i && !_,
                        p = !1;
                      if (h) {
                        if (v) {
                          for (; c; ) {
                            for (a = e; (a = a[c]); )
                              if (
                                _
                                  ? a.nodeName.toLowerCase() === u
                                  : 1 === a.nodeType
                              )
                                return !1;
                            l = c = "only" === f && !l && "nextSibling";
                          }
                          return !0;
                        }
                        if (((l = [y ? h.firstChild : h.lastChild]), y && d)) {
                          for (
                            p =
                              (s =
                                (n =
                                  (r =
                                    (o = (a = h)[M] || (a[M] = {}))[
                                      a.uniqueID
                                    ] || (o[a.uniqueID] = {}))[f] || [])[0] ===
                                  E && n[1]) && n[2],
                              a = s && h.childNodes[s];
                            (a = (++s && a && a[c]) || (p = s = 0) || l.pop());

                          )
                            if (1 === a.nodeType && ++p && a === e) {
                              r[f] = [E, s, p];
                              break;
                            }
                        } else if (
                          (d &&
                            (p = s =
                              (n =
                                (r =
                                  (o = (a = e)[M] || (a[M] = {}))[a.uniqueID] ||
                                  (o[a.uniqueID] = {}))[f] || [])[0] === E &&
                              n[1]),
                          !1 === p)
                        )
                          for (
                            ;
                            (a =
                              (++s && a && a[c]) || (p = s = 0) || l.pop()) &&
                            ((_
                              ? a.nodeName.toLowerCase() !== u
                              : 1 !== a.nodeType) ||
                              !++p ||
                              (d &&
                                ((r =
                                  (o = a[M] || (a[M] = {}))[a.uniqueID] ||
                                  (o[a.uniqueID] = {}))[f] = [E, p]),
                              a !== e));

                          );
                        return (p -= g) === m || (p % m == 0 && 0 <= p / m);
                      }
                    };
              },
              PSEUDO: function (e, o) {
                var t,
                  a =
                    x.pseudos[e] ||
                    x.setFilters[e.toLowerCase()] ||
                    oe.error("unsupported pseudo: " + e);
                return a[M]
                  ? a(o)
                  : 1 < a.length
                  ? ((t = [e, e, "", o]),
                    x.setFilters.hasOwnProperty(e.toLowerCase())
                      ? se(function (e, t) {
                          for (var i, n = a(e, o), r = n.length; r--; )
                            e[(i = F(e, n[r]))] = !(t[i] = n[r]);
                        })
                      : function (e) {
                          return a(e, 0, t);
                        })
                  : a;
              },
            },
            pseudos: {
              not: se(function (e) {
                var n = [],
                  r = [],
                  s = d(e.replace(G, "$1"));
                return s[M]
                  ? se(function (e, t, i, n) {
                      for (var r, o = s(e, null, n, []), a = e.length; a--; )
                        (r = o[a]) && (e[a] = !(t[a] = r));
                    })
                  : function (e, t, i) {
                      return (
                        (n[0] = e), s(n, null, i, r), (n[0] = null), !r.pop()
                      );
                    };
              }),
              has: se(function (t) {
                return function (e) {
                  return 0 < oe(t, e).length;
                };
              }),
              contains: se(function (t) {
                return (
                  (t = t.replace(te, u)),
                  function (e) {
                    return (
                      -1 < (e.textContent || e.innerText || o(e)).indexOf(t)
                    );
                  }
                );
              }),
              lang: se(function (i) {
                return (
                  Y.test(i || "") || oe.error("unsupported lang: " + i),
                  (i = i.replace(te, u).toLowerCase()),
                  function (e) {
                    var t;
                    do {
                      if (
                        (t = S
                          ? e.lang
                          : e.getAttribute("xml:lang") ||
                            e.getAttribute("lang"))
                      )
                        return (
                          (t = t.toLowerCase()) === i ||
                          0 === t.indexOf(i + "-")
                        );
                    } while ((e = e.parentNode) && 1 === e.nodeType);
                    return !1;
                  }
                );
              }),
              target: function (e) {
                var t = i.location && i.location.hash;
                return t && t.slice(1) === e.id;
              },
              root: function (e) {
                return e === a;
              },
              focus: function (e) {
                return (
                  e === T.activeElement &&
                  (!T.hasFocus || T.hasFocus()) &&
                  !!(e.type || e.href || ~e.tabIndex)
                );
              },
              enabled: ue(!1),
              disabled: ue(!0),
              checked: function (e) {
                var t = e.nodeName.toLowerCase();
                return (
                  ("input" === t && !!e.checked) ||
                  ("option" === t && !!e.selected)
                );
              },
              selected: function (e) {
                return (
                  e.parentNode && e.parentNode.selectedIndex, !0 === e.selected
                );
              },
              empty: function (e) {
                for (e = e.firstChild; e; e = e.nextSibling)
                  if (e.nodeType < 6) return !1;
                return !0;
              },
              parent: function (e) {
                return !x.pseudos.empty(e);
              },
              header: function (e) {
                return J.test(e.nodeName);
              },
              input: function (e) {
                return Z.test(e.nodeName);
              },
              button: function (e) {
                var t = e.nodeName.toLowerCase();
                return ("input" === t && "button" === e.type) || "button" === t;
              },
              text: function (e) {
                return (
                  "input" === e.nodeName.toLowerCase() &&
                  "text" === e.type &&
                  (null == (e = e.getAttribute("type")) ||
                    "text" === e.toLowerCase())
                );
              },
              first: de(function () {
                return [0];
              }),
              last: de(function (e, t) {
                return [t - 1];
              }),
              eq: de(function (e, t, i) {
                return [i < 0 ? i + t : i];
              }),
              even: de(function (e, t) {
                for (var i = 0; i < t; i += 2) e.push(i);
                return e;
              }),
              odd: de(function (e, t) {
                for (var i = 1; i < t; i += 2) e.push(i);
                return e;
              }),
              lt: de(function (e, t, i) {
                for (var n = i < 0 ? i + t : i; 0 <= --n; ) e.push(n);
                return e;
              }),
              gt: de(function (e, t, i) {
                for (var n = i < 0 ? i + t : i; ++n < t; ) e.push(n);
                return e;
              }),
            },
          }).pseudos.nth = x.pseudos.eq),
        { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }))
          x.pseudos[e] = (function (t) {
            return function (e) {
              return "input" === e.nodeName.toLowerCase() && e.type === t;
            };
          })(e);
        for (e in { submit: !0, reset: !0 })
          x.pseudos[e] = (function (i) {
            return function (e) {
              var t = e.nodeName.toLowerCase();
              return ("input" === t || "button" === t) && e.type === i;
            };
          })(e);
        function fe() {}
        function me(e) {
          for (var t = 0, i = e.length, n = ""; t < i; t++) n += e[t].value;
          return n;
        }
        function ge(a, e, t) {
          var s = e.dir,
            l = e.next,
            c = l || s,
            h = t && "parentNode" === c,
            u = _++;
          return e.first
            ? function (e, t, i) {
                for (; (e = e[s]); )
                  if (1 === e.nodeType || h) return a(e, t, i);
                return !1;
              }
            : function (e, t, i) {
                var n,
                  r,
                  o = [E, u];
                if (i) {
                  for (; (e = e[s]); )
                    if ((1 === e.nodeType || h) && a(e, t, i)) return !0;
                } else
                  for (; (e = e[s]); )
                    if (1 === e.nodeType || h)
                      if (
                        ((n =
                          (r = e[M] || (e[M] = {}))[e.uniqueID] ||
                          (r[e.uniqueID] = {})),
                        l && l === e.nodeName.toLowerCase())
                      )
                        e = e[s] || e;
                      else {
                        if ((r = n[c]) && r[0] === E && r[1] === u)
                          return (o[2] = r[2]);
                        if (((n[c] = o)[2] = a(e, t, i))) return !0;
                      }
                return !1;
              };
        }
        function ve(r) {
          return 1 < r.length
            ? function (e, t, i) {
                for (var n = r.length; n--; ) if (!r[n](e, t, i)) return !1;
                return !0;
              }
            : r[0];
        }
        function ye(e, t, i, n, r) {
          for (var o, a = [], s = 0, l = e.length, c = null != t; s < l; s++)
            (o = e[s]) && ((i && !i(o, n, r)) || (a.push(o), c && t.push(s)));
          return a;
        }
        function _e(p, f, m, g, v, e) {
          return (
            g && !g[M] && (g = _e(g)),
            v && !v[M] && (v = _e(v, e)),
            se(function (e, t, i, n) {
              var r,
                o,
                a,
                s = [],
                l = [],
                c = t.length,
                h =
                  e ||
                  (function (e, t, i) {
                    for (var n = 0, r = t.length; n < r; n++) oe(e, t[n], i);
                    return i;
                  })(f || "*", i.nodeType ? [i] : i, []),
                u = !p || (!e && f) ? h : ye(h, s, p, i, n),
                d = m ? (v || (e ? p : c || g) ? [] : t) : u;
              if ((m && m(u, d, i, n), g))
                for (r = ye(d, l), g(r, [], i, n), o = r.length; o--; )
                  (a = r[o]) && (d[l[o]] = !(u[l[o]] = a));
              if (e) {
                if (v || p) {
                  if (v) {
                    for (r = [], o = d.length; o--; )
                      (a = d[o]) && r.push((u[o] = a));
                    v(null, (d = []), r, n);
                  }
                  for (o = d.length; o--; )
                    (a = d[o]) &&
                      -1 < (r = v ? F(e, a) : s[o]) &&
                      (e[r] = !(t[r] = a));
                }
              } else (d = ye(d === t ? d.splice(c, d.length) : d)), v ? v(null, t, d, n) : D.apply(t, d);
            })
          );
        }
        function xe(g, v) {
          function e(e, t, i, n, r) {
            var o,
              a,
              s,
              l = 0,
              c = "0",
              h = e && [],
              u = [],
              d = b,
              p = e || (_ && x.find.TAG("*", r)),
              f = (E += null == d ? 1 : Math.random() || 0.1),
              m = p.length;
            for (
              r && (b = t === T || t || r);
              c !== m && null != (o = p[c]);
              c++
            ) {
              if (_ && o) {
                for (
                  a = 0, t || o.ownerDocument === T || (w(o), (i = !S));
                  (s = g[a++]);

                )
                  if (s(o, t || T, i)) {
                    n.push(o);
                    break;
                  }
                r && (E = f);
              }
              y && ((o = !s && o) && l--, e && h.push(o));
            }
            if (((l += c), y && c !== l)) {
              for (a = 0; (s = v[a++]); ) s(h, u, t, i);
              if (e) {
                if (0 < l) for (; c--; ) h[c] || u[c] || (u[c] = O.call(n));
                u = ye(u);
              }
              D.apply(n, u),
                r && !e && 0 < u.length && 1 < l + v.length && oe.uniqueSort(n);
            }
            return r && ((E = f), (b = d)), h;
          }
          var y = 0 < v.length,
            _ = 0 < g.length;
          return y ? se(e) : e;
        }
        return (
          (fe.prototype = x.filters = x.pseudos),
          (x.setFilters = new fe()),
          (f = oe.tokenize =
            function (e, t) {
              var i,
                n,
                r,
                o,
                a,
                s,
                l,
                c = L[e + " "];
              if (c) return t ? 0 : c.slice(0);
              for (a = e, s = [], l = x.preFilter; a; ) {
                for (o in ((i && !(n = V.exec(a))) ||
                  (n && (a = a.slice(n[0].length) || a), s.push((r = []))),
                (i = !1),
                (n = W.exec(a)) &&
                  ((i = n.shift()),
                  r.push({ value: i, type: n[0].replace(G, " ") }),
                  (a = a.slice(i.length))),
                x.filter))
                  !(n = Q[o].exec(a)) ||
                    (l[o] && !(n = l[o](n))) ||
                    ((i = n.shift()),
                    r.push({ value: i, type: o, matches: n }),
                    (a = a.slice(i.length)));
                if (!i) break;
              }
              return t ? a.length : a ? oe.error(e) : L(e, s).slice(0);
            }),
          (d = oe.compile =
            function (e, t) {
              var i,
                n = [],
                r = [],
                o = C[e + " "];
              if (!o) {
                for (i = (t = t || f(e)).length; i--; )
                  ((o = (function e(t) {
                    for (
                      var n,
                        i,
                        r,
                        o = t.length,
                        a = x.relative[t[0].type],
                        s = a || x.relative[" "],
                        l = a ? 1 : 0,
                        c = ge(
                          function (e) {
                            return e === n;
                          },
                          s,
                          !0
                        ),
                        h = ge(
                          function (e) {
                            return -1 < F(n, e);
                          },
                          s,
                          !0
                        ),
                        u = [
                          function (e, t, i) {
                            return (
                              (i =
                                (!a && (i || t !== b)) ||
                                ((n = t).nodeType ? c : h)(e, t, i)),
                              (n = null),
                              i
                            );
                          },
                        ];
                      l < o;
                      l++
                    )
                      if ((i = x.relative[t[l].type])) u = [ge(ve(u), i)];
                      else {
                        if (
                          (i = x.filter[t[l].type].apply(null, t[l].matches))[M]
                        ) {
                          for (r = ++l; r < o && !x.relative[t[r].type]; r++);
                          return _e(
                            1 < l && ve(u),
                            1 < l &&
                              me(
                                t
                                  .slice(0, l - 1)
                                  .concat({
                                    value: " " === t[l - 2].type ? "*" : "",
                                  })
                              ).replace(G, "$1"),
                            i,
                            l < r && e(t.slice(l, r)),
                            r < o && e((t = t.slice(r))),
                            r < o && me(t)
                          );
                        }
                        u.push(i);
                      }
                    return ve(u);
                  })(t[i]))[M]
                    ? n
                    : r
                  ).push(o);
                (o = C(e, xe(r, n))).selector = e;
              }
              return o;
            }),
          (m = oe.select =
            function (e, t, i, n) {
              var r,
                o,
                a,
                s,
                l,
                c = "function" == typeof e && e,
                h = !n && f((e = c.selector || e));
              if (((i = i || []), 1 === h.length)) {
                if (
                  2 < (o = h[0] = h[0].slice(0)).length &&
                  "ID" === (a = o[0]).type &&
                  9 === t.nodeType &&
                  S &&
                  x.relative[o[1].type]
                ) {
                  if (
                    !(t = (x.find.ID(a.matches[0].replace(te, u), t) || [])[0])
                  )
                    return i;
                  c && (t = t.parentNode),
                    (e = e.slice(o.shift().value.length));
                }
                for (
                  r = Q.needsContext.test(e) ? 0 : o.length;
                  r-- && ((a = o[r]), !x.relative[(s = a.type)]);

                )
                  if (
                    (l = x.find[s]) &&
                    (n = l(
                      a.matches[0].replace(te, u),
                      (ee.test(o[0].type) && pe(t.parentNode)) || t
                    ))
                  ) {
                    if ((o.splice(r, 1), !(e = n.length && me(o))))
                      return D.apply(i, n), i;
                    break;
                  }
              }
              return (
                (c || d(e, h))(
                  n,
                  t,
                  !S,
                  i,
                  !t || (ee.test(e) && pe(t.parentNode)) || t
                ),
                i
              );
            }),
          (p.sortStable = M.split("").sort(P).join("") === M),
          (p.detectDuplicates = !!c),
          w(),
          (p.sortDetached = le(function (e) {
            return 1 & e.compareDocumentPosition(T.createElement("fieldset"));
          })),
          le(function (e) {
            return (
              (e.innerHTML = "<a href='#'></a>"),
              "#" === e.firstChild.getAttribute("href")
            );
          }) ||
            ce("type|href|height|width", function (e, t, i) {
              if (!i)
                return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2);
            }),
          (p.attributes &&
            le(function (e) {
              return (
                (e.innerHTML = "<input/>"),
                e.firstChild.setAttribute("value", ""),
                "" === e.firstChild.getAttribute("value")
              );
            })) ||
            ce("value", function (e, t, i) {
              if (!i && "input" === e.nodeName.toLowerCase())
                return e.defaultValue;
            }),
          le(function (e) {
            return null == e.getAttribute("disabled");
          }) ||
            ce(k, function (e, t, i) {
              if (!i)
                return !0 === e[t]
                  ? t.toLowerCase()
                  : (t = e.getAttributeNode(t)) && t.specified
                  ? t.value
                  : null;
            }),
          oe
        );
      })(w);
      (S.find = _),
        (S.expr = _.selectors),
        (S.expr[":"] = S.expr.pseudos),
        (S.uniqueSort = S.unique = _.uniqueSort),
        (S.text = _.getText),
        (S.isXMLDoc = _.isXML),
        (S.contains = _.contains),
        (S.escapeSelector = _.escape);
      function x(e, t, i) {
        for (var n = [], r = void 0 !== i; (e = e[t]) && 9 !== e.nodeType; )
          if (1 === e.nodeType) {
            if (r && S(e).is(i)) break;
            n.push(e);
          }
        return n;
      }
      function b(e, t) {
        for (var i = []; e; e = e.nextSibling)
          1 === e.nodeType && e !== t && i.push(e);
        return i;
      }
      var M = S.expr.match.needsContext;
      function E(e, t) {
        return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
      }
      var A = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,
        L = /^.[^:#\[\.,]*$/;
      function C(e, i, n) {
        return S.isFunction(i)
          ? S.grep(e, function (e, t) {
              return !!i.call(e, t, e) !== n;
            })
          : i.nodeType
          ? S.grep(e, function (e) {
              return (e === i) !== n;
            })
          : "string" != typeof i
          ? S.grep(e, function (e) {
              return -1 < r.call(i, e) !== n;
            })
          : L.test(i)
          ? S.filter(i, e, n)
          : ((i = S.filter(i, e)),
            S.grep(e, function (e) {
              return -1 < r.call(i, e) !== n && 1 === e.nodeType;
            }));
      }
      (S.filter = function (e, t, i) {
        var n = t[0];
        return (
          i && (e = ":not(" + e + ")"),
          1 === t.length && 1 === n.nodeType
            ? S.find.matchesSelector(n, e)
              ? [n]
              : []
            : S.find.matches(
                e,
                S.grep(t, function (e) {
                  return 1 === e.nodeType;
                })
              )
        );
      }),
        S.fn.extend({
          find: function (e) {
            var t,
              i,
              n = this.length,
              r = this;
            if ("string" != typeof e)
              return this.pushStack(
                S(e).filter(function () {
                  for (t = 0; t < n; t++) if (S.contains(r[t], this)) return !0;
                })
              );
            for (i = this.pushStack([]), t = 0; t < n; t++) S.find(e, r[t], i);
            return 1 < n ? S.uniqueSort(i) : i;
          },
          filter: function (e) {
            return this.pushStack(C(this, e || [], !1));
          },
          not: function (e) {
            return this.pushStack(C(this, e || [], !0));
          },
          is: function (e) {
            return !!C(
              this,
              "string" == typeof e && M.test(e) ? S(e) : e || [],
              !1
            ).length;
          },
        });
      var P,
        R = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
      ((S.fn.init = function (e, t, i) {
        if (!e) return this;
        if (((i = i || P), "string" != typeof e))
          return e.nodeType
            ? ((this[0] = e), (this.length = 1), this)
            : S.isFunction(e)
            ? void 0 !== i.ready
              ? i.ready(e)
              : e(S)
            : S.makeArray(e, this);
        if (
          !(n =
            "<" === e[0] && ">" === e[e.length - 1] && 3 <= e.length
              ? [null, e, null]
              : R.exec(e)) ||
          (!n[1] && t)
        )
          return (!t || t.jquery ? t || i : this.constructor(t)).find(e);
        if (n[1]) {
          if (
            ((t = t instanceof S ? t[0] : t),
            S.merge(
              this,
              S.parseHTML(n[1], t && t.nodeType ? t.ownerDocument || t : T, !0)
            ),
            A.test(n[1]) && S.isPlainObject(t))
          )
            for (var n in t)
              S.isFunction(this[n]) ? this[n](t[n]) : this.attr(n, t[n]);
          return this;
        }
        return (
          (e = T.getElementById(n[2])) && ((this[0] = e), (this.length = 1)),
          this
        );
      }).prototype = S.fn),
        (P = S(T));
      var O = /^(?:parents|prev(?:Until|All))/,
        I = { children: !0, contents: !0, next: !0, prev: !0 };
      function D(e, t) {
        for (; (e = e[t]) && 1 !== e.nodeType; );
        return e;
      }
      S.fn.extend({
        has: function (e) {
          var t = S(e, this),
            i = t.length;
          return this.filter(function () {
            for (var e = 0; e < i; e++) if (S.contains(this, t[e])) return !0;
          });
        },
        closest: function (e, t) {
          var i,
            n = 0,
            r = this.length,
            o = [],
            a = "string" != typeof e && S(e);
          if (!M.test(e))
            for (; n < r; n++)
              for (i = this[n]; i && i !== t; i = i.parentNode)
                if (
                  i.nodeType < 11 &&
                  (a
                    ? -1 < a.index(i)
                    : 1 === i.nodeType && S.find.matchesSelector(i, e))
                ) {
                  o.push(i);
                  break;
                }
          return this.pushStack(1 < o.length ? S.uniqueSort(o) : o);
        },
        index: function (e) {
          return e
            ? "string" == typeof e
              ? r.call(S(e), this[0])
              : r.call(this, e.jquery ? e[0] : e)
            : this[0] && this[0].parentNode
            ? this.first().prevAll().length
            : -1;
        },
        add: function (e, t) {
          return this.pushStack(S.uniqueSort(S.merge(this.get(), S(e, t))));
        },
        addBack: function (e) {
          return this.add(
            null == e ? this.prevObject : this.prevObject.filter(e)
          );
        },
      }),
        S.each(
          {
            parent: function (e) {
              e = e.parentNode;
              return e && 11 !== e.nodeType ? e : null;
            },
            parents: function (e) {
              return x(e, "parentNode");
            },
            parentsUntil: function (e, t, i) {
              return x(e, "parentNode", i);
            },
            next: function (e) {
              return D(e, "nextSibling");
            },
            prev: function (e) {
              return D(e, "previousSibling");
            },
            nextAll: function (e) {
              return x(e, "nextSibling");
            },
            prevAll: function (e) {
              return x(e, "previousSibling");
            },
            nextUntil: function (e, t, i) {
              return x(e, "nextSibling", i);
            },
            prevUntil: function (e, t, i) {
              return x(e, "previousSibling", i);
            },
            siblings: function (e) {
              return b((e.parentNode || {}).firstChild, e);
            },
            children: function (e) {
              return b(e.firstChild);
            },
            contents: function (e) {
              return E(e, "iframe")
                ? e.contentDocument
                : (E(e, "template") && (e = e.content || e),
                  S.merge([], e.childNodes));
            },
          },
          function (n, r) {
            S.fn[n] = function (e, t) {
              var i = S.map(this, r, e);
              return (
                "Until" !== n.slice(-5) && (t = e),
                t && "string" == typeof t && (i = S.filter(t, i)),
                1 < this.length &&
                  (I[n] || S.uniqueSort(i), O.test(n) && i.reverse()),
                this.pushStack(i)
              );
            };
          }
        );
      var N = /[^\x20\t\r\n\f]+/g;
      function F(e) {
        return e;
      }
      function k(e) {
        throw e;
      }
      function U(e, t, i, n) {
        var r;
        try {
          e && S.isFunction((r = e.promise))
            ? r.call(e).done(t).fail(i)
            : e && S.isFunction((r = e.then))
            ? r.call(e, t, i)
            : t.apply(void 0, [e].slice(n));
        } catch (e) {
          i.apply(void 0, [e]);
        }
      }
      (S.Callbacks = function (n) {
        var e, i;
        n =
          "string" == typeof n
            ? ((e = n),
              (i = {}),
              S.each(e.match(N) || [], function (e, t) {
                i[t] = !0;
              }),
              i)
            : S.extend({}, n);
        function r() {
          for (s = s || n.once, a = o = !0; c.length; h = -1)
            for (t = c.shift(); ++h < l.length; )
              !1 === l[h].apply(t[0], t[1]) &&
                n.stopOnFalse &&
                ((h = l.length), (t = !1));
          n.memory || (t = !1), (o = !1), s && (l = t ? [] : "");
        }
        var o,
          t,
          a,
          s,
          l = [],
          c = [],
          h = -1,
          u = {
            add: function () {
              return (
                l &&
                  (t && !o && ((h = l.length - 1), c.push(t)),
                  (function i(e) {
                    S.each(e, function (e, t) {
                      S.isFunction(t)
                        ? (n.unique && u.has(t)) || l.push(t)
                        : t && t.length && "string" !== S.type(t) && i(t);
                    });
                  })(arguments),
                  t && !o && r()),
                this
              );
            },
            remove: function () {
              return (
                S.each(arguments, function (e, t) {
                  for (var i; -1 < (i = S.inArray(t, l, i)); )
                    l.splice(i, 1), i <= h && h--;
                }),
                this
              );
            },
            has: function (e) {
              return e ? -1 < S.inArray(e, l) : 0 < l.length;
            },
            empty: function () {
              return (l = l && []), this;
            },
            disable: function () {
              return (s = c = []), (l = t = ""), this;
            },
            disabled: function () {
              return !l;
            },
            lock: function () {
              return (s = c = []), t || o || (l = t = ""), this;
            },
            locked: function () {
              return !!s;
            },
            fireWith: function (e, t) {
              return (
                s ||
                  ((t = [e, (t = t || []).slice ? t.slice() : t]),
                  c.push(t),
                  o || r()),
                this
              );
            },
            fire: function () {
              return u.fireWith(this, arguments), this;
            },
            fired: function () {
              return !!a;
            },
          };
        return u;
      }),
        S.extend({
          Deferred: function (e) {
            var o = [
                [
                  "notify",
                  "progress",
                  S.Callbacks("memory"),
                  S.Callbacks("memory"),
                  2,
                ],
                [
                  "resolve",
                  "done",
                  S.Callbacks("once memory"),
                  S.Callbacks("once memory"),
                  0,
                  "resolved",
                ],
                [
                  "reject",
                  "fail",
                  S.Callbacks("once memory"),
                  S.Callbacks("once memory"),
                  1,
                  "rejected",
                ],
              ],
              r = "pending",
              a = {
                state: function () {
                  return r;
                },
                always: function () {
                  return s.done(arguments).fail(arguments), this;
                },
                catch: function (e) {
                  return a.then(null, e);
                },
                pipe: function () {
                  var r = arguments;
                  return S.Deferred(function (n) {
                    S.each(o, function (e, t) {
                      var i = S.isFunction(r[t[4]]) && r[t[4]];
                      s[t[1]](function () {
                        var e = i && i.apply(this, arguments);
                        e && S.isFunction(e.promise)
                          ? e
                              .promise()
                              .progress(n.notify)
                              .done(n.resolve)
                              .fail(n.reject)
                          : n[t[0] + "With"](this, i ? [e] : arguments);
                      });
                    }),
                      (r = null);
                  }).promise();
                },
                then: function (t, i, n) {
                  var l = 0;
                  function c(r, o, a, s) {
                    return function () {
                      function e() {
                        var e, t;
                        if (!(r < l)) {
                          if ((e = a.apply(i, n)) === o.promise())
                            throw new TypeError("Thenable self-resolution");
                          (t =
                            e &&
                            ("object" == typeof e || "function" == typeof e) &&
                            e.then),
                            S.isFunction(t)
                              ? s
                                ? t.call(e, c(l, o, F, s), c(l, o, k, s))
                                : (l++,
                                  t.call(
                                    e,
                                    c(l, o, F, s),
                                    c(l, o, k, s),
                                    c(l, o, F, o.notifyWith)
                                  ))
                              : (a !== F && ((i = void 0), (n = [e])),
                                (s || o.resolveWith)(i, n));
                        }
                      }
                      var i = this,
                        n = arguments,
                        t = s
                          ? e
                          : function () {
                              try {
                                e();
                              } catch (e) {
                                S.Deferred.exceptionHook &&
                                  S.Deferred.exceptionHook(e, t.stackTrace),
                                  l <= r + 1 &&
                                    (a !== k && ((i = void 0), (n = [e])),
                                    o.rejectWith(i, n));
                              }
                            };
                      r
                        ? t()
                        : (S.Deferred.getStackHook &&
                            (t.stackTrace = S.Deferred.getStackHook()),
                          w.setTimeout(t));
                    };
                  }
                  return S.Deferred(function (e) {
                    o[0][3].add(c(0, e, S.isFunction(n) ? n : F, e.notifyWith)),
                      o[1][3].add(c(0, e, S.isFunction(t) ? t : F)),
                      o[2][3].add(c(0, e, S.isFunction(i) ? i : k));
                  }).promise();
                },
                promise: function (e) {
                  return null != e ? S.extend(e, a) : a;
                },
              },
              s = {};
            return (
              S.each(o, function (e, t) {
                var i = t[2],
                  n = t[5];
                (a[t[1]] = i.add),
                  n &&
                    i.add(
                      function () {
                        r = n;
                      },
                      o[3 - e][2].disable,
                      o[0][2].lock
                    ),
                  i.add(t[3].fire),
                  (s[t[0]] = function () {
                    return (
                      s[t[0] + "With"](this === s ? void 0 : this, arguments),
                      this
                    );
                  }),
                  (s[t[0] + "With"] = i.fireWith);
              }),
              a.promise(s),
              e && e.call(s, s),
              s
            );
          },
          when: function (e) {
            function t(t) {
              return function (e) {
                (r[t] = this),
                  (o[t] = 1 < arguments.length ? s.call(arguments) : e),
                  --i || a.resolveWith(r, o);
              };
            }
            var i = arguments.length,
              n = i,
              r = Array(n),
              o = s.call(arguments),
              a = S.Deferred();
            if (
              i <= 1 &&
              (U(e, a.done(t(n)).resolve, a.reject, !i),
              "pending" === a.state() || S.isFunction(o[n] && o[n].then))
            )
              return a.then();
            for (; n--; ) U(o[n], t(n), a.reject);
            return a.promise();
          },
        });
      var B = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
      (S.Deferred.exceptionHook = function (e, t) {
        w.console &&
          w.console.warn &&
          e &&
          B.test(e.name) &&
          w.console.warn("jQuery.Deferred exception: " + e.message, e.stack, t);
      }),
        (S.readyException = function (e) {
          w.setTimeout(function () {
            throw e;
          });
        });
      var z = S.Deferred();
      function j() {
        T.removeEventListener("DOMContentLoaded", j),
          w.removeEventListener("load", j),
          S.ready();
      }
      (S.fn.ready = function (e) {
        return (
          z.then(e).catch(function (e) {
            S.readyException(e);
          }),
          this
        );
      }),
        S.extend({
          isReady: !1,
          readyWait: 1,
          ready: function (e) {
            (!0 === e ? --S.readyWait : S.isReady) ||
              ((S.isReady = !0) !== e && 0 < --S.readyWait) ||
              z.resolveWith(T, [S]);
          },
        }),
        (S.ready.then = z.then),
        "complete" === T.readyState ||
        ("loading" !== T.readyState && !T.documentElement.doScroll)
          ? w.setTimeout(S.ready)
          : (T.addEventListener("DOMContentLoaded", j),
            w.addEventListener("load", j));
      function H(e) {
        return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType;
      }
      var G = function (e, t, i, n, r, o, a) {
        var s = 0,
          l = e.length,
          c = null == i;
        if ("object" === S.type(i))
          for (s in ((r = !0), i)) G(e, t, s, i[s], !0, o, a);
        else if (
          void 0 !== n &&
          ((r = !0),
          S.isFunction(n) || (a = !0),
          c &&
            (t = a
              ? (t.call(e, n), null)
              : ((c = t),
                function (e, t, i) {
                  return c.call(S(e), i);
                })),
          t)
        )
          for (; s < l; s++) t(e[s], i, a ? n : n.call(e[s], s, t(e[s], i)));
        return r ? e : c ? t.call(e) : l ? t(e[0], i) : o;
      };
      function V() {
        this.expando = S.expando + V.uid++;
      }
      (V.uid = 1),
        (V.prototype = {
          cache: function (e) {
            var t = e[this.expando];
            return (
              t ||
                ((t = {}),
                H(e) &&
                  (e.nodeType
                    ? (e[this.expando] = t)
                    : Object.defineProperty(e, this.expando, {
                        value: t,
                        configurable: !0,
                      }))),
              t
            );
          },
          set: function (e, t, i) {
            var n,
              r = this.cache(e);
            if ("string" == typeof t) r[S.camelCase(t)] = i;
            else for (n in t) r[S.camelCase(n)] = t[n];
            return r;
          },
          get: function (e, t) {
            return void 0 === t
              ? this.cache(e)
              : e[this.expando] && e[this.expando][S.camelCase(t)];
          },
          access: function (e, t, i) {
            return void 0 === t || (t && "string" == typeof t && void 0 === i)
              ? this.get(e, t)
              : (this.set(e, t, i), void 0 !== i ? i : t);
          },
          remove: function (e, t) {
            var i,
              n = e[this.expando];
            if (void 0 !== n) {
              if (void 0 !== t) {
                i = (t = Array.isArray(t)
                  ? t.map(S.camelCase)
                  : (t = S.camelCase(t)) in n
                  ? [t]
                  : t.match(N) || []).length;
                for (; i--; ) delete n[t[i]];
              }
              (void 0 !== t && !S.isEmptyObject(n)) ||
                (e.nodeType
                  ? (e[this.expando] = void 0)
                  : delete e[this.expando]);
            }
          },
          hasData: function (e) {
            e = e[this.expando];
            return void 0 !== e && !S.isEmptyObject(e);
          },
        });
      var W = new V(),
        X = new V(),
        q = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
        Y = /[A-Z]/g;
      function Q(e, t, i) {
        var n, r;
        if (void 0 === i && 1 === e.nodeType)
          if (
            ((n = "data-" + t.replace(Y, "-$&").toLowerCase()),
            "string" == typeof (i = e.getAttribute(n)))
          ) {
            try {
              i =
                "true" === (r = i) ||
                ("false" !== r &&
                  ("null" === r
                    ? null
                    : r === +r + ""
                    ? +r
                    : q.test(r)
                    ? JSON.parse(r)
                    : r));
            } catch (e) {}
            X.set(e, t, i);
          } else i = void 0;
        return i;
      }
      S.extend({
        hasData: function (e) {
          return X.hasData(e) || W.hasData(e);
        },
        data: function (e, t, i) {
          return X.access(e, t, i);
        },
        removeData: function (e, t) {
          X.remove(e, t);
        },
        _data: function (e, t, i) {
          return W.access(e, t, i);
        },
        _removeData: function (e, t) {
          W.remove(e, t);
        },
      }),
        S.fn.extend({
          data: function (i, e) {
            var t,
              n,
              r,
              o = this[0],
              a = o && o.attributes;
            if (void 0 !== i)
              return "object" == typeof i
                ? this.each(function () {
                    X.set(this, i);
                  })
                : G(
                    this,
                    function (e) {
                      var t;
                      return o && void 0 === e
                        ? void 0 !== (t = X.get(o, i)) ||
                          void 0 !== (t = Q(o, i))
                          ? t
                          : void 0
                        : void this.each(function () {
                            X.set(this, i, e);
                          });
                    },
                    null,
                    e,
                    1 < arguments.length,
                    null,
                    !0
                  );
            if (
              this.length &&
              ((r = X.get(o)), 1 === o.nodeType && !W.get(o, "hasDataAttrs"))
            ) {
              for (t = a.length; t--; )
                a[t] &&
                  0 === (n = a[t].name).indexOf("data-") &&
                  ((n = S.camelCase(n.slice(5))), Q(o, n, r[n]));
              W.set(o, "hasDataAttrs", !0);
            }
            return r;
          },
          removeData: function (e) {
            return this.each(function () {
              X.remove(this, e);
            });
          },
        }),
        S.extend({
          queue: function (e, t, i) {
            var n;
            if (e)
              return (
                (t = (t || "fx") + "queue"),
                (n = W.get(e, t)),
                i &&
                  (!n || Array.isArray(i)
                    ? (n = W.access(e, t, S.makeArray(i)))
                    : n.push(i)),
                n || []
              );
          },
          dequeue: function (e, t) {
            t = t || "fx";
            var i = S.queue(e, t),
              n = i.length,
              r = i.shift(),
              o = S._queueHooks(e, t);
            "inprogress" === r && ((r = i.shift()), n--),
              r &&
                ("fx" === t && i.unshift("inprogress"),
                delete o.stop,
                r.call(
                  e,
                  function () {
                    S.dequeue(e, t);
                  },
                  o
                )),
              !n && o && o.empty.fire();
          },
          _queueHooks: function (e, t) {
            var i = t + "queueHooks";
            return (
              W.get(e, i) ||
              W.access(e, i, {
                empty: S.Callbacks("once memory").add(function () {
                  W.remove(e, [t + "queue", i]);
                }),
              })
            );
          },
        }),
        S.fn.extend({
          queue: function (t, i) {
            var e = 2;
            return (
              "string" != typeof t && ((i = t), (t = "fx"), e--),
              arguments.length < e
                ? S.queue(this[0], t)
                : void 0 === i
                ? this
                : this.each(function () {
                    var e = S.queue(this, t, i);
                    S._queueHooks(this, t),
                      "fx" === t && "inprogress" !== e[0] && S.dequeue(this, t);
                  })
            );
          },
          dequeue: function (e) {
            return this.each(function () {
              S.dequeue(this, e);
            });
          },
          clearQueue: function (e) {
            return this.queue(e || "fx", []);
          },
          promise: function (e, t) {
            function i() {
              --r || o.resolveWith(a, [a]);
            }
            var n,
              r = 1,
              o = S.Deferred(),
              a = this,
              s = this.length;
            for (
              "string" != typeof e && ((t = e), (e = void 0)), e = e || "fx";
              s--;

            )
              (n = W.get(a[s], e + "queueHooks")) &&
                n.empty &&
                (r++, n.empty.add(i));
            return i(), o.promise(t);
          },
        });
      function Z(e, t, i, n) {
        var r,
          o = {};
        for (r in t) (o[r] = e.style[r]), (e.style[r] = t[r]);
        for (r in ((n = i.apply(e, n || [])), t)) e.style[r] = o[r];
        return n;
      }
      var J = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
        $ = new RegExp("^(?:([+-])=|)(" + J + ")([a-z%]*)$", "i"),
        K = ["Top", "Right", "Bottom", "Left"],
        ee = function (e, t) {
          return (
            "none" === (e = t || e).style.display ||
            ("" === e.style.display &&
              S.contains(e.ownerDocument, e) &&
              "none" === S.css(e, "display"))
          );
        };
      function te(e, t, i, n) {
        var r,
          o = 1,
          a = 20,
          s = n
            ? function () {
                return n.cur();
              }
            : function () {
                return S.css(e, t, "");
              },
          l = s(),
          c = (i && i[3]) || (S.cssNumber[t] ? "" : "px"),
          h = (S.cssNumber[t] || ("px" !== c && +l)) && $.exec(S.css(e, t));
        if (h && h[3] !== c)
          for (
            c = c || h[3], i = i || [], h = +l || 1;
            (h /= o = o || ".5"),
              S.style(e, t, h + c),
              o !== (o = s() / l) && 1 !== o && --a;

          );
        return (
          i &&
            ((h = +h || +l || 0),
            (r = i[1] ? h + (i[1] + 1) * i[2] : +i[2]),
            n && ((n.unit = c), (n.start = h), (n.end = r))),
          r
        );
      }
      var ie = {};
      function ne(e, t) {
        for (var i, n, r, o, a, s = [], l = 0, c = e.length; l < c; l++)
          (n = e[l]).style &&
            ((i = n.style.display),
            t
              ? ("none" === i &&
                  ((s[l] = W.get(n, "display") || null),
                  s[l] || (n.style.display = "")),
                "" === n.style.display &&
                  ee(n) &&
                  (s[l] =
                    ((a = o = void 0),
                    (o = (r = n).ownerDocument),
                    (a = r.nodeName),
                    (r = ie[a]) ||
                      ((o = o.body.appendChild(o.createElement(a))),
                      (r = S.css(o, "display")),
                      o.parentNode.removeChild(o),
                      "none" === r && (r = "block"),
                      (ie[a] = r)))))
              : "none" !== i && ((s[l] = "none"), W.set(n, "display", i)));
        for (l = 0; l < c; l++) null != s[l] && (e[l].style.display = s[l]);
        return e;
      }
      S.fn.extend({
        show: function () {
          return ne(this, !0);
        },
        hide: function () {
          return ne(this);
        },
        toggle: function (e) {
          return "boolean" == typeof e
            ? e
              ? this.show()
              : this.hide()
            : this.each(function () {
                ee(this) ? S(this).show() : S(this).hide();
              });
        },
      });
      var re = /^(?:checkbox|radio)$/i,
        oe = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i,
        ae = /^$|\/(?:java|ecma)script/i,
        se = {
          option: [1, "<select multiple='multiple'>", "</select>"],
          thead: [1, "<table>", "</table>"],
          col: [2, "<table><colgroup>", "</colgroup></table>"],
          tr: [2, "<table><tbody>", "</tbody></table>"],
          td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
          _default: [0, "", ""],
        };
      function le(e, t) {
        var i =
          void 0 !== e.getElementsByTagName
            ? e.getElementsByTagName(t || "*")
            : void 0 !== e.querySelectorAll
            ? e.querySelectorAll(t || "*")
            : [];
        return void 0 === t || (t && E(e, t)) ? S.merge([e], i) : i;
      }
      function ce(e, t) {
        for (var i = 0, n = e.length; i < n; i++)
          W.set(e[i], "globalEval", !t || W.get(t[i], "globalEval"));
      }
      (se.optgroup = se.option),
        (se.tbody = se.tfoot = se.colgroup = se.caption = se.thead),
        (se.th = se.td);
      var he = /<|&#?\w+;/;
      function ue(e, t, i, n, r) {
        for (
          var o,
            a,
            s,
            l,
            c,
            h = t.createDocumentFragment(),
            u = [],
            d = 0,
            p = e.length;
          d < p;
          d++
        )
          if ((o = e[d]) || 0 === o)
            if ("object" === S.type(o)) S.merge(u, o.nodeType ? [o] : o);
            else if (he.test(o)) {
              for (
                a = a || h.appendChild(t.createElement("div")),
                  s = (oe.exec(o) || ["", ""])[1].toLowerCase(),
                  s = se[s] || se._default,
                  a.innerHTML = s[1] + S.htmlPrefilter(o) + s[2],
                  c = s[0];
                c--;

              )
                a = a.lastChild;
              S.merge(u, a.childNodes), ((a = h.firstChild).textContent = "");
            } else u.push(t.createTextNode(o));
        for (h.textContent = "", d = 0; (o = u[d++]); )
          if (n && -1 < S.inArray(o, n)) r && r.push(o);
          else if (
            ((l = S.contains(o.ownerDocument, o)),
            (a = le(h.appendChild(o), "script")),
            l && ce(a),
            i)
          )
            for (c = 0; (o = a[c++]); ) ae.test(o.type || "") && i.push(o);
        return h;
      }
      (t = T.createDocumentFragment().appendChild(T.createElement("div"))),
        (_ = T.createElement("input")).setAttribute("type", "radio"),
        _.setAttribute("checked", "checked"),
        _.setAttribute("name", "t"),
        t.appendChild(_),
        (g.checkClone = t.cloneNode(!0).cloneNode(!0).lastChild.checked),
        (t.innerHTML = "<textarea>x</textarea>"),
        (g.noCloneChecked = !!t.cloneNode(!0).lastChild.defaultValue);
      var de = T.documentElement,
        pe = /^key/,
        fe = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
        me = /^([^.]*)(?:\.(.+)|)/;
      function ge() {
        return !0;
      }
      function ve() {
        return !1;
      }
      function ye() {
        try {
          return T.activeElement;
        } catch (e) {}
      }
      function _e(e, t, i, n, r, o) {
        var a, s;
        if ("object" == typeof t) {
          for (s in ("string" != typeof i && ((n = n || i), (i = void 0)), t))
            _e(e, s, i, n, t[s], o);
          return e;
        }
        if (
          (null == n && null == r
            ? ((r = i), (n = i = void 0))
            : null == r &&
              ("string" == typeof i
                ? ((r = n), (n = void 0))
                : ((r = n), (n = i), (i = void 0))),
          !1 === r)
        )
          r = ve;
        else if (!r) return e;
        return (
          1 === o &&
            ((a = r),
            ((r = function (e) {
              return S().off(e), a.apply(this, arguments);
            }).guid = a.guid || (a.guid = S.guid++))),
          e.each(function () {
            S.event.add(this, t, r, n, i);
          })
        );
      }
      (S.event = {
        global: {},
        add: function (t, e, i, n, r) {
          var o,
            a,
            s,
            l,
            c,
            h,
            u,
            d,
            p,
            f = W.get(t);
          if (f)
            for (
              i.handler && ((i = (o = i).handler), (r = o.selector)),
                r && S.find.matchesSelector(de, r),
                i.guid || (i.guid = S.guid++),
                (s = f.events) || (s = f.events = {}),
                (a = f.handle) ||
                  (a = f.handle =
                    function (e) {
                      return void 0 !== S && S.event.triggered !== e.type
                        ? S.event.dispatch.apply(t, arguments)
                        : void 0;
                    }),
                l = (e = (e || "").match(N) || [""]).length;
              l--;

            )
              (u = p = (c = me.exec(e[l]) || [])[1]),
                (d = (c[2] || "").split(".").sort()),
                u &&
                  ((h = S.event.special[u] || {}),
                  (u = (r ? h.delegateType : h.bindType) || u),
                  (h = S.event.special[u] || {}),
                  (c = S.extend(
                    {
                      type: u,
                      origType: p,
                      data: n,
                      handler: i,
                      guid: i.guid,
                      selector: r,
                      needsContext: r && S.expr.match.needsContext.test(r),
                      namespace: d.join("."),
                    },
                    o
                  )),
                  (p = s[u]) ||
                    (((p = s[u] = []).delegateCount = 0),
                    (h.setup && !1 !== h.setup.call(t, n, d, a)) ||
                      (t.addEventListener && t.addEventListener(u, a))),
                  h.add &&
                    (h.add.call(t, c),
                    c.handler.guid || (c.handler.guid = i.guid)),
                  r ? p.splice(p.delegateCount++, 0, c) : p.push(c),
                  (S.event.global[u] = !0));
        },
        remove: function (e, t, i, n, r) {
          var o,
            a,
            s,
            l,
            c,
            h,
            u,
            d,
            p,
            f,
            m,
            g = W.hasData(e) && W.get(e);
          if (g && (l = g.events)) {
            for (c = (t = (t || "").match(N) || [""]).length; c--; )
              if (
                ((p = m = (s = me.exec(t[c]) || [])[1]),
                (f = (s[2] || "").split(".").sort()),
                p)
              ) {
                for (
                  u = S.event.special[p] || {},
                    d = l[(p = (n ? u.delegateType : u.bindType) || p)] || [],
                    s =
                      s[2] &&
                      new RegExp(
                        "(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)"
                      ),
                    a = o = d.length;
                  o--;

                )
                  (h = d[o]),
                    (!r && m !== h.origType) ||
                      (i && i.guid !== h.guid) ||
                      (s && !s.test(h.namespace)) ||
                      (n && n !== h.selector && ("**" !== n || !h.selector)) ||
                      (d.splice(o, 1),
                      h.selector && d.delegateCount--,
                      u.remove && u.remove.call(e, h));
                a &&
                  !d.length &&
                  ((u.teardown && !1 !== u.teardown.call(e, f, g.handle)) ||
                    S.removeEvent(e, p, g.handle),
                  delete l[p]);
              } else for (p in l) S.event.remove(e, p + t[c], i, n, !0);
            S.isEmptyObject(l) && W.remove(e, "handle events");
          }
        },
        dispatch: function (e) {
          var t,
            i,
            n,
            r,
            o,
            a = S.event.fix(e),
            s = new Array(arguments.length),
            l = (W.get(this, "events") || {})[a.type] || [],
            e = S.event.special[a.type] || {};
          for (s[0] = a, t = 1; t < arguments.length; t++) s[t] = arguments[t];
          if (
            ((a.delegateTarget = this),
            !e.preDispatch || !1 !== e.preDispatch.call(this, a))
          ) {
            for (
              o = S.event.handlers.call(this, a, l), t = 0;
              (n = o[t++]) && !a.isPropagationStopped();

            )
              for (
                a.currentTarget = n.elem, i = 0;
                (r = n.handlers[i++]) && !a.isImmediatePropagationStopped();

              )
                (a.rnamespace && !a.rnamespace.test(r.namespace)) ||
                  ((a.handleObj = r),
                  (a.data = r.data),
                  void 0 !==
                    (r = (
                      (S.event.special[r.origType] || {}).handle || r.handler
                    ).apply(n.elem, s)) &&
                    !1 === (a.result = r) &&
                    (a.preventDefault(), a.stopPropagation()));
            return e.postDispatch && e.postDispatch.call(this, a), a.result;
          }
        },
        handlers: function (e, t) {
          var i,
            n,
            r,
            o,
            a,
            s = [],
            l = t.delegateCount,
            c = e.target;
          if (l && c.nodeType && !("click" === e.type && 1 <= e.button))
            for (; c !== this; c = c.parentNode || this)
              if (
                1 === c.nodeType &&
                ("click" !== e.type || !0 !== c.disabled)
              ) {
                for (o = [], a = {}, i = 0; i < l; i++)
                  void 0 === a[(r = (n = t[i]).selector + " ")] &&
                    (a[r] = n.needsContext
                      ? -1 < S(r, this).index(c)
                      : S.find(r, this, null, [c]).length),
                    a[r] && o.push(n);
                o.length && s.push({ elem: c, handlers: o });
              }
          return (
            (c = this),
            l < t.length && s.push({ elem: c, handlers: t.slice(l) }),
            s
          );
        },
        addProp: function (t, e) {
          Object.defineProperty(S.Event.prototype, t, {
            enumerable: !0,
            configurable: !0,
            get: S.isFunction(e)
              ? function () {
                  if (this.originalEvent) return e(this.originalEvent);
                }
              : function () {
                  if (this.originalEvent) return this.originalEvent[t];
                },
            set: function (e) {
              Object.defineProperty(this, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: e,
              });
            },
          });
        },
        fix: function (e) {
          return e[S.expando] ? e : new S.Event(e);
        },
        special: {
          load: { noBubble: !0 },
          focus: {
            trigger: function () {
              if (this !== ye() && this.focus) return this.focus(), !1;
            },
            delegateType: "focusin",
          },
          blur: {
            trigger: function () {
              if (this === ye() && this.blur) return this.blur(), !1;
            },
            delegateType: "focusout",
          },
          click: {
            trigger: function () {
              if ("checkbox" === this.type && this.click && E(this, "input"))
                return this.click(), !1;
            },
            _default: function (e) {
              return E(e.target, "a");
            },
          },
          beforeunload: {
            postDispatch: function (e) {
              void 0 !== e.result &&
                e.originalEvent &&
                (e.originalEvent.returnValue = e.result);
            },
          },
        },
      }),
        (S.removeEvent = function (e, t, i) {
          e.removeEventListener && e.removeEventListener(t, i);
        }),
        (S.Event = function (e, t) {
          if (!(this instanceof S.Event)) return new S.Event(e, t);
          e && e.type
            ? ((this.originalEvent = e),
              (this.type = e.type),
              (this.isDefaultPrevented =
                e.defaultPrevented ||
                (void 0 === e.defaultPrevented && !1 === e.returnValue)
                  ? ge
                  : ve),
              (this.target =
                e.target && 3 === e.target.nodeType
                  ? e.target.parentNode
                  : e.target),
              (this.currentTarget = e.currentTarget),
              (this.relatedTarget = e.relatedTarget))
            : (this.type = e),
            t && S.extend(this, t),
            (this.timeStamp = (e && e.timeStamp) || S.now()),
            (this[S.expando] = !0);
        }),
        (S.Event.prototype = {
          constructor: S.Event,
          isDefaultPrevented: ve,
          isPropagationStopped: ve,
          isImmediatePropagationStopped: ve,
          isSimulated: !1,
          preventDefault: function () {
            var e = this.originalEvent;
            (this.isDefaultPrevented = ge),
              e && !this.isSimulated && e.preventDefault();
          },
          stopPropagation: function () {
            var e = this.originalEvent;
            (this.isPropagationStopped = ge),
              e && !this.isSimulated && e.stopPropagation();
          },
          stopImmediatePropagation: function () {
            var e = this.originalEvent;
            (this.isImmediatePropagationStopped = ge),
              e && !this.isSimulated && e.stopImmediatePropagation(),
              this.stopPropagation();
          },
        }),
        S.each(
          {
            altKey: !0,
            bubbles: !0,
            cancelable: !0,
            changedTouches: !0,
            ctrlKey: !0,
            detail: !0,
            eventPhase: !0,
            metaKey: !0,
            pageX: !0,
            pageY: !0,
            shiftKey: !0,
            view: !0,
            char: !0,
            charCode: !0,
            key: !0,
            keyCode: !0,
            button: !0,
            buttons: !0,
            clientX: !0,
            clientY: !0,
            offsetX: !0,
            offsetY: !0,
            pointerId: !0,
            pointerType: !0,
            screenX: !0,
            screenY: !0,
            targetTouches: !0,
            toElement: !0,
            touches: !0,
            which: function (e) {
              var t = e.button;
              return null == e.which && pe.test(e.type)
                ? null != e.charCode
                  ? e.charCode
                  : e.keyCode
                : !e.which && void 0 !== t && fe.test(e.type)
                ? 1 & t
                  ? 1
                  : 2 & t
                  ? 3
                  : 4 & t
                  ? 2
                  : 0
                : e.which;
            },
          },
          S.event.addProp
        ),
        S.each(
          {
            mouseenter: "mouseover",
            mouseleave: "mouseout",
            pointerenter: "pointerover",
            pointerleave: "pointerout",
          },
          function (e, r) {
            S.event.special[e] = {
              delegateType: r,
              bindType: r,
              handle: function (e) {
                var t,
                  i = e.relatedTarget,
                  n = e.handleObj;
                return (
                  (i && (i === this || S.contains(this, i))) ||
                    ((e.type = n.origType),
                    (t = n.handler.apply(this, arguments)),
                    (e.type = r)),
                  t
                );
              },
            };
          }
        ),
        S.fn.extend({
          on: function (e, t, i, n) {
            return _e(this, e, t, i, n);
          },
          one: function (e, t, i, n) {
            return _e(this, e, t, i, n, 1);
          },
          off: function (e, t, i) {
            var n, r;
            if (e && e.preventDefault && e.handleObj)
              return (
                (n = e.handleObj),
                S(e.delegateTarget).off(
                  n.namespace ? n.origType + "." + n.namespace : n.origType,
                  n.selector,
                  n.handler
                ),
                this
              );
            if ("object" != typeof e)
              return (
                (!1 !== t && "function" != typeof t) || ((i = t), (t = void 0)),
                !1 === i && (i = ve),
                this.each(function () {
                  S.event.remove(this, e, i, t);
                })
              );
            for (r in e) this.off(r, t, e[r]);
            return this;
          },
        });
      var xe =
          /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
        be = /<script|<style|<link/i,
        we = /checked\s*(?:[^=]|=\s*.checked.)/i,
        Te = /^true\/(.*)/,
        Se = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
      function Me(e, t) {
        return (
          (E(e, "table") &&
            E(11 !== t.nodeType ? t : t.firstChild, "tr") &&
            S(">tbody", e)[0]) ||
          e
        );
      }
      function Ee(e) {
        return (e.type = (null !== e.getAttribute("type")) + "/" + e.type), e;
      }
      function Ae(e) {
        var t = Te.exec(e.type);
        return t ? (e.type = t[1]) : e.removeAttribute("type"), e;
      }
      function Le(e, t) {
        var i, n, r, o, a, s;
        if (1 === t.nodeType) {
          if (
            W.hasData(e) &&
            ((o = W.access(e)), (a = W.set(t, o)), (s = o.events))
          )
            for (r in (delete a.handle, (a.events = {}), s))
              for (i = 0, n = s[r].length; i < n; i++)
                S.event.add(t, r, s[r][i]);
          X.hasData(e) &&
            ((e = X.access(e)), (e = S.extend({}, e)), X.set(t, e));
        }
      }
      function Ce(i, n, r, o) {
        n = m.apply([], n);
        var e,
          t,
          a,
          s,
          l,
          c,
          h = 0,
          u = i.length,
          d = u - 1,
          p = n[0],
          f = S.isFunction(p);
        if (f || (1 < u && "string" == typeof p && !g.checkClone && we.test(p)))
          return i.each(function (e) {
            var t = i.eq(e);
            f && (n[0] = p.call(this, e, t.html())), Ce(t, n, r, o);
          });
        if (
          u &&
          ((t = (e = ue(n, i[0].ownerDocument, !1, i, o)).firstChild),
          1 === e.childNodes.length && (e = t),
          t || o)
        ) {
          for (s = (a = S.map(le(e, "script"), Ee)).length; h < u; h++)
            (l = e),
              h !== d &&
                ((l = S.clone(l, !0, !0)), s && S.merge(a, le(l, "script"))),
              r.call(i[h], l, h);
          if (s)
            for (
              c = a[a.length - 1].ownerDocument, S.map(a, Ae), h = 0;
              h < s;
              h++
            )
              (l = a[h]),
                ae.test(l.type || "") &&
                  !W.access(l, "globalEval") &&
                  S.contains(c, l) &&
                  (l.src
                    ? S._evalUrl && S._evalUrl(l.src)
                    : v(l.textContent.replace(Se, ""), c));
        }
        return i;
      }
      function Pe(e, t, i) {
        for (var n, r = t ? S.filter(t, e) : e, o = 0; null != (n = r[o]); o++)
          i || 1 !== n.nodeType || S.cleanData(le(n)),
            n.parentNode &&
              (i && S.contains(n.ownerDocument, n) && ce(le(n, "script")),
              n.parentNode.removeChild(n));
        return e;
      }
      S.extend({
        htmlPrefilter: function (e) {
          return e.replace(xe, "<$1></$2>");
        },
        clone: function (e, t, i) {
          var n,
            r,
            o,
            a,
            s,
            l,
            c,
            h = e.cloneNode(!0),
            u = S.contains(e.ownerDocument, e);
          if (
            !(
              g.noCloneChecked ||
              (1 !== e.nodeType && 11 !== e.nodeType) ||
              S.isXMLDoc(e)
            )
          )
            for (a = le(h), n = 0, r = (o = le(e)).length; n < r; n++)
              (s = o[n]),
                (l = a[n]),
                (c = void 0),
                "input" === (c = l.nodeName.toLowerCase()) && re.test(s.type)
                  ? (l.checked = s.checked)
                  : ("input" !== c && "textarea" !== c) ||
                    (l.defaultValue = s.defaultValue);
          if (t)
            if (i)
              for (
                o = o || le(e), a = a || le(h), n = 0, r = o.length;
                n < r;
                n++
              )
                Le(o[n], a[n]);
            else Le(e, h);
          return (
            0 < (a = le(h, "script")).length && ce(a, !u && le(e, "script")), h
          );
        },
        cleanData: function (e) {
          for (
            var t, i, n, r = S.event.special, o = 0;
            void 0 !== (i = e[o]);
            o++
          )
            if (H(i)) {
              if ((t = i[W.expando])) {
                if (t.events)
                  for (n in t.events)
                    r[n] ? S.event.remove(i, n) : S.removeEvent(i, n, t.handle);
                i[W.expando] = void 0;
              }
              i[X.expando] && (i[X.expando] = void 0);
            }
        },
      }),
        S.fn.extend({
          detach: function (e) {
            return Pe(this, e, !0);
          },
          remove: function (e) {
            return Pe(this, e);
          },
          text: function (e) {
            return G(
              this,
              function (e) {
                return void 0 === e
                  ? S.text(this)
                  : this.empty().each(function () {
                      (1 !== this.nodeType &&
                        11 !== this.nodeType &&
                        9 !== this.nodeType) ||
                        (this.textContent = e);
                    });
              },
              null,
              e,
              arguments.length
            );
          },
          append: function () {
            return Ce(this, arguments, function (e) {
              (1 !== this.nodeType &&
                11 !== this.nodeType &&
                9 !== this.nodeType) ||
                Me(this, e).appendChild(e);
            });
          },
          prepend: function () {
            return Ce(this, arguments, function (e) {
              var t;
              (1 !== this.nodeType &&
                11 !== this.nodeType &&
                9 !== this.nodeType) ||
                (t = Me(this, e)).insertBefore(e, t.firstChild);
            });
          },
          before: function () {
            return Ce(this, arguments, function (e) {
              this.parentNode && this.parentNode.insertBefore(e, this);
            });
          },
          after: function () {
            return Ce(this, arguments, function (e) {
              this.parentNode &&
                this.parentNode.insertBefore(e, this.nextSibling);
            });
          },
          empty: function () {
            for (var e, t = 0; null != (e = this[t]); t++)
              1 === e.nodeType &&
                (S.cleanData(le(e, !1)), (e.textContent = ""));
            return this;
          },
          clone: function (e, t) {
            return (
              (e = null != e && e),
              (t = null == t ? e : t),
              this.map(function () {
                return S.clone(this, e, t);
              })
            );
          },
          html: function (e) {
            return G(
              this,
              function (e) {
                var t = this[0] || {},
                  i = 0,
                  n = this.length;
                if (void 0 === e && 1 === t.nodeType) return t.innerHTML;
                if (
                  "string" == typeof e &&
                  !be.test(e) &&
                  !se[(oe.exec(e) || ["", ""])[1].toLowerCase()]
                ) {
                  e = S.htmlPrefilter(e);
                  try {
                    for (; i < n; i++)
                      1 === (t = this[i] || {}).nodeType &&
                        (S.cleanData(le(t, !1)), (t.innerHTML = e));
                    t = 0;
                  } catch (e) {}
                }
                t && this.empty().append(e);
              },
              null,
              e,
              arguments.length
            );
          },
          replaceWith: function () {
            var i = [];
            return Ce(
              this,
              arguments,
              function (e) {
                var t = this.parentNode;
                S.inArray(this, i) < 0 &&
                  (S.cleanData(le(this)), t && t.replaceChild(e, this));
              },
              i
            );
          },
        }),
        S.each(
          {
            appendTo: "append",
            prependTo: "prepend",
            insertBefore: "before",
            insertAfter: "after",
            replaceAll: "replaceWith",
          },
          function (e, a) {
            S.fn[e] = function (e) {
              for (
                var t, i = [], n = S(e), r = n.length - 1, o = 0;
                o <= r;
                o++
              )
                (t = o === r ? this : this.clone(!0)),
                  S(n[o])[a](t),
                  l.apply(i, t.get());
              return this.pushStack(i);
            };
          }
        );
      var Re,
        Oe,
        Ie,
        De,
        Ne,
        Fe,
        ke = /^margin/,
        Ue = new RegExp("^(" + J + ")(?!px)[a-z%]+$", "i"),
        Be = function (e) {
          var t = e.ownerDocument.defaultView;
          return (t && t.opener) || (t = w), t.getComputedStyle(e);
        };
      function ze() {
        var e;
        Fe &&
          ((Fe.style.cssText =
            "box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%"),
          (Fe.innerHTML = ""),
          de.appendChild(Ne),
          (e = w.getComputedStyle(Fe)),
          (Re = "1%" !== e.top),
          (De = "2px" === e.marginLeft),
          (Oe = "4px" === e.width),
          (Fe.style.marginRight = "50%"),
          (Ie = "4px" === e.marginRight),
          de.removeChild(Ne),
          (Fe = null));
      }
      function je(e, t, i) {
        var n,
          r,
          o = e.style;
        return (
          (i = i || Be(e)) &&
            ("" !== (r = i.getPropertyValue(t) || i[t]) ||
              S.contains(e.ownerDocument, e) ||
              (r = S.style(e, t)),
            !g.pixelMarginRight() &&
              Ue.test(r) &&
              ke.test(t) &&
              ((n = o.width),
              (e = o.minWidth),
              (t = o.maxWidth),
              (o.minWidth = o.maxWidth = o.width = r),
              (r = i.width),
              (o.width = n),
              (o.minWidth = e),
              (o.maxWidth = t))),
          void 0 !== r ? r + "" : r
        );
      }
      function He(e, t) {
        return {
          get: function () {
            if (!e()) return (this.get = t).apply(this, arguments);
            delete this.get;
          },
        };
      }
      (Ne = T.createElement("div")),
        (Fe = T.createElement("div")).style &&
          ((Fe.style.backgroundClip = "content-box"),
          (Fe.cloneNode(!0).style.backgroundClip = ""),
          (g.clearCloneStyle = "content-box" === Fe.style.backgroundClip),
          (Ne.style.cssText =
            "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute"),
          Ne.appendChild(Fe),
          S.extend(g, {
            pixelPosition: function () {
              return ze(), Re;
            },
            boxSizingReliable: function () {
              return ze(), Oe;
            },
            pixelMarginRight: function () {
              return ze(), Ie;
            },
            reliableMarginLeft: function () {
              return ze(), De;
            },
          }));
      var Ge = /^(none|table(?!-c[ea]).+)/,
        Ve = /^--/,
        We = { position: "absolute", visibility: "hidden", display: "block" },
        Xe = { letterSpacing: "0", fontWeight: "400" },
        qe = ["Webkit", "Moz", "ms"],
        Ye = T.createElement("div").style;
      function Qe(e) {
        return (
          S.cssProps[e] ||
          (S.cssProps[e] =
            (function (e) {
              if (e in Ye) return e;
              for (
                var t = e[0].toUpperCase() + e.slice(1), i = qe.length;
                i--;

              )
                if ((e = qe[i] + t) in Ye) return e;
            })(e) || e)
        );
      }
      function Ze(e, t, i) {
        var n = $.exec(t);
        return n ? Math.max(0, n[2] - (i || 0)) + (n[3] || "px") : t;
      }
      function Je(e, t, i, n, r) {
        for (
          var o = 0,
            a = i === (n ? "border" : "content") ? 4 : "width" === t ? 1 : 0;
          a < 4;
          a += 2
        )
          "margin" === i && (o += S.css(e, i + K[a], !0, r)),
            n
              ? ("content" === i && (o -= S.css(e, "padding" + K[a], !0, r)),
                "margin" !== i &&
                  (o -= S.css(e, "border" + K[a] + "Width", !0, r)))
              : ((o += S.css(e, "padding" + K[a], !0, r)),
                "padding" !== i &&
                  (o += S.css(e, "border" + K[a] + "Width", !0, r)));
        return o;
      }
      function $e(e, t, i) {
        var n,
          r = Be(e),
          o = je(e, t, r),
          a = "border-box" === S.css(e, "boxSizing", !1, r);
        return Ue.test(o)
          ? o
          : ((n = a && (g.boxSizingReliable() || o === e.style[t])),
            "auto" === o && (o = e["offset" + t[0].toUpperCase() + t.slice(1)]),
            (o = parseFloat(o) || 0) +
              Je(e, t, i || (a ? "border" : "content"), n, r) +
              "px");
      }
      function Ke(e, t, i, n, r) {
        return new Ke.prototype.init(e, t, i, n, r);
      }
      S.extend({
        cssHooks: {
          opacity: {
            get: function (e, t) {
              if (t) {
                e = je(e, "opacity");
                return "" === e ? "1" : e;
              }
            },
          },
        },
        cssNumber: {
          animationIterationCount: !0,
          columnCount: !0,
          fillOpacity: !0,
          flexGrow: !0,
          flexShrink: !0,
          fontWeight: !0,
          lineHeight: !0,
          opacity: !0,
          order: !0,
          orphans: !0,
          widows: !0,
          zIndex: !0,
          zoom: !0,
        },
        cssProps: { float: "cssFloat" },
        style: function (e, t, i, n) {
          if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
            var r,
              o,
              a,
              s = S.camelCase(t),
              l = Ve.test(t),
              c = e.style;
            if (
              (l || (t = Qe(s)),
              (a = S.cssHooks[t] || S.cssHooks[s]),
              void 0 === i)
            )
              return a && "get" in a && void 0 !== (r = a.get(e, !1, n))
                ? r
                : c[t];
            "string" === (o = typeof i) &&
              (r = $.exec(i)) &&
              r[1] &&
              ((i = te(e, t, r)), (o = "number")),
              null != i &&
                i == i &&
                ("number" === o &&
                  (i += (r && r[3]) || (S.cssNumber[s] ? "" : "px")),
                g.clearCloneStyle ||
                  "" !== i ||
                  0 !== t.indexOf("background") ||
                  (c[t] = "inherit"),
                (a && "set" in a && void 0 === (i = a.set(e, i, n))) ||
                  (l ? c.setProperty(t, i) : (c[t] = i)));
          }
        },
        css: function (e, t, i, n) {
          var r,
            o = S.camelCase(t);
          return (
            Ve.test(t) || (t = Qe(o)),
            (o = S.cssHooks[t] || S.cssHooks[o]) &&
              "get" in o &&
              (r = o.get(e, !0, i)),
            void 0 === r && (r = je(e, t, n)),
            "normal" === r && t in Xe && (r = Xe[t]),
            "" === i || i
              ? ((t = parseFloat(r)), !0 === i || isFinite(t) ? t || 0 : r)
              : r
          );
        },
      }),
        S.each(["height", "width"], function (e, o) {
          S.cssHooks[o] = {
            get: function (e, t, i) {
              if (t)
                return !Ge.test(S.css(e, "display")) ||
                  (e.getClientRects().length && e.getBoundingClientRect().width)
                  ? $e(e, o, i)
                  : Z(e, We, function () {
                      return $e(e, o, i);
                    });
            },
            set: function (e, t, i) {
              var n,
                r = i && Be(e),
                r =
                  i &&
                  Je(e, o, i, "border-box" === S.css(e, "boxSizing", !1, r), r);
              return (
                r &&
                  (n = $.exec(t)) &&
                  "px" !== (n[3] || "px") &&
                  ((e.style[o] = t), (t = S.css(e, o))),
                Ze(0, t, r)
              );
            },
          };
        }),
        (S.cssHooks.marginLeft = He(g.reliableMarginLeft, function (e, t) {
          if (t)
            return (
              (parseFloat(je(e, "marginLeft")) ||
                e.getBoundingClientRect().left -
                  Z(e, { marginLeft: 0 }, function () {
                    return e.getBoundingClientRect().left;
                  })) + "px"
            );
        })),
        S.each({ margin: "", padding: "", border: "Width" }, function (r, o) {
          (S.cssHooks[r + o] = {
            expand: function (e) {
              for (
                var t = 0,
                  i = {},
                  n = "string" == typeof e ? e.split(" ") : [e];
                t < 4;
                t++
              )
                i[r + K[t] + o] = n[t] || n[t - 2] || n[0];
              return i;
            },
          }),
            ke.test(r) || (S.cssHooks[r + o].set = Ze);
        }),
        S.fn.extend({
          css: function (e, t) {
            return G(
              this,
              function (e, t, i) {
                var n,
                  r,
                  o = {},
                  a = 0;
                if (Array.isArray(t)) {
                  for (n = Be(e), r = t.length; a < r; a++)
                    o[t[a]] = S.css(e, t[a], !1, n);
                  return o;
                }
                return void 0 !== i ? S.style(e, t, i) : S.css(e, t);
              },
              e,
              t,
              1 < arguments.length
            );
          },
        }),
        ((S.Tween = Ke).prototype = {
          constructor: Ke,
          init: function (e, t, i, n, r, o) {
            (this.elem = e),
              (this.prop = i),
              (this.easing = r || S.easing._default),
              (this.options = t),
              (this.start = this.now = this.cur()),
              (this.end = n),
              (this.unit = o || (S.cssNumber[i] ? "" : "px"));
          },
          cur: function () {
            var e = Ke.propHooks[this.prop];
            return (e && e.get ? e : Ke.propHooks._default).get(this);
          },
          run: function (e) {
            var t,
              i = Ke.propHooks[this.prop];
            return (
              this.options.duration
                ? (this.pos = t =
                    S.easing[this.easing](
                      e,
                      this.options.duration * e,
                      0,
                      1,
                      this.options.duration
                    ))
                : (this.pos = t = e),
              (this.now = (this.end - this.start) * t + this.start),
              this.options.step &&
                this.options.step.call(this.elem, this.now, this),
              (i && i.set ? i : Ke.propHooks._default).set(this),
              this
            );
          },
        }),
        (Ke.prototype.init.prototype = Ke.prototype),
        (Ke.propHooks = {
          _default: {
            get: function (e) {
              return 1 !== e.elem.nodeType ||
                (null != e.elem[e.prop] && null == e.elem.style[e.prop])
                ? e.elem[e.prop]
                : (e = S.css(e.elem, e.prop, "")) && "auto" !== e
                ? e
                : 0;
            },
            set: function (e) {
              S.fx.step[e.prop]
                ? S.fx.step[e.prop](e)
                : 1 !== e.elem.nodeType ||
                  (null == e.elem.style[S.cssProps[e.prop]] &&
                    !S.cssHooks[e.prop])
                ? (e.elem[e.prop] = e.now)
                : S.style(e.elem, e.prop, e.now + e.unit);
            },
          },
        }),
        (Ke.propHooks.scrollTop = Ke.propHooks.scrollLeft =
          {
            set: function (e) {
              e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now);
            },
          }),
        (S.easing = {
          linear: function (e) {
            return e;
          },
          swing: function (e) {
            return 0.5 - Math.cos(e * Math.PI) / 2;
          },
          _default: "swing",
        }),
        (S.fx = Ke.prototype.init),
        (S.fx.step = {});
      var et,
        tt,
        it = /^(?:toggle|show|hide)$/,
        nt = /queueHooks$/;
      function rt() {
        tt &&
          (!1 === T.hidden && w.requestAnimationFrame
            ? w.requestAnimationFrame(rt)
            : w.setTimeout(rt, S.fx.interval),
          S.fx.tick());
      }
      function ot() {
        return (
          w.setTimeout(function () {
            et = void 0;
          }),
          (et = S.now())
        );
      }
      function at(e, t) {
        var i,
          n = 0,
          r = { height: e };
        for (t = t ? 1 : 0; n < 4; n += 2 - t)
          r["margin" + (i = K[n])] = r["padding" + i] = e;
        return t && (r.opacity = r.width = e), r;
      }
      function st(e, t, i) {
        for (
          var n,
            r = (lt.tweeners[t] || []).concat(lt.tweeners["*"]),
            o = 0,
            a = r.length;
          o < a;
          o++
        )
          if ((n = r[o].call(i, t, e))) return n;
      }
      function lt(r, e, t) {
        var i,
          o,
          n = 0,
          a = lt.prefilters.length,
          s = S.Deferred().always(function () {
            delete l.elem;
          }),
          l = function () {
            if (o) return !1;
            for (
              var e = et || ot(),
                e = Math.max(0, c.startTime + c.duration - e),
                t = 1 - (e / c.duration || 0),
                i = 0,
                n = c.tweens.length;
              i < n;
              i++
            )
              c.tweens[i].run(t);
            return (
              s.notifyWith(r, [c, t, e]),
              t < 1 && n
                ? e
                : (n || s.notifyWith(r, [c, 1, 0]), s.resolveWith(r, [c]), !1)
            );
          },
          c = s.promise({
            elem: r,
            props: S.extend({}, e),
            opts: S.extend(
              !0,
              { specialEasing: {}, easing: S.easing._default },
              t
            ),
            originalProperties: e,
            originalOptions: t,
            startTime: et || ot(),
            duration: t.duration,
            tweens: [],
            createTween: function (e, t) {
              e = S.Tween(
                r,
                c.opts,
                e,
                t,
                c.opts.specialEasing[e] || c.opts.easing
              );
              return c.tweens.push(e), e;
            },
            stop: function (e) {
              var t = 0,
                i = e ? c.tweens.length : 0;
              if (o) return this;
              for (o = !0; t < i; t++) c.tweens[t].run(1);
              return (
                e
                  ? (s.notifyWith(r, [c, 1, 0]), s.resolveWith(r, [c, e]))
                  : s.rejectWith(r, [c, e]),
                this
              );
            },
          }),
          h = c.props;
        for (
          !(function (e, t) {
            var i, n, r, o, a;
            for (i in e)
              if (
                ((r = t[(n = S.camelCase(i))]),
                (o = e[i]),
                Array.isArray(o) && ((r = o[1]), (o = e[i] = o[0])),
                i !== n && ((e[n] = o), delete e[i]),
                (a = S.cssHooks[n]) && ("expand" in a))
              )
                for (i in ((o = a.expand(o)), delete e[n], o))
                  (i in e) || ((e[i] = o[i]), (t[i] = r));
              else t[n] = r;
          })(h, c.opts.specialEasing);
          n < a;
          n++
        )
          if ((i = lt.prefilters[n].call(c, r, h, c.opts)))
            return (
              S.isFunction(i.stop) &&
                (S._queueHooks(c.elem, c.opts.queue).stop = S.proxy(i.stop, i)),
              i
            );
        return (
          S.map(h, st, c),
          S.isFunction(c.opts.start) && c.opts.start.call(r, c),
          c
            .progress(c.opts.progress)
            .done(c.opts.done, c.opts.complete)
            .fail(c.opts.fail)
            .always(c.opts.always),
          S.fx.timer(S.extend(l, { elem: r, anim: c, queue: c.opts.queue })),
          c
        );
      }
      (S.Animation = S.extend(lt, {
        tweeners: {
          "*": [
            function (e, t) {
              var i = this.createTween(e, t);
              return te(i.elem, e, $.exec(t), i), i;
            },
          ],
        },
        tweener: function (e, t) {
          for (
            var i,
              n = 0,
              r = (e = S.isFunction(e) ? ((t = e), ["*"]) : e.match(N)).length;
            n < r;
            n++
          )
            (i = e[n]),
              (lt.tweeners[i] = lt.tweeners[i] || []),
              lt.tweeners[i].unshift(t);
        },
        prefilters: [
          function (e, t, i) {
            var n,
              r,
              o,
              a,
              s,
              l,
              c,
              h = "width" in t || "height" in t,
              u = this,
              d = {},
              p = e.style,
              f = e.nodeType && ee(e),
              m = W.get(e, "fxshow");
            for (n in (i.queue ||
              (null == (a = S._queueHooks(e, "fx")).unqueued &&
                ((a.unqueued = 0),
                (s = a.empty.fire),
                (a.empty.fire = function () {
                  a.unqueued || s();
                })),
              a.unqueued++,
              u.always(function () {
                u.always(function () {
                  a.unqueued--, S.queue(e, "fx").length || a.empty.fire();
                });
              })),
            t))
              if (((r = t[n]), it.test(r))) {
                if (
                  (delete t[n],
                  (o = o || "toggle" === r),
                  r === (f ? "hide" : "show"))
                ) {
                  if ("show" !== r || !m || void 0 === m[n]) continue;
                  f = !0;
                }
                d[n] = (m && m[n]) || S.style(e, n);
              }
            if ((l = !S.isEmptyObject(t)) || !S.isEmptyObject(d))
              for (n in (h &&
                1 === e.nodeType &&
                ((i.overflow = [p.overflow, p.overflowX, p.overflowY]),
                null == (c = m && m.display) && (c = W.get(e, "display")),
                "none" === (h = S.css(e, "display")) &&
                  (c
                    ? (h = c)
                    : (ne([e], !0),
                      (c = e.style.display || c),
                      (h = S.css(e, "display")),
                      ne([e]))),
                ("inline" === h || ("inline-block" === h && null != c)) &&
                  "none" === S.css(e, "float") &&
                  (l ||
                    (u.done(function () {
                      p.display = c;
                    }),
                    null == c &&
                      ((h = p.display), (c = "none" === h ? "" : h))),
                  (p.display = "inline-block"))),
              i.overflow &&
                ((p.overflow = "hidden"),
                u.always(function () {
                  (p.overflow = i.overflow[0]),
                    (p.overflowX = i.overflow[1]),
                    (p.overflowY = i.overflow[2]);
                })),
              (l = !1),
              d))
                l ||
                  (m
                    ? "hidden" in m && (f = m.hidden)
                    : (m = W.access(e, "fxshow", { display: c })),
                  o && (m.hidden = !f),
                  f && ne([e], !0),
                  u.done(function () {
                    for (n in (f || ne([e]), W.remove(e, "fxshow"), d))
                      S.style(e, n, d[n]);
                  })),
                  (l = st(f ? m[n] : 0, n, u)),
                  n in m ||
                    ((m[n] = l.start), f && ((l.end = l.start), (l.start = 0)));
          },
        ],
        prefilter: function (e, t) {
          t ? lt.prefilters.unshift(e) : lt.prefilters.push(e);
        },
      })),
        (S.speed = function (e, t, i) {
          var n =
            e && "object" == typeof e
              ? S.extend({}, e)
              : {
                  complete: i || (!i && t) || (S.isFunction(e) && e),
                  duration: e,
                  easing: (i && t) || (t && !S.isFunction(t) && t),
                };
          return (
            S.fx.off
              ? (n.duration = 0)
              : "number" != typeof n.duration &&
                (n.duration in S.fx.speeds
                  ? (n.duration = S.fx.speeds[n.duration])
                  : (n.duration = S.fx.speeds._default)),
            (null != n.queue && !0 !== n.queue) || (n.queue = "fx"),
            (n.old = n.complete),
            (n.complete = function () {
              S.isFunction(n.old) && n.old.call(this),
                n.queue && S.dequeue(this, n.queue);
            }),
            n
          );
        }),
        S.fn.extend({
          fadeTo: function (e, t, i, n) {
            return this.filter(ee)
              .css("opacity", 0)
              .show()
              .end()
              .animate({ opacity: t }, e, i, n);
          },
          animate: function (t, e, i, n) {
            var r = S.isEmptyObject(t),
              o = S.speed(e, i, n),
              n = function () {
                var e = lt(this, S.extend({}, t), o);
                (r || W.get(this, "finish")) && e.stop(!0);
              };
            return (
              (n.finish = n),
              r || !1 === o.queue ? this.each(n) : this.queue(o.queue, n)
            );
          },
          stop: function (r, e, o) {
            function a(e) {
              var t = e.stop;
              delete e.stop, t(o);
            }
            return (
              "string" != typeof r && ((o = e), (e = r), (r = void 0)),
              e && !1 !== r && this.queue(r || "fx", []),
              this.each(function () {
                var e = !0,
                  t = null != r && r + "queueHooks",
                  i = S.timers,
                  n = W.get(this);
                if (t) n[t] && n[t].stop && a(n[t]);
                else for (t in n) n[t] && n[t].stop && nt.test(t) && a(n[t]);
                for (t = i.length; t--; )
                  i[t].elem !== this ||
                    (null != r && i[t].queue !== r) ||
                    (i[t].anim.stop(o), (e = !1), i.splice(t, 1));
                (!e && o) || S.dequeue(this, r);
              })
            );
          },
          finish: function (a) {
            return (
              !1 !== a && (a = a || "fx"),
              this.each(function () {
                var e,
                  t = W.get(this),
                  i = t[a + "queue"],
                  n = t[a + "queueHooks"],
                  r = S.timers,
                  o = i ? i.length : 0;
                for (
                  t.finish = !0,
                    S.queue(this, a, []),
                    n && n.stop && n.stop.call(this, !0),
                    e = r.length;
                  e--;

                )
                  r[e].elem === this &&
                    r[e].queue === a &&
                    (r[e].anim.stop(!0), r.splice(e, 1));
                for (e = 0; e < o; e++)
                  i[e] && i[e].finish && i[e].finish.call(this);
                delete t.finish;
              })
            );
          },
        }),
        S.each(["toggle", "show", "hide"], function (e, n) {
          var r = S.fn[n];
          S.fn[n] = function (e, t, i) {
            return null == e || "boolean" == typeof e
              ? r.apply(this, arguments)
              : this.animate(at(n, !0), e, t, i);
          };
        }),
        S.each(
          {
            slideDown: at("show"),
            slideUp: at("hide"),
            slideToggle: at("toggle"),
            fadeIn: { opacity: "show" },
            fadeOut: { opacity: "hide" },
            fadeToggle: { opacity: "toggle" },
          },
          function (e, n) {
            S.fn[e] = function (e, t, i) {
              return this.animate(n, e, t, i);
            };
          }
        ),
        (S.timers = []),
        (S.fx.tick = function () {
          var e,
            t = 0,
            i = S.timers;
          for (et = S.now(); t < i.length; t++)
            (e = i[t])() || i[t] !== e || i.splice(t--, 1);
          i.length || S.fx.stop(), (et = void 0);
        }),
        (S.fx.timer = function (e) {
          S.timers.push(e), S.fx.start();
        }),
        (S.fx.interval = 13),
        (S.fx.start = function () {
          tt || ((tt = !0), rt());
        }),
        (S.fx.stop = function () {
          tt = null;
        }),
        (S.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
        (S.fn.delay = function (n, e) {
          return (
            (n = (S.fx && S.fx.speeds[n]) || n),
            (e = e || "fx"),
            this.queue(e, function (e, t) {
              var i = w.setTimeout(e, n);
              t.stop = function () {
                w.clearTimeout(i);
              };
            })
          );
        }),
        (t = T.createElement("input")),
        (J = T.createElement("select").appendChild(T.createElement("option"))),
        (t.type = "checkbox"),
        (g.checkOn = "" !== t.value),
        (g.optSelected = J.selected),
        ((t = T.createElement("input")).value = "t"),
        (t.type = "radio"),
        (g.radioValue = "t" === t.value);
      var ct,
        ht = S.expr.attrHandle;
      S.fn.extend({
        attr: function (e, t) {
          return G(this, S.attr, e, t, 1 < arguments.length);
        },
        removeAttr: function (e) {
          return this.each(function () {
            S.removeAttr(this, e);
          });
        },
      }),
        S.extend({
          attr: function (e, t, i) {
            var n,
              r,
              o = e.nodeType;
            if (3 !== o && 8 !== o && 2 !== o)
              return void 0 === e.getAttribute
                ? S.prop(e, t, i)
                : ((1 === o && S.isXMLDoc(e)) ||
                    (r =
                      S.attrHooks[t.toLowerCase()] ||
                      (S.expr.match.bool.test(t) ? ct : void 0)),
                  void 0 !== i
                    ? null === i
                      ? void S.removeAttr(e, t)
                      : r && "set" in r && void 0 !== (n = r.set(e, i, t))
                      ? n
                      : (e.setAttribute(t, i + ""), i)
                    : !(r && "get" in r && null !== (n = r.get(e, t))) &&
                      null == (n = S.find.attr(e, t))
                    ? void 0
                    : n);
          },
          attrHooks: {
            type: {
              set: function (e, t) {
                if (!g.radioValue && "radio" === t && E(e, "input")) {
                  var i = e.value;
                  return e.setAttribute("type", t), i && (e.value = i), t;
                }
              },
            },
          },
          removeAttr: function (e, t) {
            var i,
              n = 0,
              r = t && t.match(N);
            if (r && 1 === e.nodeType)
              for (; (i = r[n++]); ) e.removeAttribute(i);
          },
        }),
        (ct = {
          set: function (e, t, i) {
            return !1 === t ? S.removeAttr(e, i) : e.setAttribute(i, i), i;
          },
        }),
        S.each(S.expr.match.bool.source.match(/\w+/g), function (e, t) {
          var a = ht[t] || S.find.attr;
          ht[t] = function (e, t, i) {
            var n,
              r,
              o = t.toLowerCase();
            return (
              i ||
                ((r = ht[o]),
                (ht[o] = n),
                (n = null != a(e, t, i) ? o : null),
                (ht[o] = r)),
              n
            );
          };
        });
      var ut = /^(?:input|select|textarea|button)$/i,
        dt = /^(?:a|area)$/i;
      function pt(e) {
        return (e.match(N) || []).join(" ");
      }
      function ft(e) {
        return (e.getAttribute && e.getAttribute("class")) || "";
      }
      S.fn.extend({
        prop: function (e, t) {
          return G(this, S.prop, e, t, 1 < arguments.length);
        },
        removeProp: function (e) {
          return this.each(function () {
            delete this[S.propFix[e] || e];
          });
        },
      }),
        S.extend({
          prop: function (e, t, i) {
            var n,
              r,
              o = e.nodeType;
            if (3 !== o && 8 !== o && 2 !== o)
              return (
                (1 === o && S.isXMLDoc(e)) ||
                  ((t = S.propFix[t] || t), (r = S.propHooks[t])),
                void 0 !== i
                  ? r && "set" in r && void 0 !== (n = r.set(e, i, t))
                    ? n
                    : (e[t] = i)
                  : r && "get" in r && null !== (n = r.get(e, t))
                  ? n
                  : e[t]
              );
          },
          propHooks: {
            tabIndex: {
              get: function (e) {
                var t = S.find.attr(e, "tabindex");
                return t
                  ? parseInt(t, 10)
                  : ut.test(e.nodeName) || (dt.test(e.nodeName) && e.href)
                  ? 0
                  : -1;
              },
            },
          },
          propFix: { for: "htmlFor", class: "className" },
        }),
        g.optSelected ||
          (S.propHooks.selected = {
            get: function (e) {
              e = e.parentNode;
              return e && e.parentNode && e.parentNode.selectedIndex, null;
            },
            set: function (e) {
              e = e.parentNode;
              e &&
                (e.selectedIndex, e.parentNode && e.parentNode.selectedIndex);
            },
          }),
        S.each(
          [
            "tabIndex",
            "readOnly",
            "maxLength",
            "cellSpacing",
            "cellPadding",
            "rowSpan",
            "colSpan",
            "useMap",
            "frameBorder",
            "contentEditable",
          ],
          function () {
            S.propFix[this.toLowerCase()] = this;
          }
        ),
        S.fn.extend({
          addClass: function (t) {
            var e,
              i,
              n,
              r,
              o,
              a,
              s = 0;
            if (S.isFunction(t))
              return this.each(function (e) {
                S(this).addClass(t.call(this, e, ft(this)));
              });
            if ("string" == typeof t && t)
              for (e = t.match(N) || []; (i = this[s++]); )
                if (
                  ((a = ft(i)), (n = 1 === i.nodeType && " " + pt(a) + " "))
                ) {
                  for (o = 0; (r = e[o++]); )
                    n.indexOf(" " + r + " ") < 0 && (n += r + " ");
                  a !== (a = pt(n)) && i.setAttribute("class", a);
                }
            return this;
          },
          removeClass: function (t) {
            var e,
              i,
              n,
              r,
              o,
              a,
              s = 0;
            if (S.isFunction(t))
              return this.each(function (e) {
                S(this).removeClass(t.call(this, e, ft(this)));
              });
            if (!arguments.length) return this.attr("class", "");
            if ("string" == typeof t && t)
              for (e = t.match(N) || []; (i = this[s++]); )
                if (
                  ((a = ft(i)), (n = 1 === i.nodeType && " " + pt(a) + " "))
                ) {
                  for (o = 0; (r = e[o++]); )
                    for (; -1 < n.indexOf(" " + r + " "); )
                      n = n.replace(" " + r + " ", " ");
                  a !== (a = pt(n)) && i.setAttribute("class", a);
                }
            return this;
          },
          toggleClass: function (r, t) {
            var o = typeof r;
            return "boolean" == typeof t && "string" == o
              ? t
                ? this.addClass(r)
                : this.removeClass(r)
              : S.isFunction(r)
              ? this.each(function (e) {
                  S(this).toggleClass(r.call(this, e, ft(this), t), t);
                })
              : this.each(function () {
                  var e, t, i, n;
                  if ("string" == o)
                    for (
                      t = 0, i = S(this), n = r.match(N) || [];
                      (e = n[t++]);

                    )
                      i.hasClass(e) ? i.removeClass(e) : i.addClass(e);
                  else
                    (void 0 !== r && "boolean" != o) ||
                      ((e = ft(this)) && W.set(this, "__className__", e),
                      this.setAttribute &&
                        this.setAttribute(
                          "class",
                          (!e && !1 !== r && W.get(this, "__className__")) || ""
                        ));
                });
          },
          hasClass: function (e) {
            for (var t, i = 0, n = " " + e + " "; (t = this[i++]); )
              if (1 === t.nodeType && -1 < (" " + pt(ft(t)) + " ").indexOf(n))
                return !0;
            return !1;
          },
        });
      var mt = /\r/g;
      S.fn.extend({
        val: function (t) {
          var i,
            e,
            n,
            r = this[0];
          return arguments.length
            ? ((n = S.isFunction(t)),
              this.each(function (e) {
                1 === this.nodeType &&
                  (null == (e = n ? t.call(this, e, S(this).val()) : t)
                    ? (e = "")
                    : "number" == typeof e
                    ? (e += "")
                    : Array.isArray(e) &&
                      (e = S.map(e, function (e) {
                        return null == e ? "" : e + "";
                      })),
                  ((i =
                    S.valHooks[this.type] ||
                    S.valHooks[this.nodeName.toLowerCase()]) &&
                    "set" in i &&
                    void 0 !== i.set(this, e, "value")) ||
                    (this.value = e));
              }))
            : r
            ? (i =
                S.valHooks[r.type] || S.valHooks[r.nodeName.toLowerCase()]) &&
              "get" in i &&
              void 0 !== (e = i.get(r, "value"))
              ? e
              : "string" == typeof (e = r.value)
              ? e.replace(mt, "")
              : null == e
              ? ""
              : e
            : void 0;
        },
      }),
        S.extend({
          valHooks: {
            option: {
              get: function (e) {
                var t = S.find.attr(e, "value");
                return null != t ? t : pt(S.text(e));
              },
            },
            select: {
              get: function (e) {
                for (
                  var t,
                    i = e.options,
                    n = e.selectedIndex,
                    r = "select-one" === e.type,
                    o = r ? null : [],
                    a = r ? n + 1 : i.length,
                    s = n < 0 ? a : r ? n : 0;
                  s < a;
                  s++
                )
                  if (
                    ((t = i[s]).selected || s === n) &&
                    !t.disabled &&
                    (!t.parentNode.disabled || !E(t.parentNode, "optgroup"))
                  ) {
                    if (((t = S(t).val()), r)) return t;
                    o.push(t);
                  }
                return o;
              },
              set: function (e, t) {
                for (
                  var i, n, r = e.options, o = S.makeArray(t), a = r.length;
                  a--;

                )
                  ((n = r[a]).selected =
                    -1 < S.inArray(S.valHooks.option.get(n), o)) && (i = !0);
                return i || (e.selectedIndex = -1), o;
              },
            },
          },
        }),
        S.each(["radio", "checkbox"], function () {
          (S.valHooks[this] = {
            set: function (e, t) {
              if (Array.isArray(t))
                return (e.checked = -1 < S.inArray(S(e).val(), t));
            },
          }),
            g.checkOn ||
              (S.valHooks[this].get = function (e) {
                return null === e.getAttribute("value") ? "on" : e.value;
              });
        });
      var gt = /^(?:focusinfocus|focusoutblur)$/;
      S.extend(S.event, {
        trigger: function (e, t, i, n) {
          var r,
            o,
            a,
            s,
            l,
            c,
            h = [i || T],
            u = f.call(e, "type") ? e.type : e,
            d = f.call(e, "namespace") ? e.namespace.split(".") : [],
            p = (o = i = i || T);
          if (
            3 !== i.nodeType &&
            8 !== i.nodeType &&
            !gt.test(u + S.event.triggered) &&
            (-1 < u.indexOf(".") &&
              ((u = (d = u.split(".")).shift()), d.sort()),
            (s = u.indexOf(":") < 0 && "on" + u),
            ((e = e[S.expando]
              ? e
              : new S.Event(u, "object" == typeof e && e)).isTrigger = n
              ? 2
              : 3),
            (e.namespace = d.join(".")),
            (e.rnamespace = e.namespace
              ? new RegExp("(^|\\.)" + d.join("\\.(?:.*\\.|)") + "(\\.|$)")
              : null),
            (e.result = void 0),
            e.target || (e.target = i),
            (t = null == t ? [e] : S.makeArray(t, [e])),
            (c = S.event.special[u] || {}),
            n || !c.trigger || !1 !== c.trigger.apply(i, t))
          ) {
            if (!n && !c.noBubble && !S.isWindow(i)) {
              for (
                a = c.delegateType || u, gt.test(a + u) || (p = p.parentNode);
                p;
                p = p.parentNode
              )
                h.push(p), (o = p);
              o === (i.ownerDocument || T) &&
                h.push(o.defaultView || o.parentWindow || w);
            }
            for (r = 0; (p = h[r++]) && !e.isPropagationStopped(); )
              (e.type = 1 < r ? a : c.bindType || u),
                (l =
                  (W.get(p, "events") || {})[e.type] && W.get(p, "handle")) &&
                  l.apply(p, t),
                (l = s && p[s]) &&
                  l.apply &&
                  H(p) &&
                  ((e.result = l.apply(p, t)),
                  !1 === e.result && e.preventDefault());
            return (
              (e.type = u),
              n ||
                e.isDefaultPrevented() ||
                (c._default && !1 !== c._default.apply(h.pop(), t)) ||
                !H(i) ||
                (s &&
                  S.isFunction(i[u]) &&
                  !S.isWindow(i) &&
                  ((o = i[s]) && (i[s] = null),
                  i[(S.event.triggered = u)](),
                  (S.event.triggered = void 0),
                  o && (i[s] = o))),
              e.result
            );
          }
        },
        simulate: function (e, t, i) {
          e = S.extend(new S.Event(), i, { type: e, isSimulated: !0 });
          S.event.trigger(e, null, t);
        },
      }),
        S.fn.extend({
          trigger: function (e, t) {
            return this.each(function () {
              S.event.trigger(e, t, this);
            });
          },
          triggerHandler: function (e, t) {
            var i = this[0];
            if (i) return S.event.trigger(e, t, i, !0);
          },
        }),
        S.each(
          "blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(
            " "
          ),
          function (e, i) {
            S.fn[i] = function (e, t) {
              return 0 < arguments.length
                ? this.on(i, null, e, t)
                : this.trigger(i);
            };
          }
        ),
        S.fn.extend({
          hover: function (e, t) {
            return this.mouseenter(e).mouseleave(t || e);
          },
        }),
        (g.focusin = "onfocusin" in w),
        g.focusin ||
          S.each({ focus: "focusin", blur: "focusout" }, function (i, n) {
            function r(e) {
              S.event.simulate(n, e.target, S.event.fix(e));
            }
            S.event.special[n] = {
              setup: function () {
                var e = this.ownerDocument || this,
                  t = W.access(e, n);
                t || e.addEventListener(i, r, !0), W.access(e, n, (t || 0) + 1);
              },
              teardown: function () {
                var e = this.ownerDocument || this,
                  t = W.access(e, n) - 1;
                t
                  ? W.access(e, n, t)
                  : (e.removeEventListener(i, r, !0), W.remove(e, n));
              },
            };
          });
      var vt = w.location,
        yt = S.now(),
        _t = /\?/;
      S.parseXML = function (e) {
        var t;
        if (!e || "string" != typeof e) return null;
        try {
          t = new w.DOMParser().parseFromString(e, "text/xml");
        } catch (e) {
          t = void 0;
        }
        return (
          (t && !t.getElementsByTagName("parsererror").length) ||
            S.error("Invalid XML: " + e),
          t
        );
      };
      var xt = /\[\]$/,
        bt = /\r?\n/g,
        wt = /^(?:submit|button|image|reset|file)$/i,
        Tt = /^(?:input|select|textarea|keygen)/i;
      (S.param = function (e, t) {
        function i(e, t) {
          (t = S.isFunction(t) ? t() : t),
            (r[r.length] =
              encodeURIComponent(e) +
              "=" +
              encodeURIComponent(null == t ? "" : t));
        }
        var n,
          r = [];
        if (Array.isArray(e) || (e.jquery && !S.isPlainObject(e)))
          S.each(e, function () {
            i(this.name, this.value);
          });
        else
          for (n in e)
            !(function i(n, e, r, o) {
              if (Array.isArray(e))
                S.each(e, function (e, t) {
                  r || xt.test(n)
                    ? o(n, t)
                    : i(
                        n +
                          "[" +
                          ("object" == typeof t && null != t ? e : "") +
                          "]",
                        t,
                        r,
                        o
                      );
                });
              else if (r || "object" !== S.type(e)) o(n, e);
              else for (var t in e) i(n + "[" + t + "]", e[t], r, o);
            })(n, e[n], t, i);
        return r.join("&");
      }),
        S.fn.extend({
          serialize: function () {
            return S.param(this.serializeArray());
          },
          serializeArray: function () {
            return this.map(function () {
              var e = S.prop(this, "elements");
              return e ? S.makeArray(e) : this;
            })
              .filter(function () {
                var e = this.type;
                return (
                  this.name &&
                  !S(this).is(":disabled") &&
                  Tt.test(this.nodeName) &&
                  !wt.test(e) &&
                  (this.checked || !re.test(e))
                );
              })
              .map(function (e, t) {
                var i = S(this).val();
                return null == i
                  ? null
                  : Array.isArray(i)
                  ? S.map(i, function (e) {
                      return { name: t.name, value: e.replace(bt, "\r\n") };
                    })
                  : { name: t.name, value: i.replace(bt, "\r\n") };
              })
              .get();
          },
        });
      var St = /%20/g,
        Mt = /#.*$/,
        Et = /([?&])_=[^&]*/,
        At = /^(.*?):[ \t]*([^\r\n]*)$/gm,
        Lt = /^(?:GET|HEAD)$/,
        Ct = /^\/\//,
        Pt = {},
        Rt = {},
        Ot = "*/".concat("*"),
        It = T.createElement("a");
      function Dt(o) {
        return function (e, t) {
          "string" != typeof e && ((t = e), (e = "*"));
          var i,
            n = 0,
            r = e.toLowerCase().match(N) || [];
          if (S.isFunction(t))
            for (; (i = r[n++]); )
              "+" === i[0]
                ? ((i = i.slice(1) || "*"), (o[i] = o[i] || []).unshift(t))
                : (o[i] = o[i] || []).push(t);
        };
      }
      function Nt(t, n, r, o) {
        var a = {},
          s = t === Rt;
        function l(e) {
          var i;
          return (
            (a[e] = !0),
            S.each(t[e] || [], function (e, t) {
              t = t(n, r, o);
              return "string" != typeof t || s || a[t]
                ? s
                  ? !(i = t)
                  : void 0
                : (n.dataTypes.unshift(t), l(t), !1);
            }),
            i
          );
        }
        return l(n.dataTypes[0]) || (!a["*"] && l("*"));
      }
      function Ft(e, t) {
        var i,
          n,
          r = S.ajaxSettings.flatOptions || {};
        for (i in t) void 0 !== t[i] && ((r[i] ? e : (n = n || {}))[i] = t[i]);
        return n && S.extend(!0, e, n), e;
      }
      (It.href = vt.href),
        S.extend({
          active: 0,
          lastModified: {},
          etag: {},
          ajaxSettings: {
            url: vt.href,
            type: "GET",
            isLocal:
              /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(
                vt.protocol
              ),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
              "*": Ot,
              text: "text/plain",
              html: "text/html",
              xml: "application/xml, text/xml",
              json: "application/json, text/javascript",
            },
            contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
            responseFields: {
              xml: "responseXML",
              text: "responseText",
              json: "responseJSON",
            },
            converters: {
              "* text": String,
              "text html": !0,
              "text json": JSON.parse,
              "text xml": S.parseXML,
            },
            flatOptions: { url: !0, context: !0 },
          },
          ajaxSetup: function (e, t) {
            return t ? Ft(Ft(e, S.ajaxSettings), t) : Ft(S.ajaxSettings, e);
          },
          ajaxPrefilter: Dt(Pt),
          ajaxTransport: Dt(Rt),
          ajax: function (e, t) {
            "object" == typeof e && ((t = e), (e = void 0)), (t = t || {});
            var l,
              c,
              h,
              i,
              u,
              n,
              d,
              p,
              r,
              f = S.ajaxSetup({}, t),
              m = f.context || f,
              g = f.context && (m.nodeType || m.jquery) ? S(m) : S.event,
              v = S.Deferred(),
              y = S.Callbacks("once memory"),
              _ = f.statusCode || {},
              o = {},
              a = {},
              s = "canceled",
              x = {
                readyState: 0,
                getResponseHeader: function (e) {
                  var t;
                  if (d) {
                    if (!i)
                      for (i = {}; (t = At.exec(h)); )
                        i[t[1].toLowerCase()] = t[2];
                    t = i[e.toLowerCase()];
                  }
                  return null == t ? null : t;
                },
                getAllResponseHeaders: function () {
                  return d ? h : null;
                },
                setRequestHeader: function (e, t) {
                  return (
                    null == d &&
                      ((e = a[e.toLowerCase()] = a[e.toLowerCase()] || e),
                      (o[e] = t)),
                    this
                  );
                },
                overrideMimeType: function (e) {
                  return null == d && (f.mimeType = e), this;
                },
                statusCode: function (e) {
                  if (e)
                    if (d) x.always(e[x.status]);
                    else for (var t in e) _[t] = [_[t], e[t]];
                  return this;
                },
                abort: function (e) {
                  e = e || s;
                  return l && l.abort(e), b(0, e), this;
                },
              };
            if (
              (v.promise(x),
              (f.url = ((e || f.url || vt.href) + "").replace(
                Ct,
                vt.protocol + "//"
              )),
              (f.type = t.method || t.type || f.method || f.type),
              (f.dataTypes = (f.dataType || "*").toLowerCase().match(N) || [
                "",
              ]),
              null == f.crossDomain)
            ) {
              n = T.createElement("a");
              try {
                (n.href = f.url),
                  (n.href = n.href),
                  (f.crossDomain =
                    It.protocol + "//" + It.host != n.protocol + "//" + n.host);
              } catch (e) {
                f.crossDomain = !0;
              }
            }
            if (
              (f.data &&
                f.processData &&
                "string" != typeof f.data &&
                (f.data = S.param(f.data, f.traditional)),
              Nt(Pt, f, t, x),
              d)
            )
              return x;
            for (r in ((p = S.event && f.global) &&
              0 == S.active++ &&
              S.event.trigger("ajaxStart"),
            (f.type = f.type.toUpperCase()),
            (f.hasContent = !Lt.test(f.type)),
            (c = f.url.replace(Mt, "")),
            f.hasContent
              ? f.data &&
                f.processData &&
                0 ===
                  (f.contentType || "").indexOf(
                    "application/x-www-form-urlencoded"
                  ) &&
                (f.data = f.data.replace(St, "+"))
              : ((e = f.url.slice(c.length)),
                f.data &&
                  ((c += (_t.test(c) ? "&" : "?") + f.data), delete f.data),
                !1 === f.cache &&
                  ((c = c.replace(Et, "$1")),
                  (e = (_t.test(c) ? "&" : "?") + "_=" + yt++ + e)),
                (f.url = c + e)),
            f.ifModified &&
              (S.lastModified[c] &&
                x.setRequestHeader("If-Modified-Since", S.lastModified[c]),
              S.etag[c] && x.setRequestHeader("If-None-Match", S.etag[c])),
            ((f.data && f.hasContent && !1 !== f.contentType) ||
              t.contentType) &&
              x.setRequestHeader("Content-Type", f.contentType),
            x.setRequestHeader(
              "Accept",
              f.dataTypes[0] && f.accepts[f.dataTypes[0]]
                ? f.accepts[f.dataTypes[0]] +
                    ("*" !== f.dataTypes[0] ? ", " + Ot + "; q=0.01" : "")
                : f.accepts["*"]
            ),
            f.headers))
              x.setRequestHeader(r, f.headers[r]);
            if (f.beforeSend && (!1 === f.beforeSend.call(m, x, f) || d))
              return x.abort();
            if (
              ((s = "abort"),
              y.add(f.complete),
              x.done(f.success),
              x.fail(f.error),
              (l = Nt(Rt, f, t, x)))
            ) {
              if (((x.readyState = 1), p && g.trigger("ajaxSend", [x, f]), d))
                return x;
              f.async &&
                0 < f.timeout &&
                (u = w.setTimeout(function () {
                  x.abort("timeout");
                }, f.timeout));
              try {
                (d = !1), l.send(o, b);
              } catch (e) {
                if (d) throw e;
                b(-1, e);
              }
            } else b(-1, "No Transport");
            function b(e, t, i, n) {
              var r,
                o,
                a,
                s = t;
              d ||
                ((d = !0),
                u && w.clearTimeout(u),
                (l = void 0),
                (h = n || ""),
                (x.readyState = 0 < e ? 4 : 0),
                (n = (200 <= e && e < 300) || 304 === e),
                i &&
                  (a = (function (e, t, i) {
                    for (
                      var n, r, o, a, s = e.contents, l = e.dataTypes;
                      "*" === l[0];

                    )
                      l.shift(),
                        void 0 === n &&
                          (n =
                            e.mimeType || t.getResponseHeader("Content-Type"));
                    if (n)
                      for (r in s)
                        if (s[r] && s[r].test(n)) {
                          l.unshift(r);
                          break;
                        }
                    if (l[0] in i) o = l[0];
                    else {
                      for (r in i) {
                        if (!l[0] || e.converters[r + " " + l[0]]) {
                          o = r;
                          break;
                        }
                        a = a || r;
                      }
                      o = o || a;
                    }
                    if (o) return o !== l[0] && l.unshift(o), i[o];
                  })(f, x, i)),
                (a = (function (e, t, i, n) {
                  var r,
                    o,
                    a,
                    s,
                    l,
                    c = {},
                    h = e.dataTypes.slice();
                  if (h[1])
                    for (a in e.converters)
                      c[a.toLowerCase()] = e.converters[a];
                  for (o = h.shift(); o; )
                    if (
                      (e.responseFields[o] && (i[e.responseFields[o]] = t),
                      !l &&
                        n &&
                        e.dataFilter &&
                        (t = e.dataFilter(t, e.dataType)),
                      (l = o),
                      (o = h.shift()))
                    )
                      if ("*" === o) o = l;
                      else if ("*" !== l && l !== o) {
                        if (!(a = c[l + " " + o] || c["* " + o]))
                          for (r in c)
                            if (
                              ((s = r.split(" ")),
                              s[1] === o &&
                                (a = c[l + " " + s[0]] || c["* " + s[0]]))
                            ) {
                              !0 === a
                                ? (a = c[r])
                                : !0 !== c[r] && ((o = s[0]), h.unshift(s[1]));
                              break;
                            }
                        if (!0 !== a)
                          if (a && e.throws) t = a(t);
                          else
                            try {
                              t = a(t);
                            } catch (e) {
                              return {
                                state: "parsererror",
                                error: a
                                  ? e
                                  : "No conversion from " + l + " to " + o,
                              };
                            }
                      }
                  return { state: "success", data: t };
                })(f, a, x, n)),
                n
                  ? (f.ifModified &&
                      ((i = x.getResponseHeader("Last-Modified")) &&
                        (S.lastModified[c] = i),
                      (i = x.getResponseHeader("etag")) && (S.etag[c] = i)),
                    204 === e || "HEAD" === f.type
                      ? (s = "nocontent")
                      : 304 === e
                      ? (s = "notmodified")
                      : ((s = a.state), (r = a.data), (n = !(o = a.error))))
                  : ((o = s), (!e && s) || ((s = "error"), e < 0 && (e = 0))),
                (x.status = e),
                (x.statusText = (t || s) + ""),
                n ? v.resolveWith(m, [r, s, x]) : v.rejectWith(m, [x, s, o]),
                x.statusCode(_),
                (_ = void 0),
                p &&
                  g.trigger(n ? "ajaxSuccess" : "ajaxError", [x, f, n ? r : o]),
                y.fireWith(m, [x, s]),
                p &&
                  (g.trigger("ajaxComplete", [x, f]),
                  --S.active || S.event.trigger("ajaxStop")));
            }
            return x;
          },
          getJSON: function (e, t, i) {
            return S.get(e, t, i, "json");
          },
          getScript: function (e, t) {
            return S.get(e, void 0, t, "script");
          },
        }),
        S.each(["get", "post"], function (e, r) {
          S[r] = function (e, t, i, n) {
            return (
              S.isFunction(t) && ((n = n || i), (i = t), (t = void 0)),
              S.ajax(
                S.extend(
                  { url: e, type: r, dataType: n, data: t, success: i },
                  S.isPlainObject(e) && e
                )
              )
            );
          };
        }),
        (S._evalUrl = function (e) {
          return S.ajax({
            url: e,
            type: "GET",
            dataType: "script",
            cache: !0,
            async: !1,
            global: !1,
            throws: !0,
          });
        }),
        S.fn.extend({
          wrapAll: function (e) {
            return (
              this[0] &&
                (S.isFunction(e) && (e = e.call(this[0])),
                (e = S(e, this[0].ownerDocument).eq(0).clone(!0)),
                this[0].parentNode && e.insertBefore(this[0]),
                e
                  .map(function () {
                    for (var e = this; e.firstElementChild; )
                      e = e.firstElementChild;
                    return e;
                  })
                  .append(this)),
              this
            );
          },
          wrapInner: function (i) {
            return S.isFunction(i)
              ? this.each(function (e) {
                  S(this).wrapInner(i.call(this, e));
                })
              : this.each(function () {
                  var e = S(this),
                    t = e.contents();
                  t.length ? t.wrapAll(i) : e.append(i);
                });
          },
          wrap: function (t) {
            var i = S.isFunction(t);
            return this.each(function (e) {
              S(this).wrapAll(i ? t.call(this, e) : t);
            });
          },
          unwrap: function (e) {
            return (
              this.parent(e)
                .not("body")
                .each(function () {
                  S(this).replaceWith(this.childNodes);
                }),
              this
            );
          },
        }),
        (S.expr.pseudos.hidden = function (e) {
          return !S.expr.pseudos.visible(e);
        }),
        (S.expr.pseudos.visible = function (e) {
          return !!(
            e.offsetWidth ||
            e.offsetHeight ||
            e.getClientRects().length
          );
        }),
        (S.ajaxSettings.xhr = function () {
          try {
            return new w.XMLHttpRequest();
          } catch (e) {}
        });
      var kt = { 0: 200, 1223: 204 },
        Ut = S.ajaxSettings.xhr();
      (g.cors = !!Ut && "withCredentials" in Ut),
        (g.ajax = Ut = !!Ut),
        S.ajaxTransport(function (r) {
          var o, a;
          if (g.cors || (Ut && !r.crossDomain))
            return {
              send: function (e, t) {
                var i,
                  n = r.xhr();
                if (
                  (n.open(r.type, r.url, r.async, r.username, r.password),
                  r.xhrFields)
                )
                  for (i in r.xhrFields) n[i] = r.xhrFields[i];
                for (i in (r.mimeType &&
                  n.overrideMimeType &&
                  n.overrideMimeType(r.mimeType),
                r.crossDomain ||
                  e["X-Requested-With"] ||
                  (e["X-Requested-With"] = "XMLHttpRequest"),
                e))
                  n.setRequestHeader(i, e[i]);
                (o = function (e) {
                  return function () {
                    o &&
                      ((o =
                        a =
                        n.onload =
                        n.onerror =
                        n.onabort =
                        n.onreadystatechange =
                          null),
                      "abort" === e
                        ? n.abort()
                        : "error" === e
                        ? "number" != typeof n.status
                          ? t(0, "error")
                          : t(n.status, n.statusText)
                        : t(
                            kt[n.status] || n.status,
                            n.statusText,
                            "text" !== (n.responseType || "text") ||
                              "string" != typeof n.responseText
                              ? { binary: n.response }
                              : { text: n.responseText },
                            n.getAllResponseHeaders()
                          ));
                  };
                }),
                  (n.onload = o()),
                  (a = n.onerror = o("error")),
                  void 0 !== n.onabort
                    ? (n.onabort = a)
                    : (n.onreadystatechange = function () {
                        4 === n.readyState &&
                          w.setTimeout(function () {
                            o && a();
                          });
                      }),
                  (o = o("abort"));
                try {
                  n.send((r.hasContent && r.data) || null);
                } catch (e) {
                  if (o) throw e;
                }
              },
              abort: function () {
                o && o();
              },
            };
        }),
        S.ajaxPrefilter(function (e) {
          e.crossDomain && (e.contents.script = !1);
        }),
        S.ajaxSetup({
          accepts: {
            script:
              "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript",
          },
          contents: { script: /\b(?:java|ecma)script\b/ },
          converters: {
            "text script": function (e) {
              return S.globalEval(e), e;
            },
          },
        }),
        S.ajaxPrefilter("script", function (e) {
          void 0 === e.cache && (e.cache = !1),
            e.crossDomain && (e.type = "GET");
        }),
        S.ajaxTransport("script", function (i) {
          var n, r;
          if (i.crossDomain)
            return {
              send: function (e, t) {
                (n = S("<script>")
                  .prop({ charset: i.scriptCharset, src: i.url })
                  .on(
                    "load error",
                    (r = function (e) {
                      n.remove(),
                        (r = null),
                        e && t("error" === e.type ? 404 : 200, e.type);
                    })
                  )),
                  T.head.appendChild(n[0]);
              },
              abort: function () {
                r && r();
              },
            };
        });
      var Bt = [],
        zt = /(=)\?(?=&|$)|\?\?/;
      S.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function () {
          var e = Bt.pop() || S.expando + "_" + yt++;
          return (this[e] = !0), e;
        },
      }),
        S.ajaxPrefilter("json jsonp", function (e, t, i) {
          var n,
            r,
            o,
            a =
              !1 !== e.jsonp &&
              (zt.test(e.url)
                ? "url"
                : "string" == typeof e.data &&
                  0 ===
                    (e.contentType || "").indexOf(
                      "application/x-www-form-urlencoded"
                    ) &&
                  zt.test(e.data) &&
                  "data");
          if (a || "jsonp" === e.dataTypes[0])
            return (
              (n = e.jsonpCallback =
                S.isFunction(e.jsonpCallback)
                  ? e.jsonpCallback()
                  : e.jsonpCallback),
              a
                ? (e[a] = e[a].replace(zt, "$1" + n))
                : !1 !== e.jsonp &&
                  (e.url += (_t.test(e.url) ? "&" : "?") + e.jsonp + "=" + n),
              (e.converters["script json"] = function () {
                return o || S.error(n + " was not called"), o[0];
              }),
              (e.dataTypes[0] = "json"),
              (r = w[n]),
              (w[n] = function () {
                o = arguments;
              }),
              i.always(function () {
                void 0 === r ? S(w).removeProp(n) : (w[n] = r),
                  e[n] && ((e.jsonpCallback = t.jsonpCallback), Bt.push(n)),
                  o && S.isFunction(r) && r(o[0]),
                  (o = r = void 0);
              }),
              "script"
            );
        }),
        (g.createHTMLDocument =
          (((t = T.implementation.createHTMLDocument("").body).innerHTML =
            "<form></form><form></form>"),
          2 === t.childNodes.length)),
        (S.parseHTML = function (e, t, i) {
          return "string" != typeof e
            ? []
            : ("boolean" == typeof t && ((i = t), (t = !1)),
              t ||
                (g.createHTMLDocument
                  ? (((n = (t =
                      T.implementation.createHTMLDocument("")).createElement(
                      "base"
                    )).href = T.location.href),
                    t.head.appendChild(n))
                  : (t = T)),
              (n = !i && []),
              (i = A.exec(e))
                ? [t.createElement(i[1])]
                : ((i = ue([e], t, n)),
                  n && n.length && S(n).remove(),
                  S.merge([], i.childNodes)));
          var n;
        }),
        (S.fn.load = function (e, t, i) {
          var n,
            r,
            o,
            a = this,
            s = e.indexOf(" ");
          return (
            -1 < s && ((n = pt(e.slice(s))), (e = e.slice(0, s))),
            S.isFunction(t)
              ? ((i = t), (t = void 0))
              : t && "object" == typeof t && (r = "POST"),
            0 < a.length &&
              S.ajax({ url: e, type: r || "GET", dataType: "html", data: t })
                .done(function (e) {
                  (o = arguments),
                    a.html(n ? S("<div>").append(S.parseHTML(e)).find(n) : e);
                })
                .always(
                  i &&
                    function (e, t) {
                      a.each(function () {
                        i.apply(this, o || [e.responseText, t, e]);
                      });
                    }
                ),
            this
          );
        }),
        S.each(
          [
            "ajaxStart",
            "ajaxStop",
            "ajaxComplete",
            "ajaxError",
            "ajaxSuccess",
            "ajaxSend",
          ],
          function (e, t) {
            S.fn[t] = function (e) {
              return this.on(t, e);
            };
          }
        ),
        (S.expr.pseudos.animated = function (t) {
          return S.grep(S.timers, function (e) {
            return t === e.elem;
          }).length;
        }),
        (S.offset = {
          setOffset: function (e, t, i) {
            var n,
              r,
              o,
              a,
              s = S.css(e, "position"),
              l = S(e),
              c = {};
            "static" === s && (e.style.position = "relative"),
              (o = l.offset()),
              (n = S.css(e, "top")),
              (a = S.css(e, "left")),
              (a =
                ("absolute" === s || "fixed" === s) &&
                -1 < (n + a).indexOf("auto")
                  ? ((r = (s = l.position()).top), s.left)
                  : ((r = parseFloat(n) || 0), parseFloat(a) || 0)),
              S.isFunction(t) && (t = t.call(e, i, S.extend({}, o))),
              null != t.top && (c.top = t.top - o.top + r),
              null != t.left && (c.left = t.left - o.left + a),
              "using" in t ? t.using.call(e, c) : l.css(c);
          },
        }),
        S.fn.extend({
          offset: function (t) {
            if (arguments.length)
              return void 0 === t
                ? this
                : this.each(function (e) {
                    S.offset.setOffset(this, t, e);
                  });
            var e,
              i,
              n = this[0];
            return n
              ? n.getClientRects().length
                ? ((e = n.getBoundingClientRect()),
                  (n = (i = n.ownerDocument).documentElement),
                  (i = i.defaultView),
                  {
                    top: e.top + i.pageYOffset - n.clientTop,
                    left: e.left + i.pageXOffset - n.clientLeft,
                  })
                : { top: 0, left: 0 }
              : void 0;
          },
          position: function () {
            if (this[0]) {
              var e,
                t,
                i = this[0],
                n = { top: 0, left: 0 };
              return (
                "fixed" === S.css(i, "position")
                  ? (t = i.getBoundingClientRect())
                  : ((e = this.offsetParent()),
                    (t = this.offset()),
                    E(e[0], "html") || (n = e.offset()),
                    (n = {
                      top: n.top + S.css(e[0], "borderTopWidth", !0),
                      left: n.left + S.css(e[0], "borderLeftWidth", !0),
                    })),
                {
                  top: t.top - n.top - S.css(i, "marginTop", !0),
                  left: t.left - n.left - S.css(i, "marginLeft", !0),
                }
              );
            }
          },
          offsetParent: function () {
            return this.map(function () {
              for (
                var e = this.offsetParent;
                e && "static" === S.css(e, "position");

              )
                e = e.offsetParent;
              return e || de;
            });
          },
        }),
        S.each(
          { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" },
          function (t, r) {
            var o = "pageYOffset" === r;
            S.fn[t] = function (e) {
              return G(
                this,
                function (e, t, i) {
                  var n;
                  return (
                    S.isWindow(e)
                      ? (n = e)
                      : 9 === e.nodeType && (n = e.defaultView),
                    void 0 === i
                      ? n
                        ? n[r]
                        : e[t]
                      : void (n
                          ? n.scrollTo(
                              o ? n.pageXOffset : i,
                              o ? i : n.pageYOffset
                            )
                          : (e[t] = i))
                  );
                },
                t,
                e,
                arguments.length
              );
            };
          }
        ),
        S.each(["top", "left"], function (e, i) {
          S.cssHooks[i] = He(g.pixelPosition, function (e, t) {
            if (t)
              return (t = je(e, i)), Ue.test(t) ? S(e).position()[i] + "px" : t;
          });
        }),
        S.each({ Height: "height", Width: "width" }, function (a, s) {
          S.each(
            { padding: "inner" + a, content: s, "": "outer" + a },
            function (n, o) {
              S.fn[o] = function (e, t) {
                var i = arguments.length && (n || "boolean" != typeof e),
                  r = n || (!0 === e || !0 === t ? "margin" : "border");
                return G(
                  this,
                  function (e, t, i) {
                    var n;
                    return S.isWindow(e)
                      ? 0 === o.indexOf("outer")
                        ? e["inner" + a]
                        : e.document.documentElement["client" + a]
                      : 9 === e.nodeType
                      ? ((n = e.documentElement),
                        Math.max(
                          e.body["scroll" + a],
                          n["scroll" + a],
                          e.body["offset" + a],
                          n["offset" + a],
                          n["client" + a]
                        ))
                      : void 0 === i
                      ? S.css(e, t, r)
                      : S.style(e, t, i, r);
                  },
                  s,
                  i ? e : void 0,
                  i
                );
              };
            }
          );
        }),
        S.fn.extend({
          bind: function (e, t, i) {
            return this.on(e, null, t, i);
          },
          unbind: function (e, t) {
            return this.off(e, null, t);
          },
          delegate: function (e, t, i, n) {
            return this.on(t, e, i, n);
          },
          undelegate: function (e, t, i) {
            return 1 === arguments.length
              ? this.off(e, "**")
              : this.off(t, e || "**", i);
          },
        }),
        (S.holdReady = function (e) {
          e ? S.readyWait++ : S.ready(!0);
        }),
        (S.isArray = Array.isArray),
        (S.parseJSON = JSON.parse),
        (S.nodeName = E),
        void 0 ===
          (Wt = function () {
            return S;
          }.apply(Vt, [])) || (Gt.exports = Wt);
      var jt = w.jQuery,
        Ht = w.$;
      return (
        (S.noConflict = function (e) {
          return (
            w.$ === S && (w.$ = Ht), e && w.jQuery === S && (w.jQuery = jt), S
          );
        }),
        e || (w.jQuery = w.$ = S),
        S
      );
    });
  },
  function (e, n, r) {
    var o;
    !(function (t, i) {
      "use strict";
      (o = [r(8)]),
        void 0 ===
          (o = function (e) {
            return i(e, t, t.document, t.Math);
          }.apply(n, o)) || (e.exports = o);
    })(
      "undefined" != typeof window ? window : void 0,
      function (rt, ot, at, st, lt) {
        "use strict";
        var ct = "fullpage-wrapper",
          ht = "." + ct,
          ut = "fp-responsive",
          dt = "fp-notransition",
          pt = "fp-destroyed",
          ft = "fp-enabled",
          mt = "fp-viewing",
          gt = "active",
          vt = "." + gt,
          yt = "fp-completely",
          _t = "fp-section",
          xt = "." + _t,
          bt = xt + vt,
          wt = "fp-tableCell",
          Tt = "." + wt,
          St = "#fp-nav",
          Mt = "fp-tooltip",
          Et = "fp-slide",
          At = "." + Et,
          Lt = At + vt,
          Ct = ".fp-slides",
          Pt = "fp-slidesContainer",
          Rt = "." + Pt,
          Ot = "fp-table",
          It = "fp-slidesNav",
          Dt = "." + It,
          Nt = Dt + " a",
          e = "fp-controlArrow",
          Ft = "." + e,
          kt = "fp-prev",
          Ut = Ft + ".fp-prev",
          Bt = Ft + ".fp-next",
          zt = rt(ot),
          jt = rt(at);
        rt.fn.fullpage = function (p) {
          var o,
            f,
            e,
            a,
            n,
            r,
            i,
            m,
            c,
            t,
            g,
            s,
            v,
            l,
            h,
            u,
            d,
            y,
            _,
            x,
            b,
            w,
            T,
            S,
            M,
            E,
            A,
            L,
            C,
            P,
            R,
            O,
            I,
            D,
            N,
            F,
            k;
          function U(e, t) {
            e || $e(0), tt("autoScrolling", e, t);
            t = rt(bt);
            p.autoScrolling && !p.scrollBar
              ? (o.css({ overflow: "hidden", height: "100%" }),
                B(A.recordHistory, "internal"),
                i.css({ "-ms-touch-action": "none", "touch-action": "none" }),
                t.length && $e(t.position().top))
              : (o.css({ overflow: "visible", height: "initial" }),
                B(!1, "internal"),
                i.css({ "-ms-touch-action": "", "touch-action": "" }),
                t.length && o.scrollTop(t.position().top));
          }
          function B(e, t) {
            tt("recordHistory", e, t);
          }
          function z(e, t) {
            tt("scrollingSpeed", e, t);
          }
          function j(e, t) {
            tt("fitToSection", e, t);
          }
          function H(e) {
            e
              ? ((function () {
                  var e,
                    t = "";
                  ot.addEventListener
                    ? (e = "addEventListener")
                    : ((e = "attachEvent"), (t = "on"));
                  var i =
                    "onwheel" in at.createElement("div")
                      ? "wheel"
                      : at.onmousewheel !== lt
                      ? "mousewheel"
                      : "DOMMouseScroll";
                  "DOMMouseScroll" == i
                    ? at[e](t + "MozMousePixelScroll", le, !1)
                    : at[e](t + i, le, !1);
                })(),
                i.on("mousedown", Me).on("mouseup", Ee))
              : (at.addEventListener
                  ? (at.removeEventListener("mousewheel", le, !1),
                    at.removeEventListener("wheel", le, !1),
                    at.removeEventListener("MozMousePixelScroll", le, !1))
                  : at.detachEvent("onmousewheel", le),
                i.off("mousedown", Me).off("mouseup", Ee));
          }
          function G(i, e) {
            void 0 !== e
              ? ((e = e.replace(/ /g, "").split(",")),
                rt.each(e, function (e, t) {
                  et(i, t, "m");
                }))
              : (et(i, "all", "m"),
                i
                  ? (H(!0),
                    (n || r) &&
                      (p.autoScrolling &&
                        f.off(_.touchmove).on(_.touchmove, ne),
                      rt(ht)
                        .off(_.touchstart)
                        .on(_.touchstart, ae)
                        .off(_.touchmove)
                        .on(_.touchmove, re)))
                  : (H(!1),
                    (n || r) &&
                      (p.autoScrolling && f.off(_.touchmove),
                      rt(ht).off(_.touchstart).off(_.touchmove))));
          }
          function V(i, e) {
            void 0 !== e
              ? ((e = e.replace(/ /g, "").split(",")),
                rt.each(e, function (e, t) {
                  et(i, t, "k");
                }))
              : (et(i, "all", "k"), (p.keyboardScrolling = i));
          }
          function W() {
            var e = rt(bt).prev(xt);
            e.length ||
              (!p.loopTop && !p.continuousVertical) ||
              (e = rt(xt).last()),
              e.length && ue(e, null, !0);
          }
          function X() {
            var e = rt(bt).next(xt);
            e.length ||
              (!p.loopBottom && !p.continuousVertical) ||
              (e = rt(xt).first()),
              e.length && ue(e, null, !1);
          }
          function q(e, t) {
            z(0, "internal"), Y(e, t), z(A.scrollingSpeed, "internal");
          }
          function Y(e, t) {
            var i = Ge(e);
            void 0 !== t ? Ve(e, t) : 0 < i.length && ue(i);
          }
          function Q(e) {
            ce("right", e);
          }
          function Z(e) {
            ce("left", e);
          }
          function J(e) {
            var t;
            i.hasClass(pt) ||
              ((c = !0),
              (m = zt.height()),
              rt(xt).each(function () {
                var e = rt(this).find(Ct),
                  t = rt(this).find(At);
                p.verticalCentered &&
                  rt(this)
                    .find(Tt)
                    .css("height", je(rt(this)) + "px"),
                  rt(this).css("height", m + "px"),
                  1 < t.length && Oe(e, e.find(Lt));
              }),
              p.scrollOverflow && x.createScrollBarForAll(),
              (t = rt(bt).index(xt)) && q(t + 1),
              (c = !1),
              rt.isFunction(p.afterResize) && e && p.afterResize.call(i),
              rt.isFunction(p.afterReBuild) && !e && p.afterReBuild.call(i));
          }
          function $(e) {
            var t = f.hasClass(ut);
            e
              ? t ||
                (U(!1, "internal"),
                j(!1, "internal"),
                rt(St).hide(),
                f.addClass(ut),
                rt.isFunction(p.afterResponsive) &&
                  p.afterResponsive.call(i, e))
              : t &&
                (U(A.autoScrolling, "internal"),
                j(A.autoScrolling, "internal"),
                rt(St).show(),
                f.removeClass(ut),
                rt.isFunction(p.afterResponsive) &&
                  p.afterResponsive.call(i, e));
          }
          function K() {
            var e,
              t = rt(bt);
            t.addClass(yt),
              fe(t),
              me(t),
              p.scrollOverflow && p.scrollOverflowHandler.afterLoad(),
              ((e = Ge(be().section)).length &&
                (!e.length || e.index() !== u.index())) ||
                (rt.isFunction(p.afterLoad) &&
                  p.afterLoad.call(t, t.data("anchor"), t.index(xt) + 1)),
              rt.isFunction(p.afterRender) && p.afterRender.call(i);
          }
          function ee() {
            var e;
            if (!p.autoScrolling || p.scrollBar) {
              var t,
                i,
                n,
                r,
                o,
                a = zt.scrollTop(),
                s = ((e = C < (n = a) ? "down" : "up"), (N = C = n), e),
                l = 0,
                c = a + zt.height() / 2,
                h = f.height() - zt.height() === a,
                u = at.querySelectorAll(xt);
              if (h) l = u.length - 1;
              else if (a)
                for (var d = 0; d < u.length; ++d)
                  u[d].offsetTop <= c && (l = d);
              else l = 0;
              (t = s),
                (i = rt(bt).position().top),
                (n = i + zt.height()),
                ("up" != t
                  ? i <= zt.scrollTop()
                  : n >= zt.scrollTop() + zt.height()) &&
                  (rt(bt).hasClass(yt) ||
                    rt(bt).addClass(yt).siblings().removeClass(yt)),
                (e = rt(u).eq(l)).hasClass(gt) ||
                  ((L = !0),
                  (a = (h = rt(bt)).index(xt) + 1),
                  (s = Be(e)),
                  (t = e.data("anchor")),
                  (i = e.index(xt) + 1),
                  (n = e.find(Lt)).length &&
                    ((o = n.data("anchor")), (r = n.index())),
                  v &&
                    (e.addClass(gt).siblings().removeClass(gt),
                    rt.isFunction(p.onLeave) && p.onLeave.call(h, a, i, s),
                    rt.isFunction(p.afterLoad) && p.afterLoad.call(e, t, i),
                    ve(h),
                    fe(e),
                    me(e),
                    Ue(t, i - 1),
                    p.anchors.length && (g = t),
                    Xe(r, o, t)),
                  clearTimeout(S),
                  (S = setTimeout(function () {
                    L = !1;
                  }, 100))),
                p.fitToSection &&
                  (clearTimeout(M),
                  (M = setTimeout(function () {
                    p.fitToSection && rt(bt).outerHeight() <= m && te();
                  }, p.fitToSectionDelay)));
            }
          }
          function te() {
            v && ((c = !0), ue(rt(bt)), (c = !1));
          }
          function ie(e) {
            if (d.m[e]) {
              var t = "down" === e ? X : W;
              if (p.scrollOverflow) {
                var i = p.scrollOverflowHandler.scrollable(rt(bt)),
                  e = "down" === e ? "bottom" : "top";
                if (0 < i.length) {
                  if (!p.scrollOverflowHandler.isScrolled(e, i)) return 1;
                  t();
                } else t();
              } else t();
            }
          }
          function ne(e) {
            var t = e.originalEvent;
            p.autoScrolling && oe(t) && e.preventDefault();
          }
          function re(e) {
            var t = e.originalEvent,
              i = rt(t.target).closest(xt);
            oe(t) &&
              (p.autoScrolling && e.preventDefault(),
              (t = Ze(t)),
              (O = t.y),
              (I = t.x),
              i.find(Ct).length && st.abs(R - I) > st.abs(P - O)
                ? !a &&
                  st.abs(R - I) >
                    (zt.outerWidth() / 100) * p.touchSensitivity &&
                  (I < R ? d.m.right && Q(i) : d.m.left && Z(i))
                : p.autoScrolling &&
                  v &&
                  st.abs(P - O) > (zt.height() / 100) * p.touchSensitivity &&
                  (O < P ? ie("down") : P < O && ie("up")));
          }
          function oe(e) {
            return void 0 === e.pointerType || "mouse" != e.pointerType;
          }
          function ae(e) {
            e = e.originalEvent;
            p.fitToSection && o.stop(),
              oe(e) && ((e = Ze(e)), (P = e.y), (R = e.x));
          }
          function se(e, t) {
            for (
              var i = 0, n = e.slice(st.max(e.length - t, 1)), r = 0;
              r < n.length;
              r++
            )
              i += n[r];
            return st.ceil(i / t);
          }
          function le(e) {
            var t = new Date().getTime(),
              i = rt(".fp-completely").hasClass("fp-normal-scroll");
            if (p.autoScrolling && !h && !i) {
              var n = (e = e || ot.event).wheelDelta || -e.deltaY || -e.detail,
                r = st.max(-1, st.min(1, n)),
                i = void 0 !== e.wheelDeltaX || void 0 !== e.deltaX,
                i =
                  st.abs(e.wheelDeltaX) < st.abs(e.wheelDelta) ||
                  st.abs(e.deltaX) < st.abs(e.deltaY) ||
                  !i;
              149 < l.length && l.shift(),
                l.push(st.abs(n)),
                p.scrollBar &&
                  (e.preventDefault
                    ? e.preventDefault()
                    : (e.returnValue = !1));
              e = t - D;
              return (
                (D = t),
                200 < e && (l = []),
                v &&
                  ((e = se(l, 10)),
                  se(l, 70) <= e && i && ie(r < 0 ? "down" : "up")),
                !1
              );
            }
            p.fitToSection && o.stop();
          }
          function ce(e, t) {
            var i = (void 0 === t ? rt(bt) : t).find(Ct),
              n = i.find(At).length;
            if (!(!i.length || a || n < 2)) {
              (t = i.find(Lt)), (n = null);
              if (!(n = "left" === e ? t.prev(At) : t.next(At)).length) {
                if (!p.loopHorizontal) return;
                n = "left" === e ? t.siblings(":last") : t.siblings(":first");
              }
              (a = !0), Oe(i, n, e);
            }
          }
          function he() {
            rt(Lt).each(function () {
              Je(rt(this), "internal");
            });
          }
          function ue(e, t, i) {
            var n, r, o, a, s, l;
            void 0 !== e &&
              (((a = {
                element: e,
                callback: t,
                isMovementUp: i,
                dtop:
                  ((a = (r = (n = e).position()).top),
                  (t = r.top > N),
                  (i = a - m + n.outerHeight()),
                  (r = p.bigSectionsDestination),
                  n.outerHeight() > m
                    ? ((t || r) && "bottom" !== r) || (a = i)
                    : (t || (c && n.is(":last-child"))) && (a = i),
                  (N = a)),
                yMovement: Be(e),
                anchorLink: e.data("anchor"),
                sectionIndex: e.index(xt),
                activeSlide: e.find(Lt),
                activeSection: rt(bt),
                leavingSection: rt(bt).index(xt) + 1,
                localIsResizing: c,
              }).activeSection.is(e) &&
                !c) ||
                (p.scrollBar &&
                  zt.scrollTop() === a.dtop &&
                  !e.hasClass("fp-auto-height")) ||
                (a.activeSlide.length &&
                  ((l = a.activeSlide.data("anchor")),
                  (o = a.activeSlide.index())),
                (rt.isFunction(p.onLeave) &&
                  !a.localIsResizing &&
                  !1 ===
                    p.onLeave.call(
                      a.activeSection,
                      a.leavingSection,
                      a.sectionIndex + 1,
                      a.yMovement
                    )) ||
                  (p.autoScrolling &&
                    p.continuousVertical &&
                    void 0 !== a.isMovementUp &&
                    ((!a.isMovementUp && "up" == a.yMovement) ||
                      (a.isMovementUp && "down" == a.yMovement)) &&
                    (a = (function (e) {
                      e.isMovementUp
                        ? rt(bt).before(e.activeSection.nextAll(xt))
                        : rt(bt).after(
                            e.activeSection.prevAll(xt).get().reverse()
                          );
                      return (
                        $e(rt(bt).position().top),
                        he(),
                        (e.wrapAroundElements = e.activeSection),
                        (e.dtop = e.element.position().top),
                        (e.yMovement = Be(e.element)),
                        (e.leavingSection = e.activeSection.index(xt) + 1),
                        (e.sectionIndex = e.element.index(xt)),
                        e
                      );
                    })(a)),
                  a.localIsResizing || ve(a.activeSection),
                  p.scrollOverflow && p.scrollOverflowHandler.beforeLeave(),
                  e.addClass(gt).siblings().removeClass(gt),
                  fe(e),
                  p.scrollOverflow && p.scrollOverflowHandler.onLeave(),
                  (v = !1),
                  Xe(o, l, a.anchorLink, a.sectionIndex),
                  (s = a),
                  p.css3 && p.autoScrolling && !p.scrollBar
                    ? (He(
                        "translate3d(0px, -" + st.round(s.dtop) + "px, 0px)",
                        !0
                      ),
                      p.scrollingSpeed
                        ? (clearTimeout(w),
                          (w = setTimeout(function () {
                            de(s);
                          }, p.scrollingSpeed)))
                        : de(s))
                    : ((l = (function (e) {
                        var t = {};
                        p.autoScrolling && !p.scrollBar
                          ? ((t.options = { top: -e.dtop }), (t.element = ht))
                          : ((t.options = { scrollTop: e.dtop }),
                            (t.element = "html, body"));
                        return t;
                      })(s)),
                      rt(l.element)
                        .animate(l.options, p.scrollingSpeed, p.easing)
                        .promise()
                        .done(function () {
                          p.scrollBar
                            ? setTimeout(function () {
                                de(s);
                              }, 30)
                            : de(s);
                        })),
                  (g = a.anchorLink),
                  Ue(a.anchorLink, a.sectionIndex))));
          }
          function de(e) {
            var t;
            (t = e).wrapAroundElements &&
              t.wrapAroundElements.length &&
              (t.isMovementUp
                ? rt(".fp-section:first").before(t.wrapAroundElements)
                : rt(".fp-section:last").after(t.wrapAroundElements),
              $e(rt(bt).position().top),
              he()),
              rt.isFunction(p.afterLoad) &&
                !e.localIsResizing &&
                p.afterLoad.call(e.element, e.anchorLink, e.sectionIndex + 1),
              p.scrollOverflow && p.scrollOverflowHandler.afterLoad(),
              e.localIsResizing || me(e.element),
              e.element.addClass(yt).siblings().removeClass(yt),
              (v = !0),
              rt.isFunction(e.callback) && e.callback.call(this);
          }
          function pe(e, t) {
            e.attr(t, e.data(t)).removeAttr("data-" + t);
          }
          function fe(e) {
            var n;
            p.lazyLoading &&
              ye(e)
                .find(
                  "img[data-src], img[data-srcset], source[data-src], video[data-src], audio[data-src], iframe[data-src]"
                )
                .each(function () {
                  var e;
                  (n = rt(this)),
                    rt.each(["src", "srcset"], function (e, t) {
                      var i = n.attr("data-" + t);
                      void 0 !== i && i && pe(n, t);
                    }),
                    n.is("source") &&
                      ((e = n.closest("video").length ? "video" : "audio"),
                      n.closest(e).get(0).load());
                });
          }
          function me(e) {
            e = ye(e);
            e.find("video, audio").each(function () {
              var e = rt(this).get(0);
              e.hasAttribute("data-autoplay") &&
                "function" == typeof e.play &&
                e.play();
            }),
              e.find('iframe[src*="youtube.com/embed/"]').each(function () {
                var e = rt(this).get(0);
                e.hasAttribute("data-autoplay") && ge(e),
                  (e.onload = function () {
                    e.hasAttribute("data-autoplay") && ge(e);
                  });
              });
          }
          function ge(e) {
            e.contentWindow.postMessage(
              '{"event":"command","func":"playVideo","args":""}',
              "*"
            );
          }
          function ve(e) {
            e = ye(e);
            e.find("video, audio").each(function () {
              var e = rt(this).get(0);
              e.hasAttribute("data-keepplaying") ||
                "function" != typeof e.pause ||
                e.pause();
            }),
              e.find('iframe[src*="youtube.com/embed/"]').each(function () {
                var e = rt(this).get(0);
                /youtube\.com\/embed\//.test(rt(this).attr("src")) &&
                  !e.hasAttribute("data-keepplaying") &&
                  rt(this)
                    .get(0)
                    .contentWindow.postMessage(
                      '{"event":"command","func":"pauseVideo","args":""}',
                      "*"
                    );
              });
          }
          function ye(e) {
            var t = e.find(Lt);
            return t.length && (e = rt(t)), e;
          }
          function _e() {
            var e = be(),
              t = e.section,
              e = e.slide;
            t && (p.animateAnchor ? Ve : q)(t, e);
          }
          function xe() {
            var e, t, i, n;
            L ||
              p.lockAnchors ||
              ((e = (n = be()).section),
              (t = n.slide),
              (n = (i = void 0 === g) && void 0 === t && !a),
              e.length &&
                ((e && e !== g && !i) || n || (!a && s != t)) &&
                Ve(e, t));
          }
          function be() {
            var e = ot.location.hash,
              t = e.replace("#", "").split("/"),
              e = -1 < e.indexOf("#/");
            return {
              section: e ? "/" + t[1] : decodeURIComponent(t[0]),
              slide: e ? decodeURIComponent(t[2]) : decodeURIComponent(t[1]),
            };
          }
          function we(e) {
            clearTimeout(E);
            var t = rt(":focus");
            t.is("textarea") ||
              t.is("input") ||
              t.is("select") ||
              "true" === t.attr("contentEditable") ||
              "" === t.attr("contentEditable") ||
              !p.keyboardScrolling ||
              !p.autoScrolling ||
              ((t = e.which),
              -1 < rt.inArray(t, [40, 38, 32, 33, 34]) && e.preventDefault(),
              (h = e.ctrlKey),
              (E = setTimeout(function () {
                !(function (e) {
                  var t = e.shiftKey;
                  if (v || !([37, 39].indexOf(e.which) < 0))
                    switch (e.which) {
                      case 38:
                      case 33:
                        d.k.up && W();
                        break;
                      case 32:
                        if (t && d.k.up) {
                          W();
                          break;
                        }
                      case 40:
                      case 34:
                        d.k.down && X();
                        break;
                      case 36:
                        d.k.up && Y(1);
                        break;
                      case 35:
                        d.k.down && Y(rt(xt).length);
                        break;
                      case 37:
                        d.k.left && Z();
                        break;
                      case 39:
                        d.k.right && Q();
                        break;
                      default:
                    }
                })(e);
              }, 150)));
          }
          function Te() {
            rt(this).prev().trigger("click");
          }
          function Se(e) {
            t && (h = e.ctrlKey);
          }
          function Me(e) {
            2 == e.which && ((F = e.pageY), i.on("mousemove", Re));
          }
          function Ee(e) {
            2 == e.which && i.off("mousemove");
          }
          function Ae() {
            var e = rt(this).closest(xt);
            rt(this).hasClass(kt) ? d.m.left && Z(e) : d.m.right && Q(e);
          }
          function Le() {
            h = t = !1;
          }
          function Ce(e) {
            e.preventDefault();
            e = rt(this).parent().index();
            ue(rt(xt).eq(e));
          }
          function Pe(e) {
            e.preventDefault();
            var t = rt(this).closest(xt).find(Ct),
              e = t.find(At).eq(rt(this).closest("li").index());
            Oe(t, e);
          }
          function Re(e) {
            v && (e.pageY < F && d.m.up ? W() : e.pageY > F && d.m.down && X()),
              (F = e.pageY);
          }
          function Oe(e, t, i) {
            var n,
              r,
              o = e.closest(xt),
              i = {
                slides: e,
                destiny: t,
                direction: i,
                destinyPos: t.position(),
                slideIndex: t.index(),
                section: o,
                sectionIndex: o.index(xt),
                anchorLink: o.data("anchor"),
                slidesNav: o.find(Dt),
                slideAnchor: Ye(t),
                prevSlide: o.find(Lt),
                prevSlideIndex: o.find(Lt).index(),
                localIsResizing: c,
              };
            (i.xMovement = (function (e, t) {
              if (e == t) return "none";
              if (t < e) return "left";
              return "right";
            })(i.prevSlideIndex, i.slideIndex)),
              i.localIsResizing || (v = !1),
              p.onSlideLeave &&
              !i.localIsResizing &&
              "none" !== i.xMovement &&
              rt.isFunction(p.onSlideLeave) &&
              !1 ===
                p.onSlideLeave.call(
                  i.prevSlide,
                  i.anchorLink,
                  i.sectionIndex + 1,
                  i.prevSlideIndex,
                  i.direction,
                  i.slideIndex
                )
                ? (a = !1)
                : (t.addClass(gt).siblings().removeClass(gt),
                  i.localIsResizing || (ve(i.prevSlide), fe(t)),
                  !p.loopHorizontal &&
                    p.controlArrows &&
                    (o.find(Ut).toggle(0 !== i.slideIndex),
                    o.find(Bt).toggle(!t.is(":last-child"))),
                  o.hasClass(gt) &&
                    !i.localIsResizing &&
                    Xe(
                      i.slideIndex,
                      i.slideAnchor,
                      i.anchorLink,
                      i.sectionIndex
                    ),
                  (o = e),
                  (r = !0),
                  (e = (n = i).destinyPos),
                  p.css3
                    ? ((i =
                        "translate3d(-" + st.round(e.left) + "px, 0px, 0px)"),
                      Fe(o.find(Rt)).css(Ke(i)),
                      (T = setTimeout(
                        function () {
                          r && Ie(n);
                        },
                        p.scrollingSpeed,
                        p.easing
                      )))
                    : o.animate(
                        { scrollLeft: st.round(e.left) },
                        p.scrollingSpeed,
                        p.easing,
                        function () {
                          r && Ie(n);
                        }
                      ));
          }
          function Ie(e) {
            var t, i;
            (t = e.slidesNav),
              (i = e.slideIndex),
              t.find(vt).removeClass(gt),
              t.find("li").eq(i).find("a").addClass(gt),
              e.localIsResizing ||
                (rt.isFunction(p.afterSlideLoad) &&
                  p.afterSlideLoad.call(
                    e.destiny,
                    e.anchorLink,
                    e.sectionIndex + 1,
                    e.slideAnchor,
                    e.slideIndex
                  ),
                (v = !0),
                me(e.destiny)),
              (a = !1);
          }
          function De() {
            var e;
            Ne(),
              n
                ? (e = rt(at.activeElement)).is("textarea") ||
                  e.is("input") ||
                  e.is("select") ||
                  ((e = zt.height()),
                  st.abs(e - k) > (20 * st.max(k, e)) / 100 && (J(!0), (k = e)))
                : (clearTimeout(b),
                  (b = setTimeout(function () {
                    J(!0);
                  }, 350)));
          }
          function Ne() {
            var e = p.responsive || p.responsiveWidth,
              t = p.responsiveHeight,
              i = e && zt.outerWidth() < e,
              n = t && zt.height() < t;
            e && t ? $(i || n) : e ? $(i) : t && $(n);
          }
          function Fe(e) {
            var t = "all " + p.scrollingSpeed + "ms " + p.easingcss3;
            return (
              e.removeClass(dt),
              e.css({ "-webkit-transition": t, transition: t })
            );
          }
          function ke(e) {
            return e.addClass(dt);
          }
          function Ue(e, t) {
            var i;
            (i = e),
              p.menu &&
                (rt(p.menu).find(vt).removeClass(gt),
                rt(p.menu)
                  .find('[data-menuanchor="' + i + '"]')
                  .addClass(gt)),
              (e = e),
              (t = t),
              p.navigation &&
                (rt(St).find(vt).removeClass(gt),
                (e
                  ? rt(St).find('a[href="#' + e + '"]')
                  : rt(St).find("li").eq(t).find("a")
                ).addClass(gt));
          }
          function Be(e) {
            var t = rt(bt).index(xt),
              e = e.index(xt);
            return t == e ? "none" : e < t ? "up" : "down";
          }
          function ze(e) {
            e.hasClass(Ot) ||
              e
                .addClass(Ot)
                .wrapInner(
                  '<div class="' + wt + '" style="height:' + je(e) + 'px;" />'
                );
          }
          function je(e) {
            var t,
              i = m;
            return (
              (p.paddingTop || p.paddingBottom) &&
                ((t = e).hasClass(_t) || (t = e.closest(xt)),
                (t =
                  parseInt(t.css("padding-top")) +
                  parseInt(t.css("padding-bottom"))),
                (i = m - t)),
              i
            );
          }
          function He(e, t) {
            (t ? Fe : ke)(i),
              i.css(Ke(e)),
              setTimeout(function () {
                i.removeClass(dt);
              }, 10);
          }
          function Ge(e) {
            if (!e) return [];
            var t = i.find(xt + '[data-anchor="' + e + '"]');
            return t.length || (t = rt(xt).eq(e - 1)), t;
          }
          function Ve(e, t) {
            var i = Ge(e);
            i.length &&
              (void 0 === t && (t = 0),
              e === g || i.hasClass(gt)
                ? We(i, t)
                : ue(i, function () {
                    We(i, t);
                  }));
          }
          function We(e, t) {
            var i, n;
            void 0 !== t &&
              ((i = e.find(Ct)),
              (n = t),
              (t = (e = (t = e).find(Ct)).find(
                At + '[data-anchor="' + n + '"]'
              )).length || (t = e.find(At).eq(n)),
              (t = t).length && Oe(i, t));
          }
          function Xe(e, t, i) {
            var n = "";
            p.anchors.length &&
              !p.lockAnchors &&
              (e
                ? (void 0 !== i && (n = i),
                  void 0 === t && (t = e),
                  qe(n + "/" + (s = t)))
                : (void 0 !== e && (s = t), qe(i))),
              Qe();
          }
          function qe(e) {
            var t;
            p.recordHistory
              ? (location.hash = e)
              : n || r
              ? ot.history.replaceState(lt, lt, "#" + e)
              : ((t = ot.location.href.split("#")[0]),
                ot.location.replace(t + "#" + e));
          }
          function Ye(e) {
            var t = e.data("anchor"),
              e = e.index();
            return void 0 === t && (t = e), t;
          }
          function Qe() {
            var e = rt(bt),
              t = e.find(Lt),
              i = Ye(e),
              e = Ye(t),
              i = String(i);
            t.length && (i = i + "-" + e),
              (i = i.replace("/", "-").replace("#", ""));
            e = new RegExp("\\b\\s?" + mt + "-[^\\s]+\\b", "g");
            (f[0].className = f[0].className.replace(e, "")),
              f.addClass(mt + "-" + i);
          }
          function Ze(e) {
            var t = [];
            return (
              (t.y = (
                void 0 !== e.pageY && (e.pageY || e.pageX) ? e : e.touches[0]
              ).pageY),
              (t.x = (
                void 0 !== e.pageX && (e.pageY || e.pageX) ? e : e.touches[0]
              ).pageX),
              r &&
                oe(e) &&
                p.scrollBar &&
                ((t.y = e.touches[0].pageY), (t.x = e.touches[0].pageX)),
              t
            );
          }
          function Je(e, t) {
            z(0, "internal"),
              void 0 !== t && (c = !0),
              Oe(e.closest(Ct), e),
              void 0 !== t && (c = !1),
              z(A.scrollingSpeed, "internal");
          }
          function $e(e) {
            e = st.round(e);
            p.css3 && p.autoScrolling && !p.scrollBar
              ? He("translate3d(0px, -" + e + "px, 0px)", !1)
              : p.autoScrolling && !p.scrollBar
              ? i.css("top", -e)
              : o.scrollTop(e);
          }
          function Ke(e) {
            return {
              "-webkit-transform": e,
              "-moz-transform": e,
              "-ms-transform": e,
              transform: e,
            };
          }
          function et(i, e, n) {
            "all" !== e
              ? (d[n][e] = i)
              : rt.each(Object.keys(d[n]), function (e, t) {
                  d[n][t] = i;
                });
          }
          function tt(e, t, i) {
            (p[e] = t), "internal" !== i && (A[e] = t);
          }
          function it() {
            rt("html").hasClass(ft)
              ? nt(
                  "error",
                  "Fullpage.js can only be initialized once and you are doing it multiple times!"
                )
              : (p.continuousVertical &&
                  (p.loopTop || p.loopBottom) &&
                  ((p.continuousVertical = !1),
                  nt(
                    "warn",
                    "Option `loopTop/loopBottom` is mutually exclusive with `continuousVertical`; `continuousVertical` disabled"
                  )),
                p.scrollBar &&
                  p.scrollOverflow &&
                  nt(
                    "warn",
                    "Option `scrollBar` is mutually exclusive with `scrollOverflow`. Sections with scrollOverflow might not work well in Firefox"
                  ),
                !p.continuousVertical ||
                  (!p.scrollBar && p.autoScrolling) ||
                  ((p.continuousVertical = !1),
                  nt(
                    "warn",
                    "Scroll bars (`scrollBar:true` or `autoScrolling:false`) are mutually exclusive with `continuousVertical`; `continuousVertical` disabled"
                  )),
                p.scrollOverflow &&
                  !p.scrollOverflowHandler &&
                  ((p.scrollOverflow = !1),
                  nt(
                    "error",
                    "The option `scrollOverflow:true` requires the file `scrolloverflow.min.js`. Please include it before fullPage.js."
                  )),
                rt.each(
                  [
                    "fadingEffect",
                    "continuousHorizontal",
                    "scrollHorizontally",
                    "interlockedSlides",
                    "resetSliders",
                    "responsiveSlides",
                    "offsetSections",
                    "dragAndMove",
                    "scrollOverflowReset",
                    "parallax",
                  ],
                  function (e, t) {
                    p[t] &&
                      nt(
                        "warn",
                        "fullpage.js extensions require jquery.fullpage.extensions.min.js file instead of the usual jquery.fullpage.js. Requested: " +
                          t
                      );
                  }
                ),
                rt.each(p.anchors, function (e, t) {
                  var i = jt.find("[name]").filter(function () {
                      return (
                        rt(this).attr("name") &&
                        rt(this).attr("name").toLowerCase() == t.toLowerCase()
                      );
                    }),
                    n = jt.find("[id]").filter(function () {
                      return (
                        rt(this).attr("id") &&
                        rt(this).attr("id").toLowerCase() == t.toLowerCase()
                      );
                    });
                  (n.length || i.length) &&
                    (nt(
                      "error",
                      "data-anchor tags can not have the same value as any `id` element on the site (or `name` element for IE)."
                    ),
                    n.length &&
                      nt(
                        "error",
                        '"' +
                          t +
                          '" is is being used by another element `id` property'
                      ),
                    i.length &&
                      nt(
                        "error",
                        '"' +
                          t +
                          '" is is being used by another element `name` property'
                      ));
                }));
          }
          function nt(e, t) {
            console && console[e] && console[e]("fullPage: " + t);
          }
          rt("html").hasClass(ft)
            ? it()
            : ((o = rt("html, body")),
              (f = rt("body")),
              (e = rt.fn.fullpage),
              (p = rt.extend(
                {
                  menu: !1,
                  anchors: [],
                  lockAnchors: !1,
                  navigation: !1,
                  navigationPosition: "right",
                  navigationTooltips: [],
                  showActiveTooltip: !1,
                  slidesNavigation: !1,
                  slidesNavPosition: "bottom",
                  scrollBar: !1,
                  hybrid: !1,
                  css3: !0,
                  scrollingSpeed: 700,
                  autoScrolling: !0,
                  fitToSection: !0,
                  fitToSectionDelay: 1e3,
                  easing: "easeInOutCubic",
                  easingcss3: "ease",
                  loopBottom: !1,
                  loopTop: !1,
                  loopHorizontal: !0,
                  continuousVertical: !1,
                  continuousHorizontal: !1,
                  scrollHorizontally: !1,
                  interlockedSlides: !1,
                  dragAndMove: !1,
                  offsetSections: !1,
                  resetSliders: !1,
                  fadingEffect: !1,
                  normalScrollElements: null,
                  scrollOverflow: !1,
                  scrollOverflowReset: !1,
                  scrollOverflowHandler: rt.fn.fp_scrolloverflow
                    ? rt.fn.fp_scrolloverflow.iscrollHandler
                    : null,
                  scrollOverflowOptions: null,
                  touchSensitivity: 5,
                  normalScrollElementTouchThreshold: 5,
                  bigSectionsDestination: null,
                  keyboardScrolling: !0,
                  animateAnchor: !0,
                  recordHistory: !0,
                  controlArrows: !0,
                  controlArrowColor: "#fff",
                  verticalCentered: !0,
                  sectionsColor: [],
                  paddingTop: 0,
                  paddingBottom: 0,
                  fixedElements: null,
                  responsive: 0,
                  responsiveWidth: 0,
                  responsiveHeight: 0,
                  responsiveSlides: !1,
                  parallax: !1,
                  parallaxOptions: {
                    type: "reveal",
                    percentage: 62,
                    property: "translate",
                  },
                  sectionSelector: ".section",
                  slideSelector: ".slide",
                  afterLoad: null,
                  onLeave: null,
                  afterRender: null,
                  afterResize: null,
                  afterReBuild: null,
                  afterSlideLoad: null,
                  onSlideLeave: null,
                  afterResponsive: null,
                  lazyLoading: !0,
                },
                p
              )),
              (a = !1),
              (n = navigator.userAgent.match(
                /(iPhone|iPod|iPad|Android|playbook|silk|BlackBerry|BB10|Windows Phone|Tizen|Bada|webOS|IEMobile|Opera Mini)/
              )),
              (r =
                "ontouchstart" in ot ||
                0 < navigator.msMaxTouchPoints ||
                navigator.maxTouchPoints),
              (i = rt(this)),
              (m = zt.height()),
              ((d = {
                m: {
                  up: (v = t = !(c = !(l = []))),
                  down: !0,
                  left: !0,
                  right: !0,
                },
              }).k = rt.extend(!0, {}, d.m)),
              (y = (function () {
                var e;
                e = ot.PointerEvent
                  ? { down: "pointerdown", move: "pointermove" }
                  : { down: "MSPointerDown", move: "MSPointerMove" };
                return e;
              })()),
              (_ = {
                touchmove: "ontouchmove" in ot ? "touchmove" : y.move,
                touchstart: "ontouchstart" in ot ? "touchstart" : y.down,
              }),
              (A = rt.extend(!0, {}, p)),
              it(),
              rt.extend(rt.easing, {
                easeInOutCubic: function (e, t, i, n, r) {
                  return (t /= r / 2) < 1
                    ? (n / 2) * t * t * t + i
                    : (n / 2) * ((t -= 2) * t * t + 2) + i;
                },
              }),
              rt(this).length &&
                ((e.version = "2.9.5"),
                (e.setAutoScrolling = U),
                (e.setRecordHistory = B),
                (e.setScrollingSpeed = z),
                (e.setFitToSection = j),
                (e.setLockAnchors = function (e) {
                  p.lockAnchors = e;
                }),
                (e.setMouseWheelScrolling = H),
                (e.setAllowScrolling = G),
                (e.setKeyboardScrolling = V),
                (e.moveSectionUp = W),
                (e.moveSectionDown = X),
                (e.silentMoveTo = q),
                (e.moveTo = Y),
                (e.moveSlideRight = Q),
                (e.moveSlideLeft = Z),
                (e.fitToSection = te),
                (e.reBuild = J),
                (e.setResponsive = $),
                (e.destroy = function (e) {
                  U(!1, "internal"),
                    G(!1),
                    V(!1),
                    i.addClass(pt),
                    clearTimeout(T),
                    clearTimeout(w),
                    clearTimeout(b),
                    clearTimeout(S),
                    clearTimeout(M),
                    zt
                      .off("scroll", ee)
                      .off("hashchange", xe)
                      .off("resize", De),
                    jt
                      .off("click touchstart", St + " a")
                      .off("mouseenter", St + " li")
                      .off("mouseleave", St + " li")
                      .off("click touchstart", Nt)
                      .off("mouseover", p.normalScrollElements)
                      .off("mouseout", p.normalScrollElements),
                    rt(xt).off("click touchstart", Ft),
                    clearTimeout(T),
                    clearTimeout(w),
                    e &&
                      (function () {
                        $e(0),
                          i
                            .find(
                              "img[data-src], source[data-src], audio[data-src], iframe[data-src]"
                            )
                            .each(function () {
                              pe(rt(this), "src");
                            }),
                          i.find("img[data-srcset]").each(function () {
                            pe(rt(this), "srcset");
                          }),
                          rt(St + ", " + Dt + ", " + Ft).remove(),
                          rt(xt).css({
                            height: "",
                            "background-color": "",
                            padding: "",
                          }),
                          rt(At).css({ width: "" }),
                          i.css({
                            height: "",
                            position: "",
                            "-ms-touch-action": "",
                            "touch-action": "",
                          }),
                          o.css({ overflow: "", height: "" }),
                          rt("html").removeClass(ft),
                          f.removeClass(ut),
                          rt.each(
                            f.get(0).className.split(/\s+/),
                            function (e, t) {
                              0 === t.indexOf(mt) && f.removeClass(t);
                            }
                          ),
                          rt(xt + ", " + At).each(function () {
                            p.scrollOverflowHandler &&
                              p.scrollOverflowHandler.remove(rt(this)),
                              rt(this).removeClass(Ot + " " + gt);
                          }),
                          ke(i),
                          i.find(Tt + ", " + Rt + ", " + Ct).each(function () {
                            rt(this).replaceWith(this.childNodes);
                          }),
                          i.css({
                            "-webkit-transition": "none",
                            transition: "none",
                          }),
                          o.scrollTop(0);
                        var e = [_t, Et, Pt];
                        rt.each(e, function (e, t) {
                          rt("." + t).removeClass(t);
                        });
                      })();
                }),
                (e.shared = { afterRenderActions: K }),
                p.css3 &&
                  (p.css3 = (function () {
                    var e,
                      t,
                      i = at.createElement("p"),
                      n = {
                        webkitTransform: "-webkit-transform",
                        OTransform: "-o-transform",
                        msTransform: "-ms-transform",
                        MozTransform: "-moz-transform",
                        transform: "transform",
                      };
                    for (t in (at.body.insertBefore(i, null), n))
                      i.style[t] !== lt &&
                        ((i.style[t] = "translate3d(1px,1px,1px)"),
                        (e = ot.getComputedStyle(i).getPropertyValue(n[t])));
                    return (
                      at.body.removeChild(i),
                      e !== lt && 0 < e.length && "none" !== e
                    );
                  })()),
                (p.scrollBar = p.scrollBar || p.hybrid),
                (function () {
                  var e = i.find(p.sectionSelector);
                  p.anchors.length ||
                    (p.anchors = e
                      .filter("[data-anchor]")
                      .map(function () {
                        return rt(this).data("anchor").toString();
                      })
                      .get()),
                    p.navigationTooltips.length ||
                      (p.navigationTooltips = e
                        .filter("[data-tooltip]")
                        .map(function () {
                          return rt(this).data("tooltip").toString();
                        })
                        .get());
                })(),
                i.css({ height: "100%", position: "relative" }),
                i.addClass(ct),
                rt("html").addClass(ft),
                (m = zt.height()),
                i.removeClass(pt),
                i.find(p.sectionSelector).addClass(_t),
                i.find(p.slideSelector).addClass(Et),
                rt(xt).each(function (e) {
                  var t,
                    i,
                    n,
                    r = rt(this),
                    o = r.find(At),
                    a = o.length;
                  (t = r),
                    (i = e) || 0 !== rt(bt).length || t.addClass(gt),
                    (u = rt(bt)),
                    t.css("height", m + "px"),
                    p.paddingTop && t.css("padding-top", p.paddingTop),
                    p.paddingBottom && t.css("padding-bottom", p.paddingBottom),
                    void 0 !== p.sectionsColor[i] &&
                      t.css("background-color", p.sectionsColor[i]),
                    void 0 !== p.anchors[i] &&
                      t.attr("data-anchor", p.anchors[i]),
                    (i = r),
                    (e = e),
                    void 0 !== p.anchors[e] &&
                      i.hasClass(gt) &&
                      Ue(p.anchors[e], e),
                    p.menu &&
                      p.css3 &&
                      rt(p.menu).closest(ht).length &&
                      rt(p.menu).appendTo(f),
                    0 < a
                      ? ((i = r),
                        (a = 100 * (e = a)),
                        (n = 100 / e),
                        (o = o).wrapAll('<div class="' + Pt + '" />'),
                        o.parent().wrap('<div class="fp-slides" />'),
                        i.find(Rt).css("width", a + "%"),
                        1 < e &&
                          (p.controlArrows &&
                            (function (e) {
                              e
                                .find(Ct)
                                .after(
                                  '<div class="fp-controlArrow fp-prev"></div><div class="fp-controlArrow fp-next"></div>'
                                ),
                                "#fff" != p.controlArrowColor &&
                                  (e
                                    .find(Bt)
                                    .css(
                                      "border-color",
                                      "transparent transparent transparent " +
                                        p.controlArrowColor
                                    ),
                                  e
                                    .find(Ut)
                                    .css(
                                      "border-color",
                                      "transparent " +
                                        p.controlArrowColor +
                                        " transparent transparent"
                                    )),
                                p.loopHorizontal || e.find(Ut).hide();
                            })(i),
                          p.slidesNavigation &&
                            (function (e, t) {
                              e.append(
                                '<div class="' + It + '"><ul></ul></div>'
                              );
                              var i = e.find(Dt);
                              i.addClass(p.slidesNavPosition);
                              for (var n = 0; n < t; n++)
                                i.find("ul").append(
                                  '<li><a href="#"><span></span></a></li>'
                                );
                              i.css("margin-left", "-" + i.width() / 2 + "px"),
                                i.find("li").first().find("a").addClass(gt);
                            })(i, e)),
                        o.each(function (e) {
                          rt(this).css("width", n + "%"),
                            p.verticalCentered && ze(rt(this));
                        }),
                        (i = i.find(Lt)).length &&
                        (0 !== rt(bt).index(xt) ||
                          (0 === rt(bt).index(xt) && 0 !== i.index()))
                          ? Je(i, "internal")
                          : o.eq(0).addClass(gt))
                      : p.verticalCentered && ze(r);
                }),
                p.fixedElements && p.css3 && rt(p.fixedElements).appendTo(f),
                p.navigation &&
                  (function () {
                    f.append('<div id="fp-nav"><ul></ul></div>');
                    var e = rt(St);
                    e.addClass(function () {
                      return p.showActiveTooltip
                        ? "fp-show-active " + p.navigationPosition
                        : p.navigationPosition;
                    });
                    for (var t = 0; t < rt(xt).length; t++) {
                      var i = "";
                      p.anchors.length && (i = p.anchors[t]);
                      var n = '<li><a href="#' + i + '"><span></span></a>',
                        i = p.navigationTooltips[t];
                      void 0 !== i &&
                        "" !== i &&
                        (n +=
                          '<div class="' +
                          Mt +
                          " " +
                          p.navigationPosition +
                          '">' +
                          i +
                          "</div>"),
                        (n += "</li>"),
                        e.find("ul").append(n);
                    }
                    rt(St).css("margin-top", "-" + rt(St).height() / 2 + "px"),
                      rt(St)
                        .find("li")
                        .eq(rt(bt).index(xt))
                        .find("a")
                        .addClass(gt);
                  })(),
                i.find('iframe[src*="youtube.com/embed/"]').each(function () {
                  var e, t, i;
                  (e = rt(this)),
                    (t = "enablejsapi=1"),
                    (i = e.attr("src")),
                    e.attr(
                      "src",
                      i +
                        (function (e) {
                          return /\?/.test(e) ? "&" : "?";
                        })(i) +
                        t
                    );
                }),
                p.scrollOverflow ? (x = p.scrollOverflowHandler.init(p)) : K(),
                G(!0),
                U(p.autoScrolling, "internal"),
                Ne(),
                Qe(),
                "complete" === at.readyState && _e(),
                zt.on("load", _e),
                zt.on("scroll", ee).on("hashchange", xe).blur(Le).resize(De),
                jt
                  .keydown(we)
                  .keyup(Se)
                  .on("click touchstart", St + " a", Ce)
                  .on("click touchstart", Nt, Pe)
                  .on("click", ".fp-tooltip", Te),
                rt(xt).on("click touchstart", Ft, Ae),
                p.normalScrollElements &&
                  (jt.on(
                    "mouseenter touchstart",
                    p.normalScrollElements,
                    function () {
                      G(!1);
                    }
                  ),
                  jt.on(
                    "mouseleave touchend",
                    p.normalScrollElements,
                    function () {
                      G(!0);
                    }
                  ))),
              (L = !1),
              (I = O = R = P = C = 0),
              (D = new Date().getTime()),
              (F = N = 0),
              (k = m));
        };
      }
    );
  },
  function (e, n, r) {
    var o,
      ci =
        "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
          ? function (e) {
              return typeof e;
            }
          : function (e) {
              return e &&
                "function" == typeof Symbol &&
                e.constructor === Symbol &&
                e !== Symbol.prototype
                ? "symbol"
                : typeof e;
            };
    !(function (t, i) {
      "use strict";
      (o = [r(8)]),
        void 0 ===
          (o = function (e) {
            return i(e, t, t.document, t.Math);
          }.apply(n, o)) || (e.exports = o);
    })(
      "undefined" != typeof window ? window : void 0,
      function (Mt, Et, At, Lt, Ct) {
        "use strict";
        var Pt = "fullpage-wrapper",
          Rt = "." + Pt,
          Ot = "fp-responsive",
          It = "fp-notransition",
          Dt = "fp-destroyed",
          Nt = "fp-enabled",
          Ft = "fp-viewing",
          kt = "active",
          Ut = "." + kt,
          Bt = "fp-completely",
          zt = "fp-section",
          jt = "." + zt,
          Ht = jt + Ut,
          Gt = "fp-tableCell",
          Vt = "." + Gt,
          Wt = "#fp-nav",
          Xt = "fp-tooltip",
          qt = "fp-slide",
          Yt = "." + qt,
          Qt = Yt + Ut,
          Zt = ".fp-slides",
          Jt = "fp-slidesContainer",
          $t = "." + Jt,
          Kt = "fp-table",
          ei = "fp-slidesNav",
          ti = "." + ei,
          ii = ti + " a",
          e = "fp-controlArrow",
          ni = "." + e,
          ri = "fp-prev",
          oi = ni + ".fp-prev",
          ai = ni + ".fp-next",
          si = Mt(Et),
          li = Mt(At);
        Mt.fn.fullpage = function (p) {
          function i(e, t) {
            e || Ae(0), Ne("autoScrolling", e, t);
            t = Mt(Ht);
            p.autoScrolling && !p.scrollBar
              ? (Ue.css({ overflow: "hidden", height: "100%" }),
                n(ut.recordHistory, "internal"),
                Ye.css({ "-ms-touch-action": "none", "touch-action": "none" }),
                t.length && Ae(t.position().top))
              : (Ue.css({ overflow: "visible", height: "initial" }),
                n(!1, "internal"),
                Ye.css({ "-ms-touch-action": "", "touch-action": "" }),
                Pe(Ye),
                t.length && Ue.scrollTop(t.position().top)),
              Ye.trigger("setAutoScrolling", [e]);
          }
          function n(e, t) {
            Ne("recordHistory", e, t);
          }
          function r(e, t) {
            "internal" !== t &&
              p.fadingEffect &&
              ze.fadingEffect &&
              ze.fadingEffect.update(e),
              Ne("scrollingSpeed", e, t);
          }
          function o(e, t) {
            Ne("fitToSection", e, t);
          }
          function t(e) {
            e
              ? ((function () {
                  var e,
                    t = "";
                  Et.addEventListener
                    ? (e = "addEventListener")
                    : ((e = "attachEvent"), (t = "on"));
                  var i =
                    "onwheel" in At.createElement("div")
                      ? "wheel"
                      : At.onmousewheel !== Ct
                      ? "mousewheel"
                      : "DOMMouseScroll";
                  "DOMMouseScroll" == i
                    ? At[e](t + "MozMousePixelScroll", C, !1)
                    : At[e](t + i, C, !1);
                })(),
                Ye.on("mousedown", Z).on("mouseup", J))
              : (At.addEventListener
                  ? (At.removeEventListener("mousewheel", C, !1),
                    At.removeEventListener("wheel", C, !1),
                    At.removeEventListener("MozMousePixelScroll", C, !1))
                  : At.detachEvent("onmousewheel", C),
                Ye.off("mousedown", Z).off("mouseup", J));
          }
          function a(i, e) {
            void 0 !== e
              ? ((e = e.replace(/ /g, "").split(",")),
                Mt.each(e, function (e, t) {
                  Ce(i, t, "m");
                }))
              : (Ce(i, "all", "m"),
                i
                  ? (t(!0),
                    (Re("dragAndMove") && "mouseonly" !== p.dragAndMove) ||
                      ((Xe || qe) &&
                        (p.autoScrolling &&
                          Be.off(ct.touchmove).on(ct.touchmove, S),
                        Mt(Rt)
                          .off(ct.touchstart)
                          .on(ct.touchstart, A)
                          .off(ct.touchmove)
                          .on(ct.touchmove, M))))
                  : (t(!1),
                    (Xe || qe) && Mt(Rt).off(ct.touchstart).off(ct.touchmove)));
          }
          function s(i, e) {
            void 0 !== e
              ? ((e = e.replace(/ /g, "").split(",")),
                Mt.each(e, function (e, t) {
                  Ce(i, t, "k");
                }))
              : (Ce(i, "all", "k"), (p.keyboardScrolling = i));
          }
          function l() {
            var e = Mt(Ht).prev(jt);
            e.length ||
              (!p.loopTop && !p.continuousVertical) ||
              (e = Mt(jt).last()),
              e.length && I(e, null, !0);
          }
          function c() {
            var e = Mt(Ht).next(jt);
            e.length ||
              (!p.loopBottom && !p.continuousVertical) ||
              (e = Mt(jt).first()),
              e.length && I(e, null, !1);
          }
          function h(e, t) {
            r(0, "internal"), u(e, t), r(ut.scrollingSpeed, "internal");
          }
          function u(e, t) {
            var i = ve(e);
            void 0 !== t ? ye(e, t) : 0 < i.length && I(i);
          }
          function d(e) {
            P("right", e);
          }
          function f(e) {
            P("left", e);
          }
          function m(e) {
            var t;
            Ye.hasClass(Dt) ||
              ((Ze = !0),
              (Qe = si.height()),
              Mt(jt).each(function () {
                var e = Mt(this).find(Zt),
                  t = Mt(this).find(Yt);
                p.verticalCentered &&
                  Mt(this)
                    .find(Vt)
                    .css("height", me(Mt(this)) + "px"),
                  Mt(this).css("height", y(Mt(this)) + "px"),
                  1 < t.length && ne(e, e.find(Qt));
              }),
              p.scrollOverflow && tt.createScrollBarForAll(),
              (t = Mt(Ht).index(jt)) && !Re("fadingEffect") && h(t + 1),
              (Ze = !1),
              Mt.isFunction(p.afterResize) && e && p.afterResize.call(Ye),
              Mt.isFunction(p.afterReBuild) && !e && p.afterReBuild.call(Ye));
          }
          function g(e) {
            var t = Be.hasClass(Ot);
            e
              ? t ||
                (i(!1, "internal"),
                o(!1, "internal"),
                Mt(Wt).hide(),
                Be.addClass(Ot),
                Mt.isFunction(p.afterResponsive) &&
                  p.afterResponsive.call(Ye, e),
                p.responsiveSlides &&
                  ze.responsiveSlides &&
                  ze.responsiveSlides.toSections(),
                Ye.trigger("afterResponsive", [e]))
              : t &&
                (i(ut.autoScrolling, "internal"),
                o(ut.autoScrolling, "internal"),
                Mt(Wt).show(),
                Be.removeClass(Ot),
                Mt.isFunction(p.afterResponsive) &&
                  p.afterResponsive.call(Ye, e),
                p.responsiveSlides &&
                  ze.responsiveSlides &&
                  ze.responsiveSlides.toSlides(),
                Ye.trigger("afterResponsive", [e]));
          }
          function e(e) {
            var t = "fp_" + e + "Extension";
            (dt[e] = p[e + "Key"]),
              (ze[e] = void 0 !== Et[t] ? new Et[t]() : null),
              ze[e] && ze[e].c(e);
          }
          function v(e, t, i) {
            var n = 100 * i,
              r = 100 / i;
            t.wrapAll('<div class="' + Jt + '" />'),
              t.parent().wrap('<div class="fp-slides" />'),
              e.find($t).css("width", n + "%"),
              1 < i &&
                (p.controlArrows &&
                  ((n = e)
                    .find(Zt)
                    .after(
                      '<div class="fp-controlArrow fp-prev"></div><div class="fp-controlArrow fp-next"></div>'
                    ),
                  "#fff" != p.controlArrowColor &&
                    (n
                      .find(ai)
                      .css(
                        "border-color",
                        "transparent transparent transparent " +
                          p.controlArrowColor
                      ),
                    n
                      .find(oi)
                      .css(
                        "border-color",
                        "transparent " +
                          p.controlArrowColor +
                          " transparent transparent"
                      )),
                  p.loopHorizontal || n.find(oi).hide()),
                p.slidesNavigation &&
                  (function (e, t) {
                    e.append('<div class="' + ei + '"><ul></ul></div>');
                    var i = e.find(ti);
                    i.addClass(p.slidesNavPosition);
                    for (var n = 0; n < t; n++)
                      i.find("ul").append(
                        '<li><a href="#"><span></span></a></li>'
                      );
                    i.css("margin-left", "-" + i.width() / 2 + "px"),
                      i.find("li").first().find("a").addClass(kt);
                  })(e, i)),
              t.each(function (e) {
                Mt(this).css("width", r + "%"),
                  p.verticalCentered && fe(Mt(this));
              });
            e = e.find(Qt);
            e.length &&
            (0 !== Mt(Ht).index(jt) ||
              (0 === Mt(Ht).index(jt) && 0 !== e.index()))
              ? Ee(e, "internal")
              : t.eq(0).addClass(kt);
          }
          function y(e) {
            return p.offsetSections && ze.offsetSections
              ? Lt.round(ze.offsetSections.getWindowHeight(e))
              : Qe;
          }
          function _() {
            var e,
              t = Mt(Ht);
            t.addClass(Bt),
              F(t),
              k(t),
              p.scrollOverflow && p.scrollOverflowHandler.afterLoad(),
              (!(e = ve(X().section)).length ||
                (e.length && e.index() === Ve.index())) &&
                Mt.isFunction(p.afterLoad) &&
                p.afterLoad.call(t, t.data("anchor"), t.index(jt) + 1),
              Mt.isFunction(p.afterRender) && p.afterRender.call(Ye);
          }
          function x() {
            bt || (requestAnimationFrame(b), (bt = !0));
          }
          function b() {
            if (
              (Ye.trigger("onScroll"),
              (!p.autoScrolling || p.scrollBar || Re("dragAndMove")) && !De())
            ) {
              var e,
                t,
                i,
                n,
                r,
                o,
                a,
                s = Re("dragAndMove")
                  ? Lt.abs(ze.dragAndMove.getCurrentScroll())
                  : si.scrollTop(),
                l = ((o = s), (wt = o), 0),
                c = s + si.height() / 2,
                h =
                  (Re("dragAndMove")
                    ? ze.dragAndMove.getDocumentHeight()
                    : Be.height() - si.height()) === s,
                u = At.querySelectorAll(jt);
              if (h) l = u.length - 1;
              else if (s)
                for (var d = 0; d < u.length; ++d)
                  u[d].offsetTop <= c && (l = d);
              else l = 0;
              (a = Mt(u).eq(l)).hasClass(kt) ||
                ((ft = !0),
                (n = (i = Mt(Ht)).index(jt) + 1),
                (r = de(a)),
                (o = a.data("anchor")),
                (h = a.index(jt) + 1),
                (s = a.find(Qt)).length &&
                  ((t = s.data("anchor")), (e = s.index())),
                $e &&
                  (a.addClass(kt).siblings().removeClass(kt),
                  Oe("parallax", "afterLoad"),
                  Mt.isFunction(p.onLeave) && p.onLeave.call(i, n, h, r),
                  Mt.isFunction(p.afterLoad) && p.afterLoad.call(a, o, h),
                  p.resetSliders &&
                    ze.resetSliders &&
                    ze.resetSliders.apply({
                      localIsResizing: Ze,
                      leavingSection: n,
                    }),
                  B(i),
                  F(a),
                  k(a),
                  ue(o, h - 1),
                  p.anchors.length && (je = o),
                  xe(e, t, o)),
                clearTimeout(ot),
                (ot = setTimeout(function () {
                  ft = !1;
                }, 100))),
                p.fitToSection &&
                  (clearTimeout(at),
                  (at = setTimeout(function () {
                    p.fitToSection && Mt(Ht).outerHeight() <= Qe && w();
                  }, p.fitToSectionDelay)));
            }
            bt = !1;
          }
          function w() {
            $e && ((Ze = !0), I(Mt(Ht)), (Ze = !1));
          }
          function T(e) {
            if (et.m[e]) {
              var t = "down" === e ? c : l;
              if (
                (ze.scrollHorizontally &&
                  (t = ze.scrollHorizontally.getScrollSection(e, t)),
                p.scrollOverflow)
              ) {
                var i = p.scrollOverflowHandler.scrollable(Mt(Ht)),
                  e = "down" === e ? "bottom" : "top";
                if (0 < i.length) {
                  if (!p.scrollOverflowHandler.isScrolled(e, i)) return 1;
                  t();
                } else t();
              } else t();
            }
          }
          function S(e) {
            var t = e.originalEvent;
            p.autoScrolling && E(t) && e.preventDefault();
          }
          function M(e) {
            var t = e.originalEvent,
              i = Mt(t.target).closest(jt);
            E(t) &&
              (p.autoScrolling && e.preventDefault(),
              (t = Me(t)),
              (vt = t.y),
              (yt = t.x),
              i.find(Zt).length && Lt.abs(gt - yt) > Lt.abs(mt - vt)
                ? !We &&
                  Lt.abs(gt - yt) >
                    (si.outerWidth() / 100) * p.touchSensitivity &&
                  (yt < gt ? et.m.right && d(i) : et.m.left && f(i))
                : p.autoScrolling &&
                  $e &&
                  Lt.abs(mt - vt) > (si.height() / 100) * p.touchSensitivity &&
                  (vt < mt ? T("down") : mt < vt && T("up")));
          }
          function E(e) {
            return void 0 === e.pointerType || "mouse" != e.pointerType;
          }
          function A(e) {
            e = e.originalEvent;
            p.fitToSection && Ue.stop(),
              E(e) && ((e = Me(e)), (mt = e.y), (gt = e.x));
          }
          function L(e, t) {
            for (
              var i = 0, n = e.slice(Lt.max(e.length - t, 1)), r = 0;
              r < n.length;
              r++
            )
              i += n[r];
            return Lt.ceil(i / t);
          }
          function C(e) {
            var t = new Date().getTime(),
              i = Mt(".fp-completely").hasClass("fp-normal-scroll");
            if (p.autoScrolling && !Ge && !i) {
              var n = (e = e || Et.event).wheelDelta || -e.deltaY || -e.detail,
                r = Lt.max(-1, Lt.min(1, n)),
                i = void 0 !== e.wheelDeltaX || void 0 !== e.deltaX,
                i =
                  Lt.abs(e.wheelDeltaX) < Lt.abs(e.wheelDelta) ||
                  Lt.abs(e.deltaX) < Lt.abs(e.deltaY) ||
                  !i;
              149 < Ke.length && Ke.shift(),
                Ke.push(Lt.abs(n)),
                p.scrollBar &&
                  (e.preventDefault
                    ? e.preventDefault()
                    : (e.returnValue = !1));
              e = t - xt;
              return (
                (xt = t),
                200 < e && (Ke = []),
                $e &&
                  !Ie() &&
                  ((e = L(Ke, 10)),
                  L(Ke, 70) <= e && i && T(r < 0 ? "down" : "up")),
                !1
              );
            }
            p.fitToSection && Ue.stop();
          }
          function P(e, t) {
            var i = (void 0 === t ? Mt(Ht) : t).find(Zt);
            if (!(!i.length || Ie() || We || i.find(Yt).length < 2)) {
              var n = i.find(Qt),
                t = null;
              if (!(t = "left" === e ? n.prev(Yt) : n.next(Yt)).length) {
                if (!p.loopHorizontal) return;
                t = "left" === e ? n.siblings(":last") : n.siblings(":first");
              }
              (We = !0), ne(i, t, e);
            }
          }
          function R() {
            Mt(Qt).each(function () {
              Ee(Mt(this), "internal");
            });
          }
          function O(e) {
            var t = e.position(),
              i = t.top,
              n =
                Re("dragAndMove") && ze.dragAndMove.isGrabbing
                  ? ze.dragAndMove.isScrollingDown()
                  : t.top > wt,
              r = i - Qe + e.outerHeight(),
              t = p.bigSectionsDestination;
            return (
              e.outerHeight() > Qe
                ? ((n || t) && "bottom" !== t) || (i = r)
                : (n || (Ze && e.is(":last-child"))) && (i = r),
              p.offsetSections &&
                ze.offsetSections &&
                (i = ze.offsetSections.getSectionPosition(n, i, e)),
              (wt = i)
            );
          }
          function I(e, t, i) {
            var n, r, o;
            void 0 !== e &&
              e.length &&
              (((t = {
                element: e,
                callback: t,
                isMovementUp: i,
                dtop: O(e),
                yMovement: de(e),
                anchorLink: e.data("anchor"),
                sectionIndex: e.index(jt),
                activeSlide: e.find(Qt),
                activeSection: Mt(Ht),
                leavingSection: Mt(Ht).index(jt) + 1,
                localIsResizing: Ze,
              }).activeSection.is(e) &&
                !Ze) ||
                (p.scrollBar &&
                  si.scrollTop() === t.dtop &&
                  !e.hasClass("fp-auto-height")) ||
                (t.activeSlide.length &&
                  ((o = t.activeSlide.data("anchor")),
                  (n = t.activeSlide.index())),
                (Mt.isFunction(p.onLeave) &&
                  !t.localIsResizing &&
                  !1 ===
                    p.onLeave.call(
                      t.activeSection,
                      t.leavingSection,
                      t.sectionIndex + 1,
                      t.yMovement
                    )) ||
                  (Oe("parallax", "apply", t),
                  p.autoScrolling &&
                    p.continuousVertical &&
                    void 0 !== t.isMovementUp &&
                    ((!t.isMovementUp && "up" == t.yMovement) ||
                      (t.isMovementUp && "down" == t.yMovement)) &&
                    ((i = t).isMovementUp
                      ? i.activeSection.before(i.activeSection.nextAll(jt))
                      : i.activeSection.after(
                          i.activeSection.prevAll(jt).get().reverse()
                        ),
                    Ae(Mt(Ht).position().top),
                    R(),
                    (i.wrapAroundElements = i.activeSection),
                    (i.dtop = i.element.position().top),
                    (i.yMovement = de(i.element)),
                    (i.leavingSection = i.activeSection.index(jt) + 1),
                    (i.sectionIndex = i.element.index(jt)),
                    Mt(Rt).trigger("onContinuousVertical", [i]),
                    (t = i)),
                  Re("scrollOverflowReset") &&
                    ze.scrollOverflowReset.setPrevious(t.activeSection),
                  t.localIsResizing || B(t.activeSection),
                  p.scrollOverflow && p.scrollOverflowHandler.beforeLeave(),
                  e.addClass(kt).siblings().removeClass(kt),
                  F(e),
                  p.scrollOverflow && p.scrollOverflowHandler.onLeave(),
                  ($e = !1),
                  xe(n, o, t.anchorLink, t.sectionIndex),
                  (r = t),
                  p.css3 && p.autoScrolling && !p.scrollBar
                    ? (ge(
                        "translate3d(0px, -" + Lt.round(r.dtop) + "px, 0px)",
                        !0
                      ),
                      p.scrollingSpeed
                        ? (clearTimeout(nt),
                          (nt = setTimeout(function () {
                            D(r);
                          }, p.scrollingSpeed)))
                        : D(r))
                    : ((o = (function (e) {
                        var t = {};
                        return (
                          p.autoScrolling && !p.scrollBar
                            ? ((t.options = { top: -e.dtop }), (t.element = Rt))
                            : ((t.options = { scrollTop: e.dtop }),
                              (t.element = "html, body")),
                          t
                        );
                      })(r)),
                      Mt(o.element)
                        .animate(o.options, p.scrollingSpeed, p.easing)
                        .promise()
                        .done(function () {
                          p.scrollBar
                            ? setTimeout(function () {
                                D(r);
                              }, 30)
                            : D(r);
                        })),
                  (je = t.anchorLink),
                  ue(
                    t.anchorLink,
                    (t = t).wrapAroundElements && t.wrapAroundElements.length
                      ? t.isMovementUp
                        ? Mt(jt).length - 1
                        : 0
                      : t.sectionIndex
                  ))));
          }
          function D(e) {
            var t;
            (t = e).wrapAroundElements &&
              t.wrapAroundElements.length &&
              (t.isMovementUp
                ? Mt(".fp-section:first").before(t.wrapAroundElements)
                : Mt(".fp-section:last").after(t.wrapAroundElements),
              Ae(Mt(Ht).position().top),
              R(),
              (t.sectionIndex = t.element.index(jt)),
              (t.leavingSection = t.activeSection.index(jt) + 1)),
              Mt.isFunction(p.afterLoad) &&
                !e.localIsResizing &&
                p.afterLoad.call(e.element, e.anchorLink, e.sectionIndex + 1),
              p.scrollOverflow && p.scrollOverflowHandler.afterLoad(),
              Oe("parallax", "afterLoad"),
              Re("scrollOverflowReset") && ze.scrollOverflowReset.reset(),
              p.resetSliders && ze.resetSliders && ze.resetSliders.apply(e),
              e.localIsResizing || k(e.element),
              e.element.addClass(Bt).siblings().removeClass(Bt),
              ($e = !0),
              Mt.isFunction(e.callback) && e.callback.call(this);
          }
          function N(e, t) {
            e.attr(t, e.data(t)).removeAttr("data-" + t);
          }
          function F(e) {
            var n;
            p.lazyLoading &&
              z(e)
                .find(
                  "img[data-src], img[data-srcset], source[data-src], video[data-src], audio[data-src], iframe[data-src]"
                )
                .each(function () {
                  var e;
                  (n = Mt(this)),
                    Mt.each(["src", "srcset"], function (e, t) {
                      var i = n.attr("data-" + t);
                      void 0 !== i && i && N(n, t);
                    }),
                    n.is("source") &&
                      ((e = n.closest("video").length ? "video" : "audio"),
                      n.closest(e).get(0).load());
                });
          }
          function k(e) {
            e = z(e);
            e.find("video, audio").each(function () {
              var e = Mt(this).get(0);
              e.hasAttribute("data-autoplay") &&
                "function" == typeof e.play &&
                e.play();
            }),
              e.find('iframe[src*="youtube.com/embed/"]').each(function () {
                var e = Mt(this).get(0);
                e.hasAttribute("data-autoplay") && U(e),
                  (e.onload = function () {
                    e.hasAttribute("data-autoplay") && U(e);
                  });
              });
          }
          function U(e) {
            e.contentWindow.postMessage(
              '{"event":"command","func":"playVideo","args":""}',
              "*"
            );
          }
          function B(e) {
            e = z(e);
            e.find("video, audio").each(function () {
              var e = Mt(this).get(0);
              e.hasAttribute("data-keepplaying") ||
                "function" != typeof e.pause ||
                e.pause();
            }),
              e.find('iframe[src*="youtube.com/embed/"]').each(function () {
                var e = Mt(this).get(0);
                /youtube\.com\/embed\//.test(Mt(this).attr("src")) &&
                  !e.hasAttribute("data-keepplaying") &&
                  Mt(this)
                    .get(0)
                    .contentWindow.postMessage(
                      '{"event":"command","func":"pauseVideo","args":""}',
                      "*"
                    );
              });
          }
          function z(e) {
            var t = e.find(Qt);
            return t.length && (e = Mt(t)), e;
          }
          function j(e) {
            function n(e) {
              var t,
                i,
                n,
                r,
                o,
                a = "",
                s = 0;
              for (e = e.replace(/[^A-Za-z0-9+\/=]/g, ""); s < e.length; )
                (t =
                  (l.indexOf(e.charAt(s++)) << 2) |
                  ((n = l.indexOf(e.charAt(s++))) >> 4)),
                  (i = ((15 & n) << 4) | ((r = l.indexOf(e.charAt(s++))) >> 2)),
                  (n = ((3 & r) << 6) | (o = l.indexOf(e.charAt(s++)))),
                  (a += String.fromCharCode(t)),
                  64 != r && (a += String.fromCharCode(i)),
                  64 != o && (a += String.fromCharCode(n));
              return (function (e) {
                for (var t, i = "", n = 0, r = 0, o = 0; n < e.length; )
                  (r = e.charCodeAt(n)) < 128
                    ? ((i += String.fromCharCode(r)), n++)
                    : 191 < r && r < 224
                    ? ((o = e.charCodeAt(n + 1)),
                      (i += String.fromCharCode(((31 & r) << 6) | (63 & o))),
                      (n += 2))
                    : ((o = e.charCodeAt(n + 1)),
                      (t = e.charCodeAt(n + 2)),
                      (i += String.fromCharCode(
                        ((15 & r) << 12) | ((63 & o) << 6) | (63 & t)
                      )),
                      (n += 3));
                return i;
              })(a);
            }
            function r(e) {
              return e.slice(3).slice(0, -3);
            }
            var l =
              "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
            return (function (e) {
              var t = e.split("_");
              if (1 < t.length) {
                var i = t[1];
                return (
                  e.replace(r(t[1]), "").split("_")[0] +
                  "_" +
                  n(i.slice(3).slice(0, -3))
                );
              }
              return r(e);
            })(n(e));
          }
          function H(e) {
            var t = (function () {
                if (At.domain.length) {
                  for (
                    var e = At.domain.replace(/^(www\.)/, "").split(".");
                    2 < e.length;

                  )
                    e.shift();
                  return e.join(".").replace(/(^\.*)|(\.*$)/g, "");
                }
                return "";
              })(),
              i = [
                "MTM0bG9jYWxob3N0MjM0",
                "MTM0MC4xMjM0",
                "MTM0anNoZWxsLm5ldDIzNA==",
                "UDdDQU5ZNlNN",
              ],
              n = j(i[0]),
              r = j(i[1]),
              o = j(i[2]),
              i = j(i[3]),
              r = [n, r, o].indexOf(t) < 0 && 0 !== t.length,
              o = void 0 !== dt[e] && dt[e].length;
            if (o || !r) {
              (o = o ? j(dt[e]) : ""),
                (e =
                  1 < (o = o.split("_")).length &&
                  -1 < o[1].indexOf(e, o[1].length - e.length));
              return (
                ((!(o[0].indexOf(t, o[0].length - t.length) < 0) ||
                  !r ||
                  i == o[0]) &&
                  e) ||
                !r
              );
            }
          }
          function G(e) {
            function t() {
              ht ||
                (Lt.random() < 0.5 ? Be.prepend(o) : Be.append(o),
                (ht = !0),
                o.bind("destroyed", function () {
                  clearTimeout(n), (n = setTimeout(i, 900));
                })),
                Mt(o).attr(
                  "style",
                  j(
                    "MTIzei1pbmRleDo5OTk5OTk5O3Bvc2l0aW9uOmZpeGVkO3RvcDoyMHB4O2JvdHRvbTphdXRvO2xlZnQ6MjBweDtyaWdodDphdXRvO2JhY2tncm91bmQ6cmVkO3BhZGRpbmc6N3B4IDE1cHg7Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6YXJpYWw7Y29sb3I6I2ZmZjtkaXNwbGF5OmlubGluZS1ibG9jazt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO29wYWNpdHk6MTtoZWlnaHQ6YXV0bzt3aWR0aDphdXRvO3pvb206MTttYXJnaW46YXV0bztib3JkZXI6bm9uZTt2aXNpYmlsaXR5OnZpc2libGU7Y2xpcC1wYXRoOm5vbmU7MTIz"
                  ).replace(/;/g, j("MTIzICFpbXBvcnRhbnQ7MzQ1"))
                );
            }
            function i() {
              ht = !1;
            }
            var n, r, o;
            Re(e) &&
              ze[e] &&
              ((r = j(
                "MTIzPGRpdj48YSBocmVmPSJodHRwOi8vYWx2YXJvdHJpZ28uY29tL2Z1bGxQYWdlL2V4dGVuc2lvbnMvIiBzdHlsZT0iY29sb3I6ICNmZmYgIWltcG9ydGFudDsgdGV4dC1kZWNvcmF0aW9uOm5vbmUgIWltcG9ydGFudDsiPlVubGljZW5zZWQgZnVsbFBhZ2UuanMgRXh0ZW5zaW9uPC9hPjwvZGl2PjEyMw=="
              )),
              (o = Mt("<div/>").html(r).contents()),
              H(e) || (t(), setInterval(t, 2e3)));
          }
          function V() {
            var e = X(),
              t = e.section,
              e = e.slide;
            t && (p.animateAnchor ? ye : h)(t, e);
          }
          function W() {
            var e, t, i, n;
            ft ||
              p.lockAnchors ||
              ((e = (n = X()).section),
              (t = n.slide),
              (n = (i = void 0 === je) && void 0 === t && !We),
              e.length &&
                ((e && e !== je && !i) || n || (!We && He != t)) &&
                ye(e, t));
          }
          function X() {
            var e = Et.location.hash,
              t = e.replace("#", "").split("/"),
              e = -1 < e.indexOf("#/");
            return {
              section: e ? "/" + t[1] : decodeURIComponent(t[0]),
              slide: e ? decodeURIComponent(t[2]) : decodeURIComponent(t[1]),
            };
          }
          function q(e) {
            clearTimeout(st);
            var t = Mt(":focus");
            t.is("textarea") ||
              t.is("input") ||
              t.is("select") ||
              "true" === t.attr("contentEditable") ||
              "" === t.attr("contentEditable") ||
              !p.keyboardScrolling ||
              !p.autoScrolling ||
              ((t = e.which),
              -1 < Mt.inArray(t, [40, 38, 32, 33, 34]) && e.preventDefault(),
              (Ge = e.ctrlKey),
              (st = setTimeout(function () {
                !(function (e) {
                  var t = e.shiftKey;
                  if ($e || !([37, 39].indexOf(e.which) < 0))
                    switch (e.which) {
                      case 38:
                      case 33:
                        et.k.up && l();
                        break;
                      case 32:
                        if (t && et.k.up) {
                          l();
                          break;
                        }
                      case 40:
                      case 34:
                        et.k.down && c();
                        break;
                      case 36:
                        et.k.up && u(1);
                        break;
                      case 35:
                        et.k.down && u(Mt(jt).length);
                        break;
                      case 37:
                        et.k.left && f();
                        break;
                      case 39:
                        et.k.right && d();
                        break;
                      default:
                    }
                })(e);
              }, 150)));
          }
          function Y() {
            Mt(this).prev().trigger("click");
          }
          function Q(e) {
            Je && (Ge = e.ctrlKey);
          }
          function Z(e) {
            2 == e.which && ((Tt = e.pageY), Ye.on("mousemove", ie));
          }
          function J(e) {
            2 == e.which && Ye.off("mousemove");
          }
          function $() {
            var e = Mt(this).closest(jt);
            Mt(this).hasClass(ri) ? et.m.left && f(e) : et.m.right && d(e);
          }
          function K() {
            Ge = Je = !1;
          }
          function ee(e) {
            e.preventDefault();
            e = Mt(this).parent().index();
            I(Mt(jt).eq(e));
          }
          function te(e) {
            e.preventDefault();
            var t = Mt(this).closest(jt).find(Zt),
              e = t.find(Yt).eq(Mt(this).closest("li").index());
            ne(t, e);
          }
          function ie(e) {
            $e &&
              (e.pageY < Tt && et.m.up
                ? l()
                : e.pageY > Tt && et.m.down && c()),
              (Tt = e.pageY);
          }
          function ne(e, t, i) {
            var n = e.closest(jt),
              i = {
                slides: e,
                destiny: t,
                direction: i,
                destinyPos: t.position(),
                slideIndex: t.index(),
                section: n,
                sectionIndex: n.index(jt),
                anchorLink: n.data("anchor"),
                slidesNav: n.find(ti),
                slideAnchor: we(t),
                prevSlide: n.find(Qt),
                prevSlideIndex: n.find(Qt).index(),
                localIsResizing: Ze,
              };
            return (
              (i.xMovement = pe(i.prevSlideIndex, i.slideIndex)),
              i.localIsResizing || ($e = !1),
              Oe("parallax", "applyHorizontal", i),
              p.onSlideLeave &&
              !i.localIsResizing &&
              "none" !== i.xMovement &&
              Mt.isFunction(p.onSlideLeave) &&
              !1 ===
                p.onSlideLeave.call(
                  i.prevSlide,
                  i.anchorLink,
                  i.sectionIndex + 1,
                  i.prevSlideIndex,
                  i.direction,
                  i.slideIndex
                )
                ? void (We = !1)
                : (t.addClass(kt).siblings().removeClass(kt),
                  i.localIsResizing || (B(i.prevSlide), F(t)),
                  re(i),
                  n.hasClass(kt) &&
                    !i.localIsResizing &&
                    xe(
                      i.slideIndex,
                      i.slideAnchor,
                      i.anchorLink,
                      i.sectionIndex
                    ),
                  ze.continuousHorizontal && ze.continuousHorizontal.apply(i),
                  void (De() ? oe(i) : ae(e, i, !0)))
            );
          }
          function re(e) {
            !p.loopHorizontal &&
              p.controlArrows &&
              (e.section.find(oi).toggle(0 !== e.slideIndex),
              e.section.find(ai).toggle(!e.destiny.is(":last-child")));
          }
          function oe(e) {
            var t, i;
            ze.continuousHorizontal &&
              ze.continuousHorizontal.afterSlideLoads(e),
              (t = e.slidesNav),
              (i = e.slideIndex),
              t.find(Ut).removeClass(kt),
              t.find("li").eq(i).find("a").addClass(kt),
              e.localIsResizing ||
                (Oe("parallax", "afterSlideLoads"),
                Mt.isFunction(p.afterSlideLoad) &&
                  p.afterSlideLoad.call(
                    e.destiny,
                    e.anchorLink,
                    e.sectionIndex + 1,
                    e.slideAnchor,
                    e.slideIndex
                  ),
                ($e = !0),
                k(e.destiny)),
              (We = !1),
              ze.interlockedSlides && ze.interlockedSlides.apply(e);
          }
          function ae(e, t, i) {
            var n,
              r = t.destinyPos;
            p.css3
              ? ((n = "translate3d(-" + Lt.round(r.left) + "px, 0px, 0px)"),
                ce(e.find($t)).css(Le(n)),
                (rt = setTimeout(
                  function () {
                    i && oe(t);
                  },
                  p.scrollingSpeed,
                  p.easing
                )))
              : e.animate(
                  { scrollLeft: Lt.round(r.left) },
                  p.scrollingSpeed,
                  p.easing,
                  function () {
                    i && oe(t);
                  }
                );
          }
          function se() {
            var e;
            Ye.trigger("onResize"),
              le(),
              Xe
                ? (e = Mt(At.activeElement)).is("textarea") ||
                  e.is("input") ||
                  e.is("select") ||
                  ((e = si.height()),
                  Lt.abs(e - St) > (20 * Lt.max(St, e)) / 100 &&
                    (m(!0), (St = e)))
                : (clearTimeout(it),
                  (it = setTimeout(function () {
                    m(!0);
                  }, 350)));
          }
          function le() {
            var e = p.responsive || p.responsiveWidth,
              t = p.responsiveHeight,
              i = e && si.outerWidth() < e,
              n = t && si.height() < t;
            e && t ? g(i || n) : e ? g(i) : t && g(n);
          }
          function ce(e) {
            var t = "all " + p.scrollingSpeed + "ms " + p.easingcss3;
            return (
              e.removeClass(It),
              e.css({ "-webkit-transition": t, transition: t })
            );
          }
          function he(e) {
            return e.addClass(It);
          }
          function ue(e, t) {
            var i;
            (i = e),
              p.menu &&
                (Mt(p.menu).find(Ut).removeClass(kt),
                Mt(p.menu)
                  .find('[data-menuanchor="' + i + '"]')
                  .addClass(kt)),
              (e = e),
              (t = t),
              p.navigation &&
                (Mt(Wt).find(Ut).removeClass(kt),
                (e
                  ? Mt(Wt).find('a[href="#' + e + '"]')
                  : Mt(Wt).find("li").eq(t).find("a")
                ).addClass(kt));
          }
          function de(e) {
            var t = Mt(Ht).index(jt),
              e = e.index(jt);
            return t == e ? "none" : e < t ? "up" : "down";
          }
          function pe(e, t) {
            return e == t ? "none" : t < e ? "left" : "right";
          }
          function fe(e) {
            e.hasClass(Kt) ||
              e
                .addClass(Kt)
                .wrapInner(
                  '<div class="' + Gt + '" style="height:' + me(e) + 'px;" />'
                );
          }
          function me(e) {
            var t,
              i = y(e);
            return (
              (p.paddingTop || p.paddingBottom) &&
                ((t = e).hasClass(zt) || (t = e.closest(jt)),
                (i -=
                  parseInt(t.css("padding-top")) +
                  parseInt(t.css("padding-bottom")))),
              i
            );
          }
          function ge(e, t) {
            (t ? ce : he)(Ye),
              clearTimeout(lt),
              Ye.css(Le(e)),
              (lt = setTimeout(function () {
                Ye.removeClass(It);
              }, 10));
          }
          function ve(e) {
            if (!e) return [];
            var t = Ye.find(jt + '[data-anchor="' + e + '"]');
            return t.length || (t = Mt(jt).eq(e - 1)), t;
          }
          function ye(e, t) {
            var i = ve(e);
            i.length &&
              (void 0 === t && (t = 0),
              e === je || i.hasClass(kt)
                ? _e(i, t)
                : I(i, function () {
                    _e(i, t);
                  }));
          }
          function _e(e, t) {
            var i, n;
            void 0 !== t &&
              ((i = e.find(Zt)),
              (n = t),
              (t = (e = (t = e).find(Zt)).find(
                Yt + '[data-anchor="' + n + '"]'
              )).length || (t = e.find(Yt).eq(n)),
              (t = t).length && ne(i, t));
          }
          function xe(e, t, i) {
            var n = "";
            p.anchors.length &&
              !p.lockAnchors &&
              (e
                ? (void 0 !== i && (n = i),
                  void 0 === t && (t = e),
                  be(n + "/" + (He = t)))
                : (void 0 !== e && (He = t), be(i))),
              Te();
          }
          function be(e) {
            var t;
            p.recordHistory
              ? (location.hash = e)
              : Xe || qe
              ? Et.history.replaceState(Ct, Ct, "#" + e)
              : ((t = Et.location.href.split("#")[0]),
                Et.location.replace(t + "#" + e));
          }
          function we(e) {
            var t = e.data("anchor"),
              e = e.index();
            return void 0 === t && (t = e), t;
          }
          function Te() {
            var e = Mt(Ht),
              t = e.find(Qt),
              i = we(e),
              e = we(t),
              i = String(i);
            t.length && (i = i + "-" + e),
              (i = i.replace("/", "-").replace("#", ""));
            e = new RegExp("\\b\\s?" + Ft + "-[^\\s]+\\b", "g");
            (Be[0].className = Be[0].className.replace(e, "")),
              Be.addClass(Ft + "-" + i);
          }
          function Se() {
            return Et.PointerEvent
              ? { down: "pointerdown", move: "pointermove" }
              : { down: "MSPointerDown", move: "MSPointerMove" };
          }
          function Me(e) {
            var t = [];
            return (
              (t.y = (
                void 0 !== e.pageY && (e.pageY || e.pageX) ? e : e.touches[0]
              ).pageY),
              (t.x = (
                void 0 !== e.pageX && (e.pageY || e.pageX) ? e : e.touches[0]
              ).pageX),
              qe &&
                E(e) &&
                p.scrollBar &&
                void 0 !== e.touches &&
                ((t.y = e.touches[0].pageY), (t.x = e.touches[0].pageX)),
              t
            );
          }
          function Ee(e, t) {
            r(0, "internal"),
              void 0 !== t && (Ze = !0),
              ne(e.closest(Zt), e),
              void 0 !== t && (Ze = !1),
              r(ut.scrollingSpeed, "internal");
          }
          function Ae(e) {
            e = Lt.round(e);
            p.css3 && p.autoScrolling && !p.scrollBar
              ? ge("translate3d(0px, -" + e + "px, 0px)", !1)
              : p.autoScrolling && !p.scrollBar
              ? Ye.css("top", -e)
              : Ue.scrollTop(e);
          }
          function Le(e) {
            return {
              "-webkit-transform": e,
              "-moz-transform": e,
              "-ms-transform": e,
              transform: e,
            };
          }
          function Ce(i, e, n) {
            "all" !== e
              ? (et[n][e] = i)
              : Mt.each(Object.keys(et[n]), function (e, t) {
                  et[n][t] = i;
                });
          }
          function Pe(e) {
            return e.css({ "-webkit-transition": "none", transition: "none" });
          }
          function Re(e) {
            return null !== p[e] && "object" == ci(p[e])
              ? p[e].enabled && ze[e]
              : p[e] && ze[e];
          }
          function Oe(e, t, i) {
            return Re(e) && ze[e][t](i);
          }
          function Ie() {
            return Re("dragAndMove") && ze.dragAndMove.isAnimating;
          }
          function De() {
            return Re("dragAndMove") && ze.dragAndMove.isGrabbing;
          }
          function Ne(e, t, i) {
            (p[e] = t), "internal" !== i && (ut[e] = t);
          }
          function Fe() {
            return Mt("html").hasClass(Nt)
              ? void ke(
                  "error",
                  "Fullpage.js can only be initialized once and you are doing it multiple times!"
                )
              : (p.continuousVertical &&
                  (p.loopTop || p.loopBottom) &&
                  ((p.continuousVertical = !1),
                  ke(
                    "warn",
                    "Option `loopTop/loopBottom` is mutually exclusive with `continuousVertical`; `continuousVertical` disabled"
                  )),
                p.scrollBar &&
                  p.scrollOverflow &&
                  ke(
                    "warn",
                    "Option `scrollBar` is mutually exclusive with `scrollOverflow`. Sections with scrollOverflow might not work well in Firefox"
                  ),
                !p.continuousVertical ||
                  (!p.scrollBar && p.autoScrolling) ||
                  ((p.continuousVertical = !1),
                  ke(
                    "warn",
                    "Scroll bars (`scrollBar:true` or `autoScrolling:false`) are mutually exclusive with `continuousVertical`; `continuousVertical` disabled"
                  )),
                p.scrollOverflow &&
                  !p.scrollOverflowHandler &&
                  ((p.scrollOverflow = !1),
                  ke(
                    "error",
                    "The option `scrollOverflow:true` requires the file `scrolloverflow.min.js`. Please include it before fullPage.js."
                  )),
                void Mt.each(p.anchors, function (e, t) {
                  var i = li.find("[name]").filter(function () {
                      return (
                        Mt(this).attr("name") &&
                        Mt(this).attr("name").toLowerCase() == t.toLowerCase()
                      );
                    }),
                    n = li.find("[id]").filter(function () {
                      return (
                        Mt(this).attr("id") &&
                        Mt(this).attr("id").toLowerCase() == t.toLowerCase()
                      );
                    });
                  (n.length || i.length) &&
                    (ke(
                      "error",
                      "data-anchor tags can not have the same value as any `id` element on the site (or `name` element for IE)."
                    ),
                    n.length &&
                      ke(
                        "error",
                        '"' +
                          t +
                          '" is is being used by another element `id` property'
                      ),
                    i.length &&
                      ke(
                        "error",
                        '"' +
                          t +
                          '" is is being used by another element `name` property'
                      ));
                }));
          }
          function ke(e, t) {
            console && console[e] && console[e]("fullPage: " + t);
          }
          var Ue,
            Be,
            ze,
            je,
            He,
            Ge,
            Ve,
            We,
            Xe,
            qe,
            Ye,
            Qe,
            Ze,
            Je,
            $e,
            Ke,
            et,
            tt,
            it,
            nt,
            rt,
            ot,
            at,
            st,
            lt,
            ct,
            ht,
            ut,
            dt,
            pt,
            ft,
            mt,
            gt,
            vt,
            yt,
            _t,
            xt,
            bt,
            wt,
            Tt,
            St;
          Mt("html").hasClass(Nt)
            ? Fe()
            : ((Ue = Mt("html, body")),
              (Be = Mt("body")),
              (ze = Mt.fn.fullpage),
              (p = Mt.extend(
                !0,
                {
                  menu: !1,
                  anchors: [],
                  lockAnchors: !1,
                  navigation: !1,
                  navigationPosition: "right",
                  navigationTooltips: [],
                  showActiveTooltip: !1,
                  slidesNavigation: !1,
                  slidesNavPosition: "bottom",
                  scrollBar: !1,
                  hybrid: !1,
                  css3: !0,
                  scrollingSpeed: 700,
                  autoScrolling: !0,
                  fitToSection: !0,
                  fitToSectionDelay: 1e3,
                  easing: "easeInOutCubic",
                  easingcss3: "ease",
                  loopBottom: !1,
                  loopTop: !1,
                  loopHorizontal: !0,
                  continuousVertical: !1,
                  continuousHorizontal: !1,
                  scrollHorizontally: !1,
                  interlockedSlides: !1,
                  dragAndMove: !1,
                  offsetSections: !1,
                  resetSliders: !1,
                  fadingEffect: !1,
                  normalScrollElements: null,
                  scrollOverflow: !1,
                  scrollOverflowReset: !1,
                  scrollOverflowHandler: Mt.fn.fp_scrolloverflow
                    ? Mt.fn.fp_scrolloverflow.iscrollHandler
                    : null,
                  scrollOverflowOptions: null,
                  touchSensitivity: 5,
                  normalScrollElementTouchThreshold: 5,
                  bigSectionsDestination: null,
                  keyboardScrolling: !0,
                  animateAnchor: !0,
                  recordHistory: !0,
                  controlArrows: !0,
                  controlArrowColor: "#fff",
                  verticalCentered: !0,
                  sectionsColor: [],
                  paddingTop: 0,
                  paddingBottom: 0,
                  fixedElements: null,
                  responsive: 0,
                  responsiveWidth: 0,
                  responsiveHeight: 0,
                  responsiveSlides: !1,
                  parallax: !1,
                  parallaxOptions: {
                    type: "reveal",
                    percentage: 62,
                    property: "translate",
                  },
                  sectionSelector: ".section",
                  slideSelector: ".slide",
                  afterLoad: null,
                  onLeave: null,
                  afterRender: null,
                  afterResize: null,
                  afterReBuild: null,
                  afterSlideLoad: null,
                  onSlideLeave: null,
                  afterResponsive: null,
                  lazyLoading: !0,
                },
                p
              )),
              (We = !1),
              (Xe = navigator.userAgent.match(
                /(iPhone|iPod|iPad|Android|playbook|silk|BlackBerry|BB10|Windows Phone|Tizen|Bada|webOS|IEMobile|Opera Mini)/
              )),
              (qe =
                "ontouchstart" in Et ||
                0 < navigator.msMaxTouchPoints ||
                navigator.maxTouchPoints),
              (Ye = Mt(this)),
              (Qe = si.height()),
              ((et = {
                m: {
                  up: ($e = Je = !(Ze = !(Ke = []))),
                  down: !0,
                  left: !0,
                  right: !0,
                },
              }).k = Mt.extend(!0, {}, et.m)),
              (_t = Se()),
              (ct = {
                touchmove: "ontouchmove" in Et ? "touchmove" : _t.move,
                touchstart: "ontouchstart" in Et ? "touchstart" : _t.down,
              }),
              (ht = !1),
              (ut = Mt.extend(!0, {}, p)),
              (dt = {}),
              Fe(),
              Mt.extend(Mt.easing, {
                easeInOutCubic: function (e, t, i, n, r) {
                  return (t /= r / 2) < 1
                    ? (n / 2) * t * t * t + i
                    : (n / 2) * ((t -= 2) * t * t + 2) + i;
                },
              }),
              (Mt.event.special.destroyed = {
                remove: function (e) {
                  e.handler && e.handler();
                },
              }),
              Mt(this).length &&
                ((ze.version = "2.9.5"),
                (ze.setAutoScrolling = i),
                (ze.setRecordHistory = n),
                (ze.setScrollingSpeed = r),
                (ze.setFitToSection = o),
                (ze.setLockAnchors = function (e) {
                  p.lockAnchors = e;
                }),
                (ze.setMouseWheelScrolling = t),
                (ze.setAllowScrolling = a),
                (ze.setKeyboardScrolling = s),
                (ze.moveSectionUp = l),
                (ze.moveSectionDown = c),
                (ze.silentMoveTo = h),
                (ze.moveTo = u),
                (ze.moveSlideRight = d),
                (ze.moveSlideLeft = f),
                (ze.fitToSection = w),
                (ze.reBuild = m),
                (ze.setResponsive = g),
                (ze.getFullpageData = function () {
                  return {
                    options: p,
                    internals: {
                      canScroll: $e,
                      isScrollAllowed: et,
                      getDestinationPosition: O,
                      isTouch: qe,
                      c: G,
                      getXmovement: pe,
                      removeAnimation: he,
                      getTransforms: Le,
                      lazyLoad: F,
                      addAnimation: ce,
                      performHorizontalMove: ae,
                      landscapeScroll: ne,
                      silentLandscapeScroll: Ee,
                      keepSlidesPosition: R,
                      silentScroll: Ae,
                      styleSlides: v,
                      scrollHandler: x,
                      getEventsPage: Me,
                      getMSPointer: Se,
                      isReallyTouch: E,
                      usingExtension: Re,
                      toggleControlArrows: re,
                    },
                  };
                }),
                (ze.destroy = function (e) {
                  Ye.trigger("destroy", [e]),
                    i(!1, "internal"),
                    a(!1),
                    s(!1),
                    Ye.addClass(Dt),
                    clearTimeout(rt),
                    clearTimeout(nt),
                    clearTimeout(it),
                    clearTimeout(ot),
                    clearTimeout(at),
                    si.off("scroll", x).off("hashchange", W).off("resize", se),
                    li
                      .off("click touchstart", Wt + " a")
                      .off("mouseenter", Wt + " li")
                      .off("mouseleave", Wt + " li")
                      .off("click touchstart", ii)
                      .off("mouseover", p.normalScrollElements)
                      .off("mouseout", p.normalScrollElements),
                    Mt(jt).off("click touchstart", ni),
                    Re("dragAndMove") && ze.dragAndMove.destroy(),
                    clearTimeout(rt),
                    clearTimeout(nt),
                    e &&
                      (function () {
                        Ae(0),
                          Ye.find(
                            "img[data-src], source[data-src], audio[data-src], iframe[data-src]"
                          ).each(function () {
                            N(Mt(this), "src");
                          }),
                          Ye.find("img[data-srcset]").each(function () {
                            N(Mt(this), "srcset");
                          }),
                          Mt(Wt + ", " + ti + ", " + ni).remove(),
                          Mt(jt).css({
                            height: "",
                            "background-color": "",
                            padding: "",
                          }),
                          Mt(Yt).css({ width: "" }),
                          Ye.css({
                            height: "",
                            position: "",
                            "-ms-touch-action": "",
                            "touch-action": "",
                          }),
                          Ue.css({ overflow: "", height: "" }),
                          Mt("html").removeClass(Nt),
                          Be.removeClass(Ot),
                          Mt.each(
                            Be.get(0).className.split(/\s+/),
                            function (e, t) {
                              0 === t.indexOf(Ft) && Be.removeClass(t);
                            }
                          ),
                          Mt(jt + ", " + Yt).each(function () {
                            p.scrollOverflowHandler &&
                              p.scrollOverflowHandler.remove(Mt(this)),
                              Mt(this).removeClass(Kt + " " + kt);
                          }),
                          Pe(Ye),
                          Ye.find(Vt + ", " + $t + ", " + Zt).each(function () {
                            Mt(this).replaceWith(this.childNodes);
                          }),
                          Ue.scrollTop(0);
                        var e = [zt, qt, Jt];
                        Mt.each(e, function (e, t) {
                          Mt("." + t).removeClass(t);
                        });
                      })();
                }),
                (ze.landscapeScroll = ne),
                (ze.shared = { afterRenderActions: _ }),
                e("continuousHorizontal"),
                e("scrollHorizontally"),
                e("resetSliders"),
                e("interlockedSlides"),
                e("responsiveSlides"),
                e("fadingEffect"),
                e("dragAndMove"),
                e("offsetSections"),
                e("scrollOverflowReset"),
                e("parallax"),
                Re("dragAndMove") && ze.dragAndMove.init(),
                p.css3 &&
                  (p.css3 = (function () {
                    var e,
                      t,
                      i = At.createElement("p"),
                      n = {
                        webkitTransform: "-webkit-transform",
                        OTransform: "-o-transform",
                        msTransform: "-ms-transform",
                        MozTransform: "-moz-transform",
                        transform: "transform",
                      };
                    for (t in (At.body.insertBefore(i, null), n))
                      i.style[t] !== Ct &&
                        ((i.style[t] = "translate3d(1px,1px,1px)"),
                        (e = Et.getComputedStyle(i).getPropertyValue(n[t])));
                    return (
                      At.body.removeChild(i),
                      e !== Ct && 0 < e.length && "none" !== e
                    );
                  })()),
                (p.scrollBar = p.scrollBar || p.hybrid),
                (pt = Ye.find(p.sectionSelector)),
                p.anchors.length ||
                  (p.anchors = pt
                    .filter("[data-anchor]")
                    .map(function () {
                      return Mt(this).data("anchor").toString();
                    })
                    .get()),
                p.navigationTooltips.length ||
                  (p.navigationTooltips = pt
                    .filter("[data-tooltip]")
                    .map(function () {
                      return Mt(this).data("tooltip").toString();
                    })
                    .get()),
                Ye.css({ height: "100%", position: "relative" }),
                Ye.addClass(Pt),
                Mt("html").addClass(Nt),
                (Qe = si.height()),
                Ye.removeClass(Dt),
                Ye.find(p.sectionSelector).addClass(zt),
                Ye.find(p.slideSelector).addClass(qt),
                Oe("parallax", "init"),
                Mt(jt).each(function (e) {
                  var t,
                    i,
                    n = Mt(this),
                    r = n.find(Yt),
                    o = r.length;
                  (t = n),
                    (i = e) || 0 !== Mt(Ht).length || t.addClass(kt),
                    (Ve = Mt(Ht)),
                    t.css("height", y(t) + "px"),
                    p.paddingTop && t.css("padding-top", p.paddingTop),
                    p.paddingBottom && t.css("padding-bottom", p.paddingBottom),
                    void 0 !== p.sectionsColor[i] &&
                      t.css("background-color", p.sectionsColor[i]),
                    void 0 !== p.anchors[i] &&
                      t.attr("data-anchor", p.anchors[i]),
                    (i = n),
                    (e = e),
                    void 0 !== p.anchors[e] &&
                      i.hasClass(kt) &&
                      ue(p.anchors[e], e),
                    p.menu &&
                      p.css3 &&
                      Mt(p.menu).closest(Rt).length &&
                      Mt(p.menu).appendTo(Be),
                    0 < o ? v(n, r, o) : p.verticalCentered && fe(n);
                }),
                p.fixedElements && p.css3 && Mt(p.fixedElements).appendTo(Be),
                p.navigation &&
                  (function () {
                    Be.append('<div id="fp-nav"><ul></ul></div>');
                    var e = Mt(Wt);
                    e.addClass(function () {
                      return p.showActiveTooltip
                        ? "fp-show-active " + p.navigationPosition
                        : p.navigationPosition;
                    });
                    for (var t = 0; t < Mt(jt).length; t++) {
                      var i = "";
                      p.anchors.length && (i = p.anchors[t]);
                      var n = '<li><a href="#' + i + '"><span></span></a>',
                        i = p.navigationTooltips[t];
                      void 0 !== i &&
                        "" !== i &&
                        (n +=
                          '<div class="' +
                          Xt +
                          " " +
                          p.navigationPosition +
                          '">' +
                          i +
                          "</div>"),
                        (n += "</li>"),
                        e.find("ul").append(n);
                    }
                    Mt(Wt).css("margin-top", "-" + Mt(Wt).height() / 2 + "px"),
                      Mt(Wt)
                        .find("li")
                        .eq(Mt(Ht).index(jt))
                        .find("a")
                        .addClass(kt);
                  })(),
                Ye.find('iframe[src*="youtube.com/embed/"]').each(function () {
                  var e, t, i;
                  (e = Mt(this)),
                    (t = "enablejsapi=1"),
                    (i = e.attr("src")),
                    e.attr(
                      "src",
                      i +
                        (function (e) {
                          return /\?/.test(e) ? "&" : "?";
                        })(i) +
                        t
                    );
                }),
                p.fadingEffect && ze.fadingEffect && ze.fadingEffect.apply(),
                p.scrollOverflow ? (tt = p.scrollOverflowHandler.init(p)) : _(),
                a(!0),
                i(p.autoScrolling, "internal"),
                le(),
                Te(),
                "complete" === At.readyState && V(),
                si.on("load", V),
                si.on("scroll", x).on("hashchange", W).blur(K).resize(se),
                li
                  .keydown(q)
                  .keyup(Q)
                  .on("click touchstart", Wt + " a", ee)
                  .on("click touchstart", ii, te)
                  .on("click", ".fp-tooltip", Y),
                Mt(jt).on("click touchstart", ni, $),
                p.normalScrollElements &&
                  (li.on(
                    "mouseenter touchstart",
                    p.normalScrollElements,
                    function () {
                      a(!1);
                    }
                  ),
                  li.on(
                    "mouseleave touchend",
                    p.normalScrollElements,
                    function () {
                      a(!0);
                    }
                  )),
                Re("dragAndMove") && ze.dragAndMove.turnOffTouch()),
              (ft = !1),
              (yt = vt = gt = mt = 0),
              (_t =
                Et.requestAnimationFrame ||
                Et.mozRequestAnimationFrame ||
                Et.webkitRequestAnimationFrame ||
                Et.msRequestAnimationFrame),
              (Et.requestAnimationFrame = _t),
              (xt = new Date().getTime()),
              (bt = !1),
              (Tt = wt = 0),
              (St = Qe));
        };
      }
    );
  },
  function (e, t, i) {
    "use strict";
    var _,
      i = i(8);
    (_ = i),
      (window.fp_fadingEffectExtension = function () {
        function i(e, t) {
          t ? ((a = !1), s.turnOff()) : ((a = o.autoScrolling), s.turnOn());
        }
        var n,
          r,
          o,
          a,
          s = this,
          e = _.fn.fullpage.getFullpageData(),
          l = e.options,
          c = e.internals,
          t = l.scrollingSpeed,
          h = ".fullpage-wrapper",
          u = ".fp-section",
          d = u + ".active",
          p = ".fp-slide",
          f = "fp-fading-animations",
          m = "#" + f,
          g = "fp-fading-sheet",
          v = "#" + g;
        (s.apply = function () {
          _(h).on("afterResponsive", i),
            (o = _.extend(!0, {}, l)),
            (a = o.autoScrolling),
            (l.scrollBar = !1),
            s.isFadingPanel("sections") && _.fn.fullpage.setAutoScrolling(!0);
          var e = s.isFadingPanel("slides") ? s.getStyles(p) : "",
            t = s.isFadingPanel("sections") ? s.getStyles(u) : "";
          l.fadingEffect && s.appendStyleSheet(g, t + e),
            clearTimeout(r),
            (r = setTimeout(s.applyAnimation, 300));
        }),
          (s.isFadingPanel = function (e) {
            return !0 === l.fadingEffect || l.fadingEffect === e;
          }),
          (s.appendStyleSheet = function (e, t) {
            _('<style id="' + e + '">' + t + "</style>").appendTo("head");
          }),
          (s.applyAnimation = function () {
            n = s.getTransition();
            var e = s.isFadingPanel("slides") ? s.getPanelAnimation(p) : "",
              t = s.isFadingPanel("sections") ? s.getPanelAnimation(u) : "";
            s.appendStyleSheet(f, e + t);
          }),
          (s.getPanelAnimation = function (e) {
            return e + "{-webkit-transition: " + n + ";transition: " + n + ";}";
          }),
          (s.getStyles = function (e) {
            return (
              s.getContainerStyles(e) +
              "" +
              s.getPanelStyles(e) +
              s.getActivePanelStyles(e)
            );
          }),
          (s.getContainerStyles = function (e) {
            return e === p
              ? ".fp-slidesContainer {width: 100% !important;transform: none!important;}"
              : "";
          }),
          (s.getPanelStyles = function (e) {
            return (
              e +
              "{width: 100% !important;position: absolute;left: 0;top: 0;visibility: hidden;opacity: 0;}"
            );
          }),
          (s.getActivePanelStyles = function (e) {
            return e + ".active{visibility: visible;opacity: 1;}";
          }),
          (s.update = function (e) {
            _(m).remove(), (t = e), s.applyAnimation();
          }),
          (s.getTransition = function () {
            return "all " + t + "ms " + l.easingcss3;
          }),
          (s.turnOff = function () {
            var e, t;
            _(v).length &&
              (_(m).remove(),
              (e = _(d).find(".fp-slide.active")),
              (t = _(d).find(".fp-slidesContainer")),
              c.removeAnimation(t),
              _(v).remove(),
              (l.scrollBar = o.scrollBar),
              _.fn.fullpage.setAutoScrolling(a),
              e.length && c.silentLandscapeScroll(e));
          }),
          (s.turnOn = function () {
            _(v).length ||
              (s.apply(), _("html,body").scrollTop(0), c.silentScroll(0));
          }),
          (s.c = c.c);
        var y = s["common".charAt(0)];
        return (
          "complete" === document.readyState && y("fadingEffect"),
          _(window).on("load", function () {
            y("fadingEffect");
          }),
          s
        );
      });
  },
  function (e, t, i) {
    "use strict";
    var n = function (e, t, i) {
      return t && r(e.prototype, t), i && r(e, i), e;
    };
    function r(e, t) {
      for (var i = 0; i < t.length; i++) {
        var n = t[i];
        (n.enumerable = n.enumerable || !1),
          (n.configurable = !0),
          "value" in n && (n.writable = !0),
          Object.defineProperty(e, n.key, n);
      }
    }
    var o = i(13),
      a = i(8),
      n =
        (i(4),
        n(s, [
          {
            key: "addOnProgress",
            value: function (e) {
              this.progressHandlers.push(e);
            },
          },
          {
            key: "addOnComplete",
            value: function (e) {
              this.completeHandlers.push(e);
            },
          },
          {
            key: "addOnTransitionOut",
            value: function (e) {
              this.transitionOutHandlers.push(e);
            },
          },
        ]),
        s);
    function s() {
      var i = this;
      !(function (e) {
        if (!(e instanceof s))
          throw new TypeError("Cannot call a class as a function");
      })(this),
        (this.queue = new o.LoadQueue()),
        (this.dom = {}),
        (this.progressHandlers = []),
        (this.completeHandlers = []),
        (this.transitionOutHandlers = []),
        this.queue.on("progress", function (t) {
          return i.progressHandlers.forEach(function (e) {
            return e(t, i);
          });
        }),
        this.queue.on("complete", function (t) {
          return i.completeHandlers.forEach(function (e) {
            return e(t, i);
          });
        }),
        this.queue.on("error", function (e) {
          return console.log(e);
        }),
        this.queue.setMaxConnections(5),
        this.addOnProgress(function (e) {
          var t = Math.round(100 * i.queue.progress);
          a(".pl-progress").css("width", t + "%"), a(".plc-number").html(t);
        }),
        this.addOnComplete(function (e) {
          TweenLite.to(a(".pl-progress-wrap"), 1, {
            scaleX: 0,
            delay: 0.4,
            ease: Power4.easeInOut,
            onComplete: function () {
              i.transitionOutHandlers.forEach(function (e) {
                return e(i);
              });
            },
          }),
            a(".plc-number").addClass("hide"),
            TweenLite.to(a(".plc-vc-cover.left"), 2, {
              x: "-100%",
              delay: 1.6,
              ease: Power4.easeInOut,
              onComplete: function () {
                a("#preloader").hide();
              },
            }),
            TweenLite.to(a(".plc-vc-cover.right"), 2, {
              x: "100%",
              delay: 1.6,
              ease: Power4.easeInOut,
            }),
            TweenLite.to(a(".plc-vc-cover.top"), 2, {
              y: "-100%",
              delay: 1.6,
              ease: Power4.easeInOut,
            }),
            TweenLite.to(a(".plc-vc-cover.bottom"), 2, {
              y: "100%",
              delay: 1.6,
              ease: Power4.easeInOut,
            });
        });
    }
    e.exports = n;
  },
  function (module, exports) {
    (window.createjs = window.createjs || {}),
      (function () {
        "use strict";
        var e = (createjs.PreloadJS = createjs.PreloadJS || {});
        (e.version = "0.4.1"), (e.buildDate = "Thu, 12 Dec 2013 23:33:38 GMT");
      })(),
      (function () {
        "use strict";
        function e(e, t, i) {
          this.initialize(e, t, i);
        }
        var t = e.prototype;
        (t.type = null),
          (t.target = null),
          (t.currentTarget = null),
          (t.eventPhase = 0),
          (t.bubbles = !1),
          (t.cancelable = !1),
          (t.timeStamp = 0),
          (t.defaultPrevented = !1),
          (t.propagationStopped = !1),
          (t.immediatePropagationStopped = !1),
          (t.removed = !1),
          (t.initialize = function (e, t, i) {
            (this.type = e),
              (this.bubbles = t),
              (this.cancelable = i),
              (this.timeStamp = new Date().getTime());
          }),
          (t.preventDefault = function () {
            this.defaultPrevented = !0;
          }),
          (t.stopPropagation = function () {
            this.propagationStopped = !0;
          }),
          (t.stopImmediatePropagation = function () {
            this.immediatePropagationStopped = this.propagationStopped = !0;
          }),
          (t.remove = function () {
            this.removed = !0;
          }),
          (t.clone = function () {
            return new e(this.type, this.bubbles, this.cancelable);
          }),
          (t.toString = function () {
            return "[Event (type=" + this.type + ")]";
          }),
          (createjs.Event = e);
      })(),
      (function () {
        "use strict";
        function e() {}
        var t = e.prototype;
        (e.initialize = function (e) {
          (e.addEventListener = t.addEventListener),
            (e.on = t.on),
            (e.removeEventListener = e.off = t.removeEventListener),
            (e.removeAllEventListeners = t.removeAllEventListeners),
            (e.hasEventListener = t.hasEventListener),
            (e.dispatchEvent = t.dispatchEvent),
            (e._dispatchEvent = t._dispatchEvent),
            (e.willTrigger = t.willTrigger);
        }),
          (t._listeners = null),
          (t._captureListeners = null),
          (t.initialize = function () {}),
          (t.addEventListener = function (e, t, i) {
            var n = i
                ? (this._captureListeners = this._captureListeners || {})
                : (this._listeners = this._listeners || {}),
              r = n[e];
            return (
              r && this.removeEventListener(e, t, i),
              (r = n[e]) ? r.push(t) : (n[e] = [t]),
              t
            );
          }),
          (t.on = function (e, t, i, n, r, o) {
            return (
              t.handleEvent && ((i = i || t), (t = t.handleEvent)),
              (i = i || this),
              this.addEventListener(
                e,
                function (e) {
                  t.call(i, e, r), n && e.remove();
                },
                o
              )
            );
          }),
          (t.removeEventListener = function (e, t, i) {
            var n = i ? this._captureListeners : this._listeners;
            if (n) {
              var r = n[e];
              if (r)
                for (var o = 0, a = r.length; o < a; o++)
                  if (r[o] == t) {
                    1 == a ? delete n[e] : r.splice(o, 1);
                    break;
                  }
            }
          }),
          (t.off = t.removeEventListener),
          (t.removeAllEventListeners = function (e) {
            e
              ? (this._listeners && delete this._listeners[e],
                this._captureListeners && delete this._captureListeners[e])
              : (this._listeners = this._captureListeners = null);
          }),
          (t.dispatchEvent = function (e, t) {
            if ("string" == typeof e) {
              var i = this._listeners;
              if (!i || !i[e]) return !1;
              e = new createjs.Event(e);
            }
            if (((e.target = t || this), e.bubbles && this.parent)) {
              for (var n = this, r = [n]; n.parent; ) r.push((n = n.parent));
              for (
                var o = r.length, a = o - 1;
                0 <= a && !e.propagationStopped;
                a--
              )
                r[a]._dispatchEvent(e, 1 + (0 == a));
              for (a = 1; a < o && !e.propagationStopped; a++)
                r[a]._dispatchEvent(e, 3);
            } else this._dispatchEvent(e, 2);
            return e.defaultPrevented;
          }),
          (t.hasEventListener = function (e) {
            var t = this._listeners,
              i = this._captureListeners;
            return !!((t && t[e]) || (i && i[e]));
          }),
          (t.willTrigger = function (e) {
            for (var t = this; t; ) {
              if (t.hasEventListener(e)) return !0;
              t = t.parent;
            }
            return !1;
          }),
          (t.toString = function () {
            return "[EventDispatcher]";
          }),
          (t._dispatchEvent = function (e, t) {
            var i,
              n = 1 == t ? this._captureListeners : this._listeners;
            if (e && n) {
              var r = n[e.type];
              if (r && (i = r.length)) {
                (e.currentTarget = this),
                  (e.eventPhase = t),
                  (e.removed = !1),
                  (r = r.slice());
                for (var o = 0; o < i && !e.immediatePropagationStopped; o++) {
                  var a = r[o];
                  a.handleEvent ? a.handleEvent(e) : a(e),
                    e.removed &&
                      (this.off(e.type, a, 1 == t), (e.removed = !1));
                }
              }
            }
          }),
          (createjs.EventDispatcher = e);
      })(),
      (function () {
        "use strict";
        createjs.indexOf = function (e, t) {
          for (var i = 0, n = e.length; i < n; i++) if (t === e[i]) return i;
          return -1;
        };
      })(),
      (function () {
        "use strict";
        createjs.proxy = function (e, t) {
          var i = Array.prototype.slice.call(arguments, 2);
          return function () {
            return e.apply(
              t,
              Array.prototype.slice.call(arguments, 0).concat(i)
            );
          };
        };
      })(),
      (function () {
        "use strict";
        function e() {
          this.init();
        }
        var t = (e.prototype = new createjs.EventDispatcher()),
          i = e;
        (i.FILE_PATTERN =
          /^(?:(\w+:)\/{2}(\w+(?:\.\w+)*\/?)|(.{0,2}\/{1}))?([/.]*?(?:[^?]+)?\/)?((?:[^/?]+)\.(\w+))(?:\?(\S+)?)?$/),
          (i.PATH_PATTERN =
            /^(?:(\w+:)\/{2})|(.{0,2}\/{1})?([/.]*?(?:[^?]+)?\/?)?$/),
          (t.loaded = !1),
          (t.canceled = !1),
          (t.progress = 0),
          (t._item = null),
          (t.getItem = function () {
            return this._item;
          }),
          (t.init = function () {}),
          (t.load = function () {}),
          (t.close = function () {}),
          (t._sendLoadStart = function () {
            this._isCanceled() || this.dispatchEvent("loadstart");
          }),
          (t._sendProgress = function (e) {
            var t;
            this._isCanceled() ||
              ((t = null),
              "number" == typeof e
                ? ((this.progress = e),
                  ((t = new createjs.Event("progress")).loaded = this.progress),
                  (t.total = 1))
                : ((t = e),
                  (this.progress = e.loaded / e.total),
                  (!isNaN(this.progress) && 1 / 0 != this.progress) ||
                    (this.progress = 0)),
              (t.progress = this.progress),
              this.hasEventListener("progress") && this.dispatchEvent(t));
          }),
          (t._sendComplete = function () {
            this._isCanceled() || this.dispatchEvent("complete");
          }),
          (t._sendError = function (e) {
            !this._isCanceled() &&
              this.hasEventListener("error") &&
              (null == e && (e = new createjs.Event("error")),
              this.dispatchEvent(e));
          }),
          (t._isCanceled = function () {
            return !(null != window.createjs && !this.canceled);
          }),
          (t._parseURI = function (e) {
            return e ? e.match(i.FILE_PATTERN) : null;
          }),
          (t._parsePath = function (e) {
            return e ? e.match(i.PATH_PATTERN) : null;
          }),
          (t._formatQueryString = function (e, t) {
            if (null == e) throw new Error("You must specify data.");
            var i,
              n = [];
            for (i in e) n.push(i + "=" + escape(e[i]));
            return t && (n = n.concat(t)), n.join("&");
          }),
          (t.buildPath = function (e, t) {
            if (null == t) return e;
            var i,
              n = [],
              r = e.indexOf("?");
            return (
              -1 != r && ((i = e.slice(r + 1)), (n = n.concat(i.split("&")))),
              -1 != r
                ? e.slice(0, r) + "?" + this._formatQueryString(t, n)
                : e + "?" + this._formatQueryString(t, n)
            );
          }),
          (t._isCrossDomain = function (e) {
            var t = document.createElement("a");
            t.href = e.src;
            e = document.createElement("a");
            return (
              (e.href = location.href),
              "" != t.hostname &&
                (t.port != e.port ||
                  t.protocol != e.protocol ||
                  t.hostname != e.hostname)
            );
          }),
          (t._isLocal = function (e) {
            var t = document.createElement("a");
            return (t.href = e.src), "" == t.hostname && "file:" == t.protocol;
          }),
          (t.toString = function () {
            return "[PreloadJS AbstractLoader]";
          }),
          (createjs.AbstractLoader = e);
      })(),
      (function () {
        "use strict";
        function e(e, t, i) {
          this.init(e, t, i);
        }
        var t = (e.prototype = new createjs.AbstractLoader()),
          l = e;
        function i() {}
        (l.loadTimeout = 8e3),
          (l.LOAD_TIMEOUT = 0),
          (l.BINARY = "binary"),
          (l.CSS = "css"),
          (l.IMAGE = "image"),
          (l.JAVASCRIPT = "javascript"),
          (l.JSON = "json"),
          (l.JSONP = "jsonp"),
          (l.MANIFEST = "manifest"),
          (l.SOUND = "sound"),
          (l.SVG = "svg"),
          (l.TEXT = "text"),
          (l.XML = "xml"),
          (l.POST = "POST"),
          (l.GET = "GET"),
          (t._basePath = null),
          (t._crossOrigin = ""),
          (t.useXHR = !0),
          (t.stopOnError = !1),
          (t.maintainScriptOrder = !0),
          (t.next = null),
          (t._typeCallbacks = null),
          (t._extensionCallbacks = null),
          (t._loadStartWasDispatched = !1),
          (t._maxConnections = 1),
          (t._currentlyLoadingScript = null),
          (t._currentLoads = null),
          (t._loadQueue = null),
          (t._loadQueueBackup = null),
          (t._loadItemsById = null),
          (t._loadItemsBySrc = null),
          (t._loadedResults = null),
          (t._loadedRawResults = null),
          (t._numItems = 0),
          (t._numItemsLoaded = 0),
          (t._scriptOrder = null),
          (t._loadedScripts = null),
          (t.init = function (e, t, i) {
            (this._numItems = this._numItemsLoaded = 0),
              (this._paused = !1),
              (this._loadStartWasDispatched = !1),
              (this._currentLoads = []),
              (this._loadQueue = []),
              (this._loadQueueBackup = []),
              (this._scriptOrder = []),
              (this._loadedScripts = []),
              (this._loadItemsById = {}),
              (this._loadItemsBySrc = {}),
              (this._loadedResults = {}),
              (this._loadedRawResults = {}),
              (this._typeCallbacks = {}),
              (this._extensionCallbacks = {}),
              (this._basePath = t),
              this.setUseXHR(e),
              (this._crossOrigin =
                !0 === i ? "Anonymous" : !1 === i || null == i ? "" : i);
          }),
          (t.setUseXHR = function (e) {
            return (
              (this.useXHR = 0 != e && null != window.XMLHttpRequest),
              this.useXHR
            );
          }),
          (t.removeAll = function () {
            this.remove();
          }),
          (t.remove = function (e) {
            var t = null;
            if (!e || e instanceof Array) {
              if (e) t = e;
              else if (0 < arguments.length) return;
            } else t = [e];
            var i = !1;
            if (t) {
              for (; t.length; ) {
                for (
                  var n = t.pop(),
                    r = this.getResult(n),
                    o = this._loadQueue.length - 1;
                  0 <= o;
                  o--
                )
                  if (
                    (a = this._loadQueue[o].getItem()).id == n ||
                    a.src == n
                  ) {
                    this._loadQueue.splice(o, 1)[0].cancel();
                    break;
                  }
                for (o = this._loadQueueBackup.length - 1; 0 <= o; o--)
                  if (
                    (a = this._loadQueueBackup[o].getItem()).id == n ||
                    a.src == n
                  ) {
                    this._loadQueueBackup.splice(o, 1)[0].cancel();
                    break;
                  }
                if (r)
                  delete this._loadItemsById[r.id],
                    delete this._loadItemsBySrc[r.src],
                    this._disposeItem(r);
                else
                  for (var o = this._currentLoads.length - 1; 0 <= o; o--) {
                    var a = this._currentLoads[o].getItem();
                    if (a.id == n || a.src == n) {
                      this._currentLoads.splice(o, 1)[0].cancel(), (i = !0);
                      break;
                    }
                  }
              }
              i && this._loadNext();
            } else {
              for (var s in (this.close(), this._loadItemsById))
                this._disposeItem(this._loadItemsById[s]);
              this.init(this.useXHR);
            }
          }),
          (t.reset = function () {
            for (var e in (this.close(), this._loadItemsById))
              this._disposeItem(this._loadItemsById[e]);
            for (
              var t = [], i = 0, n = this._loadQueueBackup.length;
              i < n;
              i++
            )
              t.push(this._loadQueueBackup[i].getItem());
            this.loadManifest(t, !1);
          }),
          (l.isBinary = function (e) {
            switch (e) {
              case createjs.LoadQueue.IMAGE:
              case createjs.LoadQueue.BINARY:
                return !0;
              default:
                return !1;
            }
          }),
          (l.isText = function (e) {
            switch (e) {
              case createjs.LoadQueue.TEXT:
              case createjs.LoadQueue.JSON:
              case createjs.LoadQueue.MANIFEST:
              case createjs.LoadQueue.XML:
              case createjs.LoadQueue.HTML:
              case createjs.LoadQueue.CSS:
              case createjs.LoadQueue.SVG:
              case createjs.LoadQueue.JAVASCRIPT:
                return !0;
              default:
                return !1;
            }
          }),
          (t.installPlugin = function (e) {
            if (null != e && null != e.getPreloadHandlers) {
              var t = e.getPreloadHandlers();
              if (((t.scope = e), null != t.types))
                for (var i = 0, n = t.types.length; i < n; i++)
                  this._typeCallbacks[t.types[i]] = t;
              if (null != t.extensions)
                for (i = 0, n = t.extensions.length; i < n; i++)
                  this._extensionCallbacks[t.extensions[i]] = t;
            }
          }),
          (t.setMaxConnections = function (e) {
            (this._maxConnections = e),
              !this._paused && 0 < this._loadQueue.length && this._loadNext();
          }),
          (t.loadFile = function (e, t, i) {
            if (null == e) {
              var n = new createjs.Event("error");
              return (n.text = "PRELOAD_NO_FILE"), void this._sendError(n);
            }
            this._addItem(e, null, i),
              !1 !== t ? this.setPaused(!1) : this.setPaused(!0);
          }),
          (t.loadManifest = function (e, t, i) {
            var n,
              r = null,
              o = null;
            if (e instanceof Array) {
              if (0 == e.length)
                return (
                  ((n = new createjs.Event("error")).text =
                    "PRELOAD_MANIFEST_EMPTY"),
                  void this._sendError(n)
                );
              r = e;
            } else if ("string" == typeof e) r = [{ src: e, type: l.MANIFEST }];
            else {
              if ("object" != typeof e)
                return (
                  ((n = new createjs.Event("error")).text =
                    "PRELOAD_MANIFEST_NULL"),
                  void this._sendError(n)
                );
              void 0 !== e.src
                ? (null == e.type
                    ? (e.type = l.MANIFEST)
                    : e.type != l.MANIFEST &&
                      (((n = new createjs.Event("error")).text =
                        "PRELOAD_MANIFEST_ERROR"),
                      this._sendError(n)),
                  (r = [e]))
                : void 0 !== e.manifest && ((r = e.manifest), (o = e.path));
            }
            for (var a = 0, s = r.length; a < s; a++) this._addItem(r[a], o, i);
            !1 !== t ? this.setPaused(!1) : this.setPaused(!0);
          }),
          (t.load = function () {
            this.setPaused(!1);
          }),
          (t.getItem = function (e) {
            return this._loadItemsById[e] || this._loadItemsBySrc[e];
          }),
          (t.getResult = function (e, t) {
            e = this._loadItemsById[e] || this._loadItemsBySrc[e];
            if (null == e) return null;
            e = e.id;
            return (
              t && this._loadedRawResults[e]
                ? this._loadedRawResults
                : this._loadedResults
            )[e];
          }),
          (t.setPaused = function (e) {
            (this._paused = e), this._paused || this._loadNext();
          }),
          (t.close = function () {
            for (; this._currentLoads.length; )
              this._currentLoads.pop().cancel();
            (this._scriptOrder.length = 0),
              (this._loadedScripts.length = 0),
              (this.loadStartWasDispatched = !1);
          }),
          (t._addItem = function (e, t, i) {
            t = this._createLoadItem(e, t, i);
            null == t ||
              (null != (i = this._createLoader(t)) &&
                (this._loadQueue.push(i),
                this._loadQueueBackup.push(i),
                this._numItems++,
                this._updateProgress(),
                this.maintainScriptOrder &&
                  t.type == createjs.LoadQueue.JAVASCRIPT &&
                  i instanceof createjs.XHRLoader &&
                  (this._scriptOrder.push(t), this._loadedScripts.push(null))));
          }),
          (t._createLoadItem = function (e, t, i) {
            var n = null;
            switch (typeof e) {
              case "string":
                n = { src: e };
                break;
              case "object":
                n =
                  window.HTMLAudioElement &&
                  e instanceof window.HTMLAudioElement
                    ? { tag: e, src: n.tag.src, type: createjs.LoadQueue.SOUND }
                    : e;
                break;
              default:
                return null;
            }
            var r = this._parseURI(n.src);
            null != r && (n.ext = r[6]),
              null == n.type && (n.type = this._getTypeByExtension(n.ext));
            var o = "",
              a = i || this._basePath,
              s = n.src;
            if (
              (r &&
                null == r[1] &&
                null == r[3] &&
                (t
                  ? ((o = t),
                    (i = this._parsePath(t)),
                    (s = t + s),
                    null != a &&
                      i &&
                      null == i[1] &&
                      null == i[2] &&
                      (o = a + o))
                  : null != a && (o = a)),
              (n.src = o + n.src),
              (n.path = o),
              (n.type != createjs.LoadQueue.JSON &&
                n.type != createjs.LoadQueue.MANIFEST) ||
                (n._loadAsJSONP = null != n.callback),
              n.type == createjs.LoadQueue.JSONP && null == n.callback)
            )
              throw new Error(
                "callback is required for loading JSONP requests."
              );
            (void 0 !== n.tag && null !== n.tag) ||
              (n.tag = this._createTag(n)),
              (void 0 !== n.id && null !== n.id && "" !== n.id) || (n.id = s);
            s = this._typeCallbacks[n.type] || this._extensionCallbacks[n.ext];
            if (s) {
              o = s.callback.call(
                s.scope,
                n.src,
                n.type,
                n.id,
                n.data,
                o,
                this
              );
              if (!1 === o) return null;
              !0 === o ||
                (null != o.src && (n.src = o.src),
                null != o.id && (n.id = o.id),
                null != o.tag && (n.tag = o.tag),
                null != o.completeHandler &&
                  (n.completeHandler = o.completeHandler),
                o.type && (n.type = o.type),
                null != (r = this._parseURI(n.src)) &&
                  null != r[6] &&
                  (n.ext = r[6].toLowerCase()));
            }
            return (
              (this._loadItemsById[n.id] = n), (this._loadItemsBySrc[n.src] = n)
            );
          }),
          (t._createLoader = function (e) {
            var t = this.useXHR;
            switch (e.type) {
              case createjs.LoadQueue.JSON:
              case createjs.LoadQueue.MANIFEST:
                t = !e._loadAsJSONP;
                break;
              case createjs.LoadQueue.XML:
              case createjs.LoadQueue.TEXT:
                t = !0;
                break;
              case createjs.LoadQueue.SOUND:
              case createjs.LoadQueue.JSONP:
                t = !1;
                break;
              case null:
                return null;
            }
            return t
              ? new createjs.XHRLoader(e, this._crossOrigin)
              : new createjs.TagLoader(e);
          }),
          (t._loadNext = function () {
            if (!this._paused) {
              this._loadStartWasDispatched ||
                (this._sendLoadStart(), (this._loadStartWasDispatched = !0)),
                this._numItems == this._numItemsLoaded
                  ? ((this.loaded = !0),
                    this._sendComplete(),
                    this.next && this.next.load && this.next.load())
                  : (this.loaded = !1);
              for (
                var e = 0;
                e < this._loadQueue.length &&
                !(this._currentLoads.length >= this._maxConnections);
                e++
              ) {
                var t = this._loadQueue[e];
                if (
                  this.maintainScriptOrder &&
                  t instanceof createjs.TagLoader &&
                  t.getItem().type == createjs.LoadQueue.JAVASCRIPT
                ) {
                  if (this._currentlyLoadingScript) continue;
                  this._currentlyLoadingScript = !0;
                }
                this._loadQueue.splice(e, 1), e--, this._loadItem(t);
              }
            }
          }),
          (t._loadItem = function (e) {
            e.on("progress", this._handleProgress, this),
              e.on("complete", this._handleFileComplete, this),
              e.on("error", this._handleFileError, this),
              this._currentLoads.push(e),
              this._sendFileStart(e.getItem()),
              e.load();
          }),
          (t._handleFileError = function (e) {
            var t = e.target;
            this._numItemsLoaded++, this._updateProgress();
            e = new createjs.Event("error");
            (e.text = "FILE_LOAD_ERROR"),
              (e.item = t.getItem()),
              this._sendError(e),
              this.stopOnError || (this._removeLoadItem(t), this._loadNext());
          }),
          (t._handleFileComplete = function (e) {
            var t,
              i = e.target,
              e = i.getItem();
            if (
              ((this._loadedResults[e.id] = i.getResult()),
              i instanceof createjs.XHRLoader &&
                (this._loadedRawResults[e.id] = i.getResult(!0)),
              this._removeLoadItem(i),
              this.maintainScriptOrder &&
                e.type == createjs.LoadQueue.JAVASCRIPT)
            ) {
              if (!(i instanceof createjs.TagLoader))
                return (
                  (this._loadedScripts[createjs.indexOf(this._scriptOrder, e)] =
                    e),
                  void this._checkScriptLoadOrder(i)
                );
              this._currentlyLoadingScript = !1;
            }
            delete e._loadAsJSONP,
              e.type == createjs.LoadQueue.MANIFEST &&
                null != (t = i.getResult()) &&
                void 0 !== t.manifest &&
                this.loadManifest(t, !0),
              this._processFinishedLoad(e, i);
          }),
          (t._processFinishedLoad = function (e, t) {
            this._numItemsLoaded++,
              this._updateProgress(),
              this._sendFileComplete(e, t),
              this._loadNext();
          }),
          (t._checkScriptLoadOrder = function () {
            for (var e = this._loadedScripts.length, t = 0; t < e; t++) {
              var i,
                n = this._loadedScripts[t];
              if (null === n) break;
              !0 !== n &&
                ((i = this._loadedResults[n.id]),
                (
                  document.body || document.getElementsByTagName("body")[0]
                ).appendChild(i),
                this._processFinishedLoad(n),
                (this._loadedScripts[t] = !0));
            }
          }),
          (t._removeLoadItem = function (e) {
            for (var t = this._currentLoads.length, i = 0; i < t; i++)
              if (this._currentLoads[i] == e) {
                this._currentLoads.splice(i, 1);
                break;
              }
          }),
          (t._handleProgress = function (e) {
            e = e.target;
            this._sendFileProgress(e.getItem(), e.progress),
              this._updateProgress();
          }),
          (t._updateProgress = function () {
            var e = this._numItemsLoaded / this._numItems,
              t = this._numItems - this._numItemsLoaded;
            if (0 < t) {
              for (var i = 0, n = 0, r = this._currentLoads.length; n < r; n++)
                i += this._currentLoads[n].progress;
              e += (i / t) * (t / this._numItems);
            }
            this._sendProgress(e);
          }),
          (t._disposeItem = function (e) {
            delete this._loadedResults[e.id],
              delete this._loadedRawResults[e.id],
              delete this._loadItemsById[e.id],
              delete this._loadItemsBySrc[e.src];
          }),
          (t._createTag = function (e) {
            var t = null;
            switch (e.type) {
              case createjs.LoadQueue.IMAGE:
                return (
                  (t = document.createElement("img")),
                  "" == this._crossOrigin ||
                    this._isLocal(e) ||
                    (t.crossOrigin = this._crossOrigin),
                  t
                );
              case createjs.LoadQueue.SOUND:
                return ((t = document.createElement("audio")).autoplay = !1), t;
              case createjs.LoadQueue.JSON:
              case createjs.LoadQueue.JSONP:
              case createjs.LoadQueue.JAVASCRIPT:
              case createjs.LoadQueue.MANIFEST:
                return (
                  ((t = document.createElement("script")).type =
                    "text/javascript"),
                  t
                );
              case createjs.LoadQueue.CSS:
                return (
                  ((t = this.useXHR
                    ? document.createElement("style")
                    : document.createElement("link")).rel = "stylesheet"),
                  (t.type = "text/css"),
                  t
                );
              case createjs.LoadQueue.SVG:
                return (
                  this.useXHR
                    ? (t = document.createElement("svg"))
                    : ((t = document.createElement("object")).type =
                        "image/svg+xml"),
                  t
                );
            }
            return null;
          }),
          (t._getTypeByExtension = function (e) {
            if (null == e) return createjs.LoadQueue.TEXT;
            switch (e.toLowerCase()) {
              case "jpeg":
              case "jpg":
              case "gif":
              case "png":
              case "webp":
              case "bmp":
                return createjs.LoadQueue.IMAGE;
              case "ogg":
              case "mp3":
              case "wav":
                return createjs.LoadQueue.SOUND;
              case "json":
                return createjs.LoadQueue.JSON;
              case "xml":
                return createjs.LoadQueue.XML;
              case "css":
                return createjs.LoadQueue.CSS;
              case "js":
                return createjs.LoadQueue.JAVASCRIPT;
              case "svg":
                return createjs.LoadQueue.SVG;
              default:
                return createjs.LoadQueue.TEXT;
            }
          }),
          (t._sendFileProgress = function (e, t) {
            var i;
            this._isCanceled()
              ? this._cleanUp()
              : this.hasEventListener("fileprogress") &&
                (((i = new createjs.Event("fileprogress")).progress = t),
                (i.loaded = t),
                (i.total = 1),
                (i.item = e),
                this.dispatchEvent(i));
          }),
          (t._sendFileComplete = function (e, t) {
            var i;
            this._isCanceled() ||
              (((i = new createjs.Event("fileload")).loader = t),
              (i.item = e),
              (i.result = this._loadedResults[e.id]),
              (i.rawResult = this._loadedRawResults[e.id]),
              e.completeHandler && e.completeHandler(i),
              this.hasEventListener("fileload") && this.dispatchEvent(i));
          }),
          (t._sendFileStart = function (e) {
            var t = new createjs.Event("filestart");
            (t.item = e),
              this.hasEventListener("filestart") && this.dispatchEvent(t);
          }),
          (t.toString = function () {
            return "[PreloadJS LoadQueue]";
          }),
          (createjs.LoadQueue = e),
          (i.init = function () {
            var e = navigator.userAgent;
            (i.isFirefox = -1 < e.indexOf("Firefox")),
              (i.isOpera = null != window.opera),
              (i.isChrome = -1 < e.indexOf("Chrome")),
              (i.isIOS =
                -1 < e.indexOf("iPod") ||
                -1 < e.indexOf("iPhone") ||
                -1 < e.indexOf("iPad"));
          })(),
          (createjs.LoadQueue.BrowserDetect = i);
      })(),
      (function () {
        "use strict";
        function e(e) {
          this.init(e);
        }
        var t = (e.prototype = new createjs.AbstractLoader());
        (t._loadTimeout = null),
          (t._tagCompleteProxy = null),
          (t._isAudio = !1),
          (t._tag = null),
          (t._jsonResult = null),
          (t.init = function (e) {
            (this._item = e),
              (this._tag = e.tag),
              (this._isAudio =
                window.HTMLAudioElement &&
                e.tag instanceof window.HTMLAudioElement),
              (this._tagCompleteProxy = createjs.proxy(this._handleLoad, this));
          }),
          (t.getResult = function () {
            return this._item.type == createjs.LoadQueue.JSONP ||
              this._item.type == createjs.LoadQueue.MANIFEST
              ? this._jsonResult
              : this._tag;
          }),
          (t.cancel = function () {
            (this.canceled = !0), this._clean();
          }),
          (t.load = function () {
            var e = this._item,
              t = this._tag;
            clearTimeout(this._loadTimeout);
            var i = createjs.LoadQueue.LOAD_TIMEOUT;
            0 == i && (i = createjs.LoadQueue.loadTimeout),
              (this._loadTimeout = setTimeout(
                createjs.proxy(this._handleTimeout, this),
                i
              )),
              this._isAudio && ((t.src = null), (t.preload = "auto")),
              (t.onerror = createjs.proxy(this._handleError, this)),
              this._isAudio
                ? ((t.onstalled = createjs.proxy(this._handleStalled, this)),
                  t.addEventListener(
                    "canplaythrough",
                    this._tagCompleteProxy,
                    !1
                  ))
                : ((t.onload = createjs.proxy(this._handleLoad, this)),
                  (t.onreadystatechange = createjs.proxy(
                    this._handleReadyStateChange,
                    this
                  )));
            var n = this.buildPath(e.src, e.values);
            switch (e.type) {
              case createjs.LoadQueue.CSS:
                t.href = n;
                break;
              case createjs.LoadQueue.SVG:
                t.data = n;
                break;
              default:
                t.src = n;
            }
            if (
              e.type == createjs.LoadQueue.JSONP ||
              e.type == createjs.LoadQueue.JSON ||
              e.type == createjs.LoadQueue.MANIFEST
            ) {
              if (null == e.callback)
                throw new Error(
                  "callback is required for loading JSONP requests."
                );
              if (null != window[e.callback])
                throw new Error(
                  'JSONP callback "' +
                    e.callback +
                    '" already exists on window. You need to specify a different callback. Or re-name the current one.'
                );
              window[e.callback] = createjs.proxy(this._handleJSONPLoad, this);
            }
            (e.type != createjs.LoadQueue.SVG &&
              e.type != createjs.LoadQueue.JSONP &&
              e.type != createjs.LoadQueue.JSON &&
              e.type != createjs.LoadQueue.MANIFEST &&
              e.type != createjs.LoadQueue.JAVASCRIPT &&
              e.type != createjs.LoadQueue.CSS) ||
              ((this._startTagVisibility = t.style.visibility),
              (t.style.visibility = "hidden"),
              (
                document.body || document.getElementsByTagName("body")[0]
              ).appendChild(t)),
              null != t.load && t.load();
          }),
          (t._handleJSONPLoad = function (e) {
            this._jsonResult = e;
          }),
          (t._handleTimeout = function () {
            this._clean();
            var e = new createjs.Event("error");
            (e.text = "PRELOAD_TIMEOUT"), this._sendError(e);
          }),
          (t._handleStalled = function () {}),
          (t._handleError = function () {
            this._clean();
            var e = new createjs.Event("error");
            this._sendError(e);
          }),
          (t._handleReadyStateChange = function () {
            clearTimeout(this._loadTimeout);
            var e = this.getItem().tag;
            ("loaded" != e.readyState && "complete" != e.readyState) ||
              this._handleLoad();
          }),
          (t._handleLoad = function () {
            if (!this._isCanceled()) {
              var e = this.getItem(),
                t = e.tag;
              if (!(this.loaded || (this._isAudio && 4 !== t.readyState))) {
                switch (((this.loaded = !0), e.type)) {
                  case createjs.LoadQueue.SVG:
                  case createjs.LoadQueue.JSON:
                  case createjs.LoadQueue.JSONP:
                  case createjs.LoadQueue.MANIFEST:
                  case createjs.LoadQueue.CSS:
                    (t.style.visibility = this._startTagVisibility),
                      (
                        document.body ||
                        document.getElementsByTagName("body")[0]
                      ).removeChild(t);
                }
                this._clean(), this._sendComplete();
              }
            }
          }),
          (t._clean = function () {
            clearTimeout(this._loadTimeout);
            var e = this.getItem(),
              t = e.tag;
            null != t &&
              ((t.onload = null),
              t.removeEventListener &&
                t.removeEventListener(
                  "canplaythrough",
                  this._tagCompleteProxy,
                  !1
                ),
              (t.onstalled = null),
              (t.onprogress = null),
              (t.onerror = null) != t.parentNode &&
                e.type == createjs.LoadQueue.SVG &&
                e.type == createjs.LoadQueue.JSON &&
                e.type == createjs.LoadQueue.MANIFEST &&
                e.type == createjs.LoadQueue.CSS &&
                e.type == createjs.LoadQueue.JSONP &&
                t.parentNode.removeChild(t)),
              ((e = this.getItem()).type != createjs.LoadQueue.JSONP &&
                e.type != createjs.LoadQueue.MANIFEST) ||
                (window[e.callback] = null);
          }),
          (t.toString = function () {
            return "[PreloadJS TagLoader]";
          }),
          (createjs.TagLoader = e);
      })(),
      (function () {
        "use strict";
        function e(e, t) {
          this.init(e, t);
        }
        var t = (e.prototype = new createjs.AbstractLoader());
        (t._request = null),
          (t._loadTimeout = null),
          (t._xhrLevel = 1),
          (t._response = null),
          (t._rawResponse = null),
          (t._crossOrigin = ""),
          (t.init = function (e, t) {
            (this._item = e), (this._crossOrigin = t), this._createXHR(e);
          }),
          (t.getResult = function (e) {
            return e && this._rawResponse ? this._rawResponse : this._response;
          }),
          (t.cancel = function () {
            (this.canceled = !0), this._clean(), this._request.abort();
          }),
          (t.load = function () {
            if (null != this._request) {
              if (
                ((this._request.onloadstart = createjs.proxy(
                  this._handleLoadStart,
                  this
                )),
                (this._request.onprogress = createjs.proxy(
                  this._handleProgress,
                  this
                )),
                (this._request.onabort = createjs.proxy(
                  this._handleAbort,
                  this
                )),
                (this._request.onerror = createjs.proxy(
                  this._handleError,
                  this
                )),
                (this._request.ontimeout = createjs.proxy(
                  this._handleTimeout,
                  this
                )),
                1 == this._xhrLevel)
              ) {
                var t = createjs.LoadQueue.LOAD_TIMEOUT;
                if (0 == t) t = createjs.LoadQueue.loadTimeout;
                else
                  try {
                    console.warn(
                      "LoadQueue.LOAD_TIMEOUT has been deprecated in favor of LoadQueue.loadTimeout"
                    );
                  } catch (e) {}
                this._loadTimeout = setTimeout(
                  createjs.proxy(this._handleTimeout, this),
                  t
                );
              }
              (this._request.onload = createjs.proxy(this._handleLoad, this)),
                (this._request.onreadystatechange = createjs.proxy(
                  this._handleReadyStateChange,
                  this
                ));
              try {
                this._item.values && this._item.method != createjs.LoadQueue.GET
                  ? this._item.method == createjs.LoadQueue.POST &&
                    this._request.send(
                      this._formatQueryString(this._item.values)
                    )
                  : this._request.send();
              } catch (e) {
                t = new createjs.Event("error");
                (t.error = e), this._sendError(t);
              }
            } else this._handleError();
          }),
          (t.getAllResponseHeaders = function () {
            return this._request.getAllResponseHeaders instanceof Function
              ? this._request.getAllResponseHeaders()
              : null;
          }),
          (t.getResponseHeader = function (e) {
            return this._request.getResponseHeader instanceof Function
              ? this._request.getResponseHeader(e)
              : null;
          }),
          (t._handleProgress = function (e) {
            var t;
            !e ||
              (0 < e.loaded && 0 == e.total) ||
              (((t = new createjs.Event("progress")).loaded = e.loaded),
              (t.total = e.total),
              this._sendProgress(t));
          }),
          (t._handleLoadStart = function () {
            clearTimeout(this._loadTimeout), this._sendLoadStart();
          }),
          (t._handleAbort = function () {
            this._clean();
            var e = new createjs.Event("error");
            (e.text = "XHR_ABORTED"), this._sendError(e);
          }),
          (t._handleError = function () {
            this._clean();
            var e = new createjs.Event("error");
            this._sendError(e);
          }),
          (t._handleReadyStateChange = function () {
            4 == this._request.readyState && this._handleLoad();
          }),
          (t._handleLoad = function () {
            this.loaded ||
              ((this.loaded = !0),
              this._checkError()
                ? ((this._response = this._getResponse()),
                  this._clean(),
                  this._generateTag() && this._sendComplete())
                : this._handleError());
          }),
          (t._handleTimeout = function (e) {
            this._clean(),
              (new createjs.Event("error").text = "PRELOAD_TIMEOUT"),
              this._sendError(e);
          }),
          (t._checkError = function () {
            switch (parseInt(this._request.status)) {
              case 404:
              case 0:
                return !1;
            }
            return !0;
          }),
          (t._getResponse = function () {
            if (null != this._response) return this._response;
            if (null != this._request.response) return this._request.response;
            try {
              if (null != this._request.responseText)
                return this._request.responseText;
            } catch (e) {}
            try {
              if (null != this._request.responseXML)
                return this._request.responseXML;
            } catch (e) {}
            return null;
          }),
          (t._createXHR = function (e) {
            var t = this._isCrossDomain(e),
              i = null;
            if (t && window.XDomainRequest) i = new XDomainRequest();
            else if (window.XMLHttpRequest) i = new XMLHttpRequest();
            else
              try {
                i = new ActiveXObject("Msxml2.XMLHTTP.6.0");
              } catch (e) {
                try {
                  i = new ActiveXObject("Msxml2.XMLHTTP.3.0");
                } catch (e) {
                  try {
                    i = new ActiveXObject("Msxml2.XMLHTTP");
                  } catch (e) {
                    return !1;
                  }
                }
              }
            createjs.LoadQueue.isText(e.type) &&
              i.overrideMimeType &&
              i.overrideMimeType("text/plain; charset=utf-8"),
              (this._xhrLevel = "string" == typeof i.responseType ? 2 : 1);
            var n =
              e.method == createjs.LoadQueue.GET
                ? this.buildPath(e.src, e.values)
                : e.src;
            return (
              i.open(e.method || createjs.LoadQueue.GET, n, !0),
              t &&
                i instanceof XMLHttpRequest &&
                1 == this._xhrLevel &&
                i.setRequestHeader("Origin", location.origin),
              e.values &&
                e.method == createjs.LoadQueue.POST &&
                i.setRequestHeader(
                  "Content-Type",
                  "application/x-www-form-urlencoded"
                ),
              createjs.LoadQueue.isBinary(e.type) &&
                (i.responseType = "arraybuffer"),
              (this._request = i),
              !0
            );
          }),
          (t._clean = function () {
            clearTimeout(this._loadTimeout);
            var e = this._request;
            (e.onloadstart = null),
              (e.onprogress = null),
              (e.onabort = null),
              (e.onerror = null),
              (e.onload = null),
              (e.ontimeout = null),
              (e.onloadend = null),
              (e.onreadystatechange = null);
          }),
          (t._generateTag = function () {
            var e,
              t = this._item.type,
              i = this._item.tag;
            switch (t) {
              case createjs.LoadQueue.IMAGE:
                return (
                  (i.onload = createjs.proxy(this._handleTagReady, this)),
                  "" != this._crossOrigin && (i.crossOrigin = "Anonymous"),
                  (i.src = this.buildPath(this._item.src, this._item.values)),
                  (this._rawResponse = this._response),
                  (this._response = i),
                  !1
                );
              case createjs.LoadQueue.JAVASCRIPT:
                return (
                  ((i = document.createElement("script")).text =
                    this._response),
                  (this._rawResponse = this._response),
                  (this._response = i),
                  !0
                );
              case createjs.LoadQueue.CSS:
                return (
                  document.getElementsByTagName("head")[0].appendChild(i),
                  i.styleSheet
                    ? (i.styleSheet.cssText = this._response)
                    : ((e = document.createTextNode(this._response)),
                      i.appendChild(e)),
                  (this._rawResponse = this._response),
                  (this._response = i),
                  !0
                );
              case createjs.LoadQueue.XML:
                var n = this._parseXML(this._response, "text/xml");
                return (
                  (this._rawResponse = this._response), (this._response = n), !0
                );
              case createjs.LoadQueue.SVG:
                n = this._parseXML(this._response, "image/svg+xml");
                return (
                  (this._rawResponse = this._response),
                  null != n.documentElement
                    ? (i.appendChild(n.documentElement), (this._response = i))
                    : (this._response = n),
                  !0
                );
              case createjs.LoadQueue.JSON:
              case createjs.LoadQueue.MANIFEST:
                var r = {};
                try {
                  r = JSON.parse(this._response);
                } catch (e) {
                  r = e;
                }
                return (
                  (this._rawResponse = this._response), (this._response = r), !0
                );
            }
            return !0;
          }),
          (t._parseXML = function (e, t) {
            var i = null;
            try {
              window.DOMParser
                ? (i = new DOMParser().parseFromString(e, t))
                : (((i = new ActiveXObject("Microsoft.XMLDOM")).async = !1),
                  i.loadXML(e));
            } catch (e) {}
            return i;
          }),
          (t._handleTagReady = function () {
            this._sendComplete();
          }),
          (t.toString = function () {
            return "[PreloadJS XHRLoader]";
          }),
          (createjs.XHRLoader = e);
      })(),
      "object" != typeof JSON && (JSON = {}),
      (function () {
        "use strict";
        function f(e) {
          return e < 10 ? "0" + e : e;
        }
        function quote(e) {
          return (
            (escapable.lastIndex = 0),
            escapable.test(e)
              ? '"' +
                e.replace(escapable, function (e) {
                  var t = meta[e];
                  return "string" == typeof t
                    ? t
                    : "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4);
                }) +
                '"'
              : '"' + e + '"'
          );
        }
        function str(e, t) {
          var i,
            n,
            r,
            o,
            a,
            s = gap,
            l = t[e];
          switch (
            (l &&
              "object" == typeof l &&
              "function" == typeof l.toJSON &&
              (l = l.toJSON(e)),
            "function" == typeof rep && (l = rep.call(t, e, l)),
            typeof l)
          ) {
            case "string":
              return quote(l);
            case "number":
              return isFinite(l) ? String(l) : "null";
            case "boolean":
            case "null":
              return String(l);
            case "object":
              if (!l) return "null";
              if (
                ((gap += indent),
                (a = []),
                "[object Array]" === Object.prototype.toString.apply(l))
              ) {
                for (o = l.length, i = 0; i < o; i += 1)
                  a[i] = str(i, l) || "null";
                return (
                  (r =
                    0 === a.length
                      ? "[]"
                      : gap
                      ? "[\n" + gap + a.join(",\n" + gap) + "\n" + s + "]"
                      : "[" + a.join(",") + "]"),
                  (gap = s),
                  r
                );
              }
              if (rep && "object" == typeof rep)
                for (o = rep.length, i = 0; i < o; i += 1)
                  "string" == typeof rep[i] &&
                    (r = str((n = rep[i]), l)) &&
                    a.push(quote(n) + (gap ? ": " : ":") + r);
              else
                for (n in l)
                  Object.prototype.hasOwnProperty.call(l, n) &&
                    ((r = str(n, l)),
                    r && a.push(quote(n) + (gap ? ": " : ":") + r));
              return (
                (r =
                  0 === a.length
                    ? "{}"
                    : gap
                    ? "{\n" + gap + a.join(",\n" + gap) + "\n" + s + "}"
                    : "{" + a.join(",") + "}"),
                (gap = s),
                r
              );
          }
        }
        "function" != typeof Date.prototype.toJSON &&
          ((Date.prototype.toJSON = function () {
            return isFinite(this.valueOf())
              ? this.getUTCFullYear() +
                  "-" +
                  f(this.getUTCMonth() + 1) +
                  "-" +
                  f(this.getUTCDate()) +
                  "T" +
                  f(this.getUTCHours()) +
                  ":" +
                  f(this.getUTCMinutes()) +
                  ":" +
                  f(this.getUTCSeconds()) +
                  "Z"
              : null;
          }),
          (String.prototype.toJSON =
            Number.prototype.toJSON =
            Boolean.prototype.toJSON =
              function () {
                return this.valueOf();
              }));
        var cx =
            /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
          escapable =
            /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
          gap,
          indent,
          meta = {
            "\b": "\\b",
            "\t": "\\t",
            "\n": "\\n",
            "\f": "\\f",
            "\r": "\\r",
            '"': '\\"',
            "\\": "\\\\",
          },
          rep;
        "function" != typeof JSON.stringify &&
          (JSON.stringify = function (e, t, i) {
            var n;
            if (((indent = gap = ""), "number" == typeof i))
              for (n = 0; n < i; n += 1) indent += " ";
            else "string" == typeof i && (indent = i);
            if (
              (rep = t) &&
              "function" != typeof t &&
              ("object" != typeof t || "number" != typeof t.length)
            )
              throw new Error("JSON.stringify");
            return str("", { "": e });
          }),
          "function" != typeof JSON.parse &&
            (JSON.parse = function (text, reviver) {
              function walk(e, t) {
                var i,
                  n,
                  r = e[t];
                if (r && "object" == typeof r)
                  for (i in r)
                    Object.prototype.hasOwnProperty.call(r, i) &&
                      ((n = walk(r, i)),
                      void 0 !== n ? (r[i] = n) : delete r[i]);
                return reviver.call(e, t, r);
              }
              var j;
              if (
                ((text = String(text)),
                (cx.lastIndex = 0),
                cx.test(text) &&
                  (text = text.replace(cx, function (e) {
                    return (
                      "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4)
                    );
                  })),
                /^[\],:{}\s]*$/.test(
                  text
                    .replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@")
                    .replace(
                      /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
                      "]"
                    )
                    .replace(/(?:^|:|,)(?:\s*\[)+/g, "")
                ))
              )
                return (
                  (j = eval("(" + text + ")")),
                  "function" == typeof reviver ? walk({ "": j }, "") : j
                );
              throw new SyntaxError("JSON.parse");
            });
      })(),
      (module.exports = window.createjs);
  },
  function (e, t, i) {
    "use strict";
    var n = function (e, t, i) {
      return t && r(e.prototype, t), i && r(e, i), e;
    };
    function r(e, t) {
      for (var i = 0; i < t.length; i++) {
        var n = t[i];
        (n.enumerable = n.enumerable || !1),
          (n.configurable = !0),
          "value" in n && (n.writable = !0),
          Object.defineProperty(e, n.key, n);
      }
    }
    var o = i(8),
      n =
        (i(4),
        n(a, [
          {
            key: "toggleMenu",
            value: function () {
              var e = this;
              "close" == this.status &&
                ((this.status = "animating"),
                this.$elm.addClass("active"),
                o("#main-nav").show(),
                TweenLite.to(o("#main-nav"), 1, {
                  y: "0%",
                  ease: Power4.easeOut,
                  onComplete: function () {
                    e.status = "open";
                  },
                })),
                "open" == this.status &&
                  ((this.status = "animating"),
                  this.$elm.removeClass("active"),
                  TweenLite.to(o("#main-nav"), 1, {
                    y: "-100%",
                    ease: Power4.easeIn,
                    onComplete: function () {
                      (e.status = "close"), o("#main-nav").removeAttr("style");
                    },
                  }));
            },
          },
          {
            key: "goToPage",
            value: function (e) {
              "open" == this.status && this.toggleMenu(),
                o("#preloader").show(),
                TweenLite.to(o(".plc-vc-cover.left"), 1.2, {
                  x: "0%",
                  ease: Power4.easeInOut,
                  onComplete: function () {
                    document.location.href = e;
                  },
                }),
                o(".pl-progress-wrap").addClass("shift"),
                TweenLite.set(o(".pl-progress"), { scaleX: 0 }),
                TweenLite.to(o(".plc-vc-cover.right"), 1.2, {
                  x: "0%",
                  ease: Power4.easeInOut,
                }),
                TweenLite.to(o(".plc-vc-cover.top"), 1.2, {
                  y: "0%",
                  ease: Power4.easeInOut,
                }),
                TweenLite.to(o(".plc-vc-cover.bottom"), 1.2, {
                  y: "0%",
                  ease: Power4.easeInOut,
                }),
                TweenLite.to(o(".pl-progress-wrap"), 1.2, {
                  scaleX: 1,
                  ease: Power4.easeInOut,
                });
            },
          },
        ]),
        a);
    function a(e) {
      var i = this;
      !(function (e) {
        if (!(e instanceof a))
          throw new TypeError("Cannot call a class as a function");
      })(this),
        (this.$elm = o(e.selector)),
        (this.status = "close"),
        this.$elm.bind("click", function (e) {
          e.preventDefault(), e.stopPropagation(), i.toggleMenu();
        }),
        o("a:not(.extl)").bind("click", function (e) {
          e.preventDefault();
          var t = o(e.currentTarget).attr("href"),
            e = o(e.currentTarget).attr("target");
          "#" != t && "_blank" != e && i.goToPage(t);
        });
    }
    e.exports = n;
  },
]);
